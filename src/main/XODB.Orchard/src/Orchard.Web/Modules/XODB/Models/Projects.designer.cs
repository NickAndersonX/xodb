#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XODB.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XODB")]
	public partial class ProjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectPlanTaskWorker(ProjectPlanTaskWorker instance);
    partial void UpdateProjectPlanTaskWorker(ProjectPlanTaskWorker instance);
    partial void DeleteProjectPlanTaskWorker(ProjectPlanTaskWorker instance);
    partial void InsertProjectPlan(ProjectPlan instance);
    partial void UpdateProjectPlan(ProjectPlan instance);
    partial void DeleteProjectPlan(ProjectPlan instance);
    partial void InsertProjectPlanTaskResponse(ProjectPlanTaskResponse instance);
    partial void UpdateProjectPlanTaskResponse(ProjectPlanTaskResponse instance);
    partial void DeleteProjectPlanTaskResponse(ProjectPlanTaskResponse instance);
    partial void InsertProjectPlanTask(ProjectPlanTask instance);
    partial void UpdateProjectPlanTask(ProjectPlanTask instance);
    partial void DeleteProjectPlanTask(ProjectPlanTask instance);
    #endregion
		
		public ProjectsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["XODBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPlanTaskWorker> ProjectPlanTaskWorkers
		{
			get
			{
				return this.GetTable<ProjectPlanTaskWorker>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPlan> ProjectPlans
		{
			get
			{
				return this.GetTable<ProjectPlan>();
			}
		}
		
		public System.Data.Linq.Table<ProjectStatus> ProjectStatus
		{
			get
			{
				return this.GetTable<ProjectStatus>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPlanTaskResponse> ProjectPlanTaskResponses
		{
			get
			{
				return this.GetTable<ProjectPlanTaskResponse>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPlanTask> ProjectPlanTasks
		{
			get
			{
				return this.GetTable<ProjectPlanTask>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProjectID;
		
		private System.Nullable<System.Guid> _TenementID;
		
		private string _ProjectName;
		
		private string _ProjectCode;
		
		private System.Nullable<System.Guid> _ClientCompanyID;
		
		private string _Comment;
		
		private int _Version;
		
		private System.Nullable<System.Guid> _VersionAntecedentID;
		
		private System.Nullable<int> _VersionCertainty;
		
		private System.Nullable<System.Guid> _VersionWorkflowInstanceID;
		
		private System.Nullable<System.Guid> _VersionUpdatedBy;
		
		private System.Nullable<System.Guid> _VersionDeletedBy;
		
		private System.Nullable<System.Guid> _VersionOwnerContactID;
		
		private System.Nullable<System.Guid> _VersionOwnerCompanyID;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		private EntitySet<ProjectPlan> _ProjectPlans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(System.Guid value);
    partial void OnProjectIDChanged();
    partial void OnTenementIDChanging(System.Nullable<System.Guid> value);
    partial void OnTenementIDChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    partial void OnClientCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnClientCompanyIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnVersionAntecedentIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionAntecedentIDChanged();
    partial void OnVersionCertaintyChanging(System.Nullable<int> value);
    partial void OnVersionCertaintyChanged();
    partial void OnVersionWorkflowInstanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionWorkflowInstanceIDChanged();
    partial void OnVersionUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionUpdatedByChanged();
    partial void OnVersionDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionDeletedByChanged();
    partial void OnVersionOwnerContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerContactIDChanged();
    partial void OnVersionOwnerCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerCompanyIDChanged();
    partial void OnVersionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionUpdatedChanged();
    #endregion
		
		public Project()
		{
			this._ProjectPlans = new EntitySet<ProjectPlan>(new Action<ProjectPlan>(this.attach_ProjectPlans), new Action<ProjectPlan>(this.detach_ProjectPlans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenementID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TenementID
		{
			get
			{
				return this._TenementID;
			}
			set
			{
				if ((this._TenementID != value))
				{
					this.OnTenementIDChanging(value);
					this.SendPropertyChanging();
					this._TenementID = value;
					this.SendPropertyChanged("TenementID");
					this.OnTenementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(16)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(16)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ClientCompanyID
		{
			get
			{
				return this._ClientCompanyID;
			}
			set
			{
				if ((this._ClientCompanyID != value))
				{
					this.OnClientCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._ClientCompanyID = value;
					this.SendPropertyChanged("ClientCompanyID");
					this.OnClientCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAntecedentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionAntecedentID
		{
			get
			{
				return this._VersionAntecedentID;
			}
			set
			{
				if ((this._VersionAntecedentID != value))
				{
					this.OnVersionAntecedentIDChanging(value);
					this.SendPropertyChanging();
					this._VersionAntecedentID = value;
					this.SendPropertyChanged("VersionAntecedentID");
					this.OnVersionAntecedentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCertainty", DbType="Int")]
		public System.Nullable<int> VersionCertainty
		{
			get
			{
				return this._VersionCertainty;
			}
			set
			{
				if ((this._VersionCertainty != value))
				{
					this.OnVersionCertaintyChanging(value);
					this.SendPropertyChanging();
					this._VersionCertainty = value;
					this.SendPropertyChanged("VersionCertainty");
					this.OnVersionCertaintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionWorkflowInstanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionWorkflowInstanceID
		{
			get
			{
				return this._VersionWorkflowInstanceID;
			}
			set
			{
				if ((this._VersionWorkflowInstanceID != value))
				{
					this.OnVersionWorkflowInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._VersionWorkflowInstanceID = value;
					this.SendPropertyChanged("VersionWorkflowInstanceID");
					this.OnVersionWorkflowInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionUpdatedBy
		{
			get
			{
				return this._VersionUpdatedBy;
			}
			set
			{
				if ((this._VersionUpdatedBy != value))
				{
					this.OnVersionUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdatedBy = value;
					this.SendPropertyChanged("VersionUpdatedBy");
					this.OnVersionUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionDeletedBy
		{
			get
			{
				return this._VersionDeletedBy;
			}
			set
			{
				if ((this._VersionDeletedBy != value))
				{
					this.OnVersionDeletedByChanging(value);
					this.SendPropertyChanging();
					this._VersionDeletedBy = value;
					this.SendPropertyChanged("VersionDeletedBy");
					this.OnVersionDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerContactID
		{
			get
			{
				return this._VersionOwnerContactID;
			}
			set
			{
				if ((this._VersionOwnerContactID != value))
				{
					this.OnVersionOwnerContactIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerContactID = value;
					this.SendPropertyChanged("VersionOwnerContactID");
					this.OnVersionOwnerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerCompanyID
		{
			get
			{
				return this._VersionOwnerCompanyID;
			}
			set
			{
				if ((this._VersionOwnerCompanyID != value))
				{
					this.OnVersionOwnerCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerCompanyID = value;
					this.SendPropertyChanged("VersionOwnerCompanyID");
					this.OnVersionOwnerCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this.OnVersionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdated = value;
					this.SendPropertyChanged("VersionUpdated");
					this.OnVersionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectPlan", Storage="_ProjectPlans", ThisKey="ProjectID", OtherKey="ProjectID")]
		public EntitySet<ProjectPlan> ProjectPlans
		{
			get
			{
				return this._ProjectPlans;
			}
			set
			{
				this._ProjectPlans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectPlans(ProjectPlan entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectPlans(ProjectPlan entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_ProjectPlanTaskWorker")]
	public partial class ProjectPlanTaskWorker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProjectPlanTaskWorkerID;
		
		private System.Guid _ProjectPlanTaskID;
		
		private System.Guid _WorkerID;
		
		private System.Nullable<System.DateTime> _AvailableFromDate;
		
		private System.Nullable<System.DateTime> _AvailableUntilDate;
		
		private int _Version;
		
		private System.Nullable<System.Guid> _VersionAntecedentID;
		
		private System.Nullable<int> _VersionCertainty;
		
		private System.Nullable<System.Guid> _VersionWorkflowInstanceID;
		
		private System.Nullable<System.Guid> _VersionUpdatedBy;
		
		private System.Nullable<System.Guid> _VersionDeletedBy;
		
		private System.Nullable<System.Guid> _VersionOwnerContactID;
		
		private System.Nullable<System.Guid> _VersionOwnerCompanyID;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		private EntityRef<ProjectPlanTask> _ProjectPlanTask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectPlanTaskWorkerIDChanging(System.Guid value);
    partial void OnProjectPlanTaskWorkerIDChanged();
    partial void OnProjectPlanTaskIDChanging(System.Guid value);
    partial void OnProjectPlanTaskIDChanged();
    partial void OnWorkerIDChanging(System.Guid value);
    partial void OnWorkerIDChanged();
    partial void OnAvailableFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAvailableFromDateChanged();
    partial void OnAvailableUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAvailableUntilDateChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnVersionAntecedentIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionAntecedentIDChanged();
    partial void OnVersionCertaintyChanging(System.Nullable<int> value);
    partial void OnVersionCertaintyChanged();
    partial void OnVersionWorkflowInstanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionWorkflowInstanceIDChanged();
    partial void OnVersionUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionUpdatedByChanged();
    partial void OnVersionDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionDeletedByChanged();
    partial void OnVersionOwnerContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerContactIDChanged();
    partial void OnVersionOwnerCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerCompanyIDChanged();
    partial void OnVersionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionUpdatedChanged();
    #endregion
		
		public ProjectPlanTaskWorker()
		{
			this._ProjectPlanTask = default(EntityRef<ProjectPlanTask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanTaskWorkerID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProjectPlanTaskWorkerID
		{
			get
			{
				return this._ProjectPlanTaskWorkerID;
			}
			set
			{
				if ((this._ProjectPlanTaskWorkerID != value))
				{
					this.OnProjectPlanTaskWorkerIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanTaskWorkerID = value;
					this.SendPropertyChanged("ProjectPlanTaskWorkerID");
					this.OnProjectPlanTaskWorkerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanTaskID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectPlanTaskID
		{
			get
			{
				return this._ProjectPlanTaskID;
			}
			set
			{
				if ((this._ProjectPlanTaskID != value))
				{
					if (this._ProjectPlanTask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectPlanTaskIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanTaskID = value;
					this.SendPropertyChanged("ProjectPlanTaskID");
					this.OnProjectPlanTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkerID
		{
			get
			{
				return this._WorkerID;
			}
			set
			{
				if ((this._WorkerID != value))
				{
					this.OnWorkerIDChanging(value);
					this.SendPropertyChanging();
					this._WorkerID = value;
					this.SendPropertyChanged("WorkerID");
					this.OnWorkerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableFromDate", DbType="Date")]
		public System.Nullable<System.DateTime> AvailableFromDate
		{
			get
			{
				return this._AvailableFromDate;
			}
			set
			{
				if ((this._AvailableFromDate != value))
				{
					this.OnAvailableFromDateChanging(value);
					this.SendPropertyChanging();
					this._AvailableFromDate = value;
					this.SendPropertyChanged("AvailableFromDate");
					this.OnAvailableFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableUntilDate", DbType="Date")]
		public System.Nullable<System.DateTime> AvailableUntilDate
		{
			get
			{
				return this._AvailableUntilDate;
			}
			set
			{
				if ((this._AvailableUntilDate != value))
				{
					this.OnAvailableUntilDateChanging(value);
					this.SendPropertyChanging();
					this._AvailableUntilDate = value;
					this.SendPropertyChanged("AvailableUntilDate");
					this.OnAvailableUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAntecedentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionAntecedentID
		{
			get
			{
				return this._VersionAntecedentID;
			}
			set
			{
				if ((this._VersionAntecedentID != value))
				{
					this.OnVersionAntecedentIDChanging(value);
					this.SendPropertyChanging();
					this._VersionAntecedentID = value;
					this.SendPropertyChanged("VersionAntecedentID");
					this.OnVersionAntecedentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCertainty", DbType="Int")]
		public System.Nullable<int> VersionCertainty
		{
			get
			{
				return this._VersionCertainty;
			}
			set
			{
				if ((this._VersionCertainty != value))
				{
					this.OnVersionCertaintyChanging(value);
					this.SendPropertyChanging();
					this._VersionCertainty = value;
					this.SendPropertyChanged("VersionCertainty");
					this.OnVersionCertaintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionWorkflowInstanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionWorkflowInstanceID
		{
			get
			{
				return this._VersionWorkflowInstanceID;
			}
			set
			{
				if ((this._VersionWorkflowInstanceID != value))
				{
					this.OnVersionWorkflowInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._VersionWorkflowInstanceID = value;
					this.SendPropertyChanged("VersionWorkflowInstanceID");
					this.OnVersionWorkflowInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionUpdatedBy
		{
			get
			{
				return this._VersionUpdatedBy;
			}
			set
			{
				if ((this._VersionUpdatedBy != value))
				{
					this.OnVersionUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdatedBy = value;
					this.SendPropertyChanged("VersionUpdatedBy");
					this.OnVersionUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionDeletedBy
		{
			get
			{
				return this._VersionDeletedBy;
			}
			set
			{
				if ((this._VersionDeletedBy != value))
				{
					this.OnVersionDeletedByChanging(value);
					this.SendPropertyChanging();
					this._VersionDeletedBy = value;
					this.SendPropertyChanged("VersionDeletedBy");
					this.OnVersionDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerContactID
		{
			get
			{
				return this._VersionOwnerContactID;
			}
			set
			{
				if ((this._VersionOwnerContactID != value))
				{
					this.OnVersionOwnerContactIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerContactID = value;
					this.SendPropertyChanged("VersionOwnerContactID");
					this.OnVersionOwnerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerCompanyID
		{
			get
			{
				return this._VersionOwnerCompanyID;
			}
			set
			{
				if ((this._VersionOwnerCompanyID != value))
				{
					this.OnVersionOwnerCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerCompanyID = value;
					this.SendPropertyChanged("VersionOwnerCompanyID");
					this.OnVersionOwnerCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this.OnVersionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdated = value;
					this.SendPropertyChanged("VersionUpdated");
					this.OnVersionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="X_ProjectPlanTask_ProjectPlanTaskWorker", Storage="_ProjectPlanTask", ThisKey="ProjectPlanTaskID", OtherKey="ProjectPlanTaskID", IsForeignKey=true)]
		public ProjectPlanTask ProjectPlanTask
		{
			get
			{
				return this._ProjectPlanTask.Entity;
			}
			set
			{
				ProjectPlanTask previousValue = this._ProjectPlanTask.Entity;
				if (((previousValue != value) 
							|| (this._ProjectPlanTask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectPlanTask.Entity = null;
						previousValue.ProjectPlanTaskWorkers.Remove(this);
					}
					this._ProjectPlanTask.Entity = value;
					if ((value != null))
					{
						value.ProjectPlanTaskWorkers.Add(this);
						this._ProjectPlanTaskID = value.ProjectPlanTaskID;
					}
					else
					{
						this._ProjectPlanTaskID = default(System.Guid);
					}
					this.SendPropertyChanged("ProjectPlanTask");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_ProjectPlan")]
	public partial class ProjectPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProjectPlanID;
		
		private System.Nullable<System.Guid> _ProjectID;
		
		private System.Nullable<System.Guid> _ParentProjectPlanID;
		
		private string _ProjectPlanName;
		
		private System.Nullable<System.Guid> _ResponsibleContactID;
		
		private string _Comment;
		
		private int _Version;
		
		private System.Nullable<System.Guid> _VersionAntecedentID;
		
		private System.Nullable<int> _VersionCertainty;
		
		private System.Nullable<System.Guid> _VersionWorkflowInstanceID;
		
		private System.Nullable<System.Guid> _VersionUpdatedBy;
		
		private System.Nullable<System.Guid> _VersionDeletedBy;
		
		private System.Nullable<System.Guid> _VersionOwnerContactID;
		
		private System.Nullable<System.Guid> _VersionOwnerCompanyID;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		private EntitySet<ProjectPlan> _ProjectPlans;
		
		private EntitySet<ProjectPlanTask> _ProjectPlanTasks;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<ProjectPlan> _X_ProjectPlan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectPlanIDChanging(System.Guid value);
    partial void OnProjectPlanIDChanged();
    partial void OnProjectIDChanging(System.Nullable<System.Guid> value);
    partial void OnProjectIDChanged();
    partial void OnParentProjectPlanIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentProjectPlanIDChanged();
    partial void OnProjectPlanNameChanging(string value);
    partial void OnProjectPlanNameChanged();
    partial void OnResponsibleContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnResponsibleContactIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnVersionAntecedentIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionAntecedentIDChanged();
    partial void OnVersionCertaintyChanging(System.Nullable<int> value);
    partial void OnVersionCertaintyChanged();
    partial void OnVersionWorkflowInstanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionWorkflowInstanceIDChanged();
    partial void OnVersionUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionUpdatedByChanged();
    partial void OnVersionDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionDeletedByChanged();
    partial void OnVersionOwnerContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerContactIDChanged();
    partial void OnVersionOwnerCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerCompanyIDChanged();
    partial void OnVersionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionUpdatedChanged();
    #endregion
		
		public ProjectPlan()
		{
			this._ProjectPlans = new EntitySet<ProjectPlan>(new Action<ProjectPlan>(this.attach_ProjectPlans), new Action<ProjectPlan>(this.detach_ProjectPlans));
			this._ProjectPlanTasks = new EntitySet<ProjectPlanTask>(new Action<ProjectPlanTask>(this.attach_ProjectPlanTasks), new Action<ProjectPlanTask>(this.detach_ProjectPlanTasks));
			this._Project = default(EntityRef<Project>);
			this._X_ProjectPlan1 = default(EntityRef<ProjectPlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProjectPlanID
		{
			get
			{
				return this._ProjectPlanID;
			}
			set
			{
				if ((this._ProjectPlanID != value))
				{
					this.OnProjectPlanIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanID = value;
					this.SendPropertyChanged("ProjectPlanID");
					this.OnProjectPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentProjectPlanID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentProjectPlanID
		{
			get
			{
				return this._ParentProjectPlanID;
			}
			set
			{
				if ((this._ParentProjectPlanID != value))
				{
					if (this._X_ProjectPlan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentProjectPlanIDChanging(value);
					this.SendPropertyChanging();
					this._ParentProjectPlanID = value;
					this.SendPropertyChanged("ParentProjectPlanID");
					this.OnParentProjectPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanName", DbType="NVarChar(50)")]
		public string ProjectPlanName
		{
			get
			{
				return this._ProjectPlanName;
			}
			set
			{
				if ((this._ProjectPlanName != value))
				{
					this.OnProjectPlanNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanName = value;
					this.SendPropertyChanged("ProjectPlanName");
					this.OnProjectPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResponsibleContactID
		{
			get
			{
				return this._ResponsibleContactID;
			}
			set
			{
				if ((this._ResponsibleContactID != value))
				{
					this.OnResponsibleContactIDChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleContactID = value;
					this.SendPropertyChanged("ResponsibleContactID");
					this.OnResponsibleContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAntecedentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionAntecedentID
		{
			get
			{
				return this._VersionAntecedentID;
			}
			set
			{
				if ((this._VersionAntecedentID != value))
				{
					this.OnVersionAntecedentIDChanging(value);
					this.SendPropertyChanging();
					this._VersionAntecedentID = value;
					this.SendPropertyChanged("VersionAntecedentID");
					this.OnVersionAntecedentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCertainty", DbType="Int")]
		public System.Nullable<int> VersionCertainty
		{
			get
			{
				return this._VersionCertainty;
			}
			set
			{
				if ((this._VersionCertainty != value))
				{
					this.OnVersionCertaintyChanging(value);
					this.SendPropertyChanging();
					this._VersionCertainty = value;
					this.SendPropertyChanged("VersionCertainty");
					this.OnVersionCertaintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionWorkflowInstanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionWorkflowInstanceID
		{
			get
			{
				return this._VersionWorkflowInstanceID;
			}
			set
			{
				if ((this._VersionWorkflowInstanceID != value))
				{
					this.OnVersionWorkflowInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._VersionWorkflowInstanceID = value;
					this.SendPropertyChanged("VersionWorkflowInstanceID");
					this.OnVersionWorkflowInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionUpdatedBy
		{
			get
			{
				return this._VersionUpdatedBy;
			}
			set
			{
				if ((this._VersionUpdatedBy != value))
				{
					this.OnVersionUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdatedBy = value;
					this.SendPropertyChanged("VersionUpdatedBy");
					this.OnVersionUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionDeletedBy
		{
			get
			{
				return this._VersionDeletedBy;
			}
			set
			{
				if ((this._VersionDeletedBy != value))
				{
					this.OnVersionDeletedByChanging(value);
					this.SendPropertyChanging();
					this._VersionDeletedBy = value;
					this.SendPropertyChanged("VersionDeletedBy");
					this.OnVersionDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerContactID
		{
			get
			{
				return this._VersionOwnerContactID;
			}
			set
			{
				if ((this._VersionOwnerContactID != value))
				{
					this.OnVersionOwnerContactIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerContactID = value;
					this.SendPropertyChanged("VersionOwnerContactID");
					this.OnVersionOwnerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerCompanyID
		{
			get
			{
				return this._VersionOwnerCompanyID;
			}
			set
			{
				if ((this._VersionOwnerCompanyID != value))
				{
					this.OnVersionOwnerCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerCompanyID = value;
					this.SendPropertyChanged("VersionOwnerCompanyID");
					this.OnVersionOwnerCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this.OnVersionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdated = value;
					this.SendPropertyChanged("VersionUpdated");
					this.OnVersionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectPlan_ProjectPlan", Storage="_ProjectPlans", ThisKey="ProjectPlanID", OtherKey="ParentProjectPlanID")]
		public EntitySet<ProjectPlan> ProjectPlans
		{
			get
			{
				return this._ProjectPlans;
			}
			set
			{
				this._ProjectPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectPlan_X_ProjectPlanTask", Storage="_ProjectPlanTasks", ThisKey="ProjectPlanID", OtherKey="ProjectPlanID")]
		public EntitySet<ProjectPlanTask> ProjectPlanTasks
		{
			get
			{
				return this._ProjectPlanTasks;
			}
			set
			{
				this._ProjectPlanTasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectPlan", Storage="_Project", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectPlans.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectPlans.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectPlan_ProjectPlan", Storage="_X_ProjectPlan1", ThisKey="ParentProjectPlanID", OtherKey="ProjectPlanID", IsForeignKey=true)]
		public ProjectPlan X_ProjectPlan1
		{
			get
			{
				return this._X_ProjectPlan1.Entity;
			}
			set
			{
				ProjectPlan previousValue = this._X_ProjectPlan1.Entity;
				if (((previousValue != value) 
							|| (this._X_ProjectPlan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._X_ProjectPlan1.Entity = null;
						previousValue.ProjectPlans.Remove(this);
					}
					this._X_ProjectPlan1.Entity = value;
					if ((value != null))
					{
						value.ProjectPlans.Add(this);
						this._ParentProjectPlanID = value.ProjectPlanID;
					}
					else
					{
						this._ParentProjectPlanID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("X_ProjectPlan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectPlans(ProjectPlan entity)
		{
			this.SendPropertyChanging();
			entity.X_ProjectPlan1 = this;
		}
		
		private void detach_ProjectPlans(ProjectPlan entity)
		{
			this.SendPropertyChanging();
			entity.X_ProjectPlan1 = null;
		}
		
		private void attach_ProjectPlanTasks(ProjectPlanTask entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPlan = this;
		}
		
		private void detach_ProjectPlanTasks(ProjectPlanTask entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_VW_ProjectStatus")]
	public partial class ProjectStatus
	{
		
		private System.Guid _ProjectID;
		
		private string _ProjectName;
		
		private string _ProjectTaskName;
		
		private System.Nullable<System.Guid> _Creator;
		
		private string _CreatorName;
		
		private System.Nullable<System.Guid> _Reviewer;
		
		private string _ReviewerName;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		public ProjectStatus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this._ProjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(16)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskName", DbType="NVarChar(50)")]
		public string ProjectTaskName
		{
			get
			{
				return this._ProjectTaskName;
			}
			set
			{
				if ((this._ProjectTaskName != value))
				{
					this._ProjectTaskName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this._Creator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorName", DbType="NVarChar(120)")]
		public string CreatorName
		{
			get
			{
				return this._CreatorName;
			}
			set
			{
				if ((this._CreatorName != value))
				{
					this._CreatorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Reviewer
		{
			get
			{
				return this._Reviewer;
			}
			set
			{
				if ((this._Reviewer != value))
				{
					this._Reviewer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewerName", DbType="NVarChar(120)")]
		public string ReviewerName
		{
			get
			{
				return this._ReviewerName;
			}
			set
			{
				if ((this._ReviewerName != value))
				{
					this._ReviewerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this._VersionUpdated = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_ProjectPlanTaskResponse")]
	public partial class ProjectPlanTaskResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProjectPlanTaskResponseID;
		
		private System.Nullable<System.Guid> _ProjectPlanTaskID;
		
		private System.Nullable<System.Guid> _ResponsibleContactID;
		
		private System.Nullable<System.Guid> _ActualWorkTypeID;
		
		private System.Nullable<System.DateTime> _Began;
		
		private System.Nullable<System.DateTime> _Completed;
		
		private System.Nullable<decimal> _Hours;
		
		private System.Nullable<decimal> _EstimatedProRataUnits;
		
		private System.Nullable<decimal> _EstimatedProRataCost;
		
		private System.Nullable<decimal> _EstimatedValue;
		
		private System.Nullable<decimal> _ApprovedProRataUnits;
		
		private System.Nullable<decimal> _ApprovedProRataCost;
		
		private System.Nullable<System.DateTime> _Approved;
		
		private System.Nullable<System.Guid> _ApprovedBy;
		
		private string _Comments;
		
		private int _Version;
		
		private System.Nullable<System.Guid> _VersionAntecedentID;
		
		private System.Nullable<int> _VersionCertainty;
		
		private System.Nullable<System.Guid> _VersionWorkflowInstanceID;
		
		private System.Nullable<System.Guid> _VersionUpdatedBy;
		
		private System.Nullable<System.Guid> _VersionDeletedBy;
		
		private System.Nullable<System.Guid> _VersionOwnerContactID;
		
		private System.Nullable<System.Guid> _VersionOwnerCompanyID;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		private EntityRef<ProjectPlanTask> _ProjectPlanTask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectPlanTaskResponseIDChanging(System.Guid value);
    partial void OnProjectPlanTaskResponseIDChanged();
    partial void OnProjectPlanTaskIDChanging(System.Nullable<System.Guid> value);
    partial void OnProjectPlanTaskIDChanged();
    partial void OnResponsibleContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnResponsibleContactIDChanged();
    partial void OnActualWorkTypeIDChanging(System.Nullable<System.Guid> value);
    partial void OnActualWorkTypeIDChanged();
    partial void OnBeganChanging(System.Nullable<System.DateTime> value);
    partial void OnBeganChanged();
    partial void OnCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedChanged();
    partial void OnHoursChanging(System.Nullable<decimal> value);
    partial void OnHoursChanged();
    partial void OnEstimatedProRataUnitsChanging(System.Nullable<decimal> value);
    partial void OnEstimatedProRataUnitsChanged();
    partial void OnEstimatedProRataCostChanging(System.Nullable<decimal> value);
    partial void OnEstimatedProRataCostChanged();
    partial void OnEstimatedValueChanging(System.Nullable<decimal> value);
    partial void OnEstimatedValueChanged();
    partial void OnApprovedProRataUnitsChanging(System.Nullable<decimal> value);
    partial void OnApprovedProRataUnitsChanged();
    partial void OnApprovedProRataCostChanging(System.Nullable<decimal> value);
    partial void OnApprovedProRataCostChanged();
    partial void OnApprovedChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedChanged();
    partial void OnApprovedByChanging(System.Nullable<System.Guid> value);
    partial void OnApprovedByChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnVersionAntecedentIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionAntecedentIDChanged();
    partial void OnVersionCertaintyChanging(System.Nullable<int> value);
    partial void OnVersionCertaintyChanged();
    partial void OnVersionWorkflowInstanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionWorkflowInstanceIDChanged();
    partial void OnVersionUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionUpdatedByChanged();
    partial void OnVersionDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionDeletedByChanged();
    partial void OnVersionOwnerContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerContactIDChanged();
    partial void OnVersionOwnerCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerCompanyIDChanged();
    partial void OnVersionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionUpdatedChanged();
    #endregion
		
		public ProjectPlanTaskResponse()
		{
			this._ProjectPlanTask = default(EntityRef<ProjectPlanTask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanTaskResponseID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProjectPlanTaskResponseID
		{
			get
			{
				return this._ProjectPlanTaskResponseID;
			}
			set
			{
				if ((this._ProjectPlanTaskResponseID != value))
				{
					this.OnProjectPlanTaskResponseIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanTaskResponseID = value;
					this.SendPropertyChanged("ProjectPlanTaskResponseID");
					this.OnProjectPlanTaskResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanTaskID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProjectPlanTaskID
		{
			get
			{
				return this._ProjectPlanTaskID;
			}
			set
			{
				if ((this._ProjectPlanTaskID != value))
				{
					if (this._ProjectPlanTask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectPlanTaskIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanTaskID = value;
					this.SendPropertyChanged("ProjectPlanTaskID");
					this.OnProjectPlanTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResponsibleContactID
		{
			get
			{
				return this._ResponsibleContactID;
			}
			set
			{
				if ((this._ResponsibleContactID != value))
				{
					this.OnResponsibleContactIDChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleContactID = value;
					this.SendPropertyChanged("ResponsibleContactID");
					this.OnResponsibleContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualWorkTypeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ActualWorkTypeID
		{
			get
			{
				return this._ActualWorkTypeID;
			}
			set
			{
				if ((this._ActualWorkTypeID != value))
				{
					this.OnActualWorkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ActualWorkTypeID = value;
					this.SendPropertyChanged("ActualWorkTypeID");
					this.OnActualWorkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Began", DbType="DateTime")]
		public System.Nullable<System.DateTime> Began
		{
			get
			{
				return this._Began;
			}
			set
			{
				if ((this._Began != value))
				{
					this.OnBeganChanging(value);
					this.SendPropertyChanging();
					this._Began = value;
					this.SendPropertyChanged("Began");
					this.OnBeganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedProRataUnits", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> EstimatedProRataUnits
		{
			get
			{
				return this._EstimatedProRataUnits;
			}
			set
			{
				if ((this._EstimatedProRataUnits != value))
				{
					this.OnEstimatedProRataUnitsChanging(value);
					this.SendPropertyChanging();
					this._EstimatedProRataUnits = value;
					this.SendPropertyChanged("EstimatedProRataUnits");
					this.OnEstimatedProRataUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedProRataCost", DbType="Money")]
		public System.Nullable<decimal> EstimatedProRataCost
		{
			get
			{
				return this._EstimatedProRataCost;
			}
			set
			{
				if ((this._EstimatedProRataCost != value))
				{
					this.OnEstimatedProRataCostChanging(value);
					this.SendPropertyChanging();
					this._EstimatedProRataCost = value;
					this.SendPropertyChanged("EstimatedProRataCost");
					this.OnEstimatedProRataCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedValue", DbType="Money")]
		public System.Nullable<decimal> EstimatedValue
		{
			get
			{
				return this._EstimatedValue;
			}
			set
			{
				if ((this._EstimatedValue != value))
				{
					this.OnEstimatedValueChanging(value);
					this.SendPropertyChanging();
					this._EstimatedValue = value;
					this.SendPropertyChanged("EstimatedValue");
					this.OnEstimatedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedProRataUnits", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> ApprovedProRataUnits
		{
			get
			{
				return this._ApprovedProRataUnits;
			}
			set
			{
				if ((this._ApprovedProRataUnits != value))
				{
					this.OnApprovedProRataUnitsChanging(value);
					this.SendPropertyChanging();
					this._ApprovedProRataUnits = value;
					this.SendPropertyChanged("ApprovedProRataUnits");
					this.OnApprovedProRataUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedProRataCost", DbType="Money")]
		public System.Nullable<decimal> ApprovedProRataCost
		{
			get
			{
				return this._ApprovedProRataCost;
			}
			set
			{
				if ((this._ApprovedProRataCost != value))
				{
					this.OnApprovedProRataCostChanging(value);
					this.SendPropertyChanging();
					this._ApprovedProRataCost = value;
					this.SendPropertyChanged("ApprovedProRataCost");
					this.OnApprovedProRataCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="DateTime")]
		public System.Nullable<System.DateTime> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAntecedentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionAntecedentID
		{
			get
			{
				return this._VersionAntecedentID;
			}
			set
			{
				if ((this._VersionAntecedentID != value))
				{
					this.OnVersionAntecedentIDChanging(value);
					this.SendPropertyChanging();
					this._VersionAntecedentID = value;
					this.SendPropertyChanged("VersionAntecedentID");
					this.OnVersionAntecedentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCertainty", DbType="Int")]
		public System.Nullable<int> VersionCertainty
		{
			get
			{
				return this._VersionCertainty;
			}
			set
			{
				if ((this._VersionCertainty != value))
				{
					this.OnVersionCertaintyChanging(value);
					this.SendPropertyChanging();
					this._VersionCertainty = value;
					this.SendPropertyChanged("VersionCertainty");
					this.OnVersionCertaintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionWorkflowInstanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionWorkflowInstanceID
		{
			get
			{
				return this._VersionWorkflowInstanceID;
			}
			set
			{
				if ((this._VersionWorkflowInstanceID != value))
				{
					this.OnVersionWorkflowInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._VersionWorkflowInstanceID = value;
					this.SendPropertyChanged("VersionWorkflowInstanceID");
					this.OnVersionWorkflowInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionUpdatedBy
		{
			get
			{
				return this._VersionUpdatedBy;
			}
			set
			{
				if ((this._VersionUpdatedBy != value))
				{
					this.OnVersionUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdatedBy = value;
					this.SendPropertyChanged("VersionUpdatedBy");
					this.OnVersionUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionDeletedBy
		{
			get
			{
				return this._VersionDeletedBy;
			}
			set
			{
				if ((this._VersionDeletedBy != value))
				{
					this.OnVersionDeletedByChanging(value);
					this.SendPropertyChanging();
					this._VersionDeletedBy = value;
					this.SendPropertyChanged("VersionDeletedBy");
					this.OnVersionDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerContactID
		{
			get
			{
				return this._VersionOwnerContactID;
			}
			set
			{
				if ((this._VersionOwnerContactID != value))
				{
					this.OnVersionOwnerContactIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerContactID = value;
					this.SendPropertyChanged("VersionOwnerContactID");
					this.OnVersionOwnerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerCompanyID
		{
			get
			{
				return this._VersionOwnerCompanyID;
			}
			set
			{
				if ((this._VersionOwnerCompanyID != value))
				{
					this.OnVersionOwnerCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerCompanyID = value;
					this.SendPropertyChanged("VersionOwnerCompanyID");
					this.OnVersionOwnerCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this.OnVersionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdated = value;
					this.SendPropertyChanged("VersionUpdated");
					this.OnVersionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="X_ProjectPlanTask_ProjectPlanTaskResponse", Storage="_ProjectPlanTask", ThisKey="ProjectPlanTaskID", OtherKey="ProjectPlanTaskID", IsForeignKey=true)]
		public ProjectPlanTask ProjectPlanTask
		{
			get
			{
				return this._ProjectPlanTask.Entity;
			}
			set
			{
				ProjectPlanTask previousValue = this._ProjectPlanTask.Entity;
				if (((previousValue != value) 
							|| (this._ProjectPlanTask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectPlanTask.Entity = null;
						previousValue.ProjectPlanTaskResponses.Remove(this);
					}
					this._ProjectPlanTask.Entity = value;
					if ((value != null))
					{
						value.ProjectPlanTaskResponses.Add(this);
						this._ProjectPlanTaskID = value.ProjectPlanTaskID;
					}
					else
					{
						this._ProjectPlanTaskID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ProjectPlanTask");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_ProjectPlanTask")]
	public partial class ProjectPlanTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProjectPlanTaskID;
		
		private System.Guid _ProjectPlanID;
		
		private System.Nullable<System.Guid> _ParentProjectTaskID;
		
		private string _ProjectTaskName;
		
		private System.Nullable<System.Guid> _WorkTypeID;
		
		private int _Priority;
		
		private System.Nullable<decimal> _Progress;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _StopDate;
		
		private System.Nullable<decimal> _AllocatedManHours;
		
		private string _Comment;
		
		private int _Version;
		
		private System.Nullable<System.Guid> _VersionAntecedentID;
		
		private System.Nullable<int> _VersionCertainty;
		
		private System.Nullable<System.Guid> _VersionWorkflowInstanceID;
		
		private System.Nullable<System.Guid> _VersionUpdatedBy;
		
		private System.Nullable<System.Guid> _VersionDeletedBy;
		
		private System.Nullable<System.Guid> _VersionOwnerContactID;
		
		private System.Nullable<System.Guid> _VersionOwnerCompanyID;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		private EntitySet<ProjectPlanTaskWorker> _ProjectPlanTaskWorkers;
		
		private EntitySet<ProjectPlanTaskResponse> _ProjectPlanTaskResponses;
		
		private EntitySet<ProjectPlanTask> _ProjectPlanTasks;
		
		private EntityRef<ProjectPlan> _ProjectPlan;
		
		private EntityRef<ProjectPlanTask> _X_ProjectPlanTask1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectPlanTaskIDChanging(System.Guid value);
    partial void OnProjectPlanTaskIDChanged();
    partial void OnProjectPlanIDChanging(System.Guid value);
    partial void OnProjectPlanIDChanged();
    partial void OnParentProjectTaskIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentProjectTaskIDChanged();
    partial void OnProjectTaskNameChanging(string value);
    partial void OnProjectTaskNameChanged();
    partial void OnWorkTypeIDChanging(System.Nullable<System.Guid> value);
    partial void OnWorkTypeIDChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnProgressChanging(System.Nullable<decimal> value);
    partial void OnProgressChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStopDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStopDateChanged();
    partial void OnAllocatedManHoursChanging(System.Nullable<decimal> value);
    partial void OnAllocatedManHoursChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnVersionAntecedentIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionAntecedentIDChanged();
    partial void OnVersionCertaintyChanging(System.Nullable<int> value);
    partial void OnVersionCertaintyChanged();
    partial void OnVersionWorkflowInstanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionWorkflowInstanceIDChanged();
    partial void OnVersionUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionUpdatedByChanged();
    partial void OnVersionDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionDeletedByChanged();
    partial void OnVersionOwnerContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerContactIDChanged();
    partial void OnVersionOwnerCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerCompanyIDChanged();
    partial void OnVersionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionUpdatedChanged();
    #endregion
		
		public ProjectPlanTask()
		{
			this._ProjectPlanTaskWorkers = new EntitySet<ProjectPlanTaskWorker>(new Action<ProjectPlanTaskWorker>(this.attach_ProjectPlanTaskWorkers), new Action<ProjectPlanTaskWorker>(this.detach_ProjectPlanTaskWorkers));
			this._ProjectPlanTaskResponses = new EntitySet<ProjectPlanTaskResponse>(new Action<ProjectPlanTaskResponse>(this.attach_ProjectPlanTaskResponses), new Action<ProjectPlanTaskResponse>(this.detach_ProjectPlanTaskResponses));
			this._ProjectPlanTasks = new EntitySet<ProjectPlanTask>(new Action<ProjectPlanTask>(this.attach_ProjectPlanTasks), new Action<ProjectPlanTask>(this.detach_ProjectPlanTasks));
			this._ProjectPlan = default(EntityRef<ProjectPlan>);
			this._X_ProjectPlanTask1 = default(EntityRef<ProjectPlanTask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanTaskID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProjectPlanTaskID
		{
			get
			{
				return this._ProjectPlanTaskID;
			}
			set
			{
				if ((this._ProjectPlanTaskID != value))
				{
					this.OnProjectPlanTaskIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanTaskID = value;
					this.SendPropertyChanged("ProjectPlanTaskID");
					this.OnProjectPlanTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlanID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectPlanID
		{
			get
			{
				return this._ProjectPlanID;
			}
			set
			{
				if ((this._ProjectPlanID != value))
				{
					if (this._ProjectPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectPlanIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlanID = value;
					this.SendPropertyChanged("ProjectPlanID");
					this.OnProjectPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentProjectTaskID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentProjectTaskID
		{
			get
			{
				return this._ParentProjectTaskID;
			}
			set
			{
				if ((this._ParentProjectTaskID != value))
				{
					if (this._X_ProjectPlanTask1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentProjectTaskIDChanging(value);
					this.SendPropertyChanging();
					this._ParentProjectTaskID = value;
					this.SendPropertyChanged("ParentProjectTaskID");
					this.OnParentProjectTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskName", DbType="NVarChar(50)")]
		public string ProjectTaskName
		{
			get
			{
				return this._ProjectTaskName;
			}
			set
			{
				if ((this._ProjectTaskName != value))
				{
					this.OnProjectTaskNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskName = value;
					this.SendPropertyChanged("ProjectTaskName");
					this.OnProjectTaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTypeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WorkTypeID
		{
			get
			{
				return this._WorkTypeID;
			}
			set
			{
				if ((this._WorkTypeID != value))
				{
					this.OnWorkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._WorkTypeID = value;
					this.SendPropertyChanged("WorkTypeID");
					this.OnWorkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Progress", DbType="Decimal(3,2)")]
		public System.Nullable<decimal> Progress
		{
			get
			{
				return this._Progress;
			}
			set
			{
				if ((this._Progress != value))
				{
					this.OnProgressChanging(value);
					this.SendPropertyChanging();
					this._Progress = value;
					this.SendPropertyChanged("Progress");
					this.OnProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDate", DbType="Date")]
		public System.Nullable<System.DateTime> StopDate
		{
			get
			{
				return this._StopDate;
			}
			set
			{
				if ((this._StopDate != value))
				{
					this.OnStopDateChanging(value);
					this.SendPropertyChanging();
					this._StopDate = value;
					this.SendPropertyChanged("StopDate");
					this.OnStopDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllocatedManHours", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> AllocatedManHours
		{
			get
			{
				return this._AllocatedManHours;
			}
			set
			{
				if ((this._AllocatedManHours != value))
				{
					this.OnAllocatedManHoursChanging(value);
					this.SendPropertyChanging();
					this._AllocatedManHours = value;
					this.SendPropertyChanged("AllocatedManHours");
					this.OnAllocatedManHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAntecedentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionAntecedentID
		{
			get
			{
				return this._VersionAntecedentID;
			}
			set
			{
				if ((this._VersionAntecedentID != value))
				{
					this.OnVersionAntecedentIDChanging(value);
					this.SendPropertyChanging();
					this._VersionAntecedentID = value;
					this.SendPropertyChanged("VersionAntecedentID");
					this.OnVersionAntecedentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCertainty", DbType="Int")]
		public System.Nullable<int> VersionCertainty
		{
			get
			{
				return this._VersionCertainty;
			}
			set
			{
				if ((this._VersionCertainty != value))
				{
					this.OnVersionCertaintyChanging(value);
					this.SendPropertyChanging();
					this._VersionCertainty = value;
					this.SendPropertyChanged("VersionCertainty");
					this.OnVersionCertaintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionWorkflowInstanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionWorkflowInstanceID
		{
			get
			{
				return this._VersionWorkflowInstanceID;
			}
			set
			{
				if ((this._VersionWorkflowInstanceID != value))
				{
					this.OnVersionWorkflowInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._VersionWorkflowInstanceID = value;
					this.SendPropertyChanged("VersionWorkflowInstanceID");
					this.OnVersionWorkflowInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionUpdatedBy
		{
			get
			{
				return this._VersionUpdatedBy;
			}
			set
			{
				if ((this._VersionUpdatedBy != value))
				{
					this.OnVersionUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdatedBy = value;
					this.SendPropertyChanged("VersionUpdatedBy");
					this.OnVersionUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionDeletedBy
		{
			get
			{
				return this._VersionDeletedBy;
			}
			set
			{
				if ((this._VersionDeletedBy != value))
				{
					this.OnVersionDeletedByChanging(value);
					this.SendPropertyChanging();
					this._VersionDeletedBy = value;
					this.SendPropertyChanged("VersionDeletedBy");
					this.OnVersionDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerContactID
		{
			get
			{
				return this._VersionOwnerContactID;
			}
			set
			{
				if ((this._VersionOwnerContactID != value))
				{
					this.OnVersionOwnerContactIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerContactID = value;
					this.SendPropertyChanged("VersionOwnerContactID");
					this.OnVersionOwnerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerCompanyID
		{
			get
			{
				return this._VersionOwnerCompanyID;
			}
			set
			{
				if ((this._VersionOwnerCompanyID != value))
				{
					this.OnVersionOwnerCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerCompanyID = value;
					this.SendPropertyChanged("VersionOwnerCompanyID");
					this.OnVersionOwnerCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this.OnVersionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdated = value;
					this.SendPropertyChanged("VersionUpdated");
					this.OnVersionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="X_ProjectPlanTask_ProjectPlanTaskWorker", Storage="_ProjectPlanTaskWorkers", ThisKey="ProjectPlanTaskID", OtherKey="ProjectPlanTaskID")]
		public EntitySet<ProjectPlanTaskWorker> ProjectPlanTaskWorkers
		{
			get
			{
				return this._ProjectPlanTaskWorkers;
			}
			set
			{
				this._ProjectPlanTaskWorkers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="X_ProjectPlanTask_ProjectPlanTaskResponse", Storage="_ProjectPlanTaskResponses", ThisKey="ProjectPlanTaskID", OtherKey="ProjectPlanTaskID")]
		public EntitySet<ProjectPlanTaskResponse> ProjectPlanTaskResponses
		{
			get
			{
				return this._ProjectPlanTaskResponses;
			}
			set
			{
				this._ProjectPlanTaskResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="X_ProjectPlanTask_X_ProjectPlanTask", Storage="_ProjectPlanTasks", ThisKey="ProjectPlanTaskID", OtherKey="ParentProjectTaskID")]
		public EntitySet<ProjectPlanTask> ProjectPlanTasks
		{
			get
			{
				return this._ProjectPlanTasks;
			}
			set
			{
				this._ProjectPlanTasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectPlan_X_ProjectPlanTask", Storage="_ProjectPlan", ThisKey="ProjectPlanID", OtherKey="ProjectPlanID", IsForeignKey=true)]
		public ProjectPlan ProjectPlan
		{
			get
			{
				return this._ProjectPlan.Entity;
			}
			set
			{
				ProjectPlan previousValue = this._ProjectPlan.Entity;
				if (((previousValue != value) 
							|| (this._ProjectPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectPlan.Entity = null;
						previousValue.ProjectPlanTasks.Remove(this);
					}
					this._ProjectPlan.Entity = value;
					if ((value != null))
					{
						value.ProjectPlanTasks.Add(this);
						this._ProjectPlanID = value.ProjectPlanID;
					}
					else
					{
						this._ProjectPlanID = default(System.Guid);
					}
					this.SendPropertyChanged("ProjectPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="X_ProjectPlanTask_X_ProjectPlanTask", Storage="_X_ProjectPlanTask1", ThisKey="ParentProjectTaskID", OtherKey="ProjectPlanTaskID", IsForeignKey=true)]
		public ProjectPlanTask X_ProjectPlanTask1
		{
			get
			{
				return this._X_ProjectPlanTask1.Entity;
			}
			set
			{
				ProjectPlanTask previousValue = this._X_ProjectPlanTask1.Entity;
				if (((previousValue != value) 
							|| (this._X_ProjectPlanTask1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._X_ProjectPlanTask1.Entity = null;
						previousValue.ProjectPlanTasks.Remove(this);
					}
					this._X_ProjectPlanTask1.Entity = value;
					if ((value != null))
					{
						value.ProjectPlanTasks.Add(this);
						this._ParentProjectTaskID = value.ProjectPlanTaskID;
					}
					else
					{
						this._ParentProjectTaskID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("X_ProjectPlanTask1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectPlanTaskWorkers(ProjectPlanTaskWorker entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPlanTask = this;
		}
		
		private void detach_ProjectPlanTaskWorkers(ProjectPlanTaskWorker entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPlanTask = null;
		}
		
		private void attach_ProjectPlanTaskResponses(ProjectPlanTaskResponse entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPlanTask = this;
		}
		
		private void detach_ProjectPlanTaskResponses(ProjectPlanTaskResponse entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPlanTask = null;
		}
		
		private void attach_ProjectPlanTasks(ProjectPlanTask entity)
		{
			this.SendPropertyChanging();
			entity.X_ProjectPlanTask1 = this;
		}
		
		private void detach_ProjectPlanTasks(ProjectPlanTask entity)
		{
			this.SendPropertyChanging();
			entity.X_ProjectPlanTask1 = null;
		}
	}
}
#pragma warning restore 1591
