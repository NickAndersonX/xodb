//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Spatial", "FK_X_LocationAlias_X_Location", "X_Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Location), "X_LocationAlias", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.LocationAlias), true)]
[assembly: EdmRelationshipAttribute("Spatial", "FK_X_LocationHistory_X_Location", "X_Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Location), "X_LocationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.LocationHistories), true)]
[assembly: EdmRelationshipAttribute("Spatial", "FK_X_LocationID_X_LocationID", "X_Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XODB.Models.Location), "X_LocationData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.LocationData), true)]
[assembly: EdmRelationshipAttribute("Spatial", "FK_X_ProvinceID_X_ProvinceID", "X_Province", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XODB.Models.Province), "X_ProvinceData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.ProvinceData), true)]
[assembly: EdmRelationshipAttribute("Spatial", "FK_X_ProvinceRelation_X_Province", "X_Province", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Province), "X_ProvinceRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.ProvinceRelation), true)]
[assembly: EdmRelationshipAttribute("Spatial", "FK_X_ProvinceRelation_X_Province1", "X_Province", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Province), "X_ProvinceRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.ProvinceRelation), true)]

#endregion

namespace XODB.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SpatialContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SpatialContainer object using the connection string found in the 'SpatialContainer' section of the application configuration file.
        /// </summary>
        public SpatialContainer() : base("name=SpatialContainer", "SpatialContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SpatialContainer object.
        /// </summary>
        public SpatialContainer(string connectionString) : base(connectionString, "SpatialContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SpatialContainer object.
        /// </summary>
        public SpatialContainer(EntityConnection connection) : base(connection, "SpatialContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationAlias> LocationAlias
        {
            get
            {
                if ((_LocationAlias == null))
                {
                    _LocationAlias = base.CreateObjectSet<LocationAlias>("LocationAlias");
                }
                return _LocationAlias;
            }
        }
        private ObjectSet<LocationAlias> _LocationAlias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationData> LocationDatas
        {
            get
            {
                if ((_LocationDatas == null))
                {
                    _LocationDatas = base.CreateObjectSet<LocationData>("LocationDatas");
                }
                return _LocationDatas;
            }
        }
        private ObjectSet<LocationData> _LocationDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationHistories> LocationHistory
        {
            get
            {
                if ((_LocationHistory == null))
                {
                    _LocationHistory = base.CreateObjectSet<LocationHistories>("LocationHistory");
                }
                return _LocationHistory;
            }
        }
        private ObjectSet<LocationHistories> _LocationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Province> Provinces
        {
            get
            {
                if ((_Provinces == null))
                {
                    _Provinces = base.CreateObjectSet<Province>("Provinces");
                }
                return _Provinces;
            }
        }
        private ObjectSet<Province> _Provinces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProvinceData> ProvinceDatas
        {
            get
            {
                if ((_ProvinceDatas == null))
                {
                    _ProvinceDatas = base.CreateObjectSet<ProvinceData>("ProvinceDatas");
                }
                return _ProvinceDatas;
            }
        }
        private ObjectSet<ProvinceData> _ProvinceDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProvinceRelation> ProvinceRelations
        {
            get
            {
                if ((_ProvinceRelations == null))
                {
                    _ProvinceRelations = base.CreateObjectSet<ProvinceRelation>("ProvinceRelations");
                }
                return _ProvinceRelations;
            }
        }
        private ObjectSet<ProvinceRelation> _ProvinceRelations;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationAlias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationAlias(LocationAlias locationAlias)
        {
            base.AddObject("LocationAlias", locationAlias);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationDatas(LocationData locationData)
        {
            base.AddObject("LocationDatas", locationData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationHistory(LocationHistories locationHistories)
        {
            base.AddObject("LocationHistory", locationHistories);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Provinces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinces(Province province)
        {
            base.AddObject("Provinces", province);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProvinceDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinceDatas(ProvinceData provinceData)
        {
            base.AddObject("ProvinceDatas", provinceData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProvinceRelations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinceRelations(ProvinceRelation provinceRelation)
        {
            base.AddObject("ProvinceRelations", provinceRelation);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Spatial", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Location CreateLocation(global::System.Guid locationID, global::System.Int32 version)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.Version = version;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value, "LocationID");
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationTypeID
        {
            get
            {
                return _LocationTypeID;
            }
            set
            {
                OnLocationTypeIDChanging(value);
                ReportPropertyChanging("LocationTypeID");
                _LocationTypeID = StructuralObject.SetValidValue(value, "LocationTypeID");
                ReportPropertyChanged("LocationTypeID");
                OnLocationTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationTypeID;
        partial void OnLocationTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnLocationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultLocationName
        {
            get
            {
                return _DefaultLocationName;
            }
            set
            {
                OnDefaultLocationNameChanging(value);
                ReportPropertyChanging("DefaultLocationName");
                _DefaultLocationName = StructuralObject.SetValidValue(value, true, "DefaultLocationName");
                ReportPropertyChanged("DefaultLocationName");
                OnDefaultLocationNameChanged();
            }
        }
        private global::System.String _DefaultLocationName;
        partial void OnDefaultLocationNameChanging(global::System.String value);
        partial void OnDefaultLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationCode
        {
            get
            {
                return _LocationCode;
            }
            set
            {
                OnLocationCodeChanging(value);
                ReportPropertyChanging("LocationCode");
                _LocationCode = StructuralObject.SetValidValue(value, true, "LocationCode");
                ReportPropertyChanged("LocationCode");
                OnLocationCodeChanged();
            }
        }
        private global::System.String _LocationCode;
        partial void OnLocationCodeChanging(global::System.String value);
        partial void OnLocationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography LocationGeography
        {
            get
            {
                return _LocationGeography;
            }
            set
            {
                OnLocationGeographyChanging(value);
                ReportPropertyChanging("LocationGeography");
                _LocationGeography = StructuralObject.SetValidValue(value, true, "LocationGeography");
                ReportPropertyChanged("LocationGeography");
                OnLocationGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _LocationGeography;
        partial void OnLocationGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnLocationGeographyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LatitudeWGS84
        {
            get
            {
                return _LatitudeWGS84;
            }
            set
            {
                OnLatitudeWGS84Changing(value);
                ReportPropertyChanging("LatitudeWGS84");
                _LatitudeWGS84 = StructuralObject.SetValidValue(value, "LatitudeWGS84");
                ReportPropertyChanged("LatitudeWGS84");
                OnLatitudeWGS84Changed();
            }
        }
        private Nullable<global::System.Decimal> _LatitudeWGS84;
        partial void OnLatitudeWGS84Changing(Nullable<global::System.Decimal> value);
        partial void OnLatitudeWGS84Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LongitudeWGS84
        {
            get
            {
                return _LongitudeWGS84;
            }
            set
            {
                OnLongitudeWGS84Changing(value);
                ReportPropertyChanging("LongitudeWGS84");
                _LongitudeWGS84 = StructuralObject.SetValidValue(value, "LongitudeWGS84");
                ReportPropertyChanged("LongitudeWGS84");
                OnLongitudeWGS84Changed();
            }
        }
        private Nullable<global::System.Decimal> _LongitudeWGS84;
        partial void OnLongitudeWGS84Changing(Nullable<global::System.Decimal> value);
        partial void OnLongitudeWGS84Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Elevation
        {
            get
            {
                return _Elevation;
            }
            set
            {
                OnElevationChanging(value);
                ReportPropertyChanging("Elevation");
                _Elevation = StructuralObject.SetValidValue(value, "Elevation");
                ReportPropertyChanged("Elevation");
                OnElevationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Elevation;
        partial void OnElevationChanging(Nullable<global::System.Decimal> value);
        partial void OnElevationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CountryStateID
        {
            get
            {
                return _CountryStateID;
            }
            set
            {
                OnCountryStateIDChanging(value);
                ReportPropertyChanging("CountryStateID");
                _CountryStateID = StructuralObject.SetValidValue(value, "CountryStateID");
                ReportPropertyChanged("CountryStateID");
                OnCountryStateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CountryStateID;
        partial void OnCountryStateIDChanging(Nullable<global::System.Guid> value);
        partial void OnCountryStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultCulture
        {
            get
            {
                return _DefaultCulture;
            }
            set
            {
                OnDefaultCultureChanging(value);
                ReportPropertyChanging("DefaultCulture");
                _DefaultCulture = StructuralObject.SetValidValue(value, true, "DefaultCulture");
                ReportPropertyChanged("DefaultCulture");
                OnDefaultCultureChanged();
            }
        }
        private global::System.String _DefaultCulture;
        partial void OnDefaultCultureChanging(global::System.String value);
        partial void OnDefaultCultureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerCompanyID
        {
            get
            {
                return _OwnerCompanyID;
            }
            set
            {
                OnOwnerCompanyIDChanging(value);
                ReportPropertyChanging("OwnerCompanyID");
                _OwnerCompanyID = StructuralObject.SetValidValue(value, "OwnerCompanyID");
                ReportPropertyChanged("OwnerCompanyID");
                OnOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerCompanyID;
        partial void OnOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ResponsibleContactID
        {
            get
            {
                return _ResponsibleContactID;
            }
            set
            {
                OnResponsibleContactIDChanging(value);
                ReportPropertyChanging("ResponsibleContactID");
                _ResponsibleContactID = StructuralObject.SetValidValue(value, "ResponsibleContactID");
                ReportPropertyChanged("ResponsibleContactID");
                OnResponsibleContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ResponsibleContactID;
        partial void OnResponsibleContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnResponsibleContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_LocationAlias_X_Location", "X_LocationAlias")]
        public EntityCollection<LocationAlias> X_LocationAlias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LocationAlias>("Spatial.FK_X_LocationAlias_X_Location", "X_LocationAlias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LocationAlias>("Spatial.FK_X_LocationAlias_X_Location", "X_LocationAlias", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_LocationHistory_X_Location", "X_LocationHistory")]
        public EntityCollection<LocationHistories> X_LocationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LocationHistories>("Spatial.FK_X_LocationHistory_X_Location", "X_LocationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LocationHistories>("Spatial.FK_X_LocationHistory_X_Location", "X_LocationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_LocationID_X_LocationID", "X_LocationData")]
        public EntityCollection<LocationData> X_LocationData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LocationData>("Spatial.FK_X_LocationID_X_LocationID", "X_LocationData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LocationData>("Spatial.FK_X_LocationID_X_LocationID", "X_LocationData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Spatial", Name="LocationAlias")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationAlias : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationAlias object.
        /// </summary>
        /// <param name="locationAliasID">Initial value of the LocationAliasID property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static LocationAlias CreateLocationAlias(global::System.Guid locationAliasID, global::System.Int32 priority, global::System.Int32 version)
        {
            LocationAlias locationAlias = new LocationAlias();
            locationAlias.LocationAliasID = locationAliasID;
            locationAlias.Priority = priority;
            locationAlias.Version = version;
            return locationAlias;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationAliasID
        {
            get
            {
                return _LocationAliasID;
            }
            set
            {
                if (_LocationAliasID != value)
                {
                    OnLocationAliasIDChanging(value);
                    ReportPropertyChanging("LocationAliasID");
                    _LocationAliasID = StructuralObject.SetValidValue(value, "LocationAliasID");
                    ReportPropertyChanged("LocationAliasID");
                    OnLocationAliasIDChanged();
                }
            }
        }
        private global::System.Guid _LocationAliasID;
        partial void OnLocationAliasIDChanging(global::System.Guid value);
        partial void OnLocationAliasIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value, "LocationID");
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationID;
        partial void OnLocationIDChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true, "Alias");
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                OnCultureChanging(value);
                ReportPropertyChanging("Culture");
                _Culture = StructuralObject.SetValidValue(value, true, "Culture");
                ReportPropertyChanged("Culture");
                OnCultureChanged();
            }
        }
        private global::System.String _Culture;
        partial void OnCultureChanging(global::System.String value);
        partial void OnCultureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_LocationAlias_X_Location", "X_Location")]
        public Location X_Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationAlias_X_Location", "X_Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationAlias_X_Location", "X_Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> X_LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationAlias_X_Location", "X_Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Spatial.FK_X_LocationAlias_X_Location", "X_Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Spatial", Name="LocationData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationData object.
        /// </summary>
        /// <param name="locationDataID">Initial value of the LocationDataID property.</param>
        /// <param name="tableType">Initial value of the TableType property.</param>
        /// <param name="referenceID">Initial value of the ReferenceID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static LocationData CreateLocationData(global::System.Guid locationDataID, global::System.String tableType, global::System.Guid referenceID, global::System.Guid locationID, global::System.Int32 version)
        {
            LocationData locationData = new LocationData();
            locationData.LocationDataID = locationDataID;
            locationData.TableType = tableType;
            locationData.ReferenceID = referenceID;
            locationData.LocationID = locationID;
            locationData.Version = version;
            return locationData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationDataID
        {
            get
            {
                return _LocationDataID;
            }
            set
            {
                if (_LocationDataID != value)
                {
                    OnLocationDataIDChanging(value);
                    ReportPropertyChanging("LocationDataID");
                    _LocationDataID = StructuralObject.SetValidValue(value, "LocationDataID");
                    ReportPropertyChanged("LocationDataID");
                    OnLocationDataIDChanged();
                }
            }
        }
        private global::System.Guid _LocationDataID;
        partial void OnLocationDataIDChanging(global::System.Guid value);
        partial void OnLocationDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentLocationDataID
        {
            get
            {
                return _ParentLocationDataID;
            }
            set
            {
                OnParentLocationDataIDChanging(value);
                ReportPropertyChanging("ParentLocationDataID");
                _ParentLocationDataID = StructuralObject.SetValidValue(value, "ParentLocationDataID");
                ReportPropertyChanged("ParentLocationDataID");
                OnParentLocationDataIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentLocationDataID;
        partial void OnParentLocationDataIDChanging(Nullable<global::System.Guid> value);
        partial void OnParentLocationDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableType
        {
            get
            {
                return _TableType;
            }
            set
            {
                OnTableTypeChanging(value);
                ReportPropertyChanging("TableType");
                _TableType = StructuralObject.SetValidValue(value, false, "TableType");
                ReportPropertyChanged("TableType");
                OnTableTypeChanged();
            }
        }
        private global::System.String _TableType;
        partial void OnTableTypeChanging(global::System.String value);
        partial void OnTableTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceID
        {
            get
            {
                return _ReferenceID;
            }
            set
            {
                OnReferenceIDChanging(value);
                ReportPropertyChanging("ReferenceID");
                _ReferenceID = StructuralObject.SetValidValue(value, "ReferenceID");
                ReportPropertyChanged("ReferenceID");
                OnReferenceIDChanged();
            }
        }
        private global::System.Guid _ReferenceID;
        partial void OnReferenceIDChanging(global::System.Guid value);
        partial void OnReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value, "LocationID");
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_LocationID_X_LocationID", "X_Location")]
        public Location X_Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationID_X_LocationID", "X_Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationID_X_LocationID", "X_Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> X_LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationID_X_LocationID", "X_Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Spatial.FK_X_LocationID_X_LocationID", "X_Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Spatial", Name="LocationHistories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationHistories : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationHistories object.
        /// </summary>
        /// <param name="locationHistoryID">Initial value of the LocationHistoryID property.</param>
        /// <param name="locationHistory">Initial value of the LocationHistory property.</param>
        /// <param name="locationTaken">Initial value of the LocationTaken property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static LocationHistories CreateLocationHistories(global::System.Guid locationHistoryID, global::System.Data.Spatial.DbGeography locationHistory, global::System.DateTime locationTaken, global::System.Int32 version)
        {
            LocationHistories locationHistories = new LocationHistories();
            locationHistories.LocationHistoryID = locationHistoryID;
            locationHistories.LocationHistory = locationHistory;
            locationHistories.LocationTaken = locationTaken;
            locationHistories.Version = version;
            return locationHistories;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationHistoryID
        {
            get
            {
                return _LocationHistoryID;
            }
            set
            {
                if (_LocationHistoryID != value)
                {
                    OnLocationHistoryIDChanging(value);
                    ReportPropertyChanging("LocationHistoryID");
                    _LocationHistoryID = StructuralObject.SetValidValue(value, "LocationHistoryID");
                    ReportPropertyChanged("LocationHistoryID");
                    OnLocationHistoryIDChanged();
                }
            }
        }
        private global::System.Guid _LocationHistoryID;
        partial void OnLocationHistoryIDChanging(global::System.Guid value);
        partial void OnLocationHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography LocationHistory
        {
            get
            {
                return _LocationHistory;
            }
            set
            {
                OnLocationHistoryChanging(value);
                ReportPropertyChanging("LocationHistory");
                _LocationHistory = StructuralObject.SetValidValue(value, false, "LocationHistory");
                ReportPropertyChanged("LocationHistory");
                OnLocationHistoryChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _LocationHistory;
        partial void OnLocationHistoryChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnLocationHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LocationTaken
        {
            get
            {
                return _LocationTaken;
            }
            set
            {
                OnLocationTakenChanging(value);
                ReportPropertyChanging("LocationTaken");
                _LocationTaken = StructuralObject.SetValidValue(value, "LocationTaken");
                ReportPropertyChanged("LocationTaken");
                OnLocationTakenChanged();
            }
        }
        private global::System.DateTime _LocationTaken;
        partial void OnLocationTakenChanging(global::System.DateTime value);
        partial void OnLocationTakenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CorrectedLocationID
        {
            get
            {
                return _CorrectedLocationID;
            }
            set
            {
                OnCorrectedLocationIDChanging(value);
                ReportPropertyChanging("CorrectedLocationID");
                _CorrectedLocationID = StructuralObject.SetValidValue(value, "CorrectedLocationID");
                ReportPropertyChanged("CorrectedLocationID");
                OnCorrectedLocationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CorrectedLocationID;
        partial void OnCorrectedLocationIDChanging(Nullable<global::System.Guid> value);
        partial void OnCorrectedLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_LocationHistory_X_Location", "X_Location")]
        public Location X_Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationHistory_X_Location", "X_Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationHistory_X_Location", "X_Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> X_LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Spatial.FK_X_LocationHistory_X_Location", "X_Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Spatial.FK_X_LocationHistory_X_Location", "X_Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Spatial", Name="Province")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Province : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Province object.
        /// </summary>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Province CreateProvince(global::System.Guid provinceID, global::System.Int32 version)
        {
            Province province = new Province();
            province.ProvinceID = provinceID;
            province.Version = version;
            return province;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                if (_ProvinceID != value)
                {
                    OnProvinceIDChanging(value);
                    ReportPropertyChanging("ProvinceID");
                    _ProvinceID = StructuralObject.SetValidValue(value, "ProvinceID");
                    ReportPropertyChanged("ProvinceID");
                    OnProvinceIDChanged();
                }
            }
        }
        private global::System.Guid _ProvinceID;
        partial void OnProvinceIDChanging(global::System.Guid value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProvinceName
        {
            get
            {
                return _ProvinceName;
            }
            set
            {
                OnProvinceNameChanging(value);
                ReportPropertyChanging("ProvinceName");
                _ProvinceName = StructuralObject.SetValidValue(value, true, "ProvinceName");
                ReportPropertyChanged("ProvinceName");
                OnProvinceNameChanged();
            }
        }
        private global::System.String _ProvinceName;
        partial void OnProvinceNameChanging(global::System.String value);
        partial void OnProvinceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProvinceTypeID
        {
            get
            {
                return _ProvinceTypeID;
            }
            set
            {
                OnProvinceTypeIDChanging(value);
                ReportPropertyChanging("ProvinceTypeID");
                _ProvinceTypeID = StructuralObject.SetValidValue(value, "ProvinceTypeID");
                ReportPropertyChanged("ProvinceTypeID");
                OnProvinceTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProvinceTypeID;
        partial void OnProvinceTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnProvinceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CountryStateID
        {
            get
            {
                return _CountryStateID;
            }
            set
            {
                OnCountryStateIDChanging(value);
                ReportPropertyChanging("CountryStateID");
                _CountryStateID = StructuralObject.SetValidValue(value, "CountryStateID");
                ReportPropertyChanged("CountryStateID");
                OnCountryStateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CountryStateID;
        partial void OnCountryStateIDChanging(Nullable<global::System.Guid> value);
        partial void OnCountryStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProvinceGroupID
        {
            get
            {
                return _ProvinceGroupID;
            }
            set
            {
                OnProvinceGroupIDChanging(value);
                ReportPropertyChanging("ProvinceGroupID");
                _ProvinceGroupID = StructuralObject.SetValidValue(value, "ProvinceGroupID");
                ReportPropertyChanged("ProvinceGroupID");
                OnProvinceGroupIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProvinceGroupID;
        partial void OnProvinceGroupIDChanging(Nullable<global::System.Guid> value);
        partial void OnProvinceGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography ProvinceGeography
        {
            get
            {
                return _ProvinceGeography;
            }
            set
            {
                OnProvinceGeographyChanging(value);
                ReportPropertyChanging("ProvinceGeography");
                _ProvinceGeography = StructuralObject.SetValidValue(value, true, "ProvinceGeography");
                ReportPropertyChanged("ProvinceGeography");
                OnProvinceGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _ProvinceGeography;
        partial void OnProvinceGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnProvinceGeographyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerCompanyID
        {
            get
            {
                return _OwnerCompanyID;
            }
            set
            {
                OnOwnerCompanyIDChanging(value);
                ReportPropertyChanging("OwnerCompanyID");
                _OwnerCompanyID = StructuralObject.SetValidValue(value, "OwnerCompanyID");
                ReportPropertyChanged("OwnerCompanyID");
                OnOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerCompanyID;
        partial void OnOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ApprovedByContactID
        {
            get
            {
                return _ApprovedByContactID;
            }
            set
            {
                OnApprovedByContactIDChanging(value);
                ReportPropertyChanging("ApprovedByContactID");
                _ApprovedByContactID = StructuralObject.SetValidValue(value, "ApprovedByContactID");
                ReportPropertyChanged("ApprovedByContactID");
                OnApprovedByContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ApprovedByContactID;
        partial void OnApprovedByContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnApprovedByContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_ProvinceID_X_ProvinceID", "X_ProvinceData")]
        public EntityCollection<ProvinceData> X_ProvinceData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProvinceData>("Spatial.FK_X_ProvinceID_X_ProvinceID", "X_ProvinceData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProvinceData>("Spatial.FK_X_ProvinceID_X_ProvinceID", "X_ProvinceData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_ProvinceRelation_X_Province", "X_ProvinceRelation")]
        public EntityCollection<ProvinceRelation> X_ProvinceRelation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProvinceRelation>("Spatial.FK_X_ProvinceRelation_X_Province", "X_ProvinceRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProvinceRelation>("Spatial.FK_X_ProvinceRelation_X_Province", "X_ProvinceRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_ProvinceRelation_X_Province1", "X_ProvinceRelation")]
        public EntityCollection<ProvinceRelation> X_ProvinceRelation1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProvinceRelation>("Spatial.FK_X_ProvinceRelation_X_Province1", "X_ProvinceRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProvinceRelation>("Spatial.FK_X_ProvinceRelation_X_Province1", "X_ProvinceRelation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Spatial", Name="ProvinceData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProvinceData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProvinceData object.
        /// </summary>
        /// <param name="provinceDataID">Initial value of the ProvinceDataID property.</param>
        /// <param name="tableType">Initial value of the TableType property.</param>
        /// <param name="referenceID">Initial value of the ReferenceID property.</param>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ProvinceData CreateProvinceData(global::System.Guid provinceDataID, global::System.String tableType, global::System.Guid referenceID, global::System.Guid provinceID, global::System.Int32 version)
        {
            ProvinceData provinceData = new ProvinceData();
            provinceData.ProvinceDataID = provinceDataID;
            provinceData.TableType = tableType;
            provinceData.ReferenceID = referenceID;
            provinceData.ProvinceID = provinceID;
            provinceData.Version = version;
            return provinceData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProvinceDataID
        {
            get
            {
                return _ProvinceDataID;
            }
            set
            {
                if (_ProvinceDataID != value)
                {
                    OnProvinceDataIDChanging(value);
                    ReportPropertyChanging("ProvinceDataID");
                    _ProvinceDataID = StructuralObject.SetValidValue(value, "ProvinceDataID");
                    ReportPropertyChanged("ProvinceDataID");
                    OnProvinceDataIDChanged();
                }
            }
        }
        private global::System.Guid _ProvinceDataID;
        partial void OnProvinceDataIDChanging(global::System.Guid value);
        partial void OnProvinceDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentProvinceDataID
        {
            get
            {
                return _ParentProvinceDataID;
            }
            set
            {
                OnParentProvinceDataIDChanging(value);
                ReportPropertyChanging("ParentProvinceDataID");
                _ParentProvinceDataID = StructuralObject.SetValidValue(value, "ParentProvinceDataID");
                ReportPropertyChanged("ParentProvinceDataID");
                OnParentProvinceDataIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentProvinceDataID;
        partial void OnParentProvinceDataIDChanging(Nullable<global::System.Guid> value);
        partial void OnParentProvinceDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableType
        {
            get
            {
                return _TableType;
            }
            set
            {
                OnTableTypeChanging(value);
                ReportPropertyChanging("TableType");
                _TableType = StructuralObject.SetValidValue(value, false, "TableType");
                ReportPropertyChanged("TableType");
                OnTableTypeChanged();
            }
        }
        private global::System.String _TableType;
        partial void OnTableTypeChanging(global::System.String value);
        partial void OnTableTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceID
        {
            get
            {
                return _ReferenceID;
            }
            set
            {
                OnReferenceIDChanging(value);
                ReportPropertyChanging("ReferenceID");
                _ReferenceID = StructuralObject.SetValidValue(value, "ReferenceID");
                ReportPropertyChanged("ReferenceID");
                OnReferenceIDChanged();
            }
        }
        private global::System.Guid _ReferenceID;
        partial void OnReferenceIDChanging(global::System.Guid value);
        partial void OnReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                OnProvinceIDChanging(value);
                ReportPropertyChanging("ProvinceID");
                _ProvinceID = StructuralObject.SetValidValue(value, "ProvinceID");
                ReportPropertyChanged("ProvinceID");
                OnProvinceIDChanged();
            }
        }
        private global::System.Guid _ProvinceID;
        partial void OnProvinceIDChanging(global::System.Guid value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_ProvinceID_X_ProvinceID", "X_Province")]
        public Province X_Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceID_X_ProvinceID", "X_Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceID_X_ProvinceID", "X_Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> X_ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceID_X_ProvinceID", "X_Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("Spatial.FK_X_ProvinceID_X_ProvinceID", "X_Province", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Spatial", Name="ProvinceRelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProvinceRelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProvinceRelation object.
        /// </summary>
        /// <param name="provinceRelationID">Initial value of the ProvinceRelationID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ProvinceRelation CreateProvinceRelation(global::System.Guid provinceRelationID, global::System.Int32 version)
        {
            ProvinceRelation provinceRelation = new ProvinceRelation();
            provinceRelation.ProvinceRelationID = provinceRelationID;
            provinceRelation.Version = version;
            return provinceRelation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProvinceRelationID
        {
            get
            {
                return _ProvinceRelationID;
            }
            set
            {
                if (_ProvinceRelationID != value)
                {
                    OnProvinceRelationIDChanging(value);
                    ReportPropertyChanging("ProvinceRelationID");
                    _ProvinceRelationID = StructuralObject.SetValidValue(value, "ProvinceRelationID");
                    ReportPropertyChanged("ProvinceRelationID");
                    OnProvinceRelationIDChanged();
                }
            }
        }
        private global::System.Guid _ProvinceRelationID;
        partial void OnProvinceRelationIDChanging(global::System.Guid value);
        partial void OnProvinceRelationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OriginalProvinceID
        {
            get
            {
                return _OriginalProvinceID;
            }
            set
            {
                OnOriginalProvinceIDChanging(value);
                ReportPropertyChanging("OriginalProvinceID");
                _OriginalProvinceID = StructuralObject.SetValidValue(value, "OriginalProvinceID");
                ReportPropertyChanged("OriginalProvinceID");
                OnOriginalProvinceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OriginalProvinceID;
        partial void OnOriginalProvinceIDChanging(Nullable<global::System.Guid> value);
        partial void OnOriginalProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RelatedProvinceID
        {
            get
            {
                return _RelatedProvinceID;
            }
            set
            {
                OnRelatedProvinceIDChanging(value);
                ReportPropertyChanging("RelatedProvinceID");
                _RelatedProvinceID = StructuralObject.SetValidValue(value, "RelatedProvinceID");
                ReportPropertyChanged("RelatedProvinceID");
                OnRelatedProvinceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RelatedProvinceID;
        partial void OnRelatedProvinceIDChanging(Nullable<global::System.Guid> value);
        partial void OnRelatedProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RelationTypeID
        {
            get
            {
                return _RelationTypeID;
            }
            set
            {
                OnRelationTypeIDChanging(value);
                ReportPropertyChanging("RelationTypeID");
                _RelationTypeID = StructuralObject.SetValidValue(value, "RelationTypeID");
                ReportPropertyChanged("RelationTypeID");
                OnRelationTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RelationTypeID;
        partial void OnRelationTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnRelationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Related
        {
            get
            {
                return _Related;
            }
            set
            {
                OnRelatedChanging(value);
                ReportPropertyChanging("Related");
                _Related = StructuralObject.SetValidValue(value, "Related");
                ReportPropertyChanged("Related");
                OnRelatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Related;
        partial void OnRelatedChanging(Nullable<global::System.DateTime> value);
        partial void OnRelatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_ProvinceRelation_X_Province", "X_Province")]
        public Province X_Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province", "X_Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province", "X_Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> X_ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province", "X_Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province", "X_Province", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Spatial", "FK_X_ProvinceRelation_X_Province1", "X_Province")]
        public Province X_Province1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province1", "X_Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province1", "X_Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> X_Province1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province1", "X_Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("Spatial.FK_X_ProvinceRelation_X_Province1", "X_Province", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
