#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XODB.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XODB")]
	public partial class ContactsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertExperience(Experience instance);
    partial void UpdateExperience(Experience instance);
    partial void DeleteExperience(Experience instance);
    #endregion
		
		public ContactsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["XODBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ContactsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContactsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Experience> Experiences
		{
			get
			{
				return this.GetTable<Experience>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ContactID;
		
		private string _ContactName;
		
		private string _Title;
		
		private string _Surname;
		
		private string _Firstname;
		
		private string _Username;
		
		private string _DefaultEmail;
		
		private string _MiddleNames;
		
		private string _Initials;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _BirthCountryID;
		
		private string _BirthCity;
		
		private System.Nullable<System.Guid> _AspNetUserID;
		
		private System.Nullable<System.Guid> _XafUserID;
		
		private string _OAuthID;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _ShortBiography;
		
		private int _Version;
		
		private System.Nullable<System.Guid> _VersionAntecedentID;
		
		private System.Nullable<int> _VersionCertainty;
		
		private System.Nullable<System.Guid> _VersionWorkflowInstanceID;
		
		private System.Nullable<System.Guid> _VersionUpdatedBy;
		
		private System.Nullable<System.Guid> _VersionDeletedBy;
		
		private System.Nullable<System.Guid> _VersionOwnerContactID;
		
		private System.Nullable<System.Guid> _VersionOwnerCompanyID;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		private EntitySet<Experience> _Experiences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(System.Guid value);
    partial void OnContactIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnDefaultEmailChanging(string value);
    partial void OnDefaultEmailChanged();
    partial void OnMiddleNamesChanging(string value);
    partial void OnMiddleNamesChanged();
    partial void OnInitialsChanging(string value);
    partial void OnInitialsChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnBirthCountryIDChanging(string value);
    partial void OnBirthCountryIDChanged();
    partial void OnBirthCityChanging(string value);
    partial void OnBirthCityChanged();
    partial void OnAspNetUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnAspNetUserIDChanged();
    partial void OnXafUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnXafUserIDChanged();
    partial void OnOAuthIDChanging(string value);
    partial void OnOAuthIDChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnShortBiographyChanging(string value);
    partial void OnShortBiographyChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnVersionAntecedentIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionAntecedentIDChanged();
    partial void OnVersionCertaintyChanging(System.Nullable<int> value);
    partial void OnVersionCertaintyChanged();
    partial void OnVersionWorkflowInstanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionWorkflowInstanceIDChanged();
    partial void OnVersionUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionUpdatedByChanged();
    partial void OnVersionDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionDeletedByChanged();
    partial void OnVersionOwnerContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerContactIDChanged();
    partial void OnVersionOwnerCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerCompanyIDChanged();
    partial void OnVersionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionUpdatedChanged();
    #endregion
		
		public Contact()
		{
			this._Experiences = new EntitySet<Experience>(new Action<Experience>(this.attach_Experiences), new Action<Experience>(this.detach_Experiences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(16)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultEmail", DbType="NVarChar(255)")]
		public string DefaultEmail
		{
			get
			{
				return this._DefaultEmail;
			}
			set
			{
				if ((this._DefaultEmail != value))
				{
					this.OnDefaultEmailChanging(value);
					this.SendPropertyChanging();
					this._DefaultEmail = value;
					this.SendPropertyChanged("DefaultEmail");
					this.OnDefaultEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleNames", DbType="NVarChar(60)")]
		public string MiddleNames
		{
			get
			{
				return this._MiddleNames;
			}
			set
			{
				if ((this._MiddleNames != value))
				{
					this.OnMiddleNamesChanging(value);
					this.SendPropertyChanging();
					this._MiddleNames = value;
					this.SendPropertyChanged("MiddleNames");
					this.OnMiddleNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Initials", DbType="NVarChar(16)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this.OnInitialsChanging(value);
					this.SendPropertyChanging();
					this._Initials = value;
					this.SendPropertyChanged("Initials");
					this.OnInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCountryID", DbType="NVarChar(2)")]
		public string BirthCountryID
		{
			get
			{
				return this._BirthCountryID;
			}
			set
			{
				if ((this._BirthCountryID != value))
				{
					this.OnBirthCountryIDChanging(value);
					this.SendPropertyChanging();
					this._BirthCountryID = value;
					this.SendPropertyChanged("BirthCountryID");
					this.OnBirthCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCity", DbType="NVarChar(60)")]
		public string BirthCity
		{
			get
			{
				return this._BirthCity;
			}
			set
			{
				if ((this._BirthCity != value))
				{
					this.OnBirthCityChanging(value);
					this.SendPropertyChanging();
					this._BirthCity = value;
					this.SendPropertyChanged("BirthCity");
					this.OnBirthCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AspNetUserID
		{
			get
			{
				return this._AspNetUserID;
			}
			set
			{
				if ((this._AspNetUserID != value))
				{
					this.OnAspNetUserIDChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserID = value;
					this.SendPropertyChanged("AspNetUserID");
					this.OnAspNetUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XafUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> XafUserID
		{
			get
			{
				return this._XafUserID;
			}
			set
			{
				if ((this._XafUserID != value))
				{
					this.OnXafUserIDChanging(value);
					this.SendPropertyChanging();
					this._XafUserID = value;
					this.SendPropertyChanged("XafUserID");
					this.OnXafUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OAuthID", DbType="NVarChar(256)")]
		public string OAuthID
		{
			get
			{
				return this._OAuthID;
			}
			set
			{
				if ((this._OAuthID != value))
				{
					this.OnOAuthIDChanging(value);
					this.SendPropertyChanging();
					this._OAuthID = value;
					this.SendPropertyChanged("OAuthID");
					this.OnOAuthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortBiography", DbType="NVarChar(MAX)")]
		public string ShortBiography
		{
			get
			{
				return this._ShortBiography;
			}
			set
			{
				if ((this._ShortBiography != value))
				{
					this.OnShortBiographyChanging(value);
					this.SendPropertyChanging();
					this._ShortBiography = value;
					this.SendPropertyChanged("ShortBiography");
					this.OnShortBiographyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAntecedentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionAntecedentID
		{
			get
			{
				return this._VersionAntecedentID;
			}
			set
			{
				if ((this._VersionAntecedentID != value))
				{
					this.OnVersionAntecedentIDChanging(value);
					this.SendPropertyChanging();
					this._VersionAntecedentID = value;
					this.SendPropertyChanged("VersionAntecedentID");
					this.OnVersionAntecedentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCertainty", DbType="Int")]
		public System.Nullable<int> VersionCertainty
		{
			get
			{
				return this._VersionCertainty;
			}
			set
			{
				if ((this._VersionCertainty != value))
				{
					this.OnVersionCertaintyChanging(value);
					this.SendPropertyChanging();
					this._VersionCertainty = value;
					this.SendPropertyChanged("VersionCertainty");
					this.OnVersionCertaintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionWorkflowInstanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionWorkflowInstanceID
		{
			get
			{
				return this._VersionWorkflowInstanceID;
			}
			set
			{
				if ((this._VersionWorkflowInstanceID != value))
				{
					this.OnVersionWorkflowInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._VersionWorkflowInstanceID = value;
					this.SendPropertyChanged("VersionWorkflowInstanceID");
					this.OnVersionWorkflowInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionUpdatedBy
		{
			get
			{
				return this._VersionUpdatedBy;
			}
			set
			{
				if ((this._VersionUpdatedBy != value))
				{
					this.OnVersionUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdatedBy = value;
					this.SendPropertyChanged("VersionUpdatedBy");
					this.OnVersionUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionDeletedBy
		{
			get
			{
				return this._VersionDeletedBy;
			}
			set
			{
				if ((this._VersionDeletedBy != value))
				{
					this.OnVersionDeletedByChanging(value);
					this.SendPropertyChanging();
					this._VersionDeletedBy = value;
					this.SendPropertyChanged("VersionDeletedBy");
					this.OnVersionDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerContactID
		{
			get
			{
				return this._VersionOwnerContactID;
			}
			set
			{
				if ((this._VersionOwnerContactID != value))
				{
					this.OnVersionOwnerContactIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerContactID = value;
					this.SendPropertyChanged("VersionOwnerContactID");
					this.OnVersionOwnerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerCompanyID
		{
			get
			{
				return this._VersionOwnerCompanyID;
			}
			set
			{
				if ((this._VersionOwnerCompanyID != value))
				{
					this.OnVersionOwnerCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerCompanyID = value;
					this.SendPropertyChanged("VersionOwnerCompanyID");
					this.OnVersionOwnerCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this.OnVersionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdated = value;
					this.SendPropertyChanged("VersionUpdated");
					this.OnVersionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Experience", Storage="_Experiences", ThisKey="ContactID", OtherKey="ContactID")]
		public EntitySet<Experience> Experiences
		{
			get
			{
				return this._Experiences;
			}
			set
			{
				this._Experiences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Experiences(Experience entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Experiences(Experience entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_Experience")]
	public partial class Experience : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExperienceID;
		
		private System.Nullable<System.Guid> _CompanyID;
		
		private System.Nullable<System.Guid> _ProjectID;
		
		private System.Nullable<System.Guid> _ContactID;
		
		private System.Nullable<System.Guid> _LocationID;
		
		private System.Nullable<System.Guid> _WorkTypeID;
		
		private System.Nullable<System.Guid> _ProfessionID;
		
		private System.Nullable<System.Guid> _PositionID;
		
		private string _ClientAlias;
		
		private string _Division;
		
		private string _OfficeLocationAlias;
		
		private string _ExternalProjectCode;
		
		private System.Nullable<int> _EstimatedDurationDays;
		
		private System.Nullable<int> _UserExperienceLevel;
		
		private System.Nullable<int> _AssignedExperienceLevel;
		
		private System.Nullable<int> _NormalizedExperienceLevel;
		
		private System.DateTime _DateStart;
		
		private System.Nullable<System.DateTime> _DateFinished;
		
		private System.Nullable<System.DateTime> _Expiry;
		
		private string _Comment;
		
		private int _Version;
		
		private System.Nullable<System.Guid> _VersionAntecedentID;
		
		private System.Nullable<int> _VersionCertainty;
		
		private System.Nullable<System.Guid> _VersionWorkflowInstanceID;
		
		private System.Nullable<System.Guid> _VersionUpdatedBy;
		
		private System.Nullable<System.Guid> _VersionDeletedBy;
		
		private System.Nullable<System.Guid> _VersionOwnerContactID;
		
		private System.Nullable<System.Guid> _VersionOwnerCompanyID;
		
		private System.Nullable<System.DateTime> _VersionUpdated;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExperienceIDChanging(System.Guid value);
    partial void OnExperienceIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnCompanyIDChanged();
    partial void OnProjectIDChanging(System.Nullable<System.Guid> value);
    partial void OnProjectIDChanged();
    partial void OnContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnContactIDChanged();
    partial void OnLocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnLocationIDChanged();
    partial void OnWorkTypeIDChanging(System.Nullable<System.Guid> value);
    partial void OnWorkTypeIDChanged();
    partial void OnProfessionIDChanging(System.Nullable<System.Guid> value);
    partial void OnProfessionIDChanged();
    partial void OnPositionIDChanging(System.Nullable<System.Guid> value);
    partial void OnPositionIDChanged();
    partial void OnClientAliasChanging(string value);
    partial void OnClientAliasChanged();
    partial void OnDivisionChanging(string value);
    partial void OnDivisionChanged();
    partial void OnOfficeLocationAliasChanging(string value);
    partial void OnOfficeLocationAliasChanged();
    partial void OnExternalProjectCodeChanging(string value);
    partial void OnExternalProjectCodeChanged();
    partial void OnEstimatedDurationDaysChanging(System.Nullable<int> value);
    partial void OnEstimatedDurationDaysChanged();
    partial void OnUserExperienceLevelChanging(System.Nullable<int> value);
    partial void OnUserExperienceLevelChanged();
    partial void OnAssignedExperienceLevelChanging(System.Nullable<int> value);
    partial void OnAssignedExperienceLevelChanged();
    partial void OnNormalizedExperienceLevelChanging(System.Nullable<int> value);
    partial void OnNormalizedExperienceLevelChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateFinishedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinishedChanged();
    partial void OnExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnVersionAntecedentIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionAntecedentIDChanged();
    partial void OnVersionCertaintyChanging(System.Nullable<int> value);
    partial void OnVersionCertaintyChanged();
    partial void OnVersionWorkflowInstanceIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionWorkflowInstanceIDChanged();
    partial void OnVersionUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionUpdatedByChanged();
    partial void OnVersionDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnVersionDeletedByChanged();
    partial void OnVersionOwnerContactIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerContactIDChanged();
    partial void OnVersionOwnerCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnVersionOwnerCompanyIDChanged();
    partial void OnVersionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionUpdatedChanged();
    #endregion
		
		public Experience()
		{
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienceID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExperienceID
		{
			get
			{
				return this._ExperienceID;
			}
			set
			{
				if ((this._ExperienceID != value))
				{
					this.OnExperienceIDChanging(value);
					this.SendPropertyChanging();
					this._ExperienceID = value;
					this.SendPropertyChanged("ExperienceID");
					this.OnExperienceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTypeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WorkTypeID
		{
			get
			{
				return this._WorkTypeID;
			}
			set
			{
				if ((this._WorkTypeID != value))
				{
					this.OnWorkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._WorkTypeID = value;
					this.SendPropertyChanged("WorkTypeID");
					this.OnWorkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProfessionID
		{
			get
			{
				return this._ProfessionID;
			}
			set
			{
				if ((this._ProfessionID != value))
				{
					this.OnProfessionIDChanging(value);
					this.SendPropertyChanging();
					this._ProfessionID = value;
					this.SendPropertyChanged("ProfessionID");
					this.OnProfessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAlias", DbType="NVarChar(50)")]
		public string ClientAlias
		{
			get
			{
				return this._ClientAlias;
			}
			set
			{
				if ((this._ClientAlias != value))
				{
					this.OnClientAliasChanging(value);
					this.SendPropertyChanging();
					this._ClientAlias = value;
					this.SendPropertyChanged("ClientAlias");
					this.OnClientAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="NVarChar(50)")]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this.OnDivisionChanging(value);
					this.SendPropertyChanging();
					this._Division = value;
					this.SendPropertyChanged("Division");
					this.OnDivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeLocationAlias", DbType="NVarChar(50)")]
		public string OfficeLocationAlias
		{
			get
			{
				return this._OfficeLocationAlias;
			}
			set
			{
				if ((this._OfficeLocationAlias != value))
				{
					this.OnOfficeLocationAliasChanging(value);
					this.SendPropertyChanging();
					this._OfficeLocationAlias = value;
					this.SendPropertyChanged("OfficeLocationAlias");
					this.OnOfficeLocationAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalProjectCode", DbType="NVarChar(50)")]
		public string ExternalProjectCode
		{
			get
			{
				return this._ExternalProjectCode;
			}
			set
			{
				if ((this._ExternalProjectCode != value))
				{
					this.OnExternalProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ExternalProjectCode = value;
					this.SendPropertyChanged("ExternalProjectCode");
					this.OnExternalProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedDurationDays", DbType="Int")]
		public System.Nullable<int> EstimatedDurationDays
		{
			get
			{
				return this._EstimatedDurationDays;
			}
			set
			{
				if ((this._EstimatedDurationDays != value))
				{
					this.OnEstimatedDurationDaysChanging(value);
					this.SendPropertyChanging();
					this._EstimatedDurationDays = value;
					this.SendPropertyChanged("EstimatedDurationDays");
					this.OnEstimatedDurationDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserExperienceLevel", DbType="Int")]
		public System.Nullable<int> UserExperienceLevel
		{
			get
			{
				return this._UserExperienceLevel;
			}
			set
			{
				if ((this._UserExperienceLevel != value))
				{
					this.OnUserExperienceLevelChanging(value);
					this.SendPropertyChanging();
					this._UserExperienceLevel = value;
					this.SendPropertyChanged("UserExperienceLevel");
					this.OnUserExperienceLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedExperienceLevel", DbType="Int")]
		public System.Nullable<int> AssignedExperienceLevel
		{
			get
			{
				return this._AssignedExperienceLevel;
			}
			set
			{
				if ((this._AssignedExperienceLevel != value))
				{
					this.OnAssignedExperienceLevelChanging(value);
					this.SendPropertyChanging();
					this._AssignedExperienceLevel = value;
					this.SendPropertyChanged("AssignedExperienceLevel");
					this.OnAssignedExperienceLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalizedExperienceLevel", DbType="Int")]
		public System.Nullable<int> NormalizedExperienceLevel
		{
			get
			{
				return this._NormalizedExperienceLevel;
			}
			set
			{
				if ((this._NormalizedExperienceLevel != value))
				{
					this.OnNormalizedExperienceLevelChanging(value);
					this.SendPropertyChanging();
					this._NormalizedExperienceLevel = value;
					this.SendPropertyChanged("NormalizedExperienceLevel");
					this.OnNormalizedExperienceLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="Date NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFinished", DbType="Date")]
		public System.Nullable<System.DateTime> DateFinished
		{
			get
			{
				return this._DateFinished;
			}
			set
			{
				if ((this._DateFinished != value))
				{
					this.OnDateFinishedChanging(value);
					this.SendPropertyChanging();
					this._DateFinished = value;
					this.SendPropertyChanged("DateFinished");
					this.OnDateFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiry", DbType="Date")]
		public System.Nullable<System.DateTime> Expiry
		{
			get
			{
				return this._Expiry;
			}
			set
			{
				if ((this._Expiry != value))
				{
					this.OnExpiryChanging(value);
					this.SendPropertyChanging();
					this._Expiry = value;
					this.SendPropertyChanged("Expiry");
					this.OnExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAntecedentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionAntecedentID
		{
			get
			{
				return this._VersionAntecedentID;
			}
			set
			{
				if ((this._VersionAntecedentID != value))
				{
					this.OnVersionAntecedentIDChanging(value);
					this.SendPropertyChanging();
					this._VersionAntecedentID = value;
					this.SendPropertyChanged("VersionAntecedentID");
					this.OnVersionAntecedentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCertainty", DbType="Int")]
		public System.Nullable<int> VersionCertainty
		{
			get
			{
				return this._VersionCertainty;
			}
			set
			{
				if ((this._VersionCertainty != value))
				{
					this.OnVersionCertaintyChanging(value);
					this.SendPropertyChanging();
					this._VersionCertainty = value;
					this.SendPropertyChanged("VersionCertainty");
					this.OnVersionCertaintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionWorkflowInstanceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionWorkflowInstanceID
		{
			get
			{
				return this._VersionWorkflowInstanceID;
			}
			set
			{
				if ((this._VersionWorkflowInstanceID != value))
				{
					this.OnVersionWorkflowInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._VersionWorkflowInstanceID = value;
					this.SendPropertyChanged("VersionWorkflowInstanceID");
					this.OnVersionWorkflowInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionUpdatedBy
		{
			get
			{
				return this._VersionUpdatedBy;
			}
			set
			{
				if ((this._VersionUpdatedBy != value))
				{
					this.OnVersionUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdatedBy = value;
					this.SendPropertyChanged("VersionUpdatedBy");
					this.OnVersionUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionDeletedBy
		{
			get
			{
				return this._VersionDeletedBy;
			}
			set
			{
				if ((this._VersionDeletedBy != value))
				{
					this.OnVersionDeletedByChanging(value);
					this.SendPropertyChanging();
					this._VersionDeletedBy = value;
					this.SendPropertyChanged("VersionDeletedBy");
					this.OnVersionDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerContactID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerContactID
		{
			get
			{
				return this._VersionOwnerContactID;
			}
			set
			{
				if ((this._VersionOwnerContactID != value))
				{
					this.OnVersionOwnerContactIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerContactID = value;
					this.SendPropertyChanged("VersionOwnerContactID");
					this.OnVersionOwnerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionOwnerCompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VersionOwnerCompanyID
		{
			get
			{
				return this._VersionOwnerCompanyID;
			}
			set
			{
				if ((this._VersionOwnerCompanyID != value))
				{
					this.OnVersionOwnerCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VersionOwnerCompanyID = value;
					this.SendPropertyChanged("VersionOwnerCompanyID");
					this.OnVersionOwnerCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionUpdated
		{
			get
			{
				return this._VersionUpdated;
			}
			set
			{
				if ((this._VersionUpdated != value))
				{
					this.OnVersionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VersionUpdated = value;
					this.SendPropertyChanged("VersionUpdated");
					this.OnVersionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Experience", Storage="_Contact", ThisKey="ContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Experiences.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Experiences.Add(this);
						this._ContactID = value.ContactID;
					}
					else
					{
						this._ContactID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
