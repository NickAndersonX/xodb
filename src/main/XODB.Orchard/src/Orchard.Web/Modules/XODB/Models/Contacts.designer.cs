//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Contacts", "FK__aspnet_Ro__Appli__2077C861", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XODB.Models.Application), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.Role), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK__aspnet_Us__Appli__758D6A5C", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XODB.Models.Application), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.User), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_Company_X_Person", "X_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Contact), "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.Company), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_CompanyAddress_X_Company", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XODB.Models.Company), "X_CompanyAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.CompanyAddress), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_CompanyRelation_X_Company", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XODB.Models.Company), "X_CompanyRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.CompanyRelation), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_CompanyRelation_X_Company1", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XODB.Models.Company), "X_CompanyRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.CompanyRelation), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_Experience_X_Company", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Company), "X_Experience", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.Experience), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_SecurityBlacklist_X_Company", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Company), "X_SecurityBlacklist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.SecurityBlacklist), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_SecurityBlacklist_X_Company1", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Company), "X_SecurityBlacklist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.SecurityBlacklist), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_SecurityWhitelist_X_Company", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Company), "X_SecurityWhitelist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.SecurityWhitelist), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_SecurityWhitelist_X_Company1", "X_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Company), "X_SecurityWhitelist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.SecurityWhitelist), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_ContactAddress_X_Contact", "X_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Contact), "X_ContactAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.ContactAddress), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_Experience_X_Contact", "X_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Contact), "X_Experience", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.Experience), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_SecurityBlacklist_X_Contact", "X_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Contact), "X_SecurityBlacklist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.SecurityBlacklist), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_SecurityWhitelist_X_Contact", "X_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Contact), "X_SecurityWhitelist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.SecurityWhitelist), true)]
[assembly: EdmRelationshipAttribute("Contacts", "FK_X_SecurityWhitelist_X_Contact1", "X_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XODB.Models.Contact), "X_SecurityWhitelist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.SecurityWhitelist), true)]
[assembly: EdmRelationshipAttribute("Contacts", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.Role), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XODB.Models.User))]

#endregion

namespace XODB.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ContactsContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ContactsContainer object using the connection string found in the 'ContactsContainer' section of the application configuration file.
        /// </summary>
        public ContactsContainer() : base("name=ContactsContainer", "ContactsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ContactsContainer object.
        /// </summary>
        public ContactsContainer(string connectionString) : base(connectionString, "ContactsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ContactsContainer object.
        /// </summary>
        public ContactsContainer(EntityConnection connection) : base(connection, "ContactsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyAddress> CompanyAddresses
        {
            get
            {
                if ((_CompanyAddresses == null))
                {
                    _CompanyAddresses = base.CreateObjectSet<CompanyAddress>("CompanyAddresses");
                }
                return _CompanyAddresses;
            }
        }
        private ObjectSet<CompanyAddress> _CompanyAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyRelation> CompanyRelations
        {
            get
            {
                if ((_CompanyRelations == null))
                {
                    _CompanyRelations = base.CreateObjectSet<CompanyRelation>("CompanyRelations");
                }
                return _CompanyRelations;
            }
        }
        private ObjectSet<CompanyRelation> _CompanyRelations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactAddress> ContactAddresses
        {
            get
            {
                if ((_ContactAddresses == null))
                {
                    _ContactAddresses = base.CreateObjectSet<ContactAddress>("ContactAddresses");
                }
                return _ContactAddresses;
            }
        }
        private ObjectSet<ContactAddress> _ContactAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Experience> Experiences
        {
            get
            {
                if ((_Experiences == null))
                {
                    _Experiences = base.CreateObjectSet<Experience>("Experiences");
                }
                return _Experiences;
            }
        }
        private ObjectSet<Experience> _Experiences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityBlacklist> SecurityBlacklists
        {
            get
            {
                if ((_SecurityBlacklists == null))
                {
                    _SecurityBlacklists = base.CreateObjectSet<SecurityBlacklist>("SecurityBlacklists");
                }
                return _SecurityBlacklists;
            }
        }
        private ObjectSet<SecurityBlacklist> _SecurityBlacklists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityWhitelist> SecurityWhitelists
        {
            get
            {
                if ((_SecurityWhitelists == null))
                {
                    _SecurityWhitelists = base.CreateObjectSet<SecurityWhitelist>("SecurityWhitelists");
                }
                return _SecurityWhitelists;
            }
        }
        private ObjectSet<SecurityWhitelist> _SecurityWhitelists;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyAddresses(CompanyAddress companyAddress)
        {
            base.AddObject("CompanyAddresses", companyAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyRelations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyRelations(CompanyRelation companyRelation)
        {
            base.AddObject("CompanyRelations", companyRelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactAddresses(ContactAddress contactAddress)
        {
            base.AddObject("ContactAddresses", contactAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Experiences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExperiences(Experience experience)
        {
            base.AddObject("Experiences", experience);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityBlacklists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityBlacklists(SecurityBlacklist securityBlacklist)
        {
            base.AddObject("SecurityBlacklists", securityBlacklist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityWhitelists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityWhitelists(SecurityWhitelist securityWhitelist)
        {
            base.AddObject("SecurityWhitelists", securityWhitelist);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static Application CreateApplication(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            Application application = new Application();
            application.ApplicationName = applicationName;
            application.LoweredApplicationName = loweredApplicationName;
            application.ApplicationId = applicationId;
            return application;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false, "ApplicationName");
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false, "LoweredApplicationName");
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value, "ApplicationId");
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK__aspnet_Ro__Appli__2077C861", "aspnet_Roles")]
        public EntityCollection<Role> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("Contacts.FK__aspnet_Ro__Appli__2077C861", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("Contacts.FK__aspnet_Ro__Appli__2077C861", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK__aspnet_Us__Appli__758D6A5C", "aspnet_Users")]
        public EntityCollection<User> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Contacts.FK__aspnet_Us__Appli__758D6A5C", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Contacts.FK__aspnet_Us__Appli__758D6A5C", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Company CreateCompany(global::System.Guid companyID, global::System.Int32 version)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.Version = version;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PrimaryContactID
        {
            get
            {
                return _PrimaryContactID;
            }
            set
            {
                OnPrimaryContactIDChanging(value);
                ReportPropertyChanging("PrimaryContactID");
                _PrimaryContactID = StructuralObject.SetValidValue(value, "PrimaryContactID");
                ReportPropertyChanged("PrimaryContactID");
                OnPrimaryContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PrimaryContactID;
        partial void OnPrimaryContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnPrimaryContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_Company_X_Person", "X_Contact")]
        public Contact X_Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_Company_X_Person", "X_Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_Company_X_Person", "X_Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> X_ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_Company_X_Person", "X_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Contacts.FK_X_Company_X_Person", "X_Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_CompanyAddress_X_Company", "X_CompanyAddress")]
        public EntityCollection<CompanyAddress> X_CompanyAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyAddress>("Contacts.FK_X_CompanyAddress_X_Company", "X_CompanyAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyAddress>("Contacts.FK_X_CompanyAddress_X_Company", "X_CompanyAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_CompanyRelation_X_Company", "X_CompanyRelation")]
        public EntityCollection<CompanyRelation> X_CompanyRelation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRelation>("Contacts.FK_X_CompanyRelation_X_Company", "X_CompanyRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRelation>("Contacts.FK_X_CompanyRelation_X_Company", "X_CompanyRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_CompanyRelation_X_Company1", "X_CompanyRelation")]
        public EntityCollection<CompanyRelation> X_CompanyRelation1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRelation>("Contacts.FK_X_CompanyRelation_X_Company1", "X_CompanyRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRelation>("Contacts.FK_X_CompanyRelation_X_Company1", "X_CompanyRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_Experience_X_Company", "X_Experience")]
        public EntityCollection<Experience> X_Experience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Experience>("Contacts.FK_X_Experience_X_Company", "X_Experience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Experience>("Contacts.FK_X_Experience_X_Company", "X_Experience", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityBlacklist_X_Company", "X_SecurityBlacklist")]
        public EntityCollection<SecurityBlacklist> X_SecurityBlacklist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityBlacklist>("Contacts.FK_X_SecurityBlacklist_X_Company", "X_SecurityBlacklist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityBlacklist>("Contacts.FK_X_SecurityBlacklist_X_Company", "X_SecurityBlacklist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityBlacklist_X_Company1", "X_SecurityBlacklist")]
        public EntityCollection<SecurityBlacklist> X_SecurityBlacklist1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityBlacklist>("Contacts.FK_X_SecurityBlacklist_X_Company1", "X_SecurityBlacklist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityBlacklist>("Contacts.FK_X_SecurityBlacklist_X_Company1", "X_SecurityBlacklist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Company", "X_SecurityWhitelist")]
        public EntityCollection<SecurityWhitelist> X_SecurityWhitelist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Company", "X_SecurityWhitelist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Company", "X_SecurityWhitelist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Company1", "X_SecurityWhitelist")]
        public EntityCollection<SecurityWhitelist> X_SecurityWhitelist1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Company1", "X_SecurityWhitelist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Company1", "X_SecurityWhitelist", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="CompanyAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyAddress object.
        /// </summary>
        /// <param name="companyAddressID">Initial value of the CompanyAddressID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static CompanyAddress CreateCompanyAddress(global::System.Guid companyAddressID, global::System.Guid companyID, global::System.Guid addressID, global::System.Int32 version)
        {
            CompanyAddress companyAddress = new CompanyAddress();
            companyAddress.CompanyAddressID = companyAddressID;
            companyAddress.CompanyID = companyID;
            companyAddress.AddressID = addressID;
            companyAddress.Version = version;
            return companyAddress;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyAddressID
        {
            get
            {
                return _CompanyAddressID;
            }
            set
            {
                if (_CompanyAddressID != value)
                {
                    OnCompanyAddressIDChanging(value);
                    ReportPropertyChanging("CompanyAddressID");
                    _CompanyAddressID = StructuralObject.SetValidValue(value, "CompanyAddressID");
                    ReportPropertyChanged("CompanyAddressID");
                    OnCompanyAddressIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyAddressID;
        partial void OnCompanyAddressIDChanging(global::System.Guid value);
        partial void OnCompanyAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value, "AddressID");
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.Guid _AddressID;
        partial void OnAddressIDChanging(global::System.Guid value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_CompanyAddress_X_Company", "X_Company")]
        public Company X_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyAddress_X_Company", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyAddress_X_Company", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyAddress_X_Company", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_CompanyAddress_X_Company", "X_Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="CompanyRelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyRelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyRelation object.
        /// </summary>
        /// <param name="companyRelationID">Initial value of the CompanyRelationID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="parentCompanyID">Initial value of the ParentCompanyID property.</param>
        /// <param name="isChildVisible">Initial value of the IsChildVisible property.</param>
        /// <param name="isParentVisible">Initial value of the IsParentVisible property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static CompanyRelation CreateCompanyRelation(global::System.Guid companyRelationID, global::System.Guid companyID, global::System.Guid parentCompanyID, global::System.Boolean isChildVisible, global::System.Boolean isParentVisible, global::System.Int32 version)
        {
            CompanyRelation companyRelation = new CompanyRelation();
            companyRelation.CompanyRelationID = companyRelationID;
            companyRelation.CompanyID = companyID;
            companyRelation.ParentCompanyID = parentCompanyID;
            companyRelation.IsChildVisible = isChildVisible;
            companyRelation.IsParentVisible = isParentVisible;
            companyRelation.Version = version;
            return companyRelation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyRelationID
        {
            get
            {
                return _CompanyRelationID;
            }
            set
            {
                if (_CompanyRelationID != value)
                {
                    OnCompanyRelationIDChanging(value);
                    ReportPropertyChanging("CompanyRelationID");
                    _CompanyRelationID = StructuralObject.SetValidValue(value, "CompanyRelationID");
                    ReportPropertyChanged("CompanyRelationID");
                    OnCompanyRelationIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyRelationID;
        partial void OnCompanyRelationIDChanging(global::System.Guid value);
        partial void OnCompanyRelationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParentCompanyID
        {
            get
            {
                return _ParentCompanyID;
            }
            set
            {
                OnParentCompanyIDChanging(value);
                ReportPropertyChanging("ParentCompanyID");
                _ParentCompanyID = StructuralObject.SetValidValue(value, "ParentCompanyID");
                ReportPropertyChanged("ParentCompanyID");
                OnParentCompanyIDChanged();
            }
        }
        private global::System.Guid _ParentCompanyID;
        partial void OnParentCompanyIDChanging(global::System.Guid value);
        partial void OnParentCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsChildVisible
        {
            get
            {
                return _IsChildVisible;
            }
            set
            {
                OnIsChildVisibleChanging(value);
                ReportPropertyChanging("IsChildVisible");
                _IsChildVisible = StructuralObject.SetValidValue(value, "IsChildVisible");
                ReportPropertyChanged("IsChildVisible");
                OnIsChildVisibleChanged();
            }
        }
        private global::System.Boolean _IsChildVisible;
        partial void OnIsChildVisibleChanging(global::System.Boolean value);
        partial void OnIsChildVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsParentVisible
        {
            get
            {
                return _IsParentVisible;
            }
            set
            {
                OnIsParentVisibleChanging(value);
                ReportPropertyChanging("IsParentVisible");
                _IsParentVisible = StructuralObject.SetValidValue(value, "IsParentVisible");
                ReportPropertyChanged("IsParentVisible");
                OnIsParentVisibleChanged();
            }
        }
        private global::System.Boolean _IsParentVisible;
        partial void OnIsParentVisibleChanging(global::System.Boolean value);
        partial void OnIsParentVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_CompanyRelation_X_Company", "X_Company")]
        public Company X_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company", "X_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_CompanyRelation_X_Company1", "X_Company")]
        public Company X_Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company1", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company1", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company1", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_CompanyRelation_X_Company1", "X_Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="contactName">Initial value of the ContactName property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="firstname">Initial value of the Firstname property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Contact CreateContact(global::System.Guid contactID, global::System.String contactName, global::System.String surname, global::System.String firstname, global::System.Int32 version)
        {
            Contact contact = new Contact();
            contact.ContactID = contactID;
            contact.ContactName = contactName;
            contact.Surname = surname;
            contact.Firstname = firstname;
            contact.Version = version;
            return contact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Guid _ContactID;
        partial void OnContactIDChanging(global::System.Guid value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, false, "ContactName");
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false, "Firstname");
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value, true, "Hash");
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.String _Hash;
        partial void OnHashChanging(global::System.String value);
        partial void OnHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultEmail
        {
            get
            {
                return _DefaultEmail;
            }
            set
            {
                OnDefaultEmailChanging(value);
                ReportPropertyChanging("DefaultEmail");
                _DefaultEmail = StructuralObject.SetValidValue(value, true, "DefaultEmail");
                ReportPropertyChanged("DefaultEmail");
                OnDefaultEmailChanged();
            }
        }
        private global::System.String _DefaultEmail;
        partial void OnDefaultEmailChanging(global::System.String value);
        partial void OnDefaultEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleNames
        {
            get
            {
                return _MiddleNames;
            }
            set
            {
                OnMiddleNamesChanging(value);
                ReportPropertyChanging("MiddleNames");
                _MiddleNames = StructuralObject.SetValidValue(value, true, "MiddleNames");
                ReportPropertyChanged("MiddleNames");
                OnMiddleNamesChanged();
            }
        }
        private global::System.String _MiddleNames;
        partial void OnMiddleNamesChanging(global::System.String value);
        partial void OnMiddleNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Initials
        {
            get
            {
                return _Initials;
            }
            set
            {
                OnInitialsChanging(value);
                ReportPropertyChanging("Initials");
                _Initials = StructuralObject.SetValidValue(value, true, "Initials");
                ReportPropertyChanged("Initials");
                OnInitialsChanged();
            }
        }
        private global::System.String _Initials;
        partial void OnInitialsChanging(global::System.String value);
        partial void OnInitialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value, "DOB");
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthCountryID
        {
            get
            {
                return _BirthCountryID;
            }
            set
            {
                OnBirthCountryIDChanging(value);
                ReportPropertyChanging("BirthCountryID");
                _BirthCountryID = StructuralObject.SetValidValue(value, true, "BirthCountryID");
                ReportPropertyChanged("BirthCountryID");
                OnBirthCountryIDChanged();
            }
        }
        private global::System.String _BirthCountryID;
        partial void OnBirthCountryIDChanging(global::System.String value);
        partial void OnBirthCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthCity
        {
            get
            {
                return _BirthCity;
            }
            set
            {
                OnBirthCityChanging(value);
                ReportPropertyChanging("BirthCity");
                _BirthCity = StructuralObject.SetValidValue(value, true, "BirthCity");
                ReportPropertyChanged("BirthCity");
                OnBirthCityChanged();
            }
        }
        private global::System.String _BirthCity;
        partial void OnBirthCityChanging(global::System.String value);
        partial void OnBirthCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AspNetUserID
        {
            get
            {
                return _AspNetUserID;
            }
            set
            {
                OnAspNetUserIDChanging(value);
                ReportPropertyChanging("AspNetUserID");
                _AspNetUserID = StructuralObject.SetValidValue(value, "AspNetUserID");
                ReportPropertyChanged("AspNetUserID");
                OnAspNetUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AspNetUserID;
        partial void OnAspNetUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnAspNetUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> XafUserID
        {
            get
            {
                return _XafUserID;
            }
            set
            {
                OnXafUserIDChanging(value);
                ReportPropertyChanging("XafUserID");
                _XafUserID = StructuralObject.SetValidValue(value, "XafUserID");
                ReportPropertyChanged("XafUserID");
                OnXafUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _XafUserID;
        partial void OnXafUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnXafUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OAuthID
        {
            get
            {
                return _OAuthID;
            }
            set
            {
                OnOAuthIDChanging(value);
                ReportPropertyChanging("OAuthID");
                _OAuthID = StructuralObject.SetValidValue(value, true, "OAuthID");
                ReportPropertyChanged("OAuthID");
                OnOAuthIDChanged();
            }
        }
        private global::System.String _OAuthID;
        partial void OnOAuthIDChanging(global::System.String value);
        partial void OnOAuthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortBiography
        {
            get
            {
                return _ShortBiography;
            }
            set
            {
                OnShortBiographyChanging(value);
                ReportPropertyChanging("ShortBiography");
                _ShortBiography = StructuralObject.SetValidValue(value, true, "ShortBiography");
                ReportPropertyChanged("ShortBiography");
                OnShortBiographyChanged();
            }
        }
        private global::System.String _ShortBiography;
        partial void OnShortBiographyChanging(global::System.String value);
        partial void OnShortBiographyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_Company_X_Person", "X_Company")]
        public EntityCollection<Company> X_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("Contacts.FK_X_Company_X_Person", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("Contacts.FK_X_Company_X_Person", "X_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_ContactAddress_X_Contact", "X_ContactAddress")]
        public EntityCollection<ContactAddress> X_ContactAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactAddress>("Contacts.FK_X_ContactAddress_X_Contact", "X_ContactAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactAddress>("Contacts.FK_X_ContactAddress_X_Contact", "X_ContactAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_Experience_X_Contact", "X_Experience")]
        public EntityCollection<Experience> X_Experience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Experience>("Contacts.FK_X_Experience_X_Contact", "X_Experience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Experience>("Contacts.FK_X_Experience_X_Contact", "X_Experience", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityBlacklist_X_Contact", "X_SecurityBlacklist")]
        public EntityCollection<SecurityBlacklist> X_SecurityBlacklist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityBlacklist>("Contacts.FK_X_SecurityBlacklist_X_Contact", "X_SecurityBlacklist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityBlacklist>("Contacts.FK_X_SecurityBlacklist_X_Contact", "X_SecurityBlacklist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Contact", "X_SecurityWhitelist")]
        public EntityCollection<SecurityWhitelist> X_SecurityWhitelist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Contact", "X_SecurityWhitelist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Contact", "X_SecurityWhitelist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Contact1", "X_SecurityWhitelist")]
        public EntityCollection<SecurityWhitelist> X_SecurityWhitelist1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Contact1", "X_SecurityWhitelist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityWhitelist>("Contacts.FK_X_SecurityWhitelist_X_Contact1", "X_SecurityWhitelist", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="ContactAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactAddress object.
        /// </summary>
        /// <param name="contactAddressID">Initial value of the ContactAddressID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ContactAddress CreateContactAddress(global::System.Guid contactAddressID, global::System.Int32 version)
        {
            ContactAddress contactAddress = new ContactAddress();
            contactAddress.ContactAddressID = contactAddressID;
            contactAddress.Version = version;
            return contactAddress;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactAddressID
        {
            get
            {
                return _ContactAddressID;
            }
            set
            {
                if (_ContactAddressID != value)
                {
                    OnContactAddressIDChanging(value);
                    ReportPropertyChanging("ContactAddressID");
                    _ContactAddressID = StructuralObject.SetValidValue(value, "ContactAddressID");
                    ReportPropertyChanged("ContactAddressID");
                    OnContactAddressIDChanged();
                }
            }
        }
        private global::System.Guid _ContactAddressID;
        partial void OnContactAddressIDChanging(global::System.Guid value);
        partial void OnContactAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value, "AddressID");
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AddressID;
        partial void OnAddressIDChanging(Nullable<global::System.Guid> value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_ContactAddress_X_Contact", "X_Contact")]
        public Contact X_Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_ContactAddress_X_Contact", "X_Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_ContactAddress_X_Contact", "X_Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> X_ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_ContactAddress_X_Contact", "X_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Contacts.FK_X_ContactAddress_X_Contact", "X_Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="Experience")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Experience : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Experience object.
        /// </summary>
        /// <param name="experienceID">Initial value of the ExperienceID property.</param>
        /// <param name="dateStart">Initial value of the DateStart property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Experience CreateExperience(global::System.Guid experienceID, global::System.DateTime dateStart, global::System.Int32 version)
        {
            Experience experience = new Experience();
            experience.ExperienceID = experienceID;
            experience.DateStart = dateStart;
            experience.Version = version;
            return experience;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperienceID
        {
            get
            {
                return _ExperienceID;
            }
            set
            {
                if (_ExperienceID != value)
                {
                    OnExperienceIDChanging(value);
                    ReportPropertyChanging("ExperienceID");
                    _ExperienceID = StructuralObject.SetValidValue(value, "ExperienceID");
                    ReportPropertyChanged("ExperienceID");
                    OnExperienceIDChanged();
                }
            }
        }
        private global::System.Guid _ExperienceID;
        partial void OnExperienceIDChanging(global::System.Guid value);
        partial void OnExperienceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExperienceName
        {
            get
            {
                return _ExperienceName;
            }
            set
            {
                OnExperienceNameChanging(value);
                ReportPropertyChanging("ExperienceName");
                _ExperienceName = StructuralObject.SetValidValue(value, true, "ExperienceName");
                ReportPropertyChanged("ExperienceName");
                OnExperienceNameChanged();
            }
        }
        private global::System.String _ExperienceName;
        partial void OnExperienceNameChanging(global::System.String value);
        partial void OnExperienceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Guid> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value, "LocationID");
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationID;
        partial void OnLocationIDChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                OnProvinceIDChanging(value);
                ReportPropertyChanging("ProvinceID");
                _ProvinceID = StructuralObject.SetValidValue(value, "ProvinceID");
                ReportPropertyChanged("ProvinceID");
                OnProvinceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProvinceID;
        partial void OnProvinceIDChanging(Nullable<global::System.Guid> value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> WorkTypeID
        {
            get
            {
                return _WorkTypeID;
            }
            set
            {
                OnWorkTypeIDChanging(value);
                ReportPropertyChanging("WorkTypeID");
                _WorkTypeID = StructuralObject.SetValidValue(value, "WorkTypeID");
                ReportPropertyChanged("WorkTypeID");
                OnWorkTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _WorkTypeID;
        partial void OnWorkTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnWorkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProfessionID
        {
            get
            {
                return _ProfessionID;
            }
            set
            {
                OnProfessionIDChanging(value);
                ReportPropertyChanging("ProfessionID");
                _ProfessionID = StructuralObject.SetValidValue(value, "ProfessionID");
                ReportPropertyChanged("ProfessionID");
                OnProfessionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProfessionID;
        partial void OnProfessionIDChanging(Nullable<global::System.Guid> value);
        partial void OnProfessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                OnPositionIDChanging(value);
                ReportPropertyChanging("PositionID");
                _PositionID = StructuralObject.SetValidValue(value, "PositionID");
                ReportPropertyChanged("PositionID");
                OnPositionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PositionID;
        partial void OnPositionIDChanging(Nullable<global::System.Guid> value);
        partial void OnPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientAlias
        {
            get
            {
                return _ClientAlias;
            }
            set
            {
                OnClientAliasChanging(value);
                ReportPropertyChanging("ClientAlias");
                _ClientAlias = StructuralObject.SetValidValue(value, true, "ClientAlias");
                ReportPropertyChanged("ClientAlias");
                OnClientAliasChanged();
            }
        }
        private global::System.String _ClientAlias;
        partial void OnClientAliasChanging(global::System.String value);
        partial void OnClientAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Division
        {
            get
            {
                return _Division;
            }
            set
            {
                OnDivisionChanging(value);
                ReportPropertyChanging("Division");
                _Division = StructuralObject.SetValidValue(value, true, "Division");
                ReportPropertyChanged("Division");
                OnDivisionChanged();
            }
        }
        private global::System.String _Division;
        partial void OnDivisionChanging(global::System.String value);
        partial void OnDivisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficeLocationAlias
        {
            get
            {
                return _OfficeLocationAlias;
            }
            set
            {
                OnOfficeLocationAliasChanging(value);
                ReportPropertyChanging("OfficeLocationAlias");
                _OfficeLocationAlias = StructuralObject.SetValidValue(value, true, "OfficeLocationAlias");
                ReportPropertyChanged("OfficeLocationAlias");
                OnOfficeLocationAliasChanged();
            }
        }
        private global::System.String _OfficeLocationAlias;
        partial void OnOfficeLocationAliasChanging(global::System.String value);
        partial void OnOfficeLocationAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalProjectCode
        {
            get
            {
                return _ExternalProjectCode;
            }
            set
            {
                OnExternalProjectCodeChanging(value);
                ReportPropertyChanging("ExternalProjectCode");
                _ExternalProjectCode = StructuralObject.SetValidValue(value, true, "ExternalProjectCode");
                ReportPropertyChanged("ExternalProjectCode");
                OnExternalProjectCodeChanged();
            }
        }
        private global::System.String _ExternalProjectCode;
        partial void OnExternalProjectCodeChanging(global::System.String value);
        partial void OnExternalProjectCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EstimatedDurationDays
        {
            get
            {
                return _EstimatedDurationDays;
            }
            set
            {
                OnEstimatedDurationDaysChanging(value);
                ReportPropertyChanging("EstimatedDurationDays");
                _EstimatedDurationDays = StructuralObject.SetValidValue(value, "EstimatedDurationDays");
                ReportPropertyChanged("EstimatedDurationDays");
                OnEstimatedDurationDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _EstimatedDurationDays;
        partial void OnEstimatedDurationDaysChanging(Nullable<global::System.Int32> value);
        partial void OnEstimatedDurationDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserExperienceLevel
        {
            get
            {
                return _UserExperienceLevel;
            }
            set
            {
                OnUserExperienceLevelChanging(value);
                ReportPropertyChanging("UserExperienceLevel");
                _UserExperienceLevel = StructuralObject.SetValidValue(value, "UserExperienceLevel");
                ReportPropertyChanged("UserExperienceLevel");
                OnUserExperienceLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _UserExperienceLevel;
        partial void OnUserExperienceLevelChanging(Nullable<global::System.Int32> value);
        partial void OnUserExperienceLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignedExperienceLevel
        {
            get
            {
                return _AssignedExperienceLevel;
            }
            set
            {
                OnAssignedExperienceLevelChanging(value);
                ReportPropertyChanging("AssignedExperienceLevel");
                _AssignedExperienceLevel = StructuralObject.SetValidValue(value, "AssignedExperienceLevel");
                ReportPropertyChanged("AssignedExperienceLevel");
                OnAssignedExperienceLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _AssignedExperienceLevel;
        partial void OnAssignedExperienceLevelChanging(Nullable<global::System.Int32> value);
        partial void OnAssignedExperienceLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NormalizedExperienceLevel
        {
            get
            {
                return _NormalizedExperienceLevel;
            }
            set
            {
                OnNormalizedExperienceLevelChanging(value);
                ReportPropertyChanging("NormalizedExperienceLevel");
                _NormalizedExperienceLevel = StructuralObject.SetValidValue(value, "NormalizedExperienceLevel");
                ReportPropertyChanged("NormalizedExperienceLevel");
                OnNormalizedExperienceLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _NormalizedExperienceLevel;
        partial void OnNormalizedExperienceLevelChanging(Nullable<global::System.Int32> value);
        partial void OnNormalizedExperienceLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value, "DateStart");
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private global::System.DateTime _DateStart;
        partial void OnDateStartChanging(global::System.DateTime value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFinished
        {
            get
            {
                return _DateFinished;
            }
            set
            {
                OnDateFinishedChanging(value);
                ReportPropertyChanging("DateFinished");
                _DateFinished = StructuralObject.SetValidValue(value, "DateFinished");
                ReportPropertyChanged("DateFinished");
                OnDateFinishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFinished;
        partial void OnDateFinishedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Expiry
        {
            get
            {
                return _Expiry;
            }
            set
            {
                OnExpiryChanging(value);
                ReportPropertyChanging("Expiry");
                _Expiry = StructuralObject.SetValidValue(value, "Expiry");
                ReportPropertyChanged("Expiry");
                OnExpiryChanged();
            }
        }
        private Nullable<global::System.DateTime> _Expiry;
        partial void OnExpiryChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HourlyRate
        {
            get
            {
                return _HourlyRate;
            }
            set
            {
                OnHourlyRateChanging(value);
                ReportPropertyChanging("HourlyRate");
                _HourlyRate = StructuralObject.SetValidValue(value, "HourlyRate");
                ReportPropertyChanged("HourlyRate");
                OnHourlyRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _HourlyRate;
        partial void OnHourlyRateChanging(Nullable<global::System.Decimal> value);
        partial void OnHourlyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DailyRate
        {
            get
            {
                return _DailyRate;
            }
            set
            {
                OnDailyRateChanging(value);
                ReportPropertyChanging("DailyRate");
                _DailyRate = StructuralObject.SetValidValue(value, "DailyRate");
                ReportPropertyChanged("DailyRate");
                OnDailyRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _DailyRate;
        partial void OnDailyRateChanging(Nullable<global::System.Decimal> value);
        partial void OnDailyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AnnualRate
        {
            get
            {
                return _AnnualRate;
            }
            set
            {
                OnAnnualRateChanging(value);
                ReportPropertyChanging("AnnualRate");
                _AnnualRate = StructuralObject.SetValidValue(value, "AnnualRate");
                ReportPropertyChanged("AnnualRate");
                OnAnnualRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _AnnualRate;
        partial void OnAnnualRateChanging(Nullable<global::System.Decimal> value);
        partial void OnAnnualRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BlendedHourlyRate
        {
            get
            {
                return _BlendedHourlyRate;
            }
            set
            {
                OnBlendedHourlyRateChanging(value);
                ReportPropertyChanging("BlendedHourlyRate");
                _BlendedHourlyRate = StructuralObject.SetValidValue(value, "BlendedHourlyRate");
                ReportPropertyChanged("BlendedHourlyRate");
                OnBlendedHourlyRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _BlendedHourlyRate;
        partial void OnBlendedHourlyRateChanging(Nullable<global::System.Decimal> value);
        partial void OnBlendedHourlyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BlendedHourlyCost
        {
            get
            {
                return _BlendedHourlyCost;
            }
            set
            {
                OnBlendedHourlyCostChanging(value);
                ReportPropertyChanging("BlendedHourlyCost");
                _BlendedHourlyCost = StructuralObject.SetValidValue(value, "BlendedHourlyCost");
                ReportPropertyChanged("BlendedHourlyCost");
                OnBlendedHourlyCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _BlendedHourlyCost;
        partial void OnBlendedHourlyCostChanging(Nullable<global::System.Decimal> value);
        partial void OnBlendedHourlyCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value, "IsApproved");
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_Experience_X_Company", "X_Company")]
        public Company X_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_Experience_X_Company", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_Experience_X_Company", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_Experience_X_Company", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_Experience_X_Company", "X_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_Experience_X_Contact", "X_Contact")]
        public Contact X_Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_Experience_X_Contact", "X_Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_Experience_X_Contact", "X_Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> X_ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_Experience_X_Contact", "X_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Contacts.FK_X_Experience_X_Contact", "X_Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static Role CreateRole(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            Role role = new Role();
            role.ApplicationId = applicationId;
            role.RoleId = roleId;
            role.RoleName = roleName;
            role.LoweredRoleName = loweredRoleName;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value, "ApplicationId");
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false, "LoweredRoleName");
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK__aspnet_Ro__Appli__2077C861", "aspnet_Applications")]
        public Application aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Contacts.FK__aspnet_Ro__Appli__2077C861", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Contacts.FK__aspnet_Ro__Appli__2077C861", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Contacts.FK__aspnet_Ro__Appli__2077C861", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Contacts.FK__aspnet_Ro__Appli__2077C861", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<User> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Contacts.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Contacts.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="SecurityBlacklist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityBlacklist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityBlacklist object.
        /// </summary>
        /// <param name="securityBlacklistID">Initial value of the SecurityBlacklistID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static SecurityBlacklist CreateSecurityBlacklist(global::System.Guid securityBlacklistID, global::System.Int32 version)
        {
            SecurityBlacklist securityBlacklist = new SecurityBlacklist();
            securityBlacklist.SecurityBlacklistID = securityBlacklistID;
            securityBlacklist.Version = version;
            return securityBlacklist;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SecurityBlacklistID
        {
            get
            {
                return _SecurityBlacklistID;
            }
            set
            {
                if (_SecurityBlacklistID != value)
                {
                    OnSecurityBlacklistIDChanging(value);
                    ReportPropertyChanging("SecurityBlacklistID");
                    _SecurityBlacklistID = StructuralObject.SetValidValue(value, "SecurityBlacklistID");
                    ReportPropertyChanged("SecurityBlacklistID");
                    OnSecurityBlacklistIDChanged();
                }
            }
        }
        private global::System.Guid _SecurityBlacklistID;
        partial void OnSecurityBlacklistIDChanging(global::System.Guid value);
        partial void OnSecurityBlacklistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerApplicationID
        {
            get
            {
                return _OwnerApplicationID;
            }
            set
            {
                OnOwnerApplicationIDChanging(value);
                ReportPropertyChanging("OwnerApplicationID");
                _OwnerApplicationID = StructuralObject.SetValidValue(value, "OwnerApplicationID");
                ReportPropertyChanged("OwnerApplicationID");
                OnOwnerApplicationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerApplicationID;
        partial void OnOwnerApplicationIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerCompanyID
        {
            get
            {
                return _OwnerCompanyID;
            }
            set
            {
                OnOwnerCompanyIDChanging(value);
                ReportPropertyChanging("OwnerCompanyID");
                _OwnerCompanyID = StructuralObject.SetValidValue(value, "OwnerCompanyID");
                ReportPropertyChanged("OwnerCompanyID");
                OnOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerCompanyID;
        partial void OnOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerContactID
        {
            get
            {
                return _OwnerContactID;
            }
            set
            {
                OnOwnerContactIDChanging(value);
                ReportPropertyChanging("OwnerContactID");
                _OwnerContactID = StructuralObject.SetValidValue(value, "OwnerContactID");
                ReportPropertyChanged("OwnerContactID");
                OnOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerContactID;
        partial void OnOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerProjectID
        {
            get
            {
                return _OwnerProjectID;
            }
            set
            {
                OnOwnerProjectIDChanging(value);
                ReportPropertyChanging("OwnerProjectID");
                _OwnerProjectID = StructuralObject.SetValidValue(value, "OwnerProjectID");
                ReportPropertyChanged("OwnerProjectID");
                OnOwnerProjectIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerProjectID;
        partial void OnOwnerProjectIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerEntitySystemType
        {
            get
            {
                return _OwnerEntitySystemType;
            }
            set
            {
                OnOwnerEntitySystemTypeChanging(value);
                ReportPropertyChanging("OwnerEntitySystemType");
                _OwnerEntitySystemType = StructuralObject.SetValidValue(value, true, "OwnerEntitySystemType");
                ReportPropertyChanged("OwnerEntitySystemType");
                OnOwnerEntitySystemTypeChanged();
            }
        }
        private global::System.String _OwnerEntitySystemType;
        partial void OnOwnerEntitySystemTypeChanging(global::System.String value);
        partial void OnOwnerEntitySystemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerTableType
        {
            get
            {
                return _OwnerTableType;
            }
            set
            {
                OnOwnerTableTypeChanging(value);
                ReportPropertyChanging("OwnerTableType");
                _OwnerTableType = StructuralObject.SetValidValue(value, true, "OwnerTableType");
                ReportPropertyChanged("OwnerTableType");
                OnOwnerTableTypeChanged();
            }
        }
        private global::System.String _OwnerTableType;
        partial void OnOwnerTableTypeChanging(global::System.String value);
        partial void OnOwnerTableTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerField
        {
            get
            {
                return _OwnerField;
            }
            set
            {
                OnOwnerFieldChanging(value);
                ReportPropertyChanging("OwnerField");
                _OwnerField = StructuralObject.SetValidValue(value, true, "OwnerField");
                ReportPropertyChanged("OwnerField");
                OnOwnerFieldChanged();
            }
        }
        private global::System.String _OwnerField;
        partial void OnOwnerFieldChanging(global::System.String value);
        partial void OnOwnerFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerReferenceID
        {
            get
            {
                return _OwnerReferenceID;
            }
            set
            {
                OnOwnerReferenceIDChanging(value);
                ReportPropertyChanging("OwnerReferenceID");
                _OwnerReferenceID = StructuralObject.SetValidValue(value, "OwnerReferenceID");
                ReportPropertyChanged("OwnerReferenceID");
                OnOwnerReferenceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerReferenceID;
        partial void OnOwnerReferenceIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorApplicationID
        {
            get
            {
                return _AccessorApplicationID;
            }
            set
            {
                OnAccessorApplicationIDChanging(value);
                ReportPropertyChanging("AccessorApplicationID");
                _AccessorApplicationID = StructuralObject.SetValidValue(value, "AccessorApplicationID");
                ReportPropertyChanged("AccessorApplicationID");
                OnAccessorApplicationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorApplicationID;
        partial void OnAccessorApplicationIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorCompanyID
        {
            get
            {
                return _AccessorCompanyID;
            }
            set
            {
                OnAccessorCompanyIDChanging(value);
                ReportPropertyChanging("AccessorCompanyID");
                _AccessorCompanyID = StructuralObject.SetValidValue(value, "AccessorCompanyID");
                ReportPropertyChanged("AccessorCompanyID");
                OnAccessorCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorCompanyID;
        partial void OnAccessorCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorProjectID
        {
            get
            {
                return _AccessorProjectID;
            }
            set
            {
                OnAccessorProjectIDChanging(value);
                ReportPropertyChanging("AccessorProjectID");
                _AccessorProjectID = StructuralObject.SetValidValue(value, "AccessorProjectID");
                ReportPropertyChanged("AccessorProjectID");
                OnAccessorProjectIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorProjectID;
        partial void OnAccessorProjectIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorContactID
        {
            get
            {
                return _AccessorContactID;
            }
            set
            {
                OnAccessorContactIDChanging(value);
                ReportPropertyChanging("AccessorContactID");
                _AccessorContactID = StructuralObject.SetValidValue(value, "AccessorContactID");
                ReportPropertyChanged("AccessorContactID");
                OnAccessorContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorContactID;
        partial void OnAccessorContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorRoleID
        {
            get
            {
                return _AccessorRoleID;
            }
            set
            {
                OnAccessorRoleIDChanging(value);
                ReportPropertyChanging("AccessorRoleID");
                _AccessorRoleID = StructuralObject.SetValidValue(value, "AccessorRoleID");
                ReportPropertyChanged("AccessorRoleID");
                OnAccessorRoleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorRoleID;
        partial void OnAccessorRoleIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanCreate
        {
            get
            {
                return _CanCreate;
            }
            set
            {
                OnCanCreateChanging(value);
                ReportPropertyChanging("CanCreate");
                _CanCreate = StructuralObject.SetValidValue(value, "CanCreate");
                ReportPropertyChanged("CanCreate");
                OnCanCreateChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanCreate;
        partial void OnCanCreateChanging(Nullable<global::System.Boolean> value);
        partial void OnCanCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanRead
        {
            get
            {
                return _CanRead;
            }
            set
            {
                OnCanReadChanging(value);
                ReportPropertyChanging("CanRead");
                _CanRead = StructuralObject.SetValidValue(value, "CanRead");
                ReportPropertyChanged("CanRead");
                OnCanReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanRead;
        partial void OnCanReadChanging(Nullable<global::System.Boolean> value);
        partial void OnCanReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanUpdate
        {
            get
            {
                return _CanUpdate;
            }
            set
            {
                OnCanUpdateChanging(value);
                ReportPropertyChanging("CanUpdate");
                _CanUpdate = StructuralObject.SetValidValue(value, "CanUpdate");
                ReportPropertyChanged("CanUpdate");
                OnCanUpdateChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanUpdate;
        partial void OnCanUpdateChanging(Nullable<global::System.Boolean> value);
        partial void OnCanUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanDelete
        {
            get
            {
                return _CanDelete;
            }
            set
            {
                OnCanDeleteChanging(value);
                ReportPropertyChanging("CanDelete");
                _CanDelete = StructuralObject.SetValidValue(value, "CanDelete");
                ReportPropertyChanged("CanDelete");
                OnCanDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanDelete;
        partial void OnCanDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnCanDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityBlacklist_X_Company", "X_Company")]
        public Company X_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company", "X_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityBlacklist_X_Company1", "X_Company")]
        public Company X_Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company1", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company1", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company1", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_SecurityBlacklist_X_Company1", "X_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityBlacklist_X_Contact", "X_Contact")]
        public Contact X_Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityBlacklist_X_Contact", "X_Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityBlacklist_X_Contact", "X_Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> X_ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityBlacklist_X_Contact", "X_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Contacts.FK_X_SecurityBlacklist_X_Contact", "X_Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="SecurityWhitelist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityWhitelist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityWhitelist object.
        /// </summary>
        /// <param name="securityWhitelistID">Initial value of the SecurityWhitelistID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static SecurityWhitelist CreateSecurityWhitelist(global::System.Guid securityWhitelistID, global::System.Int32 version)
        {
            SecurityWhitelist securityWhitelist = new SecurityWhitelist();
            securityWhitelist.SecurityWhitelistID = securityWhitelistID;
            securityWhitelist.Version = version;
            return securityWhitelist;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SecurityWhitelistID
        {
            get
            {
                return _SecurityWhitelistID;
            }
            set
            {
                if (_SecurityWhitelistID != value)
                {
                    OnSecurityWhitelistIDChanging(value);
                    ReportPropertyChanging("SecurityWhitelistID");
                    _SecurityWhitelistID = StructuralObject.SetValidValue(value, "SecurityWhitelistID");
                    ReportPropertyChanged("SecurityWhitelistID");
                    OnSecurityWhitelistIDChanged();
                }
            }
        }
        private global::System.Guid _SecurityWhitelistID;
        partial void OnSecurityWhitelistIDChanging(global::System.Guid value);
        partial void OnSecurityWhitelistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerApplicationID
        {
            get
            {
                return _OwnerApplicationID;
            }
            set
            {
                OnOwnerApplicationIDChanging(value);
                ReportPropertyChanging("OwnerApplicationID");
                _OwnerApplicationID = StructuralObject.SetValidValue(value, "OwnerApplicationID");
                ReportPropertyChanged("OwnerApplicationID");
                OnOwnerApplicationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerApplicationID;
        partial void OnOwnerApplicationIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerCompanyID
        {
            get
            {
                return _OwnerCompanyID;
            }
            set
            {
                OnOwnerCompanyIDChanging(value);
                ReportPropertyChanging("OwnerCompanyID");
                _OwnerCompanyID = StructuralObject.SetValidValue(value, "OwnerCompanyID");
                ReportPropertyChanged("OwnerCompanyID");
                OnOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerCompanyID;
        partial void OnOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerContactID
        {
            get
            {
                return _OwnerContactID;
            }
            set
            {
                OnOwnerContactIDChanging(value);
                ReportPropertyChanging("OwnerContactID");
                _OwnerContactID = StructuralObject.SetValidValue(value, "OwnerContactID");
                ReportPropertyChanged("OwnerContactID");
                OnOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerContactID;
        partial void OnOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerProjectID
        {
            get
            {
                return _OwnerProjectID;
            }
            set
            {
                OnOwnerProjectIDChanging(value);
                ReportPropertyChanging("OwnerProjectID");
                _OwnerProjectID = StructuralObject.SetValidValue(value, "OwnerProjectID");
                ReportPropertyChanged("OwnerProjectID");
                OnOwnerProjectIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerProjectID;
        partial void OnOwnerProjectIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerEntitySystemType
        {
            get
            {
                return _OwnerEntitySystemType;
            }
            set
            {
                OnOwnerEntitySystemTypeChanging(value);
                ReportPropertyChanging("OwnerEntitySystemType");
                _OwnerEntitySystemType = StructuralObject.SetValidValue(value, true, "OwnerEntitySystemType");
                ReportPropertyChanged("OwnerEntitySystemType");
                OnOwnerEntitySystemTypeChanged();
            }
        }
        private global::System.String _OwnerEntitySystemType;
        partial void OnOwnerEntitySystemTypeChanging(global::System.String value);
        partial void OnOwnerEntitySystemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerTableType
        {
            get
            {
                return _OwnerTableType;
            }
            set
            {
                OnOwnerTableTypeChanging(value);
                ReportPropertyChanging("OwnerTableType");
                _OwnerTableType = StructuralObject.SetValidValue(value, true, "OwnerTableType");
                ReportPropertyChanged("OwnerTableType");
                OnOwnerTableTypeChanged();
            }
        }
        private global::System.String _OwnerTableType;
        partial void OnOwnerTableTypeChanging(global::System.String value);
        partial void OnOwnerTableTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerField
        {
            get
            {
                return _OwnerField;
            }
            set
            {
                OnOwnerFieldChanging(value);
                ReportPropertyChanging("OwnerField");
                _OwnerField = StructuralObject.SetValidValue(value, true, "OwnerField");
                ReportPropertyChanged("OwnerField");
                OnOwnerFieldChanged();
            }
        }
        private global::System.String _OwnerField;
        partial void OnOwnerFieldChanging(global::System.String value);
        partial void OnOwnerFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerReferenceID
        {
            get
            {
                return _OwnerReferenceID;
            }
            set
            {
                OnOwnerReferenceIDChanging(value);
                ReportPropertyChanging("OwnerReferenceID");
                _OwnerReferenceID = StructuralObject.SetValidValue(value, "OwnerReferenceID");
                ReportPropertyChanged("OwnerReferenceID");
                OnOwnerReferenceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerReferenceID;
        partial void OnOwnerReferenceIDChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorApplicationID
        {
            get
            {
                return _AccessorApplicationID;
            }
            set
            {
                OnAccessorApplicationIDChanging(value);
                ReportPropertyChanging("AccessorApplicationID");
                _AccessorApplicationID = StructuralObject.SetValidValue(value, "AccessorApplicationID");
                ReportPropertyChanged("AccessorApplicationID");
                OnAccessorApplicationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorApplicationID;
        partial void OnAccessorApplicationIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorCompanyID
        {
            get
            {
                return _AccessorCompanyID;
            }
            set
            {
                OnAccessorCompanyIDChanging(value);
                ReportPropertyChanging("AccessorCompanyID");
                _AccessorCompanyID = StructuralObject.SetValidValue(value, "AccessorCompanyID");
                ReportPropertyChanged("AccessorCompanyID");
                OnAccessorCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorCompanyID;
        partial void OnAccessorCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorProjectID
        {
            get
            {
                return _AccessorProjectID;
            }
            set
            {
                OnAccessorProjectIDChanging(value);
                ReportPropertyChanging("AccessorProjectID");
                _AccessorProjectID = StructuralObject.SetValidValue(value, "AccessorProjectID");
                ReportPropertyChanged("AccessorProjectID");
                OnAccessorProjectIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorProjectID;
        partial void OnAccessorProjectIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorContactID
        {
            get
            {
                return _AccessorContactID;
            }
            set
            {
                OnAccessorContactIDChanging(value);
                ReportPropertyChanging("AccessorContactID");
                _AccessorContactID = StructuralObject.SetValidValue(value, "AccessorContactID");
                ReportPropertyChanged("AccessorContactID");
                OnAccessorContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorContactID;
        partial void OnAccessorContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessorRoleID
        {
            get
            {
                return _AccessorRoleID;
            }
            set
            {
                OnAccessorRoleIDChanging(value);
                ReportPropertyChanging("AccessorRoleID");
                _AccessorRoleID = StructuralObject.SetValidValue(value, "AccessorRoleID");
                ReportPropertyChanged("AccessorRoleID");
                OnAccessorRoleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessorRoleID;
        partial void OnAccessorRoleIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessorRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanCreate
        {
            get
            {
                return _CanCreate;
            }
            set
            {
                OnCanCreateChanging(value);
                ReportPropertyChanging("CanCreate");
                _CanCreate = StructuralObject.SetValidValue(value, "CanCreate");
                ReportPropertyChanged("CanCreate");
                OnCanCreateChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanCreate;
        partial void OnCanCreateChanging(Nullable<global::System.Boolean> value);
        partial void OnCanCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanRead
        {
            get
            {
                return _CanRead;
            }
            set
            {
                OnCanReadChanging(value);
                ReportPropertyChanging("CanRead");
                _CanRead = StructuralObject.SetValidValue(value, "CanRead");
                ReportPropertyChanged("CanRead");
                OnCanReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanRead;
        partial void OnCanReadChanging(Nullable<global::System.Boolean> value);
        partial void OnCanReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanUpdate
        {
            get
            {
                return _CanUpdate;
            }
            set
            {
                OnCanUpdateChanging(value);
                ReportPropertyChanging("CanUpdate");
                _CanUpdate = StructuralObject.SetValidValue(value, "CanUpdate");
                ReportPropertyChanged("CanUpdate");
                OnCanUpdateChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanUpdate;
        partial void OnCanUpdateChanging(Nullable<global::System.Boolean> value);
        partial void OnCanUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanDelete
        {
            get
            {
                return _CanDelete;
            }
            set
            {
                OnCanDeleteChanging(value);
                ReportPropertyChanging("CanDelete");
                _CanDelete = StructuralObject.SetValidValue(value, "CanDelete");
                ReportPropertyChanged("CanDelete");
                OnCanDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanDelete;
        partial void OnCanDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnCanDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionAntecedentID
        {
            get
            {
                return _VersionAntecedentID;
            }
            set
            {
                OnVersionAntecedentIDChanging(value);
                ReportPropertyChanging("VersionAntecedentID");
                _VersionAntecedentID = StructuralObject.SetValidValue(value, "VersionAntecedentID");
                ReportPropertyChanged("VersionAntecedentID");
                OnVersionAntecedentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionAntecedentID;
        partial void OnVersionAntecedentIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionAntecedentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionCertainty
        {
            get
            {
                return _VersionCertainty;
            }
            set
            {
                OnVersionCertaintyChanging(value);
                ReportPropertyChanging("VersionCertainty");
                _VersionCertainty = StructuralObject.SetValidValue(value, "VersionCertainty");
                ReportPropertyChanged("VersionCertainty");
                OnVersionCertaintyChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionCertainty;
        partial void OnVersionCertaintyChanging(Nullable<global::System.Int32> value);
        partial void OnVersionCertaintyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionWorkflowInstanceID
        {
            get
            {
                return _VersionWorkflowInstanceID;
            }
            set
            {
                OnVersionWorkflowInstanceIDChanging(value);
                ReportPropertyChanging("VersionWorkflowInstanceID");
                _VersionWorkflowInstanceID = StructuralObject.SetValidValue(value, "VersionWorkflowInstanceID");
                ReportPropertyChanged("VersionWorkflowInstanceID");
                OnVersionWorkflowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionWorkflowInstanceID;
        partial void OnVersionWorkflowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionWorkflowInstanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionUpdatedBy
        {
            get
            {
                return _VersionUpdatedBy;
            }
            set
            {
                OnVersionUpdatedByChanging(value);
                ReportPropertyChanging("VersionUpdatedBy");
                _VersionUpdatedBy = StructuralObject.SetValidValue(value, "VersionUpdatedBy");
                ReportPropertyChanged("VersionUpdatedBy");
                OnVersionUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionUpdatedBy;
        partial void OnVersionUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionDeletedBy
        {
            get
            {
                return _VersionDeletedBy;
            }
            set
            {
                OnVersionDeletedByChanging(value);
                ReportPropertyChanging("VersionDeletedBy");
                _VersionDeletedBy = StructuralObject.SetValidValue(value, "VersionDeletedBy");
                ReportPropertyChanged("VersionDeletedBy");
                OnVersionDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionDeletedBy;
        partial void OnVersionDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnVersionDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerContactID
        {
            get
            {
                return _VersionOwnerContactID;
            }
            set
            {
                OnVersionOwnerContactIDChanging(value);
                ReportPropertyChanging("VersionOwnerContactID");
                _VersionOwnerContactID = StructuralObject.SetValidValue(value, "VersionOwnerContactID");
                ReportPropertyChanged("VersionOwnerContactID");
                OnVersionOwnerContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerContactID;
        partial void OnVersionOwnerContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VersionOwnerCompanyID
        {
            get
            {
                return _VersionOwnerCompanyID;
            }
            set
            {
                OnVersionOwnerCompanyIDChanging(value);
                ReportPropertyChanging("VersionOwnerCompanyID");
                _VersionOwnerCompanyID = StructuralObject.SetValidValue(value, "VersionOwnerCompanyID");
                ReportPropertyChanged("VersionOwnerCompanyID");
                OnVersionOwnerCompanyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _VersionOwnerCompanyID;
        partial void OnVersionOwnerCompanyIDChanging(Nullable<global::System.Guid> value);
        partial void OnVersionOwnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VersionUpdated
        {
            get
            {
                return _VersionUpdated;
            }
            set
            {
                OnVersionUpdatedChanging(value);
                ReportPropertyChanging("VersionUpdated");
                _VersionUpdated = StructuralObject.SetValidValue(value, "VersionUpdated");
                ReportPropertyChanged("VersionUpdated");
                OnVersionUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _VersionUpdated;
        partial void OnVersionUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnVersionUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Company", "X_Company")]
        public Company X_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company", "X_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Company1", "X_Company")]
        public Company X_Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company1", "X_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company1", "X_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> X_Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company1", "X_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Contacts.FK_X_SecurityWhitelist_X_Company1", "X_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Contact", "X_Contact")]
        public Contact X_Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact", "X_Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact", "X_Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> X_ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact", "X_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact", "X_Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK_X_SecurityWhitelist_X_Contact1", "X_Contact")]
        public Contact X_Contact1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact1", "X_Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact1", "X_Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> X_Contact1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact1", "X_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Contacts.FK_X_SecurityWhitelist_X_Contact1", "X_Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Contacts", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static User CreateUser(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            User user = new User();
            user.ApplicationId = applicationId;
            user.UserId = userId;
            user.UserName = userName;
            user.LoweredUserName = loweredUserName;
            user.IsAnonymous = isAnonymous;
            user.LastActivityDate = lastActivityDate;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value, "ApplicationId");
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false, "LoweredUserName");
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true, "MobileAlias");
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value, "IsAnonymous");
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value, "LastActivityDate");
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "FK__aspnet_Us__Appli__758D6A5C", "aspnet_Applications")]
        public Application aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Contacts.FK__aspnet_Us__Appli__758D6A5C", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Contacts.FK__aspnet_Us__Appli__758D6A5C", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Contacts.FK__aspnet_Us__Appli__758D6A5C", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Contacts.FK__aspnet_Us__Appli__758D6A5C", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Contacts", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<Role> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("Contacts.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("Contacts.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
