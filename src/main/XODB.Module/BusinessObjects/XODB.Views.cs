//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets47ECFB033B33461B2E5735AEFBD26C1F4DE83AFA3B4C7EB8753D5B9B035FFA8A))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets47ECFB033B33461B2E5735AEFBD26C1F4DE83AFA3B4C7EB8753D5B9B035FFA8A : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets47ECFB033B33461B2E5735AEFBD26C1F4DE83AFA3B4C7EB8753D5B9B035FFA8A()
        {
            this.EdmEntityContainerName = "XODBC";
            this.StoreEntityContainerName = "XODBModuleBusinessObjectsStoreContainer";
            this.HashOverMappingClosure = "9ed590873c39ff061e21f77073e2e769ccd07c04d6798b8d8e4664ad34295230";
            this.HashOverAllExtentViews = "ca2d548e7bb37a87069a16cba96a9dd8584f1ee2929fee9e18564220cadb64df";
            this.ViewCount = 584;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            if ((index == 121))
            {
                return GetView121();
            }
            if ((index == 122))
            {
                return GetView122();
            }
            if ((index == 123))
            {
                return GetView123();
            }
            if ((index == 124))
            {
                return GetView124();
            }
            if ((index == 125))
            {
                return GetView125();
            }
            if ((index == 126))
            {
                return GetView126();
            }
            if ((index == 127))
            {
                return GetView127();
            }
            if ((index == 128))
            {
                return GetView128();
            }
            if ((index == 129))
            {
                return GetView129();
            }
            if ((index == 130))
            {
                return GetView130();
            }
            if ((index == 131))
            {
                return GetView131();
            }
            if ((index == 132))
            {
                return GetView132();
            }
            if ((index == 133))
            {
                return GetView133();
            }
            if ((index == 134))
            {
                return GetView134();
            }
            if ((index == 135))
            {
                return GetView135();
            }
            if ((index == 136))
            {
                return GetView136();
            }
            if ((index == 137))
            {
                return GetView137();
            }
            if ((index == 138))
            {
                return GetView138();
            }
            if ((index == 139))
            {
                return GetView139();
            }
            if ((index == 140))
            {
                return GetView140();
            }
            if ((index == 141))
            {
                return GetView141();
            }
            if ((index == 142))
            {
                return GetView142();
            }
            if ((index == 143))
            {
                return GetView143();
            }
            if ((index == 144))
            {
                return GetView144();
            }
            if ((index == 145))
            {
                return GetView145();
            }
            if ((index == 146))
            {
                return GetView146();
            }
            if ((index == 147))
            {
                return GetView147();
            }
            if ((index == 148))
            {
                return GetView148();
            }
            if ((index == 149))
            {
                return GetView149();
            }
            if ((index == 150))
            {
                return GetView150();
            }
            if ((index == 151))
            {
                return GetView151();
            }
            if ((index == 152))
            {
                return GetView152();
            }
            if ((index == 153))
            {
                return GetView153();
            }
            if ((index == 154))
            {
                return GetView154();
            }
            if ((index == 155))
            {
                return GetView155();
            }
            if ((index == 156))
            {
                return GetView156();
            }
            if ((index == 157))
            {
                return GetView157();
            }
            if ((index == 158))
            {
                return GetView158();
            }
            if ((index == 159))
            {
                return GetView159();
            }
            if ((index == 160))
            {
                return GetView160();
            }
            if ((index == 161))
            {
                return GetView161();
            }
            if ((index == 162))
            {
                return GetView162();
            }
            if ((index == 163))
            {
                return GetView163();
            }
            if ((index == 164))
            {
                return GetView164();
            }
            if ((index == 165))
            {
                return GetView165();
            }
            if ((index == 166))
            {
                return GetView166();
            }
            if ((index == 167))
            {
                return GetView167();
            }
            if ((index == 168))
            {
                return GetView168();
            }
            if ((index == 169))
            {
                return GetView169();
            }
            if ((index == 170))
            {
                return GetView170();
            }
            if ((index == 171))
            {
                return GetView171();
            }
            if ((index == 172))
            {
                return GetView172();
            }
            if ((index == 173))
            {
                return GetView173();
            }
            if ((index == 174))
            {
                return GetView174();
            }
            if ((index == 175))
            {
                return GetView175();
            }
            if ((index == 176))
            {
                return GetView176();
            }
            if ((index == 177))
            {
                return GetView177();
            }
            if ((index == 178))
            {
                return GetView178();
            }
            if ((index == 179))
            {
                return GetView179();
            }
            if ((index == 180))
            {
                return GetView180();
            }
            if ((index == 181))
            {
                return GetView181();
            }
            if ((index == 182))
            {
                return GetView182();
            }
            if ((index == 183))
            {
                return GetView183();
            }
            if ((index == 184))
            {
                return GetView184();
            }
            if ((index == 185))
            {
                return GetView185();
            }
            if ((index == 186))
            {
                return GetView186();
            }
            if ((index == 187))
            {
                return GetView187();
            }
            if ((index == 188))
            {
                return GetView188();
            }
            if ((index == 189))
            {
                return GetView189();
            }
            if ((index == 190))
            {
                return GetView190();
            }
            if ((index == 191))
            {
                return GetView191();
            }
            if ((index == 192))
            {
                return GetView192();
            }
            if ((index == 193))
            {
                return GetView193();
            }
            if ((index == 194))
            {
                return GetView194();
            }
            if ((index == 195))
            {
                return GetView195();
            }
            if ((index == 196))
            {
                return GetView196();
            }
            if ((index == 197))
            {
                return GetView197();
            }
            if ((index == 198))
            {
                return GetView198();
            }
            if ((index == 199))
            {
                return GetView199();
            }
            if ((index == 200))
            {
                return GetView200();
            }
            if ((index == 201))
            {
                return GetView201();
            }
            if ((index == 202))
            {
                return GetView202();
            }
            if ((index == 203))
            {
                return GetView203();
            }
            if ((index == 204))
            {
                return GetView204();
            }
            if ((index == 205))
            {
                return GetView205();
            }
            if ((index == 206))
            {
                return GetView206();
            }
            if ((index == 207))
            {
                return GetView207();
            }
            if ((index == 208))
            {
                return GetView208();
            }
            if ((index == 209))
            {
                return GetView209();
            }
            if ((index == 210))
            {
                return GetView210();
            }
            if ((index == 211))
            {
                return GetView211();
            }
            if ((index == 212))
            {
                return GetView212();
            }
            if ((index == 213))
            {
                return GetView213();
            }
            if ((index == 214))
            {
                return GetView214();
            }
            if ((index == 215))
            {
                return GetView215();
            }
            if ((index == 216))
            {
                return GetView216();
            }
            if ((index == 217))
            {
                return GetView217();
            }
            if ((index == 218))
            {
                return GetView218();
            }
            if ((index == 219))
            {
                return GetView219();
            }
            if ((index == 220))
            {
                return GetView220();
            }
            if ((index == 221))
            {
                return GetView221();
            }
            if ((index == 222))
            {
                return GetView222();
            }
            if ((index == 223))
            {
                return GetView223();
            }
            if ((index == 224))
            {
                return GetView224();
            }
            if ((index == 225))
            {
                return GetView225();
            }
            if ((index == 226))
            {
                return GetView226();
            }
            if ((index == 227))
            {
                return GetView227();
            }
            if ((index == 228))
            {
                return GetView228();
            }
            if ((index == 229))
            {
                return GetView229();
            }
            if ((index == 230))
            {
                return GetView230();
            }
            if ((index == 231))
            {
                return GetView231();
            }
            if ((index == 232))
            {
                return GetView232();
            }
            if ((index == 233))
            {
                return GetView233();
            }
            if ((index == 234))
            {
                return GetView234();
            }
            if ((index == 235))
            {
                return GetView235();
            }
            if ((index == 236))
            {
                return GetView236();
            }
            if ((index == 237))
            {
                return GetView237();
            }
            if ((index == 238))
            {
                return GetView238();
            }
            if ((index == 239))
            {
                return GetView239();
            }
            if ((index == 240))
            {
                return GetView240();
            }
            if ((index == 241))
            {
                return GetView241();
            }
            if ((index == 242))
            {
                return GetView242();
            }
            if ((index == 243))
            {
                return GetView243();
            }
            if ((index == 244))
            {
                return GetView244();
            }
            if ((index == 245))
            {
                return GetView245();
            }
            if ((index == 246))
            {
                return GetView246();
            }
            if ((index == 247))
            {
                return GetView247();
            }
            if ((index == 248))
            {
                return GetView248();
            }
            if ((index == 249))
            {
                return GetView249();
            }
            if ((index == 250))
            {
                return GetView250();
            }
            if ((index == 251))
            {
                return GetView251();
            }
            if ((index == 252))
            {
                return GetView252();
            }
            if ((index == 253))
            {
                return GetView253();
            }
            if ((index == 254))
            {
                return GetView254();
            }
            if ((index == 255))
            {
                return GetView255();
            }
            if ((index == 256))
            {
                return GetView256();
            }
            if ((index == 257))
            {
                return GetView257();
            }
            if ((index == 258))
            {
                return GetView258();
            }
            if ((index == 259))
            {
                return GetView259();
            }
            if ((index == 260))
            {
                return GetView260();
            }
            if ((index == 261))
            {
                return GetView261();
            }
            if ((index == 262))
            {
                return GetView262();
            }
            if ((index == 263))
            {
                return GetView263();
            }
            if ((index == 264))
            {
                return GetView264();
            }
            if ((index == 265))
            {
                return GetView265();
            }
            if ((index == 266))
            {
                return GetView266();
            }
            if ((index == 267))
            {
                return GetView267();
            }
            if ((index == 268))
            {
                return GetView268();
            }
            if ((index == 269))
            {
                return GetView269();
            }
            if ((index == 270))
            {
                return GetView270();
            }
            if ((index == 271))
            {
                return GetView271();
            }
            if ((index == 272))
            {
                return GetView272();
            }
            if ((index == 273))
            {
                return GetView273();
            }
            if ((index == 274))
            {
                return GetView274();
            }
            if ((index == 275))
            {
                return GetView275();
            }
            if ((index == 276))
            {
                return GetView276();
            }
            if ((index == 277))
            {
                return GetView277();
            }
            if ((index == 278))
            {
                return GetView278();
            }
            if ((index == 279))
            {
                return GetView279();
            }
            if ((index == 280))
            {
                return GetView280();
            }
            if ((index == 281))
            {
                return GetView281();
            }
            if ((index == 282))
            {
                return GetView282();
            }
            if ((index == 283))
            {
                return GetView283();
            }
            if ((index == 284))
            {
                return GetView284();
            }
            if ((index == 285))
            {
                return GetView285();
            }
            if ((index == 286))
            {
                return GetView286();
            }
            if ((index == 287))
            {
                return GetView287();
            }
            if ((index == 288))
            {
                return GetView288();
            }
            if ((index == 289))
            {
                return GetView289();
            }
            if ((index == 290))
            {
                return GetView290();
            }
            if ((index == 291))
            {
                return GetView291();
            }
            if ((index == 292))
            {
                return GetView292();
            }
            if ((index == 293))
            {
                return GetView293();
            }
            if ((index == 294))
            {
                return GetView294();
            }
            if ((index == 295))
            {
                return GetView295();
            }
            if ((index == 296))
            {
                return GetView296();
            }
            if ((index == 297))
            {
                return GetView297();
            }
            if ((index == 298))
            {
                return GetView298();
            }
            if ((index == 299))
            {
                return GetView299();
            }
            if ((index == 300))
            {
                return GetView300();
            }
            if ((index == 301))
            {
                return GetView301();
            }
            if ((index == 302))
            {
                return GetView302();
            }
            if ((index == 303))
            {
                return GetView303();
            }
            if ((index == 304))
            {
                return GetView304();
            }
            if ((index == 305))
            {
                return GetView305();
            }
            if ((index == 306))
            {
                return GetView306();
            }
            if ((index == 307))
            {
                return GetView307();
            }
            if ((index == 308))
            {
                return GetView308();
            }
            if ((index == 309))
            {
                return GetView309();
            }
            if ((index == 310))
            {
                return GetView310();
            }
            if ((index == 311))
            {
                return GetView311();
            }
            if ((index == 312))
            {
                return GetView312();
            }
            if ((index == 313))
            {
                return GetView313();
            }
            if ((index == 314))
            {
                return GetView314();
            }
            if ((index == 315))
            {
                return GetView315();
            }
            if ((index == 316))
            {
                return GetView316();
            }
            if ((index == 317))
            {
                return GetView317();
            }
            if ((index == 318))
            {
                return GetView318();
            }
            if ((index == 319))
            {
                return GetView319();
            }
            if ((index == 320))
            {
                return GetView320();
            }
            if ((index == 321))
            {
                return GetView321();
            }
            if ((index == 322))
            {
                return GetView322();
            }
            if ((index == 323))
            {
                return GetView323();
            }
            if ((index == 324))
            {
                return GetView324();
            }
            if ((index == 325))
            {
                return GetView325();
            }
            if ((index == 326))
            {
                return GetView326();
            }
            if ((index == 327))
            {
                return GetView327();
            }
            if ((index == 328))
            {
                return GetView328();
            }
            if ((index == 329))
            {
                return GetView329();
            }
            if ((index == 330))
            {
                return GetView330();
            }
            if ((index == 331))
            {
                return GetView331();
            }
            if ((index == 332))
            {
                return GetView332();
            }
            if ((index == 333))
            {
                return GetView333();
            }
            if ((index == 334))
            {
                return GetView334();
            }
            if ((index == 335))
            {
                return GetView335();
            }
            if ((index == 336))
            {
                return GetView336();
            }
            if ((index == 337))
            {
                return GetView337();
            }
            if ((index == 338))
            {
                return GetView338();
            }
            if ((index == 339))
            {
                return GetView339();
            }
            if ((index == 340))
            {
                return GetView340();
            }
            if ((index == 341))
            {
                return GetView341();
            }
            if ((index == 342))
            {
                return GetView342();
            }
            if ((index == 343))
            {
                return GetView343();
            }
            if ((index == 344))
            {
                return GetView344();
            }
            if ((index == 345))
            {
                return GetView345();
            }
            if ((index == 346))
            {
                return GetView346();
            }
            if ((index == 347))
            {
                return GetView347();
            }
            if ((index == 348))
            {
                return GetView348();
            }
            if ((index == 349))
            {
                return GetView349();
            }
            if ((index == 350))
            {
                return GetView350();
            }
            if ((index == 351))
            {
                return GetView351();
            }
            if ((index == 352))
            {
                return GetView352();
            }
            if ((index == 353))
            {
                return GetView353();
            }
            if ((index == 354))
            {
                return GetView354();
            }
            if ((index == 355))
            {
                return GetView355();
            }
            if ((index == 356))
            {
                return GetView356();
            }
            if ((index == 357))
            {
                return GetView357();
            }
            if ((index == 358))
            {
                return GetView358();
            }
            if ((index == 359))
            {
                return GetView359();
            }
            if ((index == 360))
            {
                return GetView360();
            }
            if ((index == 361))
            {
                return GetView361();
            }
            if ((index == 362))
            {
                return GetView362();
            }
            if ((index == 363))
            {
                return GetView363();
            }
            if ((index == 364))
            {
                return GetView364();
            }
            if ((index == 365))
            {
                return GetView365();
            }
            if ((index == 366))
            {
                return GetView366();
            }
            if ((index == 367))
            {
                return GetView367();
            }
            if ((index == 368))
            {
                return GetView368();
            }
            if ((index == 369))
            {
                return GetView369();
            }
            if ((index == 370))
            {
                return GetView370();
            }
            if ((index == 371))
            {
                return GetView371();
            }
            if ((index == 372))
            {
                return GetView372();
            }
            if ((index == 373))
            {
                return GetView373();
            }
            if ((index == 374))
            {
                return GetView374();
            }
            if ((index == 375))
            {
                return GetView375();
            }
            if ((index == 376))
            {
                return GetView376();
            }
            if ((index == 377))
            {
                return GetView377();
            }
            if ((index == 378))
            {
                return GetView378();
            }
            if ((index == 379))
            {
                return GetView379();
            }
            if ((index == 380))
            {
                return GetView380();
            }
            if ((index == 381))
            {
                return GetView381();
            }
            if ((index == 382))
            {
                return GetView382();
            }
            if ((index == 383))
            {
                return GetView383();
            }
            if ((index == 384))
            {
                return GetView384();
            }
            if ((index == 385))
            {
                return GetView385();
            }
            if ((index == 386))
            {
                return GetView386();
            }
            if ((index == 387))
            {
                return GetView387();
            }
            if ((index == 388))
            {
                return GetView388();
            }
            if ((index == 389))
            {
                return GetView389();
            }
            if ((index == 390))
            {
                return GetView390();
            }
            if ((index == 391))
            {
                return GetView391();
            }
            if ((index == 392))
            {
                return GetView392();
            }
            if ((index == 393))
            {
                return GetView393();
            }
            if ((index == 394))
            {
                return GetView394();
            }
            if ((index == 395))
            {
                return GetView395();
            }
            if ((index == 396))
            {
                return GetView396();
            }
            if ((index == 397))
            {
                return GetView397();
            }
            if ((index == 398))
            {
                return GetView398();
            }
            if ((index == 399))
            {
                return GetView399();
            }
            if ((index == 400))
            {
                return GetView400();
            }
            if ((index == 401))
            {
                return GetView401();
            }
            if ((index == 402))
            {
                return GetView402();
            }
            if ((index == 403))
            {
                return GetView403();
            }
            if ((index == 404))
            {
                return GetView404();
            }
            if ((index == 405))
            {
                return GetView405();
            }
            if ((index == 406))
            {
                return GetView406();
            }
            if ((index == 407))
            {
                return GetView407();
            }
            if ((index == 408))
            {
                return GetView408();
            }
            if ((index == 409))
            {
                return GetView409();
            }
            if ((index == 410))
            {
                return GetView410();
            }
            if ((index == 411))
            {
                return GetView411();
            }
            if ((index == 412))
            {
                return GetView412();
            }
            if ((index == 413))
            {
                return GetView413();
            }
            if ((index == 414))
            {
                return GetView414();
            }
            if ((index == 415))
            {
                return GetView415();
            }
            if ((index == 416))
            {
                return GetView416();
            }
            if ((index == 417))
            {
                return GetView417();
            }
            if ((index == 418))
            {
                return GetView418();
            }
            if ((index == 419))
            {
                return GetView419();
            }
            if ((index == 420))
            {
                return GetView420();
            }
            if ((index == 421))
            {
                return GetView421();
            }
            if ((index == 422))
            {
                return GetView422();
            }
            if ((index == 423))
            {
                return GetView423();
            }
            if ((index == 424))
            {
                return GetView424();
            }
            if ((index == 425))
            {
                return GetView425();
            }
            if ((index == 426))
            {
                return GetView426();
            }
            if ((index == 427))
            {
                return GetView427();
            }
            if ((index == 428))
            {
                return GetView428();
            }
            if ((index == 429))
            {
                return GetView429();
            }
            if ((index == 430))
            {
                return GetView430();
            }
            if ((index == 431))
            {
                return GetView431();
            }
            if ((index == 432))
            {
                return GetView432();
            }
            if ((index == 433))
            {
                return GetView433();
            }
            if ((index == 434))
            {
                return GetView434();
            }
            if ((index == 435))
            {
                return GetView435();
            }
            if ((index == 436))
            {
                return GetView436();
            }
            if ((index == 437))
            {
                return GetView437();
            }
            if ((index == 438))
            {
                return GetView438();
            }
            if ((index == 439))
            {
                return GetView439();
            }
            if ((index == 440))
            {
                return GetView440();
            }
            if ((index == 441))
            {
                return GetView441();
            }
            if ((index == 442))
            {
                return GetView442();
            }
            if ((index == 443))
            {
                return GetView443();
            }
            if ((index == 444))
            {
                return GetView444();
            }
            if ((index == 445))
            {
                return GetView445();
            }
            if ((index == 446))
            {
                return GetView446();
            }
            if ((index == 447))
            {
                return GetView447();
            }
            if ((index == 448))
            {
                return GetView448();
            }
            if ((index == 449))
            {
                return GetView449();
            }
            if ((index == 450))
            {
                return GetView450();
            }
            if ((index == 451))
            {
                return GetView451();
            }
            if ((index == 452))
            {
                return GetView452();
            }
            if ((index == 453))
            {
                return GetView453();
            }
            if ((index == 454))
            {
                return GetView454();
            }
            if ((index == 455))
            {
                return GetView455();
            }
            if ((index == 456))
            {
                return GetView456();
            }
            if ((index == 457))
            {
                return GetView457();
            }
            if ((index == 458))
            {
                return GetView458();
            }
            if ((index == 459))
            {
                return GetView459();
            }
            if ((index == 460))
            {
                return GetView460();
            }
            if ((index == 461))
            {
                return GetView461();
            }
            if ((index == 462))
            {
                return GetView462();
            }
            if ((index == 463))
            {
                return GetView463();
            }
            if ((index == 464))
            {
                return GetView464();
            }
            if ((index == 465))
            {
                return GetView465();
            }
            if ((index == 466))
            {
                return GetView466();
            }
            if ((index == 467))
            {
                return GetView467();
            }
            if ((index == 468))
            {
                return GetView468();
            }
            if ((index == 469))
            {
                return GetView469();
            }
            if ((index == 470))
            {
                return GetView470();
            }
            if ((index == 471))
            {
                return GetView471();
            }
            if ((index == 472))
            {
                return GetView472();
            }
            if ((index == 473))
            {
                return GetView473();
            }
            if ((index == 474))
            {
                return GetView474();
            }
            if ((index == 475))
            {
                return GetView475();
            }
            if ((index == 476))
            {
                return GetView476();
            }
            if ((index == 477))
            {
                return GetView477();
            }
            if ((index == 478))
            {
                return GetView478();
            }
            if ((index == 479))
            {
                return GetView479();
            }
            if ((index == 480))
            {
                return GetView480();
            }
            if ((index == 481))
            {
                return GetView481();
            }
            if ((index == 482))
            {
                return GetView482();
            }
            if ((index == 483))
            {
                return GetView483();
            }
            if ((index == 484))
            {
                return GetView484();
            }
            if ((index == 485))
            {
                return GetView485();
            }
            if ((index == 486))
            {
                return GetView486();
            }
            if ((index == 487))
            {
                return GetView487();
            }
            if ((index == 488))
            {
                return GetView488();
            }
            if ((index == 489))
            {
                return GetView489();
            }
            if ((index == 490))
            {
                return GetView490();
            }
            if ((index == 491))
            {
                return GetView491();
            }
            if ((index == 492))
            {
                return GetView492();
            }
            if ((index == 493))
            {
                return GetView493();
            }
            if ((index == 494))
            {
                return GetView494();
            }
            if ((index == 495))
            {
                return GetView495();
            }
            if ((index == 496))
            {
                return GetView496();
            }
            if ((index == 497))
            {
                return GetView497();
            }
            if ((index == 498))
            {
                return GetView498();
            }
            if ((index == 499))
            {
                return GetView499();
            }
            if ((index == 500))
            {
                return GetView500();
            }
            if ((index == 501))
            {
                return GetView501();
            }
            if ((index == 502))
            {
                return GetView502();
            }
            if ((index == 503))
            {
                return GetView503();
            }
            if ((index == 504))
            {
                return GetView504();
            }
            if ((index == 505))
            {
                return GetView505();
            }
            if ((index == 506))
            {
                return GetView506();
            }
            if ((index == 507))
            {
                return GetView507();
            }
            if ((index == 508))
            {
                return GetView508();
            }
            if ((index == 509))
            {
                return GetView509();
            }
            if ((index == 510))
            {
                return GetView510();
            }
            if ((index == 511))
            {
                return GetView511();
            }
            if ((index == 512))
            {
                return GetView512();
            }
            if ((index == 513))
            {
                return GetView513();
            }
            if ((index == 514))
            {
                return GetView514();
            }
            if ((index == 515))
            {
                return GetView515();
            }
            if ((index == 516))
            {
                return GetView516();
            }
            if ((index == 517))
            {
                return GetView517();
            }
            if ((index == 518))
            {
                return GetView518();
            }
            if ((index == 519))
            {
                return GetView519();
            }
            if ((index == 520))
            {
                return GetView520();
            }
            if ((index == 521))
            {
                return GetView521();
            }
            if ((index == 522))
            {
                return GetView522();
            }
            if ((index == 523))
            {
                return GetView523();
            }
            if ((index == 524))
            {
                return GetView524();
            }
            if ((index == 525))
            {
                return GetView525();
            }
            if ((index == 526))
            {
                return GetView526();
            }
            if ((index == 527))
            {
                return GetView527();
            }
            if ((index == 528))
            {
                return GetView528();
            }
            if ((index == 529))
            {
                return GetView529();
            }
            if ((index == 530))
            {
                return GetView530();
            }
            if ((index == 531))
            {
                return GetView531();
            }
            if ((index == 532))
            {
                return GetView532();
            }
            if ((index == 533))
            {
                return GetView533();
            }
            if ((index == 534))
            {
                return GetView534();
            }
            if ((index == 535))
            {
                return GetView535();
            }
            if ((index == 536))
            {
                return GetView536();
            }
            if ((index == 537))
            {
                return GetView537();
            }
            if ((index == 538))
            {
                return GetView538();
            }
            if ((index == 539))
            {
                return GetView539();
            }
            if ((index == 540))
            {
                return GetView540();
            }
            if ((index == 541))
            {
                return GetView541();
            }
            if ((index == 542))
            {
                return GetView542();
            }
            if ((index == 543))
            {
                return GetView543();
            }
            if ((index == 544))
            {
                return GetView544();
            }
            if ((index == 545))
            {
                return GetView545();
            }
            if ((index == 546))
            {
                return GetView546();
            }
            if ((index == 547))
            {
                return GetView547();
            }
            if ((index == 548))
            {
                return GetView548();
            }
            if ((index == 549))
            {
                return GetView549();
            }
            if ((index == 550))
            {
                return GetView550();
            }
            if ((index == 551))
            {
                return GetView551();
            }
            if ((index == 552))
            {
                return GetView552();
            }
            if ((index == 553))
            {
                return GetView553();
            }
            if ((index == 554))
            {
                return GetView554();
            }
            if ((index == 555))
            {
                return GetView555();
            }
            if ((index == 556))
            {
                return GetView556();
            }
            if ((index == 557))
            {
                return GetView557();
            }
            if ((index == 558))
            {
                return GetView558();
            }
            if ((index == 559))
            {
                return GetView559();
            }
            if ((index == 560))
            {
                return GetView560();
            }
            if ((index == 561))
            {
                return GetView561();
            }
            if ((index == 562))
            {
                return GetView562();
            }
            if ((index == 563))
            {
                return GetView563();
            }
            if ((index == 564))
            {
                return GetView564();
            }
            if ((index == 565))
            {
                return GetView565();
            }
            if ((index == 566))
            {
                return GetView566();
            }
            if ((index == 567))
            {
                return GetView567();
            }
            if ((index == 568))
            {
                return GetView568();
            }
            if ((index == 569))
            {
                return GetView569();
            }
            if ((index == 570))
            {
                return GetView570();
            }
            if ((index == 571))
            {
                return GetView571();
            }
            if ((index == 572))
            {
                return GetView572();
            }
            if ((index == 573))
            {
                return GetView573();
            }
            if ((index == 574))
            {
                return GetView574();
            }
            if ((index == 575))
            {
                return GetView575();
            }
            if ((index == 576))
            {
                return GetView576();
            }
            if ((index == 577))
            {
                return GetView577();
            }
            if ((index == 578))
            {
                return GetView578();
            }
            if ((index == 579))
            {
                return GetView579();
            }
            if ((index == 580))
            {
                return GetView580();
            }
            if ((index == 581))
            {
                return GetView581();
            }
            if ((index == 582))
            {
                return GetView582();
            }
            if ((index == 583))
            {
                return GetView583();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_Applications", @"
    SELECT VALUE -- Constructing aspnet_Applications
        [XODB.Module.BusinessObjects.Store.aspnet_Applications](T1.[aspnet_Applications.ApplicationName], T1.[aspnet_Applications.LoweredApplicationName], T1.[aspnet_Applications.ApplicationId], T1.[aspnet_Applications.Description])
    FROM (
        SELECT 
            T.ApplicationName AS [aspnet_Applications.ApplicationName], 
            T.LoweredApplicationName AS [aspnet_Applications.LoweredApplicationName], 
            T.ApplicationId AS [aspnet_Applications.ApplicationId], 
            T.Description AS [aspnet_Applications.Description], 
            True AS _from0
        FROM XODBC.Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_Membership
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2607);
            viewString.Append("\r\n    SELECT VALUE -- Constructing aspnet_Membership\r\n        [XODB.Module.Busin");
            viewString.Append("essObjects.Store.aspnet_Membership](T1.[aspnet_Membership.ApplicationId], T1.[as");
            viewString.Append("pnet_Membership.UserId], T1.[aspnet_Membership.Password], T1.[aspnet_Membership.");
            viewString.Append("PasswordFormat], T1.[aspnet_Membership.PasswordSalt], T1.[aspnet_Membership.Mobi");
            viewString.Append("lePIN], T1.[aspnet_Membership.Email], T1.[aspnet_Membership.LoweredEmail], T1.[a");
            viewString.Append("spnet_Membership.PasswordQuestion], T1.[aspnet_Membership.PasswordAnswer], T1.[a");
            viewString.Append("spnet_Membership.IsApproved], T1.[aspnet_Membership.IsLockedOut], T1.[aspnet_Mem");
            viewString.Append("bership.CreateDate], T1.[aspnet_Membership.LastLoginDate], T1.[aspnet_Membership");
            viewString.Append(".LastPasswordChangedDate], T1.[aspnet_Membership.LastLockoutDate], T1.[aspnet_Me");
            viewString.Append("mbership.FailedPasswordAttemptCount], T1.[aspnet_Membership.FailedPasswordAttemp");
            viewString.Append("tWindowStart], T1.[aspnet_Membership.FailedPasswordAnswerAttemptCount], T1.[aspn");
            viewString.Append("et_Membership.FailedPasswordAnswerAttemptWindowStart], T1.[aspnet_Membership.Com");
            viewString.Append("ment])\r\n    FROM (\r\n        SELECT \r\n            T.ApplicationId AS [aspnet_Memb");
            viewString.Append("ership.ApplicationId], \r\n            T.UserId AS [aspnet_Membership.UserId], \r\n ");
            viewString.Append("           T.Password AS [aspnet_Membership.Password], \r\n            T.PasswordF");
            viewString.Append("ormat AS [aspnet_Membership.PasswordFormat], \r\n            T.PasswordSalt AS [as");
            viewString.Append("pnet_Membership.PasswordSalt], \r\n            T.MobilePIN AS [aspnet_Membership.M");
            viewString.Append("obilePIN], \r\n            T.Email AS [aspnet_Membership.Email], \r\n            T.L");
            viewString.Append("oweredEmail AS [aspnet_Membership.LoweredEmail], \r\n            T.PasswordQuestio");
            viewString.Append("n AS [aspnet_Membership.PasswordQuestion], \r\n            T.PasswordAnswer AS [as");
            viewString.Append("pnet_Membership.PasswordAnswer], \r\n            T.IsApproved AS [aspnet_Membershi");
            viewString.Append("p.IsApproved], \r\n            T.IsLockedOut AS [aspnet_Membership.IsLockedOut], \r");
            viewString.Append("\n            T.CreateDate AS [aspnet_Membership.CreateDate], \r\n            T.Las");
            viewString.Append("tLoginDate AS [aspnet_Membership.LastLoginDate], \r\n            T.LastPasswordCha");
            viewString.Append("ngedDate AS [aspnet_Membership.LastPasswordChangedDate], \r\n            T.LastLoc");
            viewString.Append("koutDate AS [aspnet_Membership.LastLockoutDate], \r\n            T.FailedPasswordA");
            viewString.Append("ttemptCount AS [aspnet_Membership.FailedPasswordAttemptCount], \r\n            T.F");
            viewString.Append("ailedPasswordAttemptWindowStart AS [aspnet_Membership.FailedPasswordAttemptWindo");
            viewString.Append("wStart], \r\n            T.FailedPasswordAnswerAttemptCount AS [aspnet_Membership.");
            viewString.Append("FailedPasswordAnswerAttemptCount], \r\n            T.FailedPasswordAnswerAttemptWi");
            viewString.Append("ndowStart AS [aspnet_Membership.FailedPasswordAnswerAttemptWindowStart], \r\n     ");
            viewString.Append("       T.Comment AS [aspnet_Membership.Comment], \r\n            True AS _from0\r\n ");
            viewString.Append("       FROM XODBC.Memberships AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_Membership", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_Paths
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_Paths", @"
    SELECT VALUE -- Constructing aspnet_Paths
        [XODB.Module.BusinessObjects.Store.aspnet_Paths](T1.[aspnet_Paths.ApplicationId], T1.[aspnet_Paths.PathId], T1.[aspnet_Paths.Path], T1.[aspnet_Paths.LoweredPath])
    FROM (
        SELECT 
            T.ApplicationId AS [aspnet_Paths.ApplicationId], 
            T.PathId AS [aspnet_Paths.PathId], 
            T.Path AS [aspnet_Paths.Path], 
            T.LoweredPath AS [aspnet_Paths.LoweredPath], 
            True AS _from0
        FROM XODBC.Paths AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_PersonalizationAllUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_PersonalizationAllUsers", @"
    SELECT VALUE -- Constructing aspnet_PersonalizationAllUsers
        [XODB.Module.BusinessObjects.Store.aspnet_PersonalizationAllUsers](T1.[aspnet_PersonalizationAllUsers.PathId], T1.[aspnet_PersonalizationAllUsers.PageSettings], T1.[aspnet_PersonalizationAllUsers.LastUpdatedDate])
    FROM (
        SELECT 
            T.PathId AS [aspnet_PersonalizationAllUsers.PathId], 
            T.PageSettings AS [aspnet_PersonalizationAllUsers.PageSettings], 
            T.LastUpdatedDate AS [aspnet_PersonalizationAllUsers.LastUpdatedDate], 
            True AS _from0
        FROM XODBC.PersonalizationAllUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_PersonalizationPerUser
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_PersonalizationPerUser", @"
    SELECT VALUE -- Constructing aspnet_PersonalizationPerUser
        [XODB.Module.BusinessObjects.Store.aspnet_PersonalizationPerUser](T1.[aspnet_PersonalizationPerUser.Id], T1.[aspnet_PersonalizationPerUser.PathId], T1.[aspnet_PersonalizationPerUser.UserId], T1.[aspnet_PersonalizationPerUser.PageSettings], T1.[aspnet_PersonalizationPerUser.LastUpdatedDate])
    FROM (
        SELECT 
            T.Id AS [aspnet_PersonalizationPerUser.Id], 
            T.PathId AS [aspnet_PersonalizationPerUser.PathId], 
            T.UserId AS [aspnet_PersonalizationPerUser.UserId], 
            T.PageSettings AS [aspnet_PersonalizationPerUser.PageSettings], 
            T.LastUpdatedDate AS [aspnet_PersonalizationPerUser.LastUpdatedDate], 
            True AS _from0
        FROM XODBC.PersonalizationPerUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_Profile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_Profile", @"
    SELECT VALUE -- Constructing aspnet_Profile
        [XODB.Module.BusinessObjects.Store.aspnet_Profile](T1.[aspnet_Profile.UserId], T1.[aspnet_Profile.PropertyNames], T1.[aspnet_Profile.PropertyValuesString], T1.[aspnet_Profile.PropertyValuesBinary], T1.[aspnet_Profile.LastUpdatedDate])
    FROM (
        SELECT 
            T.UserId AS [aspnet_Profile.UserId], 
            T.PropertyNames AS [aspnet_Profile.PropertyNames], 
            T.PropertyValuesString AS [aspnet_Profile.PropertyValuesString], 
            T.PropertyValuesBinary AS [aspnet_Profile.PropertyValuesBinary], 
            T.LastUpdatedDate AS [aspnet_Profile.LastUpdatedDate], 
            True AS _from0
        FROM XODBC.Profiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_Roles", @"
    SELECT VALUE -- Constructing aspnet_Roles
        [XODB.Module.BusinessObjects.Store.aspnet_Roles](T1.[aspnet_Roles.ApplicationId], T1.[aspnet_Roles.RoleId], T1.[aspnet_Roles.RoleName], T1.[aspnet_Roles.LoweredRoleName], T1.[aspnet_Roles.Description])
    FROM (
        SELECT 
            T.ApplicationId AS [aspnet_Roles.ApplicationId], 
            T.RoleId AS [aspnet_Roles.RoleId], 
            T.RoleName AS [aspnet_Roles.RoleName], 
            T.LoweredRoleName AS [aspnet_Roles.LoweredRoleName], 
            T.Description AS [aspnet_Roles.Description], 
            True AS _from0
        FROM XODBC.Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_Users", @"
    SELECT VALUE -- Constructing aspnet_Users
        [XODB.Module.BusinessObjects.Store.aspnet_Users](T1.[aspnet_Users.ApplicationId], T1.[aspnet_Users.UserId], T1.[aspnet_Users.UserName], T1.[aspnet_Users.LoweredUserName], T1.[aspnet_Users.MobileAlias], T1.[aspnet_Users.IsAnonymous], T1.[aspnet_Users.LastActivityDate])
    FROM (
        SELECT 
            T.ApplicationId AS [aspnet_Users.ApplicationId], 
            T.UserId AS [aspnet_Users.UserId], 
            T.UserName AS [aspnet_Users.UserName], 
            T.LoweredUserName AS [aspnet_Users.LoweredUserName], 
            T.MobileAlias AS [aspnet_Users.MobileAlias], 
            T.IsAnonymous AS [aspnet_Users.IsAnonymous], 
            T.LastActivityDate AS [aspnet_Users.LastActivityDate], 
            True AS _from0
        FROM XODBC.Users AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_UsersInRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_UsersInRoles", @"
    SELECT VALUE -- Constructing aspnet_UsersInRoles
        [XODB.Module.BusinessObjects.Store.aspnet_UsersInRoles](T1.[aspnet_UsersInRoles.UserId], T1.[aspnet_UsersInRoles.RoleId])
    FROM (
        SELECT 
            Key(T.aspnet_Users).UserId AS [aspnet_UsersInRoles.UserId], 
            Key(T.aspnet_Roles).RoleId AS [aspnet_UsersInRoles.RoleId], 
            True AS _from0
        FROM XODBC.aspnet_UsersInRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Applications", @"
    SELECT VALUE -- Constructing Applications
        [XODB.Module.BusinessObjects.Applications](T1.Applications_ApplicationName, T1.Applications_LoweredApplicationName, T1.Applications_ApplicationId, T1.Applications_Description)
    FROM (
        SELECT 
            T.ApplicationName AS Applications_ApplicationName, 
            T.LoweredApplicationName AS Applications_LoweredApplicationName, 
            T.ApplicationId AS Applications_ApplicationId, 
            T.Description AS Applications_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Memberships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2250);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Memberships\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.Membership](T1.Membership_ApplicationId, T1.Membership_UserId, T1.Membershi");
            viewString.Append("p_Password, T1.Membership_PasswordFormat, T1.Membership_PasswordSalt, T1.Members");
            viewString.Append("hip_MobilePIN, T1.Membership_Email, T1.Membership_LoweredEmail, T1.Membership_Pa");
            viewString.Append("sswordQuestion, T1.Membership_PasswordAnswer, T1.Membership_IsApproved, T1.Membe");
            viewString.Append("rship_IsLockedOut, T1.Membership_CreateDate, T1.Membership_LastLoginDate, T1.Mem");
            viewString.Append("bership_LastPasswordChangedDate, T1.Membership_LastLockoutDate, T1.Membership_Fa");
            viewString.Append("iledPasswordAttemptCount, T1.Membership_FailedPasswordAttemptWindowStart, T1.Mem");
            viewString.Append("bership_FailedPasswordAnswerAttemptCount, T1.Membership_FailedPasswordAnswerAtte");
            viewString.Append("mptWindowStart, T1.Membership_Comment)\r\n    FROM (\r\n        SELECT \r\n           ");
            viewString.Append(" T.ApplicationId AS Membership_ApplicationId, \r\n            T.UserId AS Membersh");
            viewString.Append("ip_UserId, \r\n            T.Password AS Membership_Password, \r\n            T.Pass");
            viewString.Append("wordFormat AS Membership_PasswordFormat, \r\n            T.PasswordSalt AS Members");
            viewString.Append("hip_PasswordSalt, \r\n            T.MobilePIN AS Membership_MobilePIN, \r\n         ");
            viewString.Append("   T.Email AS Membership_Email, \r\n            T.LoweredEmail AS Membership_Lower");
            viewString.Append("edEmail, \r\n            T.PasswordQuestion AS Membership_PasswordQuestion, \r\n    ");
            viewString.Append("        T.PasswordAnswer AS Membership_PasswordAnswer, \r\n            T.IsApprove");
            viewString.Append("d AS Membership_IsApproved, \r\n            T.IsLockedOut AS Membership_IsLockedOu");
            viewString.Append("t, \r\n            T.CreateDate AS Membership_CreateDate, \r\n            T.LastLogi");
            viewString.Append("nDate AS Membership_LastLoginDate, \r\n            T.LastPasswordChangedDate AS Me");
            viewString.Append("mbership_LastPasswordChangedDate, \r\n            T.LastLockoutDate AS Membership_");
            viewString.Append("LastLockoutDate, \r\n            T.FailedPasswordAttemptCount AS Membership_Failed");
            viewString.Append("PasswordAttemptCount, \r\n            T.FailedPasswordAttemptWindowStart AS Member");
            viewString.Append("ship_FailedPasswordAttemptWindowStart, \r\n            T.FailedPasswordAnswerAttem");
            viewString.Append("ptCount AS Membership_FailedPasswordAnswerAttemptCount, \r\n            T.FailedPa");
            viewString.Append("sswordAnswerAttemptWindowStart AS Membership_FailedPasswordAnswerAttemptWindowSt");
            viewString.Append("art, \r\n            T.Comment AS Membership_Comment, \r\n            True AS _from0");
            viewString.Append("\r\n        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_Membership AS T\r\n ");
            viewString.Append("   ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Memberships", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Paths
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Paths", @"
    SELECT VALUE -- Constructing Paths
        [XODB.Module.BusinessObjects.Paths](T1.Paths_ApplicationId, T1.Paths_PathId, T1.Paths_Path, T1.Paths_LoweredPath)
    FROM (
        SELECT 
            T.ApplicationId AS Paths_ApplicationId, 
            T.PathId AS Paths_PathId, 
            T.Path AS Paths_Path, 
            T.LoweredPath AS Paths_LoweredPath, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_Paths AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.PersonalizationAllUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.PersonalizationAllUsers", @"
    SELECT VALUE -- Constructing PersonalizationAllUsers
        [XODB.Module.BusinessObjects.PersonalizationAllUsers](T1.PersonalizationAllUsers_PathId, T1.PersonalizationAllUsers_PageSettings, T1.PersonalizationAllUsers_LastUpdatedDate)
    FROM (
        SELECT 
            T.PathId AS PersonalizationAllUsers_PathId, 
            T.PageSettings AS PersonalizationAllUsers_PageSettings, 
            T.LastUpdatedDate AS PersonalizationAllUsers_LastUpdatedDate, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_PersonalizationAllUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.PersonalizationPerUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.PersonalizationPerUsers", @"
    SELECT VALUE -- Constructing PersonalizationPerUsers
        [XODB.Module.BusinessObjects.PersonalizationPerUser](T1.PersonalizationPerUser_Id, T1.PersonalizationPerUser_PathId, T1.PersonalizationPerUser_UserId, T1.PersonalizationPerUser_PageSettings, T1.PersonalizationPerUser_LastUpdatedDate)
    FROM (
        SELECT 
            T.Id AS PersonalizationPerUser_Id, 
            T.PathId AS PersonalizationPerUser_PathId, 
            T.UserId AS PersonalizationPerUser_UserId, 
            T.PageSettings AS PersonalizationPerUser_PageSettings, 
            T.LastUpdatedDate AS PersonalizationPerUser_LastUpdatedDate, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_PersonalizationPerUser AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Profiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Profiles", @"
    SELECT VALUE -- Constructing Profiles
        [XODB.Module.BusinessObjects.Profile](T1.Profile_UserId, T1.Profile_PropertyNames, T1.Profile_PropertyValuesString, T1.Profile_PropertyValuesBinary, T1.Profile_LastUpdatedDate)
    FROM (
        SELECT 
            T.UserId AS Profile_UserId, 
            T.PropertyNames AS Profile_PropertyNames, 
            T.PropertyValuesString AS Profile_PropertyValuesString, 
            T.PropertyValuesBinary AS Profile_PropertyValuesBinary, 
            T.LastUpdatedDate AS Profile_LastUpdatedDate, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_Profile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Roles", @"
    SELECT VALUE -- Constructing Roles
        [XODB.Module.BusinessObjects.Roles](T1.Roles_ApplicationId, T1.Roles_RoleId, T1.Roles_RoleName, T1.Roles_LoweredRoleName, T1.Roles_Description)
    FROM (
        SELECT 
            T.ApplicationId AS Roles_ApplicationId, 
            T.RoleId AS Roles_RoleId, 
            T.RoleName AS Roles_RoleName, 
            T.LoweredRoleName AS Roles_LoweredRoleName, 
            T.Description AS Roles_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Users", @"
    SELECT VALUE -- Constructing Users
        [XODB.Module.BusinessObjects.Users](T1.Users_ApplicationId, T1.Users_UserId, T1.Users_UserName, T1.Users_LoweredUserName, T1.Users_MobileAlias, T1.Users_IsAnonymous, T1.Users_LastActivityDate)
    FROM (
        SELECT 
            T.ApplicationId AS Users_ApplicationId, 
            T.UserId AS Users_UserId, 
            T.UserName AS Users_UserName, 
            T.LoweredUserName AS Users_LoweredUserName, 
            T.MobileAlias AS Users_MobileAlias, 
            T.IsAnonymous AS Users_IsAnonymous, 
            T.LastActivityDate AS Users_LastActivityDate, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_Users AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.aspnet_UsersInRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.aspnet_UsersInRoles", @"
    SELECT VALUE -- Constructing aspnet_UsersInRoles
        [XODB.Module.BusinessObjects.aspnet_UsersInRoles](T3.[aspnet_UsersInRoles.aspnet_Roles], T3.[aspnet_UsersInRoles.aspnet_Users])
    FROM (
        SELECT -- Constructing aspnet_Roles
            CreateRef(XODBC.Roles, row(T2.[aspnet_UsersInRoles.aspnet_Roles.RoleId]), [XODB.Module.BusinessObjects.Roles]) AS [aspnet_UsersInRoles.aspnet_Roles], 
            T2.[aspnet_UsersInRoles.aspnet_Users]
        FROM (
            SELECT -- Constructing aspnet_Users
                T1.[aspnet_UsersInRoles.aspnet_Roles.RoleId], 
                CreateRef(XODBC.Users, row(T1.[aspnet_UsersInRoles.aspnet_Users.UserId]), [XODB.Module.BusinessObjects.Users]) AS [aspnet_UsersInRoles.aspnet_Users]
            FROM (
                SELECT 
                    T.RoleId AS [aspnet_UsersInRoles.aspnet_Roles.RoleId], 
                    T.UserId AS [aspnet_UsersInRoles.aspnet_Users.UserId], 
                    True AS _from0
                FROM XODBModuleBusinessObjectsStoreContainer.aspnet_UsersInRoles AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_SchemaVersions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_SchemaVersions", @"
    SELECT VALUE -- Constructing aspnet_SchemaVersions
        [XODB.Module.BusinessObjects.Store.aspnet_SchemaVersions](T1.[aspnet_SchemaVersions.Feature], T1.[aspnet_SchemaVersions.CompatibleSchemaVersion], T1.[aspnet_SchemaVersions.IsCurrentVersion])
    FROM (
        SELECT 
            T.Feature AS [aspnet_SchemaVersions.Feature], 
            T.CompatibleSchemaVersion AS [aspnet_SchemaVersions.CompatibleSchemaVersion], 
            T.IsCurrentVersion AS [aspnet_SchemaVersions.IsCurrentVersion], 
            True AS _from0
        FROM XODBC.SchemaVersions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.SchemaVersions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SchemaVersions", @"
    SELECT VALUE -- Constructing SchemaVersions
        [XODB.Module.BusinessObjects.SchemaVersions](T1.SchemaVersions_Feature, T1.SchemaVersions_CompatibleSchemaVersion, T1.SchemaVersions_IsCurrentVersion)
    FROM (
        SELECT 
            T.Feature AS SchemaVersions_Feature, 
            T.CompatibleSchemaVersion AS SchemaVersions_CompatibleSchemaVersion, 
            T.IsCurrentVersion AS SchemaVersions_IsCurrentVersion, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.aspnet_SchemaVersions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.aspnet_WebEvent_Events
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.aspnet_WebEvent_Events", "\r\n    SELECT VALUE -- Constructing aspnet_WebEvent_Events\r\n        [XODB.Module.B" +
                    "usinessObjects.Store.aspnet_WebEvent_Events](T1.[aspnet_WebEvent_Events.EventId]" +
                    ", T1.[aspnet_WebEvent_Events.EventTimeUtc], T1.[aspnet_WebEvent_Events.EventTime" +
                    "], T1.[aspnet_WebEvent_Events.EventType], T1.[aspnet_WebEvent_Events.EventSequen" +
                    "ce], T1.[aspnet_WebEvent_Events.EventOccurrence], T1.[aspnet_WebEvent_Events.Eve" +
                    "ntCode], T1.[aspnet_WebEvent_Events.EventDetailCode], T1.[aspnet_WebEvent_Events" +
                    ".Message], T1.[aspnet_WebEvent_Events.ApplicationPath], T1.[aspnet_WebEvent_Even" +
                    "ts.ApplicationVirtualPath], T1.[aspnet_WebEvent_Events.MachineName], T1.[aspnet_" +
                    "WebEvent_Events.RequestUrl], T1.[aspnet_WebEvent_Events.ExceptionType], T1.[aspn" +
                    "et_WebEvent_Events.Details])\r\n    FROM (\r\n        SELECT \r\n            T.EventId" +
                    " AS [aspnet_WebEvent_Events.EventId], \r\n            T.EventTimeUtc AS [aspnet_We" +
                    "bEvent_Events.EventTimeUtc], \r\n            T.EventTime AS [aspnet_WebEvent_Event" +
                    "s.EventTime], \r\n            T.EventType AS [aspnet_WebEvent_Events.EventType], \r" +
                    "\n            T.EventSequence AS [aspnet_WebEvent_Events.EventSequence], \r\n      " +
                    "      T.EventOccurrence AS [aspnet_WebEvent_Events.EventOccurrence], \r\n         " +
                    "   T.EventCode AS [aspnet_WebEvent_Events.EventCode], \r\n            T.EventDetai" +
                    "lCode AS [aspnet_WebEvent_Events.EventDetailCode], \r\n            T.Message AS [a" +
                    "spnet_WebEvent_Events.Message], \r\n            T.ApplicationPath AS [aspnet_WebEv" +
                    "ent_Events.ApplicationPath], \r\n            T.ApplicationVirtualPath AS [aspnet_W" +
                    "ebEvent_Events.ApplicationVirtualPath], \r\n            T.MachineName AS [aspnet_W" +
                    "ebEvent_Events.MachineName], \r\n            T.RequestUrl AS [aspnet_WebEvent_Even" +
                    "ts.RequestUrl], \r\n            T.ExceptionType AS [aspnet_WebEvent_Events.Excepti" +
                    "onType], \r\n            T.Details AS [aspnet_WebEvent_Events.Details], \r\n        " +
                    "    True AS _from0\r\n        FROM XODBC.WebEvent_Events AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WebEvent_Events
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WebEvent_Events", "\r\n    SELECT VALUE -- Constructing WebEvent_Events\r\n        [XODB.Module.Business" +
                    "Objects.WebEvent_Events](T1.[WebEvent_Events.EventId], T1.[WebEvent_Events.Event" +
                    "TimeUtc], T1.[WebEvent_Events.EventTime], T1.[WebEvent_Events.EventType], T1.[We" +
                    "bEvent_Events.EventSequence], T1.[WebEvent_Events.EventOccurrence], T1.[WebEvent" +
                    "_Events.EventCode], T1.[WebEvent_Events.EventDetailCode], T1.[WebEvent_Events.Me" +
                    "ssage], T1.[WebEvent_Events.ApplicationPath], T1.[WebEvent_Events.ApplicationVir" +
                    "tualPath], T1.[WebEvent_Events.MachineName], T1.[WebEvent_Events.RequestUrl], T1" +
                    ".[WebEvent_Events.ExceptionType], T1.[WebEvent_Events.Details])\r\n    FROM (\r\n   " +
                    "     SELECT \r\n            T.EventId AS [WebEvent_Events.EventId], \r\n            " +
                    "T.EventTimeUtc AS [WebEvent_Events.EventTimeUtc], \r\n            T.EventTime AS [" +
                    "WebEvent_Events.EventTime], \r\n            T.EventType AS [WebEvent_Events.EventT" +
                    "ype], \r\n            T.EventSequence AS [WebEvent_Events.EventSequence], \r\n      " +
                    "      T.EventOccurrence AS [WebEvent_Events.EventOccurrence], \r\n            T.Ev" +
                    "entCode AS [WebEvent_Events.EventCode], \r\n            T.EventDetailCode AS [WebE" +
                    "vent_Events.EventDetailCode], \r\n            T.Message AS [WebEvent_Events.Messag" +
                    "e], \r\n            T.ApplicationPath AS [WebEvent_Events.ApplicationPath], \r\n    " +
                    "        T.ApplicationVirtualPath AS [WebEvent_Events.ApplicationVirtualPath], \r\n" +
                    "            T.MachineName AS [WebEvent_Events.MachineName], \r\n            T.Requ" +
                    "estUrl AS [WebEvent_Events.RequestUrl], \r\n            T.ExceptionType AS [WebEve" +
                    "nt_Events.ExceptionType], \r\n            T.Details AS [WebEvent_Events.Details], " +
                    "\r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContain" +
                    "er.aspnet_WebEvent_Events AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_Credit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_Credit", "\r\n    SELECT VALUE -- Constructing E_Credit\r\n        [XODB.Module.BusinessObjects" +
                    ".Store.E_Credit](T1.[E_Credit.CreditID], T1.[E_Credit.SupplyID], T1.[E_Credit.In" +
                    "voiceID], T1.[E_Credit.InvoiceLineID], T1.[E_Credit.IsCreditNote], T1.[E_Credit." +
                    "IsRefund], T1.[E_Credit.OriginalCredit], T1.[E_Credit.CurrencyID], T1.[E_Credit." +
                    "CreditAmount], T1.[E_Credit.Version], T1.[E_Credit.VersionAntecedentID], T1.[E_C" +
                    "redit.VersionCertainty], T1.[E_Credit.VersionWorkflowInstanceID], T1.[E_Credit.V" +
                    "ersionUpdatedBy], T1.[E_Credit.VersionDeletedBy], T1.[E_Credit.VersionOwnerConta" +
                    "ctID], T1.[E_Credit.VersionOwnerCompanyID], T1.[E_Credit.VersionUpdated])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.CreditID AS [E_Credit.CreditID], \r\n       " +
                    "     T.SupplyID AS [E_Credit.SupplyID], \r\n            T.InvoiceID AS [E_Credit.I" +
                    "nvoiceID], \r\n            T.InvoiceLineID AS [E_Credit.InvoiceLineID], \r\n        " +
                    "    T.IsCreditNote AS [E_Credit.IsCreditNote], \r\n            T.IsRefund AS [E_Cr" +
                    "edit.IsRefund], \r\n            T.OriginalCredit AS [E_Credit.OriginalCredit], \r\n " +
                    "           T.CurrencyID AS [E_Credit.CurrencyID], \r\n            T.CreditAmount A" +
                    "S [E_Credit.CreditAmount], \r\n            T.Version AS [E_Credit.Version], \r\n    " +
                    "        T.VersionAntecedentID AS [E_Credit.VersionAntecedentID], \r\n            T" +
                    ".VersionCertainty AS [E_Credit.VersionCertainty], \r\n            T.VersionWorkflo" +
                    "wInstanceID AS [E_Credit.VersionWorkflowInstanceID], \r\n            T.VersionUpda" +
                    "tedBy AS [E_Credit.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [E_Cre" +
                    "dit.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [E_Credit.Versio" +
                    "nOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [E_Credit.VersionOwne" +
                    "rCompanyID], \r\n            T.VersionUpdated AS [E_Credit.VersionUpdated], \r\n    " +
                    "        True AS _from0\r\n        FROM XODBC.Credits AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_Currency
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_Currency", "\r\n    SELECT VALUE -- Constructing E_Currency\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Store.E_Currency](T1.[E_Currency.CurrencyID], T1.[E_Currency.CountryID], T1.[" +
                    "E_Currency.EquivalentMultiplier], T1.[E_Currency.BuyMultiplier], T1.[E_Currency." +
                    "SellMultiplier], T1.[E_Currency.Version], T1.[E_Currency.VersionAntecedentID], T" +
                    "1.[E_Currency.VersionCertainty], T1.[E_Currency.VersionWorkflowInstanceID], T1.[" +
                    "E_Currency.VersionUpdatedBy], T1.[E_Currency.VersionDeletedBy], T1.[E_Currency.V" +
                    "ersionOwnerContactID], T1.[E_Currency.VersionOwnerCompanyID], T1.[E_Currency.Ver" +
                    "sionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.CurrencyID AS [E_Curre" +
                    "ncy.CurrencyID], \r\n            T.CountryID AS [E_Currency.CountryID], \r\n        " +
                    "    T.EquivalentMultiplier AS [E_Currency.EquivalentMultiplier], \r\n            T" +
                    ".BuyMultiplier AS [E_Currency.BuyMultiplier], \r\n            T.SellMultiplier AS " +
                    "[E_Currency.SellMultiplier], \r\n            T.Version AS [E_Currency.Version], \r\n" +
                    "            T.VersionAntecedentID AS [E_Currency.VersionAntecedentID], \r\n       " +
                    "     T.VersionCertainty AS [E_Currency.VersionCertainty], \r\n            T.Versio" +
                    "nWorkflowInstanceID AS [E_Currency.VersionWorkflowInstanceID], \r\n            T.V" +
                    "ersionUpdatedBy AS [E_Currency.VersionUpdatedBy], \r\n            T.VersionDeleted" +
                    "By AS [E_Currency.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [E" +
                    "_Currency.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [E_Cu" +
                    "rrency.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [E_Currency.Ver" +
                    "sionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Currencies AS T\r\n" +
                    "    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_DictionaryTax
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2313);
            viewString.Append("\r\n    SELECT VALUE -- Constructing E_DictionaryTax\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.Store.E_DictionaryTax](T1.[E_DictionaryTax.TaxID], T1.[E_DictionaryTax.");
            viewString.Append("TaxName], T1.[E_DictionaryTax.TaxRate], T1.[E_DictionaryTax.TaxRateUnitID], T1.[");
            viewString.Append("E_DictionaryTax.CountryID], T1.[E_DictionaryTax.CountryStateID], T1.[E_Dictionar");
            viewString.Append("yTax.ProvinceID], T1.[E_DictionaryTax.ApplicableFrom], T1.[E_DictionaryTax.Appli");
            viewString.Append("cableUntil], T1.[E_DictionaryTax.BracketMinimum], T1.[E_DictionaryTax.BracketMax");
            viewString.Append("imum], T1.[E_DictionaryTax.Version], T1.[E_DictionaryTax.VersionAntecedentID], T");
            viewString.Append("1.[E_DictionaryTax.VersionCertainty], T1.[E_DictionaryTax.VersionWorkflowInstanc");
            viewString.Append("eID], T1.[E_DictionaryTax.VersionUpdatedBy], T1.[E_DictionaryTax.VersionDeletedB");
            viewString.Append("y], T1.[E_DictionaryTax.VersionOwnerContactID], T1.[E_DictionaryTax.VersionOwner");
            viewString.Append("CompanyID], T1.[E_DictionaryTax.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n ");
            viewString.Append("           T.TaxID AS [E_DictionaryTax.TaxID], \r\n            T.TaxName AS [E_Dic");
            viewString.Append("tionaryTax.TaxName], \r\n            T.TaxRate AS [E_DictionaryTax.TaxRate], \r\n   ");
            viewString.Append("         T.TaxRateUnitID AS [E_DictionaryTax.TaxRateUnitID], \r\n            T.Cou");
            viewString.Append("ntryID AS [E_DictionaryTax.CountryID], \r\n            T.CountryStateID AS [E_Dict");
            viewString.Append("ionaryTax.CountryStateID], \r\n            T.ProvinceID AS [E_DictionaryTax.Provin");
            viewString.Append("ceID], \r\n            T.ApplicableFrom AS [E_DictionaryTax.ApplicableFrom], \r\n   ");
            viewString.Append("         T.ApplicableUntil AS [E_DictionaryTax.ApplicableUntil], \r\n            T");
            viewString.Append(".BracketMinimum AS [E_DictionaryTax.BracketMinimum], \r\n            T.BracketMaxi");
            viewString.Append("mum AS [E_DictionaryTax.BracketMaximum], \r\n            T.Version AS [E_Dictionar");
            viewString.Append("yTax.Version], \r\n            T.VersionAntecedentID AS [E_DictionaryTax.VersionAn");
            viewString.Append("tecedentID], \r\n            T.VersionCertainty AS [E_DictionaryTax.VersionCertain");
            viewString.Append("ty], \r\n            T.VersionWorkflowInstanceID AS [E_DictionaryTax.VersionWorkfl");
            viewString.Append("owInstanceID], \r\n            T.VersionUpdatedBy AS [E_DictionaryTax.VersionUpdat");
            viewString.Append("edBy], \r\n            T.VersionDeletedBy AS [E_DictionaryTax.VersionDeletedBy], \r");
            viewString.Append("\n            T.VersionOwnerContactID AS [E_DictionaryTax.VersionOwnerContactID],");
            viewString.Append(" \r\n            T.VersionOwnerCompanyID AS [E_DictionaryTax.VersionOwnerCompanyID");
            viewString.Append("], \r\n            T.VersionUpdated AS [E_DictionaryTax.VersionUpdated], \r\n       ");
            viewString.Append("     True AS _from0\r\n        FROM XODBC.DictionaryTaxes AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_DictionaryTax", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_Invoice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3131);
            viewString.Append("\r\n    SELECT VALUE -- Constructing E_Invoice\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Store.E_Invoice](T1.[E_Invoice.InvoiceID], T1.[E_Invoice.Sequence], T1.[E_Inv");
            viewString.Append("oice.SupplierCompanyID], T1.[E_Invoice.SupplierCompanyAddressID], T1.[E_Invoice.");
            viewString.Append("SupplierAccountID], T1.[E_Invoice.SupplierReferenceNumber], T1.[E_Invoice.Custom");
            viewString.Append("erCompanyID], T1.[E_Invoice.CustomerCompanyAddressID], T1.[E_Invoice.CustomerAcc");
            viewString.Append("ountID], T1.[E_Invoice.CustomerReferenceNumber], T1.[E_Invoice.FreightTax], T1.[");
            viewString.Append("E_Invoice.FreightAmount], T1.[E_Invoice.DiscountIncludesFreight], T1.[E_Invoice.");
            viewString.Append("DiscountAllFreight], T1.[E_Invoice.DiscountAmount], T1.[E_Invoice.TaxAmount], T1");
            viewString.Append(".[E_Invoice.OriginalTotal], T1.[E_Invoice.CurrencyID], T1.[E_Invoice.Total], T1.");
            viewString.Append("[E_Invoice.Dated], T1.[E_Invoice.Communicated], T1.[E_Invoice.Version], T1.[E_In");
            viewString.Append("voice.VersionAntecedentID], T1.[E_Invoice.VersionCertainty], T1.[E_Invoice.Versi");
            viewString.Append("onWorkflowInstanceID], T1.[E_Invoice.VersionUpdatedBy], T1.[E_Invoice.VersionDel");
            viewString.Append("etedBy], T1.[E_Invoice.VersionOwnerContactID], T1.[E_Invoice.VersionOwnerCompany");
            viewString.Append("ID], T1.[E_Invoice.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.");
            viewString.Append("InvoiceID AS [E_Invoice.InvoiceID], \r\n            T.Sequence AS [E_Invoice.Seque");
            viewString.Append("nce], \r\n            T.SupplierCompanyID AS [E_Invoice.SupplierCompanyID], \r\n    ");
            viewString.Append("        T.SupplierCompanyAddressID AS [E_Invoice.SupplierCompanyAddressID], \r\n  ");
            viewString.Append("          T.SupplierAccountID AS [E_Invoice.SupplierAccountID], \r\n            T.");
            viewString.Append("SupplierReferenceNumber AS [E_Invoice.SupplierReferenceNumber], \r\n            T.");
            viewString.Append("CustomerCompanyID AS [E_Invoice.CustomerCompanyID], \r\n            T.CustomerComp");
            viewString.Append("anyAddressID AS [E_Invoice.CustomerCompanyAddressID], \r\n            T.CustomerAc");
            viewString.Append("countID AS [E_Invoice.CustomerAccountID], \r\n            T.CustomerReferenceNumbe");
            viewString.Append("r AS [E_Invoice.CustomerReferenceNumber], \r\n            T.FreightTax AS [E_Invoi");
            viewString.Append("ce.FreightTax], \r\n            T.FreightAmount AS [E_Invoice.FreightAmount], \r\n  ");
            viewString.Append("          T.DiscountIncludesFreight AS [E_Invoice.DiscountIncludesFreight], \r\n  ");
            viewString.Append("          T.DiscountAllFreight AS [E_Invoice.DiscountAllFreight], \r\n            ");
            viewString.Append("T.DiscountAmount AS [E_Invoice.DiscountAmount], \r\n            T.TaxAmount AS [E_");
            viewString.Append("Invoice.TaxAmount], \r\n            T.OriginalTotal AS [E_Invoice.OriginalTotal], ");
            viewString.Append("\r\n            T.CurrencyID AS [E_Invoice.CurrencyID], \r\n            T.Total AS [");
            viewString.Append("E_Invoice.Total], \r\n            T.Dated AS [E_Invoice.Dated], \r\n            T.Co");
            viewString.Append("mmunicated AS [E_Invoice.Communicated], \r\n            T.Version AS [E_Invoice.Ve");
            viewString.Append("rsion], \r\n            T.VersionAntecedentID AS [E_Invoice.VersionAntecedentID], ");
            viewString.Append("\r\n            T.VersionCertainty AS [E_Invoice.VersionCertainty], \r\n            ");
            viewString.Append("T.VersionWorkflowInstanceID AS [E_Invoice.VersionWorkflowInstanceID], \r\n        ");
            viewString.Append("    T.VersionUpdatedBy AS [E_Invoice.VersionUpdatedBy], \r\n            T.VersionD");
            viewString.Append("eletedBy AS [E_Invoice.VersionDeletedBy], \r\n            T.VersionOwnerContactID ");
            viewString.Append("AS [E_Invoice.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [");
            viewString.Append("E_Invoice.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [E_Invoice.V");
            viewString.Append("ersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Invoices AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_Invoice", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_InvoiceLine
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2276);
            viewString.Append("\r\n    SELECT VALUE -- Constructing E_InvoiceLine\r\n        [XODB.Module.BusinessO");
            viewString.Append("bjects.Store.E_InvoiceLine](T1.[E_InvoiceLine.InvoiceLineID], T1.[E_InvoiceLine.");
            viewString.Append("InvoiceID], T1.[E_InvoiceLine.SupplyItemID], T1.[E_InvoiceLine.ReferenceType], T");
            viewString.Append("1.[E_InvoiceLine.ReferenceID], T1.[E_InvoiceLine.Description], T1.[E_InvoiceLine");
            viewString.Append(".Quantity], T1.[E_InvoiceLine.TaxID], T1.[E_InvoiceLine.Tax], T1.[E_InvoiceLine.");
            viewString.Append("OriginalSubtotal], T1.[E_InvoiceLine.CurrencyID], T1.[E_InvoiceLine.Subtotal], T");
            viewString.Append("1.[E_InvoiceLine.Version], T1.[E_InvoiceLine.VersionAntecedentID], T1.[E_Invoice");
            viewString.Append("Line.VersionCertainty], T1.[E_InvoiceLine.VersionWorkflowInstanceID], T1.[E_Invo");
            viewString.Append("iceLine.VersionUpdatedBy], T1.[E_InvoiceLine.VersionDeletedBy], T1.[E_InvoiceLin");
            viewString.Append("e.VersionOwnerContactID], T1.[E_InvoiceLine.VersionOwnerCompanyID], T1.[E_Invoic");
            viewString.Append("eLine.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.InvoiceLineID");
            viewString.Append(" AS [E_InvoiceLine.InvoiceLineID], \r\n            T.InvoiceID AS [E_InvoiceLine.I");
            viewString.Append("nvoiceID], \r\n            T.SupplyItemID AS [E_InvoiceLine.SupplyItemID], \r\n     ");
            viewString.Append("       T.ReferenceType AS [E_InvoiceLine.ReferenceType], \r\n            T.Referen");
            viewString.Append("ceID AS [E_InvoiceLine.ReferenceID], \r\n            T.Description AS [E_InvoiceLi");
            viewString.Append("ne.Description], \r\n            T.Quantity AS [E_InvoiceLine.Quantity], \r\n       ");
            viewString.Append("     T.TaxID AS [E_InvoiceLine.TaxID], \r\n            T.Tax AS [E_InvoiceLine.Tax");
            viewString.Append("], \r\n            T.OriginalSubtotal AS [E_InvoiceLine.OriginalSubtotal], \r\n     ");
            viewString.Append("       T.CurrencyID AS [E_InvoiceLine.CurrencyID], \r\n            T.Subtotal AS [");
            viewString.Append("E_InvoiceLine.Subtotal], \r\n            T.Version AS [E_InvoiceLine.Version], \r\n ");
            viewString.Append("           T.VersionAntecedentID AS [E_InvoiceLine.VersionAntecedentID], \r\n     ");
            viewString.Append("       T.VersionCertainty AS [E_InvoiceLine.VersionCertainty], \r\n            T.V");
            viewString.Append("ersionWorkflowInstanceID AS [E_InvoiceLine.VersionWorkflowInstanceID], \r\n       ");
            viewString.Append("     T.VersionUpdatedBy AS [E_InvoiceLine.VersionUpdatedBy], \r\n            T.Ver");
            viewString.Append("sionDeletedBy AS [E_InvoiceLine.VersionDeletedBy], \r\n            T.VersionOwnerC");
            viewString.Append("ontactID AS [E_InvoiceLine.VersionOwnerContactID], \r\n            T.VersionOwnerC");
            viewString.Append("ompanyID AS [E_InvoiceLine.VersionOwnerCompanyID], \r\n            T.VersionUpdate");
            viewString.Append("d AS [E_InvoiceLine.VersionUpdated], \r\n            True AS _from0\r\n        FROM ");
            viewString.Append("XODBC.InvoiceLines AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_InvoiceLine", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_Journal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_Journal", "\r\n    SELECT VALUE -- Constructing E_Journal\r\n        [XODB.Module.BusinessObject" +
                    "s.Store.E_Journal](T1.[E_Journal.JournalID], T1.[E_Journal.ReferenceType], T1.[E" +
                    "_Journal.ReferenceID], T1.[E_Journal.ReferenceDate], T1.[E_Journal.AccountID], T" +
                    "1.[E_Journal.OriginalAmount], T1.[E_Journal.CurrencyID], T1.[E_Journal.Amount], " +
                    "T1.[E_Journal.Version], T1.[E_Journal.VersionAntecedentID], T1.[E_Journal.Versio" +
                    "nCertainty], T1.[E_Journal.VersionWorkflowInstanceID], T1.[E_Journal.VersionUpda" +
                    "tedBy], T1.[E_Journal.VersionDeletedBy], T1.[E_Journal.VersionOwnerContactID], T" +
                    "1.[E_Journal.VersionOwnerCompanyID], T1.[E_Journal.VersionUpdated])\r\n    FROM (\r" +
                    "\n        SELECT \r\n            T.JournalID AS [E_Journal.JournalID], \r\n          " +
                    "  T.ReferenceType AS [E_Journal.ReferenceType], \r\n            T.ReferenceID AS [" +
                    "E_Journal.ReferenceID], \r\n            T.ReferenceDate AS [E_Journal.ReferenceDat" +
                    "e], \r\n            T.AccountID AS [E_Journal.AccountID], \r\n            T.Original" +
                    "Amount AS [E_Journal.OriginalAmount], \r\n            T.CurrencyID AS [E_Journal.C" +
                    "urrencyID], \r\n            T.Amount AS [E_Journal.Amount], \r\n            T.Versio" +
                    "n AS [E_Journal.Version], \r\n            T.VersionAntecedentID AS [E_Journal.Vers" +
                    "ionAntecedentID], \r\n            T.VersionCertainty AS [E_Journal.VersionCertaint" +
                    "y], \r\n            T.VersionWorkflowInstanceID AS [E_Journal.VersionWorkflowInsta" +
                    "nceID], \r\n            T.VersionUpdatedBy AS [E_Journal.VersionUpdatedBy], \r\n    " +
                    "        T.VersionDeletedBy AS [E_Journal.VersionDeletedBy], \r\n            T.Vers" +
                    "ionOwnerContactID AS [E_Journal.VersionOwnerContactID], \r\n            T.VersionO" +
                    "wnerCompanyID AS [E_Journal.VersionOwnerCompanyID], \r\n            T.VersionUpdat" +
                    "ed AS [E_Journal.VersionUpdated], \r\n            True AS _from0\r\n        FROM XOD" +
                    "BC.Journals AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_Payment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_Payment", "\r\n    SELECT VALUE -- Constructing E_Payment\r\n        [XODB.Module.BusinessObject" +
                    "s.Store.E_Payment](T1.[E_Payment.PaymentID], T1.[E_Payment.SupplierAccountID], T" +
                    "1.[E_Payment.CustomerAccountID], T1.[E_Payment.OriginalAmount], T1.[E_Payment.Cu" +
                    "rrencyID], T1.[E_Payment.Amount], T1.[E_Payment.Paid], T1.[E_Payment.Version], T" +
                    "1.[E_Payment.VersionAntecedentID], T1.[E_Payment.VersionCertainty], T1.[E_Paymen" +
                    "t.VersionWorkflowInstanceID], T1.[E_Payment.VersionUpdatedBy], T1.[E_Payment.Ver" +
                    "sionDeletedBy], T1.[E_Payment.VersionOwnerContactID], T1.[E_Payment.VersionOwner" +
                    "CompanyID], T1.[E_Payment.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n       " +
                    "     T.PaymentID AS [E_Payment.PaymentID], \r\n            T.SupplierAccountID AS " +
                    "[E_Payment.SupplierAccountID], \r\n            T.CustomerAccountID AS [E_Payment.C" +
                    "ustomerAccountID], \r\n            T.OriginalAmount AS [E_Payment.OriginalAmount]," +
                    " \r\n            T.CurrencyID AS [E_Payment.CurrencyID], \r\n            T.Amount AS" +
                    " [E_Payment.Amount], \r\n            T.Paid AS [E_Payment.Paid], \r\n            T.V" +
                    "ersion AS [E_Payment.Version], \r\n            T.VersionAntecedentID AS [E_Payment" +
                    ".VersionAntecedentID], \r\n            T.VersionCertainty AS [E_Payment.VersionCer" +
                    "tainty], \r\n            T.VersionWorkflowInstanceID AS [E_Payment.VersionWorkflow" +
                    "InstanceID], \r\n            T.VersionUpdatedBy AS [E_Payment.VersionUpdatedBy], \r" +
                    "\n            T.VersionDeletedBy AS [E_Payment.VersionDeletedBy], \r\n            T" +
                    ".VersionOwnerContactID AS [E_Payment.VersionOwnerContactID], \r\n            T.Ver" +
                    "sionOwnerCompanyID AS [E_Payment.VersionOwnerCompanyID], \r\n            T.Version" +
                    "Updated AS [E_Payment.VersionUpdated], \r\n            True AS _from0\r\n        FRO" +
                    "M XODBC.Payments AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_PurchaseOrder
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2819);
            viewString.Append("\r\n    SELECT VALUE -- Constructing E_PurchaseOrder\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.Store.E_PurchaseOrder](T1.[E_PurchaseOrder.PurchaseOrderID], T1.[E_Purc");
            viewString.Append("haseOrder.PurchaseName], T1.[E_PurchaseOrder.ReferenceCode], T1.[E_PurchaseOrder");
            viewString.Append(".ReferenceSystem], T1.[E_PurchaseOrder.OriginalSubtotal], T1.[E_PurchaseOrder.Cu");
            viewString.Append("rrencyID], T1.[E_PurchaseOrder.Subtotal], T1.[E_PurchaseOrder.Ordered], T1.[E_Pu");
            viewString.Append("rchaseOrder.ProjectID], T1.[E_PurchaseOrder.CustomerCompanyID], T1.[E_PurchaseOr");
            viewString.Append("der.CustomerContactID], T1.[E_PurchaseOrder.CustomerAccountID], T1.[E_PurchaseOr");
            viewString.Append("der.SupplierCompanyID], T1.[E_PurchaseOrder.SupplierContactID], T1.[E_PurchaseOr");
            viewString.Append("der.SupplierAccountID], T1.[E_PurchaseOrder.Version], T1.[E_PurchaseOrder.Versio");
            viewString.Append("nAntecedentID], T1.[E_PurchaseOrder.VersionCertainty], T1.[E_PurchaseOrder.Versi");
            viewString.Append("onWorkflowInstanceID], T1.[E_PurchaseOrder.VersionUpdatedBy], T1.[E_PurchaseOrde");
            viewString.Append("r.VersionDeletedBy], T1.[E_PurchaseOrder.VersionOwnerContactID], T1.[E_PurchaseO");
            viewString.Append("rder.VersionOwnerCompanyID], T1.[E_PurchaseOrder.VersionUpdated])\r\n    FROM (\r\n ");
            viewString.Append("       SELECT \r\n            T.PurchaseOrderID AS [E_PurchaseOrder.PurchaseOrderI");
            viewString.Append("D], \r\n            T.PurchaseName AS [E_PurchaseOrder.PurchaseName], \r\n          ");
            viewString.Append("  T.ReferenceCode AS [E_PurchaseOrder.ReferenceCode], \r\n            T.ReferenceS");
            viewString.Append("ystem AS [E_PurchaseOrder.ReferenceSystem], \r\n            T.OriginalSubtotal AS ");
            viewString.Append("[E_PurchaseOrder.OriginalSubtotal], \r\n            T.CurrencyID AS [E_PurchaseOrd");
            viewString.Append("er.CurrencyID], \r\n            T.Subtotal AS [E_PurchaseOrder.Subtotal], \r\n      ");
            viewString.Append("      T.Ordered AS [E_PurchaseOrder.Ordered], \r\n            T.ProjectID AS [E_Pu");
            viewString.Append("rchaseOrder.ProjectID], \r\n            T.CustomerCompanyID AS [E_PurchaseOrder.Cu");
            viewString.Append("stomerCompanyID], \r\n            T.CustomerContactID AS [E_PurchaseOrder.Customer");
            viewString.Append("ContactID], \r\n            T.CustomerAccountID AS [E_PurchaseOrder.CustomerAccoun");
            viewString.Append("tID], \r\n            T.SupplierCompanyID AS [E_PurchaseOrder.SupplierCompanyID], ");
            viewString.Append("\r\n            T.SupplierContactID AS [E_PurchaseOrder.SupplierContactID], \r\n    ");
            viewString.Append("        T.SupplierAccountID AS [E_PurchaseOrder.SupplierAccountID], \r\n          ");
            viewString.Append("  T.Version AS [E_PurchaseOrder.Version], \r\n            T.VersionAntecedentID AS");
            viewString.Append(" [E_PurchaseOrder.VersionAntecedentID], \r\n            T.VersionCertainty AS [E_P");
            viewString.Append("urchaseOrder.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [E_");
            viewString.Append("PurchaseOrder.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [E");
            viewString.Append("_PurchaseOrder.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [E_Purchas");
            viewString.Append("eOrder.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [E_PurchaseOr");
            viewString.Append("der.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [E_Purchase");
            viewString.Append("Order.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [E_PurchaseOrder");
            viewString.Append(".VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.PurchaseOrder");
            viewString.Append("s AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_PurchaseOrder", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_Supply
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3036);
            viewString.Append("\r\n    SELECT VALUE -- Constructing E_Supply\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Store.E_Supply](T1.[E_Supply.SupplyID], T1.[E_Supply.ParentSupplyID], T1.[E_Su");
            viewString.Append("pply.ProjectID], T1.[E_Supply.CustomerInvoiceID], T1.[E_Supply.SupplierInvoiceID");
            viewString.Append("], T1.[E_Supply.Sequence], T1.[E_Supply.CustomerPurchaseOrderID], T1.[E_Supply.C");
            viewString.Append("ustomerApprovedBy], T1.[E_Supply.SupplierPurchaseOrderID], T1.[E_Supply.Supplier");
            viewString.Append("ApprovedBy], T1.[E_Supply.IsDraft], T1.[E_Supply.IsUnapproved], T1.[E_Supply.IsD");
            viewString.Append("enied], T1.[E_Supply.IsSupplied], T1.[E_Supply.IsReorderSent], T1.[E_Supply.IsPa");
            viewString.Append("id], T1.[E_Supply.IsFinalised], T1.[E_Supply.CurrentProjectDeliverableID], T1.[E");
            viewString.Append("_Supply.FinalProjectDeliverableID], T1.[E_Supply.DateOrdered], T1.[E_Supply.Purc");
            viewString.Append("hasingNotes], T1.[E_Supply.Version], T1.[E_Supply.VersionAntecedentID], T1.[E_Su");
            viewString.Append("pply.VersionCertainty], T1.[E_Supply.VersionWorkflowInstanceID], T1.[E_Supply.Ve");
            viewString.Append("rsionUpdatedBy], T1.[E_Supply.VersionDeletedBy], T1.[E_Supply.VersionOwnerContac");
            viewString.Append("tID], T1.[E_Supply.VersionOwnerCompanyID], T1.[E_Supply.VersionUpdated])\r\n    FR");
            viewString.Append("OM (\r\n        SELECT \r\n            T.SupplyID AS [E_Supply.SupplyID], \r\n        ");
            viewString.Append("    T.ParentSupplyID AS [E_Supply.ParentSupplyID], \r\n            T.ProjectID AS ");
            viewString.Append("[E_Supply.ProjectID], \r\n            T.CustomerInvoiceID AS [E_Supply.CustomerInv");
            viewString.Append("oiceID], \r\n            T.SupplierInvoiceID AS [E_Supply.SupplierInvoiceID], \r\n  ");
            viewString.Append("          T.Sequence AS [E_Supply.Sequence], \r\n            T.CustomerPurchaseOrd");
            viewString.Append("erID AS [E_Supply.CustomerPurchaseOrderID], \r\n            T.CustomerApprovedBy A");
            viewString.Append("S [E_Supply.CustomerApprovedBy], \r\n            T.SupplierPurchaseOrderID AS [E_S");
            viewString.Append("upply.SupplierPurchaseOrderID], \r\n            T.SupplierApprovedBy AS [E_Supply.");
            viewString.Append("SupplierApprovedBy], \r\n            T.IsDraft AS [E_Supply.IsDraft], \r\n          ");
            viewString.Append("  T.IsUnapproved AS [E_Supply.IsUnapproved], \r\n            T.IsDenied AS [E_Supp");
            viewString.Append("ly.IsDenied], \r\n            T.IsSupplied AS [E_Supply.IsSupplied], \r\n           ");
            viewString.Append(" T.IsReorderSent AS [E_Supply.IsReorderSent], \r\n            T.IsPaid AS [E_Suppl");
            viewString.Append("y.IsPaid], \r\n            T.IsFinalised AS [E_Supply.IsFinalised], \r\n            ");
            viewString.Append("T.CurrentProjectDeliverableID AS [E_Supply.CurrentProjectDeliverableID], \r\n     ");
            viewString.Append("       T.FinalProjectDeliverableID AS [E_Supply.FinalProjectDeliverableID], \r\n  ");
            viewString.Append("          T.DateOrdered AS [E_Supply.DateOrdered], \r\n            T.PurchasingNot");
            viewString.Append("es AS [E_Supply.PurchasingNotes], \r\n            T.Version AS [E_Supply.Version],");
            viewString.Append(" \r\n            T.VersionAntecedentID AS [E_Supply.VersionAntecedentID], \r\n      ");
            viewString.Append("      T.VersionCertainty AS [E_Supply.VersionCertainty], \r\n            T.Version");
            viewString.Append("WorkflowInstanceID AS [E_Supply.VersionWorkflowInstanceID], \r\n            T.Vers");
            viewString.Append("ionUpdatedBy AS [E_Supply.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS");
            viewString.Append(" [E_Supply.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [E_Supply");
            viewString.Append(".VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [E_Supply.Vers");
            viewString.Append("ionOwnerCompanyID], \r\n            T.VersionUpdated AS [E_Supply.VersionUpdated],");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM XODBC.Supplies AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_Supply", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_SupplyItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3914);
            viewString.Append("\r\n    SELECT VALUE -- Constructing E_SupplyItem\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.E_SupplyItem](T1.[E_SupplyItem.SupplyItemID], T1.[E_SupplyItem.Suppl");
            viewString.Append("yID], T1.[E_SupplyItem.ProjectPlanTaskModelID], T1.[E_SupplyItem.ProjectPlanTask");
            viewString.Append("PartID], T1.[E_SupplyItem.ProjectPlanTaskResponseID], T1.[E_SupplyItem.CustomerA");
            viewString.Append("ccountID], T1.[E_SupplyItem.ModelUnitID], T1.[E_SupplyItem.LabourUnitID], T1.[E_");
            viewString.Append("SupplyItem.PartUnitID], T1.[E_SupplyItem.CostPerUnitModel], T1.[E_SupplyItem.Cos");
            viewString.Append("tPerUnitLabour], T1.[E_SupplyItem.CostPerUnitPart], T1.[E_SupplyItem.QuantityMod");
            viewString.Append("el], T1.[E_SupplyItem.QuantityLabour], T1.[E_SupplyItem.QuantityPart], T1.[E_Sup");
            viewString.Append("plyItem.CostModel], T1.[E_SupplyItem.CostLabour], T1.[E_SupplyItem.CostPart], T1");
            viewString.Append(".[E_SupplyItem.SubtotalModel], T1.[E_SupplyItem.SubtotalLabour], T1.[E_SupplyIte");
            viewString.Append("m.SubtotalPart], T1.[E_SupplyItem.TaxModel], T1.[E_SupplyItem.TaxLabour], T1.[E_");
            viewString.Append("SupplyItem.TaxPart], T1.[E_SupplyItem.Tax], T1.[E_SupplyItem.OriginalSubtotal], ");
            viewString.Append("T1.[E_SupplyItem.CurrencyID], T1.[E_SupplyItem.Subtotal], T1.[E_SupplyItem.Notes");
            viewString.Append("], T1.[E_SupplyItem.Version], T1.[E_SupplyItem.VersionAntecedentID], T1.[E_Suppl");
            viewString.Append("yItem.VersionCertainty], T1.[E_SupplyItem.VersionWorkflowInstanceID], T1.[E_Supp");
            viewString.Append("lyItem.VersionUpdatedBy], T1.[E_SupplyItem.VersionDeletedBy], T1.[E_SupplyItem.V");
            viewString.Append("ersionOwnerContactID], T1.[E_SupplyItem.VersionOwnerCompanyID], T1.[E_SupplyItem");
            viewString.Append(".VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.SupplyItemID AS [E");
            viewString.Append("_SupplyItem.SupplyItemID], \r\n            T.SupplyID AS [E_SupplyItem.SupplyID], ");
            viewString.Append("\r\n            T.ProjectPlanTaskModelID AS [E_SupplyItem.ProjectPlanTaskModelID],");
            viewString.Append(" \r\n            T.ProjectPlanTaskPartID AS [E_SupplyItem.ProjectPlanTaskPartID], ");
            viewString.Append("\r\n            T.ProjectPlanTaskResponseID AS [E_SupplyItem.ProjectPlanTaskRespon");
            viewString.Append("seID], \r\n            T.CustomerAccountID AS [E_SupplyItem.CustomerAccountID], \r\n");
            viewString.Append("            T.ModelUnitID AS [E_SupplyItem.ModelUnitID], \r\n            T.LabourU");
            viewString.Append("nitID AS [E_SupplyItem.LabourUnitID], \r\n            T.PartUnitID AS [E_SupplyIte");
            viewString.Append("m.PartUnitID], \r\n            T.CostPerUnitModel AS [E_SupplyItem.CostPerUnitMode");
            viewString.Append("l], \r\n            T.CostPerUnitLabour AS [E_SupplyItem.CostPerUnitLabour], \r\n   ");
            viewString.Append("         T.CostPerUnitPart AS [E_SupplyItem.CostPerUnitPart], \r\n            T.Qu");
            viewString.Append("antityModel AS [E_SupplyItem.QuantityModel], \r\n            T.QuantityLabour AS [");
            viewString.Append("E_SupplyItem.QuantityLabour], \r\n            T.QuantityPart AS [E_SupplyItem.Quan");
            viewString.Append("tityPart], \r\n            T.CostModel AS [E_SupplyItem.CostModel], \r\n            ");
            viewString.Append("T.CostLabour AS [E_SupplyItem.CostLabour], \r\n            T.CostPart AS [E_Supply");
            viewString.Append("Item.CostPart], \r\n            T.SubtotalModel AS [E_SupplyItem.SubtotalModel], \r");
            viewString.Append("\n            T.SubtotalLabour AS [E_SupplyItem.SubtotalLabour], \r\n            T.");
            viewString.Append("SubtotalPart AS [E_SupplyItem.SubtotalPart], \r\n            T.TaxModel AS [E_Supp");
            viewString.Append("lyItem.TaxModel], \r\n            T.TaxLabour AS [E_SupplyItem.TaxLabour], \r\n     ");
            viewString.Append("       T.TaxPart AS [E_SupplyItem.TaxPart], \r\n            T.Tax AS [E_SupplyItem");
            viewString.Append(".Tax], \r\n            T.OriginalSubtotal AS [E_SupplyItem.OriginalSubtotal], \r\n  ");
            viewString.Append("          T.CurrencyID AS [E_SupplyItem.CurrencyID], \r\n            T.Subtotal AS");
            viewString.Append(" [E_SupplyItem.Subtotal], \r\n            T.Notes AS [E_SupplyItem.Notes], \r\n     ");
            viewString.Append("       T.Version AS [E_SupplyItem.Version], \r\n            T.VersionAntecedentID ");
            viewString.Append("AS [E_SupplyItem.VersionAntecedentID], \r\n            T.VersionCertainty AS [E_Su");
            viewString.Append("pplyItem.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [E_Supp");
            viewString.Append("lyItem.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [E_Supply");
            viewString.Append("Item.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [E_SupplyItem.Versio");
            viewString.Append("nDeletedBy], \r\n            T.VersionOwnerContactID AS [E_SupplyItem.VersionOwner");
            viewString.Append("ContactID], \r\n            T.VersionOwnerCompanyID AS [E_SupplyItem.VersionOwnerC");
            viewString.Append("ompanyID], \r\n            T.VersionUpdated AS [E_SupplyItem.VersionUpdated], \r\n  ");
            viewString.Append("          True AS _from0\r\n        FROM XODBC.SupplyItems AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_SupplyItem", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.E_SupplyItemTax
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.E_SupplyItemTax", "\r\n    SELECT VALUE -- Constructing E_SupplyItemTax\r\n        [XODB.Module.Business" +
                    "Objects.Store.E_SupplyItemTax](T1.[E_SupplyItemTax.SupplyItemTaxID], T1.[E_Suppl" +
                    "yItemTax.SupplyItemID], T1.[E_SupplyItemTax.TaxID], T1.[E_SupplyItemTax.Tax], T1" +
                    ".[E_SupplyItemTax.Version], T1.[E_SupplyItemTax.VersionAntecedentID], T1.[E_Supp" +
                    "lyItemTax.VersionCertainty], T1.[E_SupplyItemTax.VersionWorkflowInstanceID], T1." +
                    "[E_SupplyItemTax.VersionUpdatedBy], T1.[E_SupplyItemTax.VersionDeletedBy], T1.[E" +
                    "_SupplyItemTax.VersionOwnerContactID], T1.[E_SupplyItemTax.VersionOwnerCompanyID" +
                    "], T1.[E_SupplyItemTax.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.SupplyItemTaxID AS [E_SupplyItemTax.SupplyItemTaxID], \r\n            T.Supply" +
                    "ItemID AS [E_SupplyItemTax.SupplyItemID], \r\n            T.TaxID AS [E_SupplyItem" +
                    "Tax.TaxID], \r\n            T.Tax AS [E_SupplyItemTax.Tax], \r\n            T.Versio" +
                    "n AS [E_SupplyItemTax.Version], \r\n            T.VersionAntecedentID AS [E_Supply" +
                    "ItemTax.VersionAntecedentID], \r\n            T.VersionCertainty AS [E_SupplyItemT" +
                    "ax.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [E_SupplyItem" +
                    "Tax.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [E_SupplyIte" +
                    "mTax.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [E_SupplyItemTax.Ver" +
                    "sionDeletedBy], \r\n            T.VersionOwnerContactID AS [E_SupplyItemTax.Versio" +
                    "nOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [E_SupplyItemTax.Vers" +
                    "ionOwnerCompanyID], \r\n            T.VersionUpdated AS [E_SupplyItemTax.VersionUp" +
                    "dated], \r\n            True AS _from0\r\n        FROM XODBC.SupplyItemTaxes AS T\r\n " +
                    "   ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_Account
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_Account", "\r\n    SELECT VALUE -- Constructing Q_Account\r\n        [XODB.Module.BusinessObject" +
                    "s.Store.Q_Account](T1.[Q_Account.AccountID], T1.[Q_Account.ParentAccountID], T1." +
                    "[Q_Account.AcountCode], T1.[Q_Account.AccountName], T1.[Q_Account.PrimaryCompany" +
                    "ID], T1.[Q_Account.DefaultLocationID], T1.[Q_Account.Description], T1.[Q_Account" +
                    ".Version], T1.[Q_Account.VersionAntecedentID], T1.[Q_Account.VersionCertainty], " +
                    "T1.[Q_Account.VersionWorkflowInstanceID], T1.[Q_Account.VersionUpdatedBy], T1.[Q" +
                    "_Account.VersionDeletedBy], T1.[Q_Account.VersionOwnerContactID], T1.[Q_Account." +
                    "VersionOwnerCompanyID], T1.[Q_Account.VersionUpdated])\r\n    FROM (\r\n        SELE" +
                    "CT \r\n            T.AccountID AS [Q_Account.AccountID], \r\n            T.ParentAcc" +
                    "ountID AS [Q_Account.ParentAccountID], \r\n            T.AcountCode AS [Q_Account." +
                    "AcountCode], \r\n            T.AccountName AS [Q_Account.AccountName], \r\n         " +
                    "   T.PrimaryCompanyID AS [Q_Account.PrimaryCompanyID], \r\n            T.DefaultLo" +
                    "cationID AS [Q_Account.DefaultLocationID], \r\n            T.Description AS [Q_Acc" +
                    "ount.Description], \r\n            T.Version AS [Q_Account.Version], \r\n           " +
                    " T.VersionAntecedentID AS [Q_Account.VersionAntecedentID], \r\n            T.Versi" +
                    "onCertainty AS [Q_Account.VersionCertainty], \r\n            T.VersionWorkflowInst" +
                    "anceID AS [Q_Account.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedB" +
                    "y AS [Q_Account.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_Accoun" +
                    "t.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q_Account.Version" +
                    "OwnerContactID], \r\n            T.VersionOwnerCompanyID AS [Q_Account.VersionOwne" +
                    "rCompanyID], \r\n            T.VersionUpdated AS [Q_Account.VersionUpdated], \r\n   " +
                    "         True AS _from0\r\n        FROM XODBC.Accounts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_AccountDiscount
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2364);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_AccountDiscount\r\n        [XODB.Module.Busin");
            viewString.Append("essObjects.Store.Q_AccountDiscount](T1.[Q_AccountDiscount.AccountProductDiscount");
            viewString.Append("ID], T1.[Q_AccountDiscount.SourceAccountID], T1.[Q_AccountDiscount.ClientCompany");
            viewString.Append("ID], T1.[Q_AccountDiscount.ProviderExperienceID], T1.[Q_AccountDiscount.DeviceTy");
            viewString.Append("peID], T1.[Q_AccountDiscount.LevelUnitID], T1.[Q_AccountDiscount.LevelQuantity],");
            viewString.Append(" T1.[Q_AccountDiscount.Rate], T1.[Q_AccountDiscount.ValidFrom], T1.[Q_AccountDis");
            viewString.Append("count.ValidUntil], T1.[Q_AccountDiscount.Version], T1.[Q_AccountDiscount.Version");
            viewString.Append("AntecedentID], T1.[Q_AccountDiscount.VersionCertainty], T1.[Q_AccountDiscount.Ve");
            viewString.Append("rsionWorkflowInstanceID], T1.[Q_AccountDiscount.VersionUpdatedBy], T1.[Q_Account");
            viewString.Append("Discount.VersionDeletedBy], T1.[Q_AccountDiscount.VersionOwnerContactID], T1.[Q_");
            viewString.Append("AccountDiscount.VersionOwnerCompanyID], T1.[Q_AccountDiscount.VersionUpdated])\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.AccountProductDiscountID AS [Q_Accoun");
            viewString.Append("tDiscount.AccountProductDiscountID], \r\n            T.SourceAccountID AS [Q_Accou");
            viewString.Append("ntDiscount.SourceAccountID], \r\n            T.ClientCompanyID AS [Q_AccountDiscou");
            viewString.Append("nt.ClientCompanyID], \r\n            T.ProviderExperienceID AS [Q_AccountDiscount.");
            viewString.Append("ProviderExperienceID], \r\n            T.DeviceTypeID AS [Q_AccountDiscount.Device");
            viewString.Append("TypeID], \r\n            T.LevelUnitID AS [Q_AccountDiscount.LevelUnitID], \r\n     ");
            viewString.Append("       T.LevelQuantity AS [Q_AccountDiscount.LevelQuantity], \r\n            T.Rat");
            viewString.Append("e AS [Q_AccountDiscount.Rate], \r\n            T.ValidFrom AS [Q_AccountDiscount.V");
            viewString.Append("alidFrom], \r\n            T.ValidUntil AS [Q_AccountDiscount.ValidUntil], \r\n     ");
            viewString.Append("       T.Version AS [Q_AccountDiscount.Version], \r\n            T.VersionAntecede");
            viewString.Append("ntID AS [Q_AccountDiscount.VersionAntecedentID], \r\n            T.VersionCertaint");
            viewString.Append("y AS [Q_AccountDiscount.VersionCertainty], \r\n            T.VersionWorkflowInstan");
            viewString.Append("ceID AS [Q_AccountDiscount.VersionWorkflowInstanceID], \r\n            T.VersionUp");
            viewString.Append("datedBy AS [Q_AccountDiscount.VersionUpdatedBy], \r\n            T.VersionDeletedB");
            viewString.Append("y AS [Q_AccountDiscount.VersionDeletedBy], \r\n            T.VersionOwnerContactID");
            viewString.Append(" AS [Q_AccountDiscount.VersionOwnerContactID], \r\n            T.VersionOwnerCompa");
            viewString.Append("nyID AS [Q_AccountDiscount.VersionOwnerCompanyID], \r\n            T.VersionUpdate");
            viewString.Append("d AS [Q_AccountDiscount.VersionUpdated], \r\n            True AS _from0\r\n        F");
            viewString.Append("ROM XODBC.AccountDiscounts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_AccountDiscount", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_Asset
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2363);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_Asset\r\n        [XODB.Module.BusinessObjects");
            viewString.Append(".Store.Q_Asset](T1.[Q_Asset.AssetID], T1.[Q_Asset.ParentAssetID], T1.[Q_Asset.As");
            viewString.Append("setName], T1.[Q_Asset.Cost], T1.[Q_Asset.Purchased], T1.[Q_Asset.PurchaseOrderID");
            viewString.Append("], T1.[Q_Asset.ExpenseNotToExceedLifeTimeCost], T1.[Q_Asset.OwnerAccountID], T1.");
            viewString.Append("[Q_Asset.BorrowerAccountID], T1.[Q_Asset.MaintenanceAccountID], T1.[Q_Asset.Mode");
            viewString.Append("lID], T1.[Q_Asset.LocationID], T1.[Q_Asset.AssetStatusID], T1.[Q_Asset.Experienc");
            viewString.Append("eID], T1.[Q_Asset.Description], T1.[Q_Asset.Version], T1.[Q_Asset.VersionAnteced");
            viewString.Append("entID], T1.[Q_Asset.VersionCertainty], T1.[Q_Asset.VersionWorkflowInstanceID], T");
            viewString.Append("1.[Q_Asset.VersionUpdatedBy], T1.[Q_Asset.VersionDeletedBy], T1.[Q_Asset.Version");
            viewString.Append("OwnerContactID], T1.[Q_Asset.VersionOwnerCompanyID], T1.[Q_Asset.VersionUpdated]");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.AssetID AS [Q_Asset.AssetID], \r\n  ");
            viewString.Append("          T.ParentAssetID AS [Q_Asset.ParentAssetID], \r\n            T.AssetName ");
            viewString.Append("AS [Q_Asset.AssetName], \r\n            T.Cost AS [Q_Asset.Cost], \r\n            T.");
            viewString.Append("Purchased AS [Q_Asset.Purchased], \r\n            T.PurchaseOrderID AS [Q_Asset.Pu");
            viewString.Append("rchaseOrderID], \r\n            T.ExpenseNotToExceedLifeTimeCost AS [Q_Asset.Expen");
            viewString.Append("seNotToExceedLifeTimeCost], \r\n            T.OwnerAccountID AS [Q_Asset.OwnerAcco");
            viewString.Append("untID], \r\n            T.BorrowerAccountID AS [Q_Asset.BorrowerAccountID], \r\n    ");
            viewString.Append("        T.MaintenanceAccountID AS [Q_Asset.MaintenanceAccountID], \r\n            ");
            viewString.Append("T.ModelID AS [Q_Asset.ModelID], \r\n            T.LocationID AS [Q_Asset.LocationI");
            viewString.Append("D], \r\n            T.AssetStatusID AS [Q_Asset.AssetStatusID], \r\n            T.Ex");
            viewString.Append("perienceID AS [Q_Asset.ExperienceID], \r\n            T.Description AS [Q_Asset.De");
            viewString.Append("scription], \r\n            T.Version AS [Q_Asset.Version], \r\n            T.Versio");
            viewString.Append("nAntecedentID AS [Q_Asset.VersionAntecedentID], \r\n            T.VersionCertainty");
            viewString.Append(" AS [Q_Asset.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_");
            viewString.Append("Asset.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_Asset.V");
            viewString.Append("ersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_Asset.VersionDeletedBy]");
            viewString.Append(", \r\n            T.VersionOwnerContactID AS [Q_Asset.VersionOwnerContactID], \r\n  ");
            viewString.Append("          T.VersionOwnerCompanyID AS [Q_Asset.VersionOwnerCompanyID], \r\n        ");
            viewString.Append("    T.VersionUpdated AS [Q_Asset.VersionUpdated], \r\n            True AS _from0\r\n");
            viewString.Append("        FROM XODBC.Assets AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_Asset", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_AssetAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_AssetAlias", "\r\n    SELECT VALUE -- Constructing Q_AssetAlias\r\n        [XODB.Module.BusinessObj" +
                    "ects.Store.Q_AssetAlias](T1.[Q_AssetAlias.AssetAliasID], T1.[Q_AssetAlias.AssetI" +
                    "D], T1.[Q_AssetAlias.AssetAliasName], T1.[Q_AssetAlias.FullDescription], T1.[Q_A" +
                    "ssetAlias.Thumbnail], T1.[Q_AssetAlias.OriginalFileDataID], T1.[Q_AssetAlias.Ver" +
                    "sion], T1.[Q_AssetAlias.VersionAntecedentID], T1.[Q_AssetAlias.VersionCertainty]" +
                    ", T1.[Q_AssetAlias.VersionWorkflowInstanceID], T1.[Q_AssetAlias.VersionUpdatedBy" +
                    "], T1.[Q_AssetAlias.VersionDeletedBy], T1.[Q_AssetAlias.VersionOwnerContactID], " +
                    "T1.[Q_AssetAlias.VersionOwnerCompanyID], T1.[Q_AssetAlias.VersionUpdated])\r\n    " +
                    "FROM (\r\n        SELECT \r\n            T.AssetAliasID AS [Q_AssetAlias.AssetAliasI" +
                    "D], \r\n            T.AssetID AS [Q_AssetAlias.AssetID], \r\n            T.AssetAlia" +
                    "sName AS [Q_AssetAlias.AssetAliasName], \r\n            T.FullDescription AS [Q_As" +
                    "setAlias.FullDescription], \r\n            T.Thumbnail AS [Q_AssetAlias.Thumbnail]" +
                    ", \r\n            T.OriginalFileDataID AS [Q_AssetAlias.OriginalFileDataID], \r\n   " +
                    "         T.Version AS [Q_AssetAlias.Version], \r\n            T.VersionAntecedentI" +
                    "D AS [Q_AssetAlias.VersionAntecedentID], \r\n            T.VersionCertainty AS [Q_" +
                    "AssetAlias.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_As" +
                    "setAlias.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_Asse" +
                    "tAlias.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_AssetAlias.Vers" +
                    "ionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q_AssetAlias.VersionOwn" +
                    "erContactID], \r\n            T.VersionOwnerCompanyID AS [Q_AssetAlias.VersionOwne" +
                    "rCompanyID], \r\n            T.VersionUpdated AS [Q_AssetAlias.VersionUpdated], \r\n" +
                    "            True AS _from0\r\n        FROM XODBC.AssetAlias AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_AssetMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_AssetMaintenance", "\r\n    SELECT VALUE -- Constructing Q_AssetMaintenance\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.Q_AssetMaintenance](T1.[Q_AssetMaintenance.AssetMaintenanceID]," +
                    " T1.[Q_AssetMaintenance.AssetID], T1.[Q_AssetMaintenance.ModelProcedureID], T1.[" +
                    "Q_AssetMaintenance.TargetNextDueDate], T1.[Q_AssetMaintenance.Version], T1.[Q_As" +
                    "setMaintenance.VersionAntecedentID], T1.[Q_AssetMaintenance.VersionCertainty], T" +
                    "1.[Q_AssetMaintenance.VersionWorkflowInstanceID], T1.[Q_AssetMaintenance.Version" +
                    "UpdatedBy], T1.[Q_AssetMaintenance.VersionDeletedBy], T1.[Q_AssetMaintenance.Ver" +
                    "sionOwnerContactID], T1.[Q_AssetMaintenance.VersionOwnerCompanyID], T1.[Q_AssetM" +
                    "aintenance.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.AssetMai" +
                    "ntenanceID AS [Q_AssetMaintenance.AssetMaintenanceID], \r\n            T.AssetID A" +
                    "S [Q_AssetMaintenance.AssetID], \r\n            T.ModelProcedureID AS [Q_AssetMain" +
                    "tenance.ModelProcedureID], \r\n            T.TargetNextDueDate AS [Q_AssetMaintena" +
                    "nce.TargetNextDueDate], \r\n            T.Version AS [Q_AssetMaintenance.Version]," +
                    " \r\n            T.VersionAntecedentID AS [Q_AssetMaintenance.VersionAntecedentID]" +
                    ", \r\n            T.VersionCertainty AS [Q_AssetMaintenance.VersionCertainty], \r\n " +
                    "           T.VersionWorkflowInstanceID AS [Q_AssetMaintenance.VersionWorkflowIns" +
                    "tanceID], \r\n            T.VersionUpdatedBy AS [Q_AssetMaintenance.VersionUpdated" +
                    "By], \r\n            T.VersionDeletedBy AS [Q_AssetMaintenance.VersionDeletedBy], " +
                    "\r\n            T.VersionOwnerContactID AS [Q_AssetMaintenance.VersionOwnerContact" +
                    "ID], \r\n            T.VersionOwnerCompanyID AS [Q_AssetMaintenance.VersionOwnerCo" +
                    "mpanyID], \r\n            T.VersionUpdated AS [Q_AssetMaintenance.VersionUpdated]," +
                    " \r\n            True AS _from0\r\n        FROM XODBC.AssetMaintenances AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_AssetWarranty
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_AssetWarranty", "\r\n    SELECT VALUE -- Constructing Q_AssetWarranty\r\n        [XODB.Module.Business" +
                    "Objects.Store.Q_AssetWarranty](T1.[Q_AssetWarranty.AssetyWarrantyID], T1.[Q_Asse" +
                    "tWarranty.AssetID], T1.[Q_AssetWarranty.ModelWarrantyID], T1.[Q_AssetWarranty.St" +
                    "artDate], T1.[Q_AssetWarranty.EndDate], T1.[Q_AssetWarranty.Frequency], T1.[Q_As" +
                    "setWarranty.FrequencyUnitID], T1.[Q_AssetWarranty.WarrantyTypeID], T1.[Q_AssetWa" +
                    "rranty.Version], T1.[Q_AssetWarranty.VersionAntecedentID], T1.[Q_AssetWarranty.V" +
                    "ersionCertainty], T1.[Q_AssetWarranty.VersionWorkflowInstanceID], T1.[Q_AssetWar" +
                    "ranty.VersionUpdatedBy], T1.[Q_AssetWarranty.VersionDeletedBy], T1.[Q_AssetWarra" +
                    "nty.VersionOwnerContactID], T1.[Q_AssetWarranty.VersionOwnerCompanyID], T1.[Q_As" +
                    "setWarranty.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.AssetyW" +
                    "arrantyID AS [Q_AssetWarranty.AssetyWarrantyID], \r\n            T.AssetID AS [Q_A" +
                    "ssetWarranty.AssetID], \r\n            T.ModelWarrantyID AS [Q_AssetWarranty.Model" +
                    "WarrantyID], \r\n            T.StartDate AS [Q_AssetWarranty.StartDate], \r\n       " +
                    "     T.EndDate AS [Q_AssetWarranty.EndDate], \r\n            T.Frequency AS [Q_Ass" +
                    "etWarranty.Frequency], \r\n            T.FrequencyUnitID AS [Q_AssetWarranty.Frequ" +
                    "encyUnitID], \r\n            T.WarrantyTypeID AS [Q_AssetWarranty.WarrantyTypeID]," +
                    " \r\n            T.Version AS [Q_AssetWarranty.Version], \r\n            T.VersionAn" +
                    "tecedentID AS [Q_AssetWarranty.VersionAntecedentID], \r\n            T.VersionCert" +
                    "ainty AS [Q_AssetWarranty.VersionCertainty], \r\n            T.VersionWorkflowInst" +
                    "anceID AS [Q_AssetWarranty.VersionWorkflowInstanceID], \r\n            T.VersionUp" +
                    "datedBy AS [Q_AssetWarranty.VersionUpdatedBy], \r\n            T.VersionDeletedBy " +
                    "AS [Q_AssetWarranty.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS " +
                    "[Q_AssetWarranty.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID A" +
                    "S [Q_AssetWarranty.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_" +
                    "AssetWarranty.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC." +
                    "AssetWarranties AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_CompanyAccount
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_CompanyAccount", "\r\n    SELECT VALUE -- Constructing Q_CompanyAccount\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.Q_CompanyAccount](T1.[Q_CompanyAccount.CompanyAccountID], T1.[Q_C" +
                    "ompanyAccount.CompanyID], T1.[Q_CompanyAccount.AccountID], T1.[Q_CompanyAccount." +
                    "Version], T1.[Q_CompanyAccount.VersionAntecedentID], T1.[Q_CompanyAccount.Versio" +
                    "nCertainty], T1.[Q_CompanyAccount.VersionWorkflowInstanceID], T1.[Q_CompanyAccou" +
                    "nt.VersionUpdatedBy], T1.[Q_CompanyAccount.VersionDeletedBy], T1.[Q_CompanyAccou" +
                    "nt.VersionOwnerContactID], T1.[Q_CompanyAccount.VersionOwnerCompanyID], T1.[Q_Co" +
                    "mpanyAccount.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Compan" +
                    "yAccountID AS [Q_CompanyAccount.CompanyAccountID], \r\n            T.CompanyID AS " +
                    "[Q_CompanyAccount.CompanyID], \r\n            T.AccountID AS [Q_CompanyAccount.Acc" +
                    "ountID], \r\n            T.Version AS [Q_CompanyAccount.Version], \r\n            T." +
                    "VersionAntecedentID AS [Q_CompanyAccount.VersionAntecedentID], \r\n            T.V" +
                    "ersionCertainty AS [Q_CompanyAccount.VersionCertainty], \r\n            T.VersionW" +
                    "orkflowInstanceID AS [Q_CompanyAccount.VersionWorkflowInstanceID], \r\n           " +
                    " T.VersionUpdatedBy AS [Q_CompanyAccount.VersionUpdatedBy], \r\n            T.Vers" +
                    "ionDeletedBy AS [Q_CompanyAccount.VersionDeletedBy], \r\n            T.VersionOwne" +
                    "rContactID AS [Q_CompanyAccount.VersionOwnerContactID], \r\n            T.VersionO" +
                    "wnerCompanyID AS [Q_CompanyAccount.VersionOwnerCompanyID], \r\n            T.Versi" +
                    "onUpdated AS [Q_CompanyAccount.VersionUpdated], \r\n            True AS _from0\r\n  " +
                    "      FROM XODBC.CompanyAccounts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ContractAsset
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ContractAsset", "\r\n    SELECT VALUE -- Constructing Q_ContractAsset\r\n        [XODB.Module.Business" +
                    "Objects.Store.Q_ContractAsset](T1.[Q_ContractAsset.ContractAssetID], T1.[Q_Contr" +
                    "actAsset.ContractID], T1.[Q_ContractAsset.AssetID], T1.[Q_ContractAsset.Override" +
                    "CoverageStart], T1.[Q_ContractAsset.OverrideCoverageEnd], T1.[Q_ContractAsset.Ve" +
                    "rsion], T1.[Q_ContractAsset.VersionAntecedentID], T1.[Q_ContractAsset.VersionCer" +
                    "tainty], T1.[Q_ContractAsset.VersionWorkflowInstanceID], T1.[Q_ContractAsset.Ver" +
                    "sionUpdatedBy], T1.[Q_ContractAsset.VersionDeletedBy], T1.[Q_ContractAsset.Versi" +
                    "onOwnerContactID], T1.[Q_ContractAsset.VersionOwnerCompanyID], T1.[Q_ContractAss" +
                    "et.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.ContractAssetID " +
                    "AS [Q_ContractAsset.ContractAssetID], \r\n            T.ContractID AS [Q_ContractA" +
                    "sset.ContractID], \r\n            T.AssetID AS [Q_ContractAsset.AssetID], \r\n      " +
                    "      T.OverrideCoverageStart AS [Q_ContractAsset.OverrideCoverageStart], \r\n    " +
                    "        T.OverrideCoverageEnd AS [Q_ContractAsset.OverrideCoverageEnd], \r\n      " +
                    "      T.Version AS [Q_ContractAsset.Version], \r\n            T.VersionAntecedentI" +
                    "D AS [Q_ContractAsset.VersionAntecedentID], \r\n            T.VersionCertainty AS " +
                    "[Q_ContractAsset.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS" +
                    " [Q_ContractAsset.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy A" +
                    "S [Q_ContractAsset.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_Con" +
                    "tractAsset.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q_Contra" +
                    "ctAsset.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [Q_Cont" +
                    "ractAsset.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_ContractA" +
                    "sset.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.ContractA" +
                    "ssets AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DeliveryAdvice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3222);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_DeliveryAdvice\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.Store.Q_DeliveryAdvice](T1.[Q_DeliveryAdvice.DeliveryAdviceID], T1.[Q_");
            viewString.Append("DeliveryAdvice.DeliveryAdviceName], T1.[Q_DeliveryAdvice.Sequence], T1.[Q_Delive");
            viewString.Append("ryAdvice.ShippingCompanyID], T1.[Q_DeliveryAdvice.FreightCharge], T1.[Q_Delivery");
            viewString.Append("Advice.FreightTax], T1.[Q_DeliveryAdvice.ConsignmentNote], T1.[Q_DeliveryAdvice.");
            viewString.Append("AccessoriesSent], T1.[Q_DeliveryAdvice.DeliveryAdviceNotes], T1.[Q_DeliveryAdvic");
            viewString.Append("e.IsEditable], T1.[Q_DeliveryAdvice.SourceCompanyAddressID], T1.[Q_DeliveryAdvic");
            viewString.Append("e.DestinationCompanyAddressID], T1.[Q_DeliveryAdvice.DeliveryAdviceReasonID], T1");
            viewString.Append(".[Q_DeliveryAdvice.DeliveryAdviceReasonNote], T1.[Q_DeliveryAdvice.BillingAccoun");
            viewString.Append("tID], T1.[Q_DeliveryAdvice.ProjectDeliverableID], T1.[Q_DeliveryAdvice.ProjectID");
            viewString.Append("], T1.[Q_DeliveryAdvice.Version], T1.[Q_DeliveryAdvice.VersionAntecedentID], T1.");
            viewString.Append("[Q_DeliveryAdvice.VersionCertainty], T1.[Q_DeliveryAdvice.VersionWorkflowInstanc");
            viewString.Append("eID], T1.[Q_DeliveryAdvice.VersionUpdatedBy], T1.[Q_DeliveryAdvice.VersionDelete");
            viewString.Append("dBy], T1.[Q_DeliveryAdvice.VersionOwnerContactID], T1.[Q_DeliveryAdvice.VersionO");
            viewString.Append("wnerCompanyID], T1.[Q_DeliveryAdvice.VersionUpdated])\r\n    FROM (\r\n        SELEC");
            viewString.Append("T \r\n            T.DeliveryAdviceID AS [Q_DeliveryAdvice.DeliveryAdviceID], \r\n   ");
            viewString.Append("         T.DeliveryAdviceName AS [Q_DeliveryAdvice.DeliveryAdviceName], \r\n      ");
            viewString.Append("      T.Sequence AS [Q_DeliveryAdvice.Sequence], \r\n            T.ShippingCompany");
            viewString.Append("ID AS [Q_DeliveryAdvice.ShippingCompanyID], \r\n            T.FreightCharge AS [Q_");
            viewString.Append("DeliveryAdvice.FreightCharge], \r\n            T.FreightTax AS [Q_DeliveryAdvice.F");
            viewString.Append("reightTax], \r\n            T.ConsignmentNote AS [Q_DeliveryAdvice.ConsignmentNote");
            viewString.Append("], \r\n            T.AccessoriesSent AS [Q_DeliveryAdvice.AccessoriesSent], \r\n    ");
            viewString.Append("        T.DeliveryAdviceNotes AS [Q_DeliveryAdvice.DeliveryAdviceNotes], \r\n     ");
            viewString.Append("       T.IsEditable AS [Q_DeliveryAdvice.IsEditable], \r\n            T.SourceComp");
            viewString.Append("anyAddressID AS [Q_DeliveryAdvice.SourceCompanyAddressID], \r\n            T.Desti");
            viewString.Append("nationCompanyAddressID AS [Q_DeliveryAdvice.DestinationCompanyAddressID], \r\n    ");
            viewString.Append("        T.DeliveryAdviceReasonID AS [Q_DeliveryAdvice.DeliveryAdviceReasonID], \r");
            viewString.Append("\n            T.DeliveryAdviceReasonNote AS [Q_DeliveryAdvice.DeliveryAdviceReaso");
            viewString.Append("nNote], \r\n            T.BillingAccountID AS [Q_DeliveryAdvice.BillingAccountID],");
            viewString.Append(" \r\n            T.ProjectDeliverableID AS [Q_DeliveryAdvice.ProjectDeliverableID]");
            viewString.Append(", \r\n            T.ProjectID AS [Q_DeliveryAdvice.ProjectID], \r\n            T.Ver");
            viewString.Append("sion AS [Q_DeliveryAdvice.Version], \r\n            T.VersionAntecedentID AS [Q_De");
            viewString.Append("liveryAdvice.VersionAntecedentID], \r\n            T.VersionCertainty AS [Q_Delive");
            viewString.Append("ryAdvice.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_Deli");
            viewString.Append("veryAdvice.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_De");
            viewString.Append("liveryAdvice.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_DeliveryA");
            viewString.Append("dvice.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q_DeliveryAdv");
            viewString.Append("ice.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [Q_Delivery");
            viewString.Append("Advice.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_DeliveryAdvi");
            viewString.Append("ce.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.DeliveryAdv");
            viewString.Append("ices AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DeliveryAdvice", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DeliveryAdviceItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2541);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_DeliveryAdviceItem\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.Q_DeliveryAdviceItem](T1.[Q_DeliveryAdviceItem.DeliveryAdvic");
            viewString.Append("eItemID], T1.[Q_DeliveryAdviceItem.DeliveryAdviceID], T1.[Q_DeliveryAdviceItem.A");
            viewString.Append("ssetID], T1.[Q_DeliveryAdviceItem.ItemDescription], T1.[Q_DeliveryAdviceItem.Par");
            viewString.Append("tID], T1.[Q_DeliveryAdviceItem.QuantitySent], T1.[Q_DeliveryAdviceItem.QuantityR");
            viewString.Append("eceived], T1.[Q_DeliveryAdviceItem.ReturnReferenceNumber], T1.[Q_DeliveryAdviceI");
            viewString.Append("tem.ItemInstruction], T1.[Q_DeliveryAdviceItem.DecontaminationStatusID], T1.[Q_D");
            viewString.Append("eliveryAdviceItem.Version], T1.[Q_DeliveryAdviceItem.VersionAntecedentID], T1.[Q");
            viewString.Append("_DeliveryAdviceItem.VersionCertainty], T1.[Q_DeliveryAdviceItem.VersionWorkflowI");
            viewString.Append("nstanceID], T1.[Q_DeliveryAdviceItem.VersionUpdatedBy], T1.[Q_DeliveryAdviceItem");
            viewString.Append(".VersionDeletedBy], T1.[Q_DeliveryAdviceItem.VersionOwnerContactID], T1.[Q_Deliv");
            viewString.Append("eryAdviceItem.VersionOwnerCompanyID], T1.[Q_DeliveryAdviceItem.VersionUpdated])\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.DeliveryAdviceItemID AS [Q_DeliveryA");
            viewString.Append("dviceItem.DeliveryAdviceItemID], \r\n            T.DeliveryAdviceID AS [Q_Delivery");
            viewString.Append("AdviceItem.DeliveryAdviceID], \r\n            T.AssetID AS [Q_DeliveryAdviceItem.A");
            viewString.Append("ssetID], \r\n            T.ItemDescription AS [Q_DeliveryAdviceItem.ItemDescriptio");
            viewString.Append("n], \r\n            T.PartID AS [Q_DeliveryAdviceItem.PartID], \r\n            T.Qua");
            viewString.Append("ntitySent AS [Q_DeliveryAdviceItem.QuantitySent], \r\n            T.QuantityReceiv");
            viewString.Append("ed AS [Q_DeliveryAdviceItem.QuantityReceived], \r\n            T.ReturnReferenceNu");
            viewString.Append("mber AS [Q_DeliveryAdviceItem.ReturnReferenceNumber], \r\n            T.ItemInstru");
            viewString.Append("ction AS [Q_DeliveryAdviceItem.ItemInstruction], \r\n            T.Decontamination");
            viewString.Append("StatusID AS [Q_DeliveryAdviceItem.DecontaminationStatusID], \r\n            T.Vers");
            viewString.Append("ion AS [Q_DeliveryAdviceItem.Version], \r\n            T.VersionAntecedentID AS [Q");
            viewString.Append("_DeliveryAdviceItem.VersionAntecedentID], \r\n            T.VersionCertainty AS [Q");
            viewString.Append("_DeliveryAdviceItem.VersionCertainty], \r\n            T.VersionWorkflowInstanceID");
            viewString.Append(" AS [Q_DeliveryAdviceItem.VersionWorkflowInstanceID], \r\n            T.VersionUpd");
            viewString.Append("atedBy AS [Q_DeliveryAdviceItem.VersionUpdatedBy], \r\n            T.VersionDelete");
            viewString.Append("dBy AS [Q_DeliveryAdviceItem.VersionDeletedBy], \r\n            T.VersionOwnerCont");
            viewString.Append("actID AS [Q_DeliveryAdviceItem.VersionOwnerContactID], \r\n            T.VersionOw");
            viewString.Append("nerCompanyID AS [Q_DeliveryAdviceItem.VersionOwnerCompanyID], \r\n            T.Ve");
            viewString.Append("rsionUpdated AS [Q_DeliveryAdviceItem.VersionUpdated], \r\n            True AS _fr");
            viewString.Append("om0\r\n        FROM XODBC.DeliveryAdviceItems AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DeliveryAdviceItem", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DicitonaryAssetStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DicitonaryAssetStatus", "\r\n    SELECT VALUE -- Constructing Q_DicitonaryAssetStatus\r\n        [XODB.Module." +
                    "BusinessObjects.Store.Q_DicitonaryAssetStatus](T1.[Q_DicitonaryAssetStatus.Asset" +
                    "StatusID], T1.[Q_DicitonaryAssetStatus.StandardAssetStatusName], T1.[Q_Dicitonar" +
                    "yAssetStatus.CustomAssetStatusName], T1.[Q_DicitonaryAssetStatus.Description], T" +
                    "1.[Q_DicitonaryAssetStatus.Version], T1.[Q_DicitonaryAssetStatus.VersionAntecede" +
                    "ntID], T1.[Q_DicitonaryAssetStatus.VersionCertainty], T1.[Q_DicitonaryAssetStatu" +
                    "s.VersionWorkflowInstanceID], T1.[Q_DicitonaryAssetStatus.VersionUpdatedBy], T1." +
                    "[Q_DicitonaryAssetStatus.VersionDeletedBy], T1.[Q_DicitonaryAssetStatus.VersionO" +
                    "wnerContactID], T1.[Q_DicitonaryAssetStatus.VersionOwnerCompanyID], T1.[Q_Dicito" +
                    "naryAssetStatus.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Ass" +
                    "etStatusID AS [Q_DicitonaryAssetStatus.AssetStatusID], \r\n            T.StandardA" +
                    "ssetStatusName AS [Q_DicitonaryAssetStatus.StandardAssetStatusName], \r\n         " +
                    "   T.CustomAssetStatusName AS [Q_DicitonaryAssetStatus.CustomAssetStatusName], \r" +
                    "\n            T.Description AS [Q_DicitonaryAssetStatus.Description], \r\n         " +
                    "   T.Version AS [Q_DicitonaryAssetStatus.Version], \r\n            T.VersionAntece" +
                    "dentID AS [Q_DicitonaryAssetStatus.VersionAntecedentID], \r\n            T.Version" +
                    "Certainty AS [Q_DicitonaryAssetStatus.VersionCertainty], \r\n            T.Version" +
                    "WorkflowInstanceID AS [Q_DicitonaryAssetStatus.VersionWorkflowInstanceID], \r\n   " +
                    "         T.VersionUpdatedBy AS [Q_DicitonaryAssetStatus.VersionUpdatedBy], \r\n   " +
                    "         T.VersionDeletedBy AS [Q_DicitonaryAssetStatus.VersionDeletedBy], \r\n   " +
                    "         T.VersionOwnerContactID AS [Q_DicitonaryAssetStatus.VersionOwnerContact" +
                    "ID], \r\n            T.VersionOwnerCompanyID AS [Q_DicitonaryAssetStatus.VersionOw" +
                    "nerCompanyID], \r\n            T.VersionUpdated AS [Q_DicitonaryAssetStatus.Versio" +
                    "nUpdated], \r\n            True AS _from0\r\n        FROM XODBC.DicitonaryAssetStatu" +
                    "s AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDecontaminationStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDecontaminationStatus", @"
    SELECT VALUE -- Constructing Q_DictionaryDecontaminationStatus
        [XODB.Module.BusinessObjects.Store.Q_DictionaryDecontaminationStatus](T1.[Q_DictionaryDecontaminationStatus.DecontaminationStatusID], T1.[Q_DictionaryDecontaminationStatus.StandardDecontaminationStatusName], T1.[Q_DictionaryDecontaminationStatus.CustomDecontaminationStatusName], T1.[Q_DictionaryDecontaminationStatus.IsSafeForHandling], T1.[Q_DictionaryDecontaminationStatus.Description])
    FROM (
        SELECT 
            T.DecontaminationStatusID AS [Q_DictionaryDecontaminationStatus.DecontaminationStatusID], 
            T.StandardDecontaminationStatusName AS [Q_DictionaryDecontaminationStatus.StandardDecontaminationStatusName], 
            T.CustomDecontaminationStatusName AS [Q_DictionaryDecontaminationStatus.CustomDecontaminationStatusName], 
            T.IsSafeForHandling AS [Q_DictionaryDecontaminationStatus.IsSafeForHandling], 
            T.Description AS [Q_DictionaryDecontaminationStatus.Description], 
            True AS _from0
        FROM XODBC.DictionaryDecontaminationStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDeliveryAdviceReason
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDeliveryAdviceReason", @"
    SELECT VALUE -- Constructing Q_DictionaryDeliveryAdviceReason
        [XODB.Module.BusinessObjects.Store.Q_DictionaryDeliveryAdviceReason](T1.[Q_DictionaryDeliveryAdviceReason.DeliveryAdviceReasonID], T1.[Q_DictionaryDeliveryAdviceReason.StandardDeliveryAdviceReasonName], T1.[Q_DictionaryDeliveryAdviceReason.CustomDeliveryAdviceReasonName], T1.[Q_DictionaryDeliveryAdviceReason.Description])
    FROM (
        SELECT 
            T.DeliveryAdviceReasonID AS [Q_DictionaryDeliveryAdviceReason.DeliveryAdviceReasonID], 
            T.StandardDeliveryAdviceReasonName AS [Q_DictionaryDeliveryAdviceReason.StandardDeliveryAdviceReasonName], 
            T.CustomDeliveryAdviceReasonName AS [Q_DictionaryDeliveryAdviceReason.CustomDeliveryAdviceReasonName], 
            T.Description AS [Q_DictionaryDeliveryAdviceReason.Description], 
            True AS _from0
        FROM XODBC.DictionaryDeliveryAdviceReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDeviceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDeviceType", @"
    SELECT VALUE -- Constructing Q_DictionaryDeviceType
        [XODB.Module.BusinessObjects.Store.Q_DictionaryDeviceType](T1.[Q_DictionaryDeviceType.DeviceTypeID], T1.[Q_DictionaryDeviceType.ParentDeviceTypeID], T1.[Q_DictionaryDeviceType.StandardDeviceTypeName], T1.[Q_DictionaryDeviceType.EcriDeviceTypeName], T1.[Q_DictionaryDeviceType.CustomDeviceTypeName], T1.[Q_DictionaryDeviceType.PrimaryWorkTypeID], T1.[Q_DictionaryDeviceType.IsAttributable], T1.[Q_DictionaryDeviceType.IsDevice], T1.[Q_DictionaryDeviceType.IsPart], T1.[Q_DictionaryDeviceType.Description])
    FROM (
        SELECT 
            T.DeviceTypeID AS [Q_DictionaryDeviceType.DeviceTypeID], 
            T.ParentDeviceTypeID AS [Q_DictionaryDeviceType.ParentDeviceTypeID], 
            T.StandardDeviceTypeName AS [Q_DictionaryDeviceType.StandardDeviceTypeName], 
            T.EcriDeviceTypeName AS [Q_DictionaryDeviceType.EcriDeviceTypeName], 
            T.CustomDeviceTypeName AS [Q_DictionaryDeviceType.CustomDeviceTypeName], 
            T.PrimaryWorkTypeID AS [Q_DictionaryDeviceType.PrimaryWorkTypeID], 
            T.IsAttributable AS [Q_DictionaryDeviceType.IsAttributable], 
            T.IsDevice AS [Q_DictionaryDeviceType.IsDevice], 
            T.IsPart AS [Q_DictionaryDeviceType.IsPart], 
            T.Description AS [Q_DictionaryDeviceType.Description], 
            True AS _from0
        FROM XODBC.DictionaryDeviceTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryEventType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryEventType", @"
    SELECT VALUE -- Constructing Q_DictionaryEventType
        [XODB.Module.BusinessObjects.Store.Q_DictionaryEventType](T1.[Q_DictionaryEventType.EventTypeID], T1.[Q_DictionaryEventType.StandardEventTypeName], T1.[Q_DictionaryEventType.CustomEventTypeName], T1.[Q_DictionaryEventType.Description])
    FROM (
        SELECT 
            T.EventTypeID AS [Q_DictionaryEventType.EventTypeID], 
            T.StandardEventTypeName AS [Q_DictionaryEventType.StandardEventTypeName], 
            T.CustomEventTypeName AS [Q_DictionaryEventType.CustomEventTypeName], 
            T.Description AS [Q_DictionaryEventType.Description], 
            True AS _from0
        FROM XODBC.DictionaryEventTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2165);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_DictionaryPart\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.Store.Q_DictionaryPart](T1.[Q_DictionaryPart.PartID], T1.[Q_Dictionary");
            viewString.Append("Part.ParentPartID], T1.[Q_DictionaryPart.StandardPartName], T1.[Q_DictionaryPart");
            viewString.Append(".EcriPartName], T1.[Q_DictionaryPart.CustomPartName], T1.[Q_DictionaryPart.Compa");
            viewString.Append("nyID], T1.[Q_DictionaryPart.OriginalManufacturerName], T1.[Q_DictionaryPart.Part");
            viewString.Append("StatusID], T1.[Q_DictionaryPart.DeviceTypeID], T1.[Q_DictionaryPart.Manufactured");
            viewString.Append("From], T1.[Q_DictionaryPart.ManufacturedUntil], T1.[Q_DictionaryPart.SupportedUn");
            viewString.Append("til], T1.[Q_DictionaryPart.EstimatedLifetimeUnitID], T1.[Q_DictionaryPart.Estima");
            viewString.Append("tedLifetime], T1.[Q_DictionaryPart.Description], T1.[Q_DictionaryPart.FullDescri");
            viewString.Append("ption], T1.[Q_DictionaryPart.Thumbnail], T1.[Q_DictionaryPart.OriginalFileDataID");
            viewString.Append("])\r\n    FROM (\r\n        SELECT \r\n            T.PartID AS [Q_DictionaryPart.PartI");
            viewString.Append("D], \r\n            T.ParentPartID AS [Q_DictionaryPart.ParentPartID], \r\n         ");
            viewString.Append("   T.StandardPartName AS [Q_DictionaryPart.StandardPartName], \r\n            T.Ec");
            viewString.Append("riPartName AS [Q_DictionaryPart.EcriPartName], \r\n            T.CustomPartName AS");
            viewString.Append(" [Q_DictionaryPart.CustomPartName], \r\n            T.CompanyID AS [Q_DictionaryPa");
            viewString.Append("rt.CompanyID], \r\n            T.OriginalManufacturerName AS [Q_DictionaryPart.Ori");
            viewString.Append("ginalManufacturerName], \r\n            T.PartStatusID AS [Q_DictionaryPart.PartSt");
            viewString.Append("atusID], \r\n            T.DeviceTypeID AS [Q_DictionaryPart.DeviceTypeID], \r\n    ");
            viewString.Append("        T.ManufacturedFrom AS [Q_DictionaryPart.ManufacturedFrom], \r\n           ");
            viewString.Append(" T.ManufacturedUntil AS [Q_DictionaryPart.ManufacturedUntil], \r\n            T.Su");
            viewString.Append("pportedUntil AS [Q_DictionaryPart.SupportedUntil], \r\n            T.EstimatedLife");
            viewString.Append("timeUnitID AS [Q_DictionaryPart.EstimatedLifetimeUnitID], \r\n            T.Estima");
            viewString.Append("tedLifetime AS [Q_DictionaryPart.EstimatedLifetime], \r\n            T.Description");
            viewString.Append(" AS [Q_DictionaryPart.Description], \r\n            T.FullDescription AS [Q_Dictio");
            viewString.Append("naryPart.FullDescription], \r\n            T.Thumbnail AS [Q_DictionaryPart.Thumbn");
            viewString.Append("ail], \r\n            T.OriginalFileDataID AS [Q_DictionaryPart.OriginalFileDataID");
            viewString.Append("], \r\n            True AS _from0\r\n        FROM XODBC.DictionaryParts AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPart", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartCategory", @"
    SELECT VALUE -- Constructing Q_DictionaryPartCategory
        [XODB.Module.BusinessObjects.Store.Q_DictionaryPartCategory](T1.[Q_DictionaryPartCategory.PartCategoryID], T1.[Q_DictionaryPartCategory.PartID], T1.[Q_DictionaryPartCategory.CategoryDeviceTypeID])
    FROM (
        SELECT 
            T.PartCategoryID AS [Q_DictionaryPartCategory.PartCategoryID], 
            T.PartID AS [Q_DictionaryPartCategory.PartID], 
            T.CategoryDeviceTypeID AS [Q_DictionaryPartCategory.CategoryDeviceTypeID], 
            True AS _from0
        FROM XODBC.DictionaryPartCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartKit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartKit", @"
    SELECT VALUE -- Constructing Q_DictionaryPartKit
        [XODB.Module.BusinessObjects.Store.Q_DictionaryPartKit](T1.[Q_DictionaryPartKit.PartKitID], T1.[Q_DictionaryPartKit.StandardPartKitName], T1.[Q_DictionaryPartKit.CustomPartKitName], T1.[Q_DictionaryPartKit.Description])
    FROM (
        SELECT 
            T.PartKitID AS [Q_DictionaryPartKit.PartKitID], 
            T.StandardPartKitName AS [Q_DictionaryPartKit.StandardPartKitName], 
            T.CustomPartKitName AS [Q_DictionaryPartKit.CustomPartKitName], 
            T.Description AS [Q_DictionaryPartKit.Description], 
            True AS _from0
        FROM XODBC.DictionaryPartKits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartKitItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartKitItem", @"
    SELECT VALUE -- Constructing Q_DictionaryPartKitItem
        [XODB.Module.BusinessObjects.Store.Q_DictionaryPartKitItem](T1.[Q_DictionaryPartKitItem.PartKitItemID], T1.[Q_DictionaryPartKitItem.PartKitID], T1.[Q_DictionaryPartKitItem.PartID], T1.[Q_DictionaryPartKitItem.UnitID], T1.[Q_DictionaryPartKitItem.Quantity])
    FROM (
        SELECT 
            T.PartKitItemID AS [Q_DictionaryPartKitItem.PartKitItemID], 
            T.PartKitID AS [Q_DictionaryPartKitItem.PartKitID], 
            T.PartID AS [Q_DictionaryPartKitItem.PartID], 
            T.UnitID AS [Q_DictionaryPartKitItem.UnitID], 
            T.Quantity AS [Q_DictionaryPartKitItem.Quantity], 
            True AS _from0
        FROM XODBC.DictionaryPartKitItems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryProcedure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3077);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_DictionaryProcedure\r\n        [XODB.Module.B");
            viewString.Append("usinessObjects.Store.Q_DictionaryProcedure](T1.[Q_DictionaryProcedure.ProcedureI");
            viewString.Append("D], T1.[Q_DictionaryProcedure.StandardProcedureName], T1.[Q_DictionaryProcedure.");
            viewString.Append("CustomProcedureName], T1.[Q_DictionaryProcedure.Description], T1.[Q_DictionaryPr");
            viewString.Append("ocedure.TaskID], T1.[Q_DictionaryProcedure.ModelID], T1.[Q_DictionaryProcedure.P");
            viewString.Append("artID], T1.[Q_DictionaryProcedure.Sequence], T1.[Q_DictionaryProcedure.ValidFrom");
            viewString.Append("], T1.[Q_DictionaryProcedure.ValidUntil], T1.[Q_DictionaryProcedure.FileDataID],");
            viewString.Append(" T1.[Q_DictionaryProcedure.CountryID], T1.[Q_DictionaryProcedure.CountryStateID]");
            viewString.Append(", T1.[Q_DictionaryProcedure.Place], T1.[Q_DictionaryProcedure.LocationID], T1.[Q");
            viewString.Append("_DictionaryProcedure.ProvinceID], T1.[Q_DictionaryProcedure.Version], T1.[Q_Dict");
            viewString.Append("ionaryProcedure.VersionAntecedentID], T1.[Q_DictionaryProcedure.VersionCertainty");
            viewString.Append("], T1.[Q_DictionaryProcedure.VersionWorkflowInstanceID], T1.[Q_DictionaryProcedu");
            viewString.Append("re.VersionUpdatedBy], T1.[Q_DictionaryProcedure.VersionDeletedBy], T1.[Q_Diction");
            viewString.Append("aryProcedure.VersionOwnerContactID], T1.[Q_DictionaryProcedure.VersionOwnerCompa");
            viewString.Append("nyID], T1.[Q_DictionaryProcedure.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n");
            viewString.Append("            T.ProcedureID AS [Q_DictionaryProcedure.ProcedureID], \r\n            ");
            viewString.Append("T.StandardProcedureName AS [Q_DictionaryProcedure.StandardProcedureName], \r\n    ");
            viewString.Append("        T.CustomProcedureName AS [Q_DictionaryProcedure.CustomProcedureName], \r\n");
            viewString.Append("            T.Description AS [Q_DictionaryProcedure.Description], \r\n            ");
            viewString.Append("T.TaskID AS [Q_DictionaryProcedure.TaskID], \r\n            T.ModelID AS [Q_Dictio");
            viewString.Append("naryProcedure.ModelID], \r\n            T.PartID AS [Q_DictionaryProcedure.PartID]");
            viewString.Append(", \r\n            T.Sequence AS [Q_DictionaryProcedure.Sequence], \r\n            T.");
            viewString.Append("ValidFrom AS [Q_DictionaryProcedure.ValidFrom], \r\n            T.ValidUntil AS [Q");
            viewString.Append("_DictionaryProcedure.ValidUntil], \r\n            T.FileDataID AS [Q_DictionaryPro");
            viewString.Append("cedure.FileDataID], \r\n            T.CountryID AS [Q_DictionaryProcedure.CountryI");
            viewString.Append("D], \r\n            T.CountryStateID AS [Q_DictionaryProcedure.CountryStateID], \r\n");
            viewString.Append("            T.Place AS [Q_DictionaryProcedure.Place], \r\n            T.LocationID");
            viewString.Append(" AS [Q_DictionaryProcedure.LocationID], \r\n            T.ProvinceID AS [Q_Diction");
            viewString.Append("aryProcedure.ProvinceID], \r\n            T.Version AS [Q_DictionaryProcedure.Vers");
            viewString.Append("ion], \r\n            T.VersionAntecedentID AS [Q_DictionaryProcedure.VersionAntec");
            viewString.Append("edentID], \r\n            T.VersionCertainty AS [Q_DictionaryProcedure.VersionCert");
            viewString.Append("ainty], \r\n            T.VersionWorkflowInstanceID AS [Q_DictionaryProcedure.Vers");
            viewString.Append("ionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_DictionaryProcedu");
            viewString.Append("re.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_DictionaryProcedure");
            viewString.Append(".VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q_DictionaryProced");
            viewString.Append("ure.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [Q_Dictiona");
            viewString.Append("ryProcedure.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_Diction");
            viewString.Append("aryProcedure.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.D");
            viewString.Append("ictionaryProcedures AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryProcedure", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_DictionaryWarrantyType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_DictionaryWarrantyType", @"
    SELECT VALUE -- Constructing Q_DictionaryWarrantyType
        [XODB.Module.BusinessObjects.Store.Q_DictionaryWarrantyType](T1.[Q_DictionaryWarrantyType.WarrantyTypeID], T1.[Q_DictionaryWarrantyType.StandardWarrantyTypeName], T1.[Q_DictionaryWarrantyType.CustomWarrantyTypeName], T1.[Q_DictionaryWarrantyType.Description])
    FROM (
        SELECT 
            T.WarrantyTypeID AS [Q_DictionaryWarrantyType.WarrantyTypeID], 
            T.StandardWarrantyTypeName AS [Q_DictionaryWarrantyType.StandardWarrantyTypeName], 
            T.CustomWarrantyTypeName AS [Q_DictionaryWarrantyType.CustomWarrantyTypeName], 
            T.Description AS [Q_DictionaryWarrantyType.Description], 
            True AS _from0
        FROM XODBC.DictionaryWarrantyTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ModelPart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ModelPart", @"
    SELECT VALUE -- Constructing Q_ModelPart
        [XODB.Module.BusinessObjects.Store.Q_ModelPart](T1.[Q_ModelPart.ModelPartID], T1.[Q_ModelPart.ModelID], T1.[Q_ModelPart.PartID], T1.[Q_ModelPart.Version], T1.[Q_ModelPart.VersionAntecedentID], T1.[Q_ModelPart.VersionCertainty], T1.[Q_ModelPart.VersionWorkflowInstanceID], T1.[Q_ModelPart.VersionUpdatedBy], T1.[Q_ModelPart.VersionDeletedBy], T1.[Q_ModelPart.VersionOwnerContactID], T1.[Q_ModelPart.VersionOwnerCompanyID], T1.[Q_ModelPart.VersionUpdated])
    FROM (
        SELECT 
            T.ModelPartID AS [Q_ModelPart.ModelPartID], 
            T.ModelID AS [Q_ModelPart.ModelID], 
            T.PartID AS [Q_ModelPart.PartID], 
            T.Version AS [Q_ModelPart.Version], 
            T.VersionAntecedentID AS [Q_ModelPart.VersionAntecedentID], 
            T.VersionCertainty AS [Q_ModelPart.VersionCertainty], 
            T.VersionWorkflowInstanceID AS [Q_ModelPart.VersionWorkflowInstanceID], 
            T.VersionUpdatedBy AS [Q_ModelPart.VersionUpdatedBy], 
            T.VersionDeletedBy AS [Q_ModelPart.VersionDeletedBy], 
            T.VersionOwnerContactID AS [Q_ModelPart.VersionOwnerContactID], 
            T.VersionOwnerCompanyID AS [Q_ModelPart.VersionOwnerCompanyID], 
            T.VersionUpdated AS [Q_ModelPart.VersionUpdated], 
            True AS _from0
        FROM XODBC.ModelParts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ModelPartKit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ModelPartKit", "\r\n    SELECT VALUE -- Constructing Q_ModelPartKit\r\n        [XODB.Module.BusinessO" +
                    "bjects.Store.Q_ModelPartKit](T1.[Q_ModelPartKit.ModelPartKitID], T1.[Q_ModelPart" +
                    "Kit.ModelPartID], T1.[Q_ModelPartKit.PartKitID], T1.[Q_ModelPartKit.Version], T1" +
                    ".[Q_ModelPartKit.VersionAntecedentID], T1.[Q_ModelPartKit.VersionCertainty], T1." +
                    "[Q_ModelPartKit.VersionWorkflowInstanceID], T1.[Q_ModelPartKit.VersionUpdatedBy]" +
                    ", T1.[Q_ModelPartKit.VersionDeletedBy], T1.[Q_ModelPartKit.VersionOwnerContactID" +
                    "], T1.[Q_ModelPartKit.VersionOwnerCompanyID], T1.[Q_ModelPartKit.VersionUpdated]" +
                    ")\r\n    FROM (\r\n        SELECT \r\n            T.ModelPartKitID AS [Q_ModelPartKit." +
                    "ModelPartKitID], \r\n            T.ModelPartID AS [Q_ModelPartKit.ModelPartID], \r\n" +
                    "            T.PartKitID AS [Q_ModelPartKit.PartKitID], \r\n            T.Version A" +
                    "S [Q_ModelPartKit.Version], \r\n            T.VersionAntecedentID AS [Q_ModelPartK" +
                    "it.VersionAntecedentID], \r\n            T.VersionCertainty AS [Q_ModelPartKit.Ver" +
                    "sionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_ModelPartKit.Ver" +
                    "sionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_ModelPartKit.Ver" +
                    "sionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_ModelPartKit.VersionDelet" +
                    "edBy], \r\n            T.VersionOwnerContactID AS [Q_ModelPartKit.VersionOwnerCont" +
                    "actID], \r\n            T.VersionOwnerCompanyID AS [Q_ModelPartKit.VersionOwnerCom" +
                    "panyID], \r\n            T.VersionUpdated AS [Q_ModelPartKit.VersionUpdated], \r\n  " +
                    "          True AS _from0\r\n        FROM XODBC.ModelPartKits AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedure", "\r\n    SELECT VALUE -- Constructing Q_ModelProcedure\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.Q_ModelProcedure](T1.[Q_ModelProcedure.ModelProcedureID], T1.[Q_M" +
                    "odelProcedure.ModelID], T1.[Q_ModelProcedure.ProcedureID], T1.[Q_ModelProcedure." +
                    "Sequence], T1.[Q_ModelProcedure.Frequency], T1.[Q_ModelProcedure.FrequencyUnitID" +
                    "], T1.[Q_ModelProcedure.RiskFactor], T1.[Q_ModelProcedure.Version], T1.[Q_ModelP" +
                    "rocedure.VersionAntecedentID], T1.[Q_ModelProcedure.VersionCertainty], T1.[Q_Mod" +
                    "elProcedure.VersionWorkflowInstanceID], T1.[Q_ModelProcedure.VersionUpdatedBy], " +
                    "T1.[Q_ModelProcedure.VersionDeletedBy], T1.[Q_ModelProcedure.VersionOwnerContact" +
                    "ID], T1.[Q_ModelProcedure.VersionOwnerCompanyID], T1.[Q_ModelProcedure.VersionUp" +
                    "dated])\r\n    FROM (\r\n        SELECT \r\n            T.ModelProcedureID AS [Q_Model" +
                    "Procedure.ModelProcedureID], \r\n            T.ModelID AS [Q_ModelProcedure.ModelI" +
                    "D], \r\n            T.ProcedureID AS [Q_ModelProcedure.ProcedureID], \r\n           " +
                    " T.Sequence AS [Q_ModelProcedure.Sequence], \r\n            T.Frequency AS [Q_Mode" +
                    "lProcedure.Frequency], \r\n            T.FrequencyUnitID AS [Q_ModelProcedure.Freq" +
                    "uencyUnitID], \r\n            T.RiskFactor AS [Q_ModelProcedure.RiskFactor], \r\n   " +
                    "         T.Version AS [Q_ModelProcedure.Version], \r\n            T.VersionAnteced" +
                    "entID AS [Q_ModelProcedure.VersionAntecedentID], \r\n            T.VersionCertaint" +
                    "y AS [Q_ModelProcedure.VersionCertainty], \r\n            T.VersionWorkflowInstanc" +
                    "eID AS [Q_ModelProcedure.VersionWorkflowInstanceID], \r\n            T.VersionUpda" +
                    "tedBy AS [Q_ModelProcedure.VersionUpdatedBy], \r\n            T.VersionDeletedBy A" +
                    "S [Q_ModelProcedure.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS " +
                    "[Q_ModelProcedure.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID " +
                    "AS [Q_ModelProcedure.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [" +
                    "Q_ModelProcedure.VersionUpdated], \r\n            True AS _from0\r\n        FROM XOD" +
                    "BC.ModelProcedures AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedureTask
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2450);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_ModelProcedureTask\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.Q_ModelProcedureTask](T1.[Q_ModelProcedureTask.ModelProcedur");
            viewString.Append("eTaskID], T1.[Q_ModelProcedureTask.ModelProcedureID], T1.[Q_ModelProcedureTask.T");
            viewString.Append("askID], T1.[Q_ModelProcedureTask.Sequence], T1.[Q_ModelProcedureTask.FileDataID]");
            viewString.Append(", T1.[Q_ModelProcedureTask.StatedRevisionNumber], T1.[Q_ModelProcedureTask.State");
            viewString.Append("dRevisionPublishDate], T1.[Q_ModelProcedureTask.EstimatedDuration], T1.[Q_ModelP");
            viewString.Append("rocedureTask.EstimatedDurationUnitID], T1.[Q_ModelProcedureTask.Version], T1.[Q_");
            viewString.Append("ModelProcedureTask.VersionAntecedentID], T1.[Q_ModelProcedureTask.VersionCertain");
            viewString.Append("ty], T1.[Q_ModelProcedureTask.VersionWorkflowInstanceID], T1.[Q_ModelProcedureTa");
            viewString.Append("sk.VersionUpdatedBy], T1.[Q_ModelProcedureTask.VersionDeletedBy], T1.[Q_ModelPro");
            viewString.Append("cedureTask.VersionOwnerContactID], T1.[Q_ModelProcedureTask.VersionOwnerCompanyI");
            viewString.Append("D], T1.[Q_ModelProcedureTask.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.ModelProcedureTaskID AS [Q_ModelProcedureTask.ModelProcedureTaskID], \r");
            viewString.Append("\n            T.ModelProcedureID AS [Q_ModelProcedureTask.ModelProcedureID], \r\n  ");
            viewString.Append("          T.TaskID AS [Q_ModelProcedureTask.TaskID], \r\n            T.Sequence AS");
            viewString.Append(" [Q_ModelProcedureTask.Sequence], \r\n            T.FileDataID AS [Q_ModelProcedur");
            viewString.Append("eTask.FileDataID], \r\n            T.StatedRevisionNumber AS [Q_ModelProcedureTask");
            viewString.Append(".StatedRevisionNumber], \r\n            T.StatedRevisionPublishDate AS [Q_ModelPro");
            viewString.Append("cedureTask.StatedRevisionPublishDate], \r\n            T.EstimatedDuration AS [Q_M");
            viewString.Append("odelProcedureTask.EstimatedDuration], \r\n            T.EstimatedDurationUnitID AS");
            viewString.Append(" [Q_ModelProcedureTask.EstimatedDurationUnitID], \r\n            T.Version AS [Q_M");
            viewString.Append("odelProcedureTask.Version], \r\n            T.VersionAntecedentID AS [Q_ModelProce");
            viewString.Append("dureTask.VersionAntecedentID], \r\n            T.VersionCertainty AS [Q_ModelProce");
            viewString.Append("dureTask.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_Mode");
            viewString.Append("lProcedureTask.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [");
            viewString.Append("Q_ModelProcedureTask.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_M");
            viewString.Append("odelProcedureTask.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q");
            viewString.Append("_ModelProcedureTask.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyI");
            viewString.Append("D AS [Q_ModelProcedureTask.VersionOwnerCompanyID], \r\n            T.VersionUpdate");
            viewString.Append("d AS [Q_ModelProcedureTask.VersionUpdated], \r\n            True AS _from0\r\n      ");
            viewString.Append("  FROM XODBC.ModelProcedureTasks AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedureTask", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedureTaskPart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedureTaskPart", "\r\n    SELECT VALUE -- Constructing Q_ModelProcedureTaskPart\r\n        [XODB.Module" +
                    ".BusinessObjects.Store.Q_ModelProcedureTaskPart](T1.[Q_ModelProcedureTaskPart.Mo" +
                    "delProcedureTaskPartID], T1.[Q_ModelProcedureTaskPart.ModelProcedureTaskID], T1." +
                    "[Q_ModelProcedureTaskPart.PartID], T1.[Q_ModelProcedureTaskPart.PartQuantity], T" +
                    "1.[Q_ModelProcedureTaskPart.Version], T1.[Q_ModelProcedureTaskPart.VersionAntece" +
                    "dentID], T1.[Q_ModelProcedureTaskPart.VersionCertainty], T1.[Q_ModelProcedureTas" +
                    "kPart.VersionWorkflowInstanceID], T1.[Q_ModelProcedureTaskPart.VersionUpdatedBy]" +
                    ", T1.[Q_ModelProcedureTaskPart.VersionDeletedBy], T1.[Q_ModelProcedureTaskPart.V" +
                    "ersionOwnerContactID], T1.[Q_ModelProcedureTaskPart.VersionOwnerCompanyID], T1.[" +
                    "Q_ModelProcedureTaskPart.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n        " +
                    "    T.ModelProcedureTaskPartID AS [Q_ModelProcedureTaskPart.ModelProcedureTaskPa" +
                    "rtID], \r\n            T.ModelProcedureTaskID AS [Q_ModelProcedureTaskPart.ModelPr" +
                    "ocedureTaskID], \r\n            T.PartID AS [Q_ModelProcedureTaskPart.PartID], \r\n " +
                    "           T.PartQuantity AS [Q_ModelProcedureTaskPart.PartQuantity], \r\n        " +
                    "    T.Version AS [Q_ModelProcedureTaskPart.Version], \r\n            T.VersionAnte" +
                    "cedentID AS [Q_ModelProcedureTaskPart.VersionAntecedentID], \r\n            T.Vers" +
                    "ionCertainty AS [Q_ModelProcedureTaskPart.VersionCertainty], \r\n            T.Ver" +
                    "sionWorkflowInstanceID AS [Q_ModelProcedureTaskPart.VersionWorkflowInstanceID], " +
                    "\r\n            T.VersionUpdatedBy AS [Q_ModelProcedureTaskPart.VersionUpdatedBy]," +
                    " \r\n            T.VersionDeletedBy AS [Q_ModelProcedureTaskPart.VersionDeletedBy]" +
                    ", \r\n            T.VersionOwnerContactID AS [Q_ModelProcedureTaskPart.VersionOwne" +
                    "rContactID], \r\n            T.VersionOwnerCompanyID AS [Q_ModelProcedureTaskPart." +
                    "VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_ModelProcedureTaskP" +
                    "art.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.ModelProce" +
                    "dureTaskParts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ModelScheduleCycle
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2069);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_ModelScheduleCycle\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.Q_ModelScheduleCycle](T1.[Q_ModelScheduleCycle.ModelSchedule");
            viewString.Append("CycleID], T1.[Q_ModelScheduleCycle.ModelID], T1.[Q_ModelScheduleCycle.ModelProce");
            viewString.Append("dureID], T1.[Q_ModelScheduleCycle.Sequence], T1.[Q_ModelScheduleCycle.ScheduleFr");
            viewString.Append("equencyUnitID], T1.[Q_ModelScheduleCycle.ScheduleFrequency], T1.[Q_ModelSchedule");
            viewString.Append("Cycle.Version], T1.[Q_ModelScheduleCycle.VersionAntecedentID], T1.[Q_ModelSchedu");
            viewString.Append("leCycle.VersionCertainty], T1.[Q_ModelScheduleCycle.VersionWorkflowInstanceID], ");
            viewString.Append("T1.[Q_ModelScheduleCycle.VersionUpdatedBy], T1.[Q_ModelScheduleCycle.VersionDele");
            viewString.Append("tedBy], T1.[Q_ModelScheduleCycle.VersionOwnerContactID], T1.[Q_ModelScheduleCycl");
            viewString.Append("e.VersionOwnerCompanyID], T1.[Q_ModelScheduleCycle.VersionUpdated])\r\n    FROM (\r");
            viewString.Append("\n        SELECT \r\n            T.ModelScheduleCycleID AS [Q_ModelScheduleCycle.Mo");
            viewString.Append("delScheduleCycleID], \r\n            T.ModelID AS [Q_ModelScheduleCycle.ModelID], ");
            viewString.Append("\r\n            T.ModelProcedureID AS [Q_ModelScheduleCycle.ModelProcedureID], \r\n ");
            viewString.Append("           T.Sequence AS [Q_ModelScheduleCycle.Sequence], \r\n            T.Schedu");
            viewString.Append("leFrequencyUnitID AS [Q_ModelScheduleCycle.ScheduleFrequencyUnitID], \r\n         ");
            viewString.Append("   T.ScheduleFrequency AS [Q_ModelScheduleCycle.ScheduleFrequency], \r\n          ");
            viewString.Append("  T.Version AS [Q_ModelScheduleCycle.Version], \r\n            T.VersionAntecedent");
            viewString.Append("ID AS [Q_ModelScheduleCycle.VersionAntecedentID], \r\n            T.VersionCertain");
            viewString.Append("ty AS [Q_ModelScheduleCycle.VersionCertainty], \r\n            T.VersionWorkflowIn");
            viewString.Append("stanceID AS [Q_ModelScheduleCycle.VersionWorkflowInstanceID], \r\n            T.Ve");
            viewString.Append("rsionUpdatedBy AS [Q_ModelScheduleCycle.VersionUpdatedBy], \r\n            T.Versi");
            viewString.Append("onDeletedBy AS [Q_ModelScheduleCycle.VersionDeletedBy], \r\n            T.VersionO");
            viewString.Append("wnerContactID AS [Q_ModelScheduleCycle.VersionOwnerContactID], \r\n            T.V");
            viewString.Append("ersionOwnerCompanyID AS [Q_ModelScheduleCycle.VersionOwnerCompanyID], \r\n        ");
            viewString.Append("    T.VersionUpdated AS [Q_ModelScheduleCycle.VersionUpdated], \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM XODBC.ModelScheduleCycles AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ModelScheduleCycle", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ModelWarranty
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2112);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_ModelWarranty\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.Store.Q_ModelWarranty](T1.[Q_ModelWarranty.ModelWarrantyID], T1.[Q_Mode");
            viewString.Append("lWarranty.ModelID], T1.[Q_ModelWarranty.WarrantyTypeID], T1.[Q_ModelWarranty.War");
            viewString.Append("rantyPeriodUnitID], T1.[Q_ModelWarranty.WarrantyPeriod], T1.[Q_ModelWarranty.War");
            viewString.Append("rantyExpires], T1.[Q_ModelWarranty.WarrantyRenewal], T1.[Q_ModelWarranty.Supplie");
            viewString.Append("rContractID], T1.[Q_ModelWarranty.Version], T1.[Q_ModelWarranty.VersionAnteceden");
            viewString.Append("tID], T1.[Q_ModelWarranty.VersionCertainty], T1.[Q_ModelWarranty.VersionWorkflow");
            viewString.Append("InstanceID], T1.[Q_ModelWarranty.VersionUpdatedBy], T1.[Q_ModelWarranty.VersionD");
            viewString.Append("eletedBy], T1.[Q_ModelWarranty.VersionOwnerContactID], T1.[Q_ModelWarranty.Versi");
            viewString.Append("onOwnerCompanyID], T1.[Q_ModelWarranty.VersionUpdated])\r\n    FROM (\r\n        SEL");
            viewString.Append("ECT \r\n            T.ModelWarrantyID AS [Q_ModelWarranty.ModelWarrantyID], \r\n    ");
            viewString.Append("        T.ModelID AS [Q_ModelWarranty.ModelID], \r\n            T.WarrantyTypeID A");
            viewString.Append("S [Q_ModelWarranty.WarrantyTypeID], \r\n            T.WarrantyPeriodUnitID AS [Q_M");
            viewString.Append("odelWarranty.WarrantyPeriodUnitID], \r\n            T.WarrantyPeriod AS [Q_ModelWa");
            viewString.Append("rranty.WarrantyPeriod], \r\n            T.WarrantyExpires AS [Q_ModelWarranty.Warr");
            viewString.Append("antyExpires], \r\n            T.WarrantyRenewal AS [Q_ModelWarranty.WarrantyRenewa");
            viewString.Append("l], \r\n            T.SupplierContractID AS [Q_ModelWarranty.SupplierContractID], ");
            viewString.Append("\r\n            T.Version AS [Q_ModelWarranty.Version], \r\n            T.VersionAnt");
            viewString.Append("ecedentID AS [Q_ModelWarranty.VersionAntecedentID], \r\n            T.VersionCerta");
            viewString.Append("inty AS [Q_ModelWarranty.VersionCertainty], \r\n            T.VersionWorkflowInsta");
            viewString.Append("nceID AS [Q_ModelWarranty.VersionWorkflowInstanceID], \r\n            T.VersionUpd");
            viewString.Append("atedBy AS [Q_ModelWarranty.VersionUpdatedBy], \r\n            T.VersionDeletedBy A");
            viewString.Append("S [Q_ModelWarranty.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [");
            viewString.Append("Q_ModelWarranty.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS");
            viewString.Append(" [Q_ModelWarranty.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_M");
            viewString.Append("odelWarranty.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.M");
            viewString.Append("odelWarranties AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ModelWarranty", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ProjectPlanTaskModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2804);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_ProjectPlanTaskModel\r\n        [XODB.Module.");
            viewString.Append("BusinessObjects.Store.Q_ProjectPlanTaskModel](T1.[Q_ProjectPlanTaskModel.Project");
            viewString.Append("PlanTaskModelID], T1.[Q_ProjectPlanTaskModel.ProjectPlanTaskID], T1.[Q_ProjectPl");
            viewString.Append("anTaskModel.ModelID], T1.[Q_ProjectPlanTaskModel.WarehouseModelID], T1.[Q_Projec");
            viewString.Append("tPlanTaskModel.SupplierModelID], T1.[Q_ProjectPlanTaskModel.QuantityUnitID], T1.");
            viewString.Append("[Q_ProjectPlanTaskModel.QuantityOrdered], T1.[Q_ProjectPlanTaskModel.QuantityDes");
            viewString.Append("patched], T1.[Q_ProjectPlanTaskModel.QuantityReceived], T1.[Q_ProjectPlanTaskMod");
            viewString.Append("el.QuantityUsed], T1.[Q_ProjectPlanTaskModel.Used], T1.[Q_ProjectPlanTaskModel.N");
            viewString.Append("ote], T1.[Q_ProjectPlanTaskModel.Version], T1.[Q_ProjectPlanTaskModel.VersionAnt");
            viewString.Append("ecedentID], T1.[Q_ProjectPlanTaskModel.VersionCertainty], T1.[Q_ProjectPlanTaskM");
            viewString.Append("odel.VersionWorkflowInstanceID], T1.[Q_ProjectPlanTaskModel.VersionUpdatedBy], T");
            viewString.Append("1.[Q_ProjectPlanTaskModel.VersionDeletedBy], T1.[Q_ProjectPlanTaskModel.VersionO");
            viewString.Append("wnerContactID], T1.[Q_ProjectPlanTaskModel.VersionOwnerCompanyID], T1.[Q_Project");
            viewString.Append("PlanTaskModel.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Proje");
            viewString.Append("ctPlanTaskModelID AS [Q_ProjectPlanTaskModel.ProjectPlanTaskModelID], \r\n        ");
            viewString.Append("    T.ProjectPlanTaskID AS [Q_ProjectPlanTaskModel.ProjectPlanTaskID], \r\n       ");
            viewString.Append("     T.ModelID AS [Q_ProjectPlanTaskModel.ModelID], \r\n            T.WarehouseMod");
            viewString.Append("elID AS [Q_ProjectPlanTaskModel.WarehouseModelID], \r\n            T.SupplierModel");
            viewString.Append("ID AS [Q_ProjectPlanTaskModel.SupplierModelID], \r\n            T.QuantityUnitID A");
            viewString.Append("S [Q_ProjectPlanTaskModel.QuantityUnitID], \r\n            T.QuantityOrdered AS [Q");
            viewString.Append("_ProjectPlanTaskModel.QuantityOrdered], \r\n            T.QuantityDespatched AS [Q");
            viewString.Append("_ProjectPlanTaskModel.QuantityDespatched], \r\n            T.QuantityReceived AS [");
            viewString.Append("Q_ProjectPlanTaskModel.QuantityReceived], \r\n            T.QuantityUsed AS [Q_Pro");
            viewString.Append("jectPlanTaskModel.QuantityUsed], \r\n            T.Used AS [Q_ProjectPlanTaskModel");
            viewString.Append(".Used], \r\n            T.Note AS [Q_ProjectPlanTaskModel.Note], \r\n            T.V");
            viewString.Append("ersion AS [Q_ProjectPlanTaskModel.Version], \r\n            T.VersionAntecedentID ");
            viewString.Append("AS [Q_ProjectPlanTaskModel.VersionAntecedentID], \r\n            T.VersionCertaint");
            viewString.Append("y AS [Q_ProjectPlanTaskModel.VersionCertainty], \r\n            T.VersionWorkflowI");
            viewString.Append("nstanceID AS [Q_ProjectPlanTaskModel.VersionWorkflowInstanceID], \r\n            T");
            viewString.Append(".VersionUpdatedBy AS [Q_ProjectPlanTaskModel.VersionUpdatedBy], \r\n            T.");
            viewString.Append("VersionDeletedBy AS [Q_ProjectPlanTaskModel.VersionDeletedBy], \r\n            T.V");
            viewString.Append("ersionOwnerContactID AS [Q_ProjectPlanTaskModel.VersionOwnerContactID], \r\n      ");
            viewString.Append("      T.VersionOwnerCompanyID AS [Q_ProjectPlanTaskModel.VersionOwnerCompanyID],");
            viewString.Append(" \r\n            T.VersionUpdated AS [Q_ProjectPlanTaskModel.VersionUpdated], \r\n  ");
            viewString.Append("          True AS _from0\r\n        FROM XODBC.ProjectPlanTaskModels AS T\r\n    ) A");
            viewString.Append("S T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ProjectPlanTaskModel", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_ProjectPlanTaskPart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2747);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_ProjectPlanTaskPart\r\n        [XODB.Module.B");
            viewString.Append("usinessObjects.Store.Q_ProjectPlanTaskPart](T1.[Q_ProjectPlanTaskPart.ProjectPla");
            viewString.Append("nTaskPartID], T1.[Q_ProjectPlanTaskPart.ProjectPlanTaskID], T1.[Q_ProjectPlanTas");
            viewString.Append("kPart.PartID], T1.[Q_ProjectPlanTaskPart.WarehousePartID], T1.[Q_ProjectPlanTask");
            viewString.Append("Part.SupplierPartID], T1.[Q_ProjectPlanTaskPart.QuantityUnitID], T1.[Q_ProjectPl");
            viewString.Append("anTaskPart.QuantityOrdered], T1.[Q_ProjectPlanTaskPart.QuantityDespatched], T1.[");
            viewString.Append("Q_ProjectPlanTaskPart.QuantityReceived], T1.[Q_ProjectPlanTaskPart.QuantityUsed]");
            viewString.Append(", T1.[Q_ProjectPlanTaskPart.Used], T1.[Q_ProjectPlanTaskPart.Note], T1.[Q_Projec");
            viewString.Append("tPlanTaskPart.Version], T1.[Q_ProjectPlanTaskPart.VersionAntecedentID], T1.[Q_Pr");
            viewString.Append("ojectPlanTaskPart.VersionCertainty], T1.[Q_ProjectPlanTaskPart.VersionWorkflowIn");
            viewString.Append("stanceID], T1.[Q_ProjectPlanTaskPart.VersionUpdatedBy], T1.[Q_ProjectPlanTaskPar");
            viewString.Append("t.VersionDeletedBy], T1.[Q_ProjectPlanTaskPart.VersionOwnerContactID], T1.[Q_Pro");
            viewString.Append("jectPlanTaskPart.VersionOwnerCompanyID], T1.[Q_ProjectPlanTaskPart.VersionUpdate");
            viewString.Append("d])\r\n    FROM (\r\n        SELECT \r\n            T.ProjectPlanTaskPartID AS [Q_Proj");
            viewString.Append("ectPlanTaskPart.ProjectPlanTaskPartID], \r\n            T.ProjectPlanTaskID AS [Q_");
            viewString.Append("ProjectPlanTaskPart.ProjectPlanTaskID], \r\n            T.PartID AS [Q_ProjectPlan");
            viewString.Append("TaskPart.PartID], \r\n            T.WarehousePartID AS [Q_ProjectPlanTaskPart.Ware");
            viewString.Append("housePartID], \r\n            T.SupplierPartID AS [Q_ProjectPlanTaskPart.SupplierP");
            viewString.Append("artID], \r\n            T.QuantityUnitID AS [Q_ProjectPlanTaskPart.QuantityUnitID]");
            viewString.Append(", \r\n            T.QuantityOrdered AS [Q_ProjectPlanTaskPart.QuantityOrdered], \r\n");
            viewString.Append("            T.QuantityDespatched AS [Q_ProjectPlanTaskPart.QuantityDespatched], ");
            viewString.Append("\r\n            T.QuantityReceived AS [Q_ProjectPlanTaskPart.QuantityReceived], \r\n");
            viewString.Append("            T.QuantityUsed AS [Q_ProjectPlanTaskPart.QuantityUsed], \r\n          ");
            viewString.Append("  T.Used AS [Q_ProjectPlanTaskPart.Used], \r\n            T.Note AS [Q_ProjectPlan");
            viewString.Append("TaskPart.Note], \r\n            T.Version AS [Q_ProjectPlanTaskPart.Version], \r\n  ");
            viewString.Append("          T.VersionAntecedentID AS [Q_ProjectPlanTaskPart.VersionAntecedentID], ");
            viewString.Append("\r\n            T.VersionCertainty AS [Q_ProjectPlanTaskPart.VersionCertainty], \r\n");
            viewString.Append("            T.VersionWorkflowInstanceID AS [Q_ProjectPlanTaskPart.VersionWorkflo");
            viewString.Append("wInstanceID], \r\n            T.VersionUpdatedBy AS [Q_ProjectPlanTaskPart.Version");
            viewString.Append("UpdatedBy], \r\n            T.VersionDeletedBy AS [Q_ProjectPlanTaskPart.VersionDe");
            viewString.Append("letedBy], \r\n            T.VersionOwnerContactID AS [Q_ProjectPlanTaskPart.Versio");
            viewString.Append("nOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [Q_ProjectPlanTaskPar");
            viewString.Append("t.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_ProjectPlanTaskPa");
            viewString.Append("rt.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.ProjectPlan");
            viewString.Append("TaskParts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_ProjectPlanTaskPart", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_Recall
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2090);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_Recall\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Store.Q_Recall](T1.[Q_Recall.RecallID], T1.[Q_Recall.GlobalRecallCode], T1.[Q_");
            viewString.Append("Recall.GlobalRecallOrigin], T1.[Q_Recall.ProjectID], T1.[Q_Recall.Issued], T1.[Q");
            viewString.Append("_Recall.IssuedBy], T1.[Q_Recall.Received], T1.[Q_Recall.ReceivedBy], T1.[Q_Recal");
            viewString.Append("l.Actioned], T1.[Q_Recall.ActionedBy], T1.[Q_Recall.ResponsibleContactID], T1.[Q");
            viewString.Append("_Recall.Description], T1.[Q_Recall.Version], T1.[Q_Recall.VersionAntecedentID], ");
            viewString.Append("T1.[Q_Recall.VersionCertainty], T1.[Q_Recall.VersionWorkflowInstanceID], T1.[Q_R");
            viewString.Append("ecall.VersionUpdatedBy], T1.[Q_Recall.VersionDeletedBy], T1.[Q_Recall.VersionOwn");
            viewString.Append("erContactID], T1.[Q_Recall.VersionOwnerCompanyID], T1.[Q_Recall.VersionUpdated])");
            viewString.Append("\r\n    FROM (\r\n        SELECT \r\n            T.RecallID AS [Q_Recall.RecallID], \r\n");
            viewString.Append("            T.GlobalRecallCode AS [Q_Recall.GlobalRecallCode], \r\n            T.G");
            viewString.Append("lobalRecallOrigin AS [Q_Recall.GlobalRecallOrigin], \r\n            T.ProjectID AS");
            viewString.Append(" [Q_Recall.ProjectID], \r\n            T.Issued AS [Q_Recall.Issued], \r\n          ");
            viewString.Append("  T.IssuedBy AS [Q_Recall.IssuedBy], \r\n            T.Received AS [Q_Recall.Recei");
            viewString.Append("ved], \r\n            T.ReceivedBy AS [Q_Recall.ReceivedBy], \r\n            T.Actio");
            viewString.Append("ned AS [Q_Recall.Actioned], \r\n            T.ActionedBy AS [Q_Recall.ActionedBy],");
            viewString.Append(" \r\n            T.ResponsibleContactID AS [Q_Recall.ResponsibleContactID], \r\n    ");
            viewString.Append("        T.Description AS [Q_Recall.Description], \r\n            T.Version AS [Q_R");
            viewString.Append("ecall.Version], \r\n            T.VersionAntecedentID AS [Q_Recall.VersionAntecede");
            viewString.Append("ntID], \r\n            T.VersionCertainty AS [Q_Recall.VersionCertainty], \r\n      ");
            viewString.Append("      T.VersionWorkflowInstanceID AS [Q_Recall.VersionWorkflowInstanceID], \r\n   ");
            viewString.Append("         T.VersionUpdatedBy AS [Q_Recall.VersionUpdatedBy], \r\n            T.Vers");
            viewString.Append("ionDeletedBy AS [Q_Recall.VersionDeletedBy], \r\n            T.VersionOwnerContact");
            viewString.Append("ID AS [Q_Recall.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS");
            viewString.Append(" [Q_Recall.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_Recall.V");
            viewString.Append("ersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Recalls AS T\r\n ");
            viewString.Append("   ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_Recall", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_RecallModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_RecallModel", "\r\n    SELECT VALUE -- Constructing Q_RecallModel\r\n        [XODB.Module.BusinessOb" +
                    "jects.Store.Q_RecallModel](T1.[Q_RecallModel.RecallModelID], T1.[Q_RecallModel.R" +
                    "ecallID], T1.[Q_RecallModel.ModelID], T1.[Q_RecallModel.Description], T1.[Q_Reca" +
                    "llModel.Version], T1.[Q_RecallModel.VersionAntecedentID], T1.[Q_RecallModel.Vers" +
                    "ionCertainty], T1.[Q_RecallModel.VersionWorkflowInstanceID], T1.[Q_RecallModel.V" +
                    "ersionUpdatedBy], T1.[Q_RecallModel.VersionDeletedBy], T1.[Q_RecallModel.Version" +
                    "OwnerContactID], T1.[Q_RecallModel.VersionOwnerCompanyID], T1.[Q_RecallModel.Ver" +
                    "sionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.RecallModelID AS [Q_Re" +
                    "callModel.RecallModelID], \r\n            T.RecallID AS [Q_RecallModel.RecallID], " +
                    "\r\n            T.ModelID AS [Q_RecallModel.ModelID], \r\n            T.Description " +
                    "AS [Q_RecallModel.Description], \r\n            T.Version AS [Q_RecallModel.Versio" +
                    "n], \r\n            T.VersionAntecedentID AS [Q_RecallModel.VersionAntecedentID], " +
                    "\r\n            T.VersionCertainty AS [Q_RecallModel.VersionCertainty], \r\n        " +
                    "    T.VersionWorkflowInstanceID AS [Q_RecallModel.VersionWorkflowInstanceID], \r\n" +
                    "            T.VersionUpdatedBy AS [Q_RecallModel.VersionUpdatedBy], \r\n          " +
                    "  T.VersionDeletedBy AS [Q_RecallModel.VersionDeletedBy], \r\n            T.Versio" +
                    "nOwnerContactID AS [Q_RecallModel.VersionOwnerContactID], \r\n            T.Versio" +
                    "nOwnerCompanyID AS [Q_RecallModel.VersionOwnerCompanyID], \r\n            T.Versio" +
                    "nUpdated AS [Q_RecallModel.VersionUpdated], \r\n            True AS _from0\r\n      " +
                    "  FROM XODBC.RecallModels AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_RecallModelAsset
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_RecallModelAsset", "\r\n    SELECT VALUE -- Constructing Q_RecallModelAsset\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.Q_RecallModelAsset](T1.[Q_RecallModelAsset.RecallModelAssetID]," +
                    " T1.[Q_RecallModelAsset.RecallModelID], T1.[Q_RecallModelAsset.AssetID], T1.[Q_R" +
                    "ecallModelAsset.ProjectPlanID], T1.[Q_RecallModelAsset.Version], T1.[Q_RecallMod" +
                    "elAsset.VersionAntecedentID], T1.[Q_RecallModelAsset.VersionCertainty], T1.[Q_Re" +
                    "callModelAsset.VersionWorkflowInstanceID], T1.[Q_RecallModelAsset.VersionUpdated" +
                    "By], T1.[Q_RecallModelAsset.VersionDeletedBy], T1.[Q_RecallModelAsset.VersionOwn" +
                    "erContactID], T1.[Q_RecallModelAsset.VersionOwnerCompanyID], T1.[Q_RecallModelAs" +
                    "set.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.RecallModelAsse" +
                    "tID AS [Q_RecallModelAsset.RecallModelAssetID], \r\n            T.RecallModelID AS" +
                    " [Q_RecallModelAsset.RecallModelID], \r\n            T.AssetID AS [Q_RecallModelAs" +
                    "set.AssetID], \r\n            T.ProjectPlanID AS [Q_RecallModelAsset.ProjectPlanID" +
                    "], \r\n            T.Version AS [Q_RecallModelAsset.Version], \r\n            T.Vers" +
                    "ionAntecedentID AS [Q_RecallModelAsset.VersionAntecedentID], \r\n            T.Ver" +
                    "sionCertainty AS [Q_RecallModelAsset.VersionCertainty], \r\n            T.VersionW" +
                    "orkflowInstanceID AS [Q_RecallModelAsset.VersionWorkflowInstanceID], \r\n         " +
                    "   T.VersionUpdatedBy AS [Q_RecallModelAsset.VersionUpdatedBy], \r\n            T." +
                    "VersionDeletedBy AS [Q_RecallModelAsset.VersionDeletedBy], \r\n            T.Versi" +
                    "onOwnerContactID AS [Q_RecallModelAsset.VersionOwnerContactID], \r\n            T." +
                    "VersionOwnerCompanyID AS [Q_RecallModelAsset.VersionOwnerCompanyID], \r\n         " +
                    "   T.VersionUpdated AS [Q_RecallModelAsset.VersionUpdated], \r\n            True A" +
                    "S _from0\r\n        FROM XODBC.RecallModelAssets AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_SupplierModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2702);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_SupplierModel\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.Store.Q_SupplierModel](T1.[Q_SupplierModel.SupplierModelID], T1.[Q_Supp");
            viewString.Append("lierModel.SupplierID], T1.[Q_SupplierModel.ModelID], T1.[Q_SupplierModel.Seqeunc");
            viewString.Append("e], T1.[Q_SupplierModel.SupplierContractID], T1.[Q_SupplierModel.IsOEM], T1.[Q_S");
            viewString.Append("upplierModel.OrderQuantityMinimum], T1.[Q_SupplierModel.PricePerUnit], T1.[Q_Sup");
            viewString.Append("plierModel.PriceUnitID], T1.[Q_SupplierModel.SupplierModelNumber], T1.[Q_Supplie");
            viewString.Append("rModel.SupplierModelDescription], T1.[Q_SupplierModel.SupplierFileDataID], T1.[Q");
            viewString.Append("_SupplierModel.LeadTimeUnitID], T1.[Q_SupplierModel.LeadTime], T1.[Q_SupplierMod");
            viewString.Append("el.Version], T1.[Q_SupplierModel.VersionAntecedentID], T1.[Q_SupplierModel.Versi");
            viewString.Append("onCertainty], T1.[Q_SupplierModel.VersionWorkflowInstanceID], T1.[Q_SupplierMode");
            viewString.Append("l.VersionUpdatedBy], T1.[Q_SupplierModel.VersionDeletedBy], T1.[Q_SupplierModel.");
            viewString.Append("VersionOwnerContactID], T1.[Q_SupplierModel.VersionOwnerCompanyID], T1.[Q_Suppli");
            viewString.Append("erModel.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.SupplierMod");
            viewString.Append("elID AS [Q_SupplierModel.SupplierModelID], \r\n            T.SupplierID AS [Q_Supp");
            viewString.Append("lierModel.SupplierID], \r\n            T.ModelID AS [Q_SupplierModel.ModelID], \r\n ");
            viewString.Append("           T.Seqeunce AS [Q_SupplierModel.Seqeunce], \r\n            T.SupplierCon");
            viewString.Append("tractID AS [Q_SupplierModel.SupplierContractID], \r\n            T.IsOEM AS [Q_Sup");
            viewString.Append("plierModel.IsOEM], \r\n            T.OrderQuantityMinimum AS [Q_SupplierModel.Orde");
            viewString.Append("rQuantityMinimum], \r\n            T.PricePerUnit AS [Q_SupplierModel.PricePerUnit");
            viewString.Append("], \r\n            T.PriceUnitID AS [Q_SupplierModel.PriceUnitID], \r\n            T");
            viewString.Append(".SupplierModelNumber AS [Q_SupplierModel.SupplierModelNumber], \r\n            T.S");
            viewString.Append("upplierModelDescription AS [Q_SupplierModel.SupplierModelDescription], \r\n       ");
            viewString.Append("     T.SupplierFileDataID AS [Q_SupplierModel.SupplierFileDataID], \r\n           ");
            viewString.Append(" T.LeadTimeUnitID AS [Q_SupplierModel.LeadTimeUnitID], \r\n            T.LeadTime ");
            viewString.Append("AS [Q_SupplierModel.LeadTime], \r\n            T.Version AS [Q_SupplierModel.Versi");
            viewString.Append("on], \r\n            T.VersionAntecedentID AS [Q_SupplierModel.VersionAntecedentID");
            viewString.Append("], \r\n            T.VersionCertainty AS [Q_SupplierModel.VersionCertainty], \r\n   ");
            viewString.Append("         T.VersionWorkflowInstanceID AS [Q_SupplierModel.VersionWorkflowInstance");
            viewString.Append("ID], \r\n            T.VersionUpdatedBy AS [Q_SupplierModel.VersionUpdatedBy], \r\n ");
            viewString.Append("           T.VersionDeletedBy AS [Q_SupplierModel.VersionDeletedBy], \r\n         ");
            viewString.Append("   T.VersionOwnerContactID AS [Q_SupplierModel.VersionOwnerContactID], \r\n       ");
            viewString.Append("     T.VersionOwnerCompanyID AS [Q_SupplierModel.VersionOwnerCompanyID], \r\n     ");
            viewString.Append("       T.VersionUpdated AS [Q_SupplierModel.VersionUpdated], \r\n            True ");
            viewString.Append("AS _from0\r\n        FROM XODBC.SupplierModels AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_SupplierModel", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_SupplierPart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2641);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_SupplierPart\r\n        [XODB.Module.Business");
            viewString.Append("Objects.Store.Q_SupplierPart](T1.[Q_SupplierPart.SupplierPartID], T1.[Q_Supplier");
            viewString.Append("Part.SupplierID], T1.[Q_SupplierPart.PartID], T1.[Q_SupplierPart.Seqeunce], T1.[");
            viewString.Append("Q_SupplierPart.SupplierContractID], T1.[Q_SupplierPart.IsOEM], T1.[Q_SupplierPar");
            viewString.Append("t.OrderQuantityMinimum], T1.[Q_SupplierPart.PricePerUnit], T1.[Q_SupplierPart.Pr");
            viewString.Append("iceUnitID], T1.[Q_SupplierPart.SupplierPartNumber], T1.[Q_SupplierPart.SupplierP");
            viewString.Append("artDescription], T1.[Q_SupplierPart.SupplierFileDataID], T1.[Q_SupplierPart.Lead");
            viewString.Append("TimeUnitID], T1.[Q_SupplierPart.LeadTime], T1.[Q_SupplierPart.Version], T1.[Q_Su");
            viewString.Append("pplierPart.VersionAntecedentID], T1.[Q_SupplierPart.VersionCertainty], T1.[Q_Sup");
            viewString.Append("plierPart.VersionWorkflowInstanceID], T1.[Q_SupplierPart.VersionUpdatedBy], T1.[");
            viewString.Append("Q_SupplierPart.VersionDeletedBy], T1.[Q_SupplierPart.VersionOwnerContactID], T1.");
            viewString.Append("[Q_SupplierPart.VersionOwnerCompanyID], T1.[Q_SupplierPart.VersionUpdated])\r\n   ");
            viewString.Append(" FROM (\r\n        SELECT \r\n            T.SupplierPartID AS [Q_SupplierPart.Suppli");
            viewString.Append("erPartID], \r\n            T.SupplierID AS [Q_SupplierPart.SupplierID], \r\n        ");
            viewString.Append("    T.PartID AS [Q_SupplierPart.PartID], \r\n            T.Seqeunce AS [Q_Supplier");
            viewString.Append("Part.Seqeunce], \r\n            T.SupplierContractID AS [Q_SupplierPart.SupplierCo");
            viewString.Append("ntractID], \r\n            T.IsOEM AS [Q_SupplierPart.IsOEM], \r\n            T.Orde");
            viewString.Append("rQuantityMinimum AS [Q_SupplierPart.OrderQuantityMinimum], \r\n            T.Price");
            viewString.Append("PerUnit AS [Q_SupplierPart.PricePerUnit], \r\n            T.PriceUnitID AS [Q_Supp");
            viewString.Append("lierPart.PriceUnitID], \r\n            T.SupplierPartNumber AS [Q_SupplierPart.Sup");
            viewString.Append("plierPartNumber], \r\n            T.SupplierPartDescription AS [Q_SupplierPart.Sup");
            viewString.Append("plierPartDescription], \r\n            T.SupplierFileDataID AS [Q_SupplierPart.Sup");
            viewString.Append("plierFileDataID], \r\n            T.LeadTimeUnitID AS [Q_SupplierPart.LeadTimeUnit");
            viewString.Append("ID], \r\n            T.LeadTime AS [Q_SupplierPart.LeadTime], \r\n            T.Vers");
            viewString.Append("ion AS [Q_SupplierPart.Version], \r\n            T.VersionAntecedentID AS [Q_Suppl");
            viewString.Append("ierPart.VersionAntecedentID], \r\n            T.VersionCertainty AS [Q_SupplierPar");
            viewString.Append("t.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_SupplierPar");
            viewString.Append("t.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_SupplierPar");
            viewString.Append("t.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_SupplierPart.Version");
            viewString.Append("DeletedBy], \r\n            T.VersionOwnerContactID AS [Q_SupplierPart.VersionOwne");
            viewString.Append("rContactID], \r\n            T.VersionOwnerCompanyID AS [Q_SupplierPart.VersionOwn");
            viewString.Append("erCompanyID], \r\n            T.VersionUpdated AS [Q_SupplierPart.VersionUpdated],");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM XODBC.SupplierParts AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_SupplierPart", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_Warehouse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_Warehouse", "\r\n    SELECT VALUE -- Constructing Q_Warehouse\r\n        [XODB.Module.BusinessObje" +
                    "cts.Store.Q_Warehouse](T1.[Q_Warehouse.WarehouseID], T1.[Q_Warehouse.WarehouseNa" +
                    "me], T1.[Q_Warehouse.CompanyID], T1.[Q_Warehouse.PrimaryLocationID], T1.[Q_Wareh" +
                    "ouse.Description], T1.[Q_Warehouse.Version], T1.[Q_Warehouse.VersionAntecedentID" +
                    "], T1.[Q_Warehouse.VersionCertainty], T1.[Q_Warehouse.VersionWorkflowInstanceID]" +
                    ", T1.[Q_Warehouse.VersionUpdatedBy], T1.[Q_Warehouse.VersionDeletedBy], T1.[Q_Wa" +
                    "rehouse.VersionOwnerContactID], T1.[Q_Warehouse.VersionOwnerCompanyID], T1.[Q_Wa" +
                    "rehouse.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.WarehouseID" +
                    " AS [Q_Warehouse.WarehouseID], \r\n            T.WarehouseName AS [Q_Warehouse.War" +
                    "ehouseName], \r\n            T.CompanyID AS [Q_Warehouse.CompanyID], \r\n           " +
                    " T.PrimaryLocationID AS [Q_Warehouse.PrimaryLocationID], \r\n            T.Descrip" +
                    "tion AS [Q_Warehouse.Description], \r\n            T.Version AS [Q_Warehouse.Versi" +
                    "on], \r\n            T.VersionAntecedentID AS [Q_Warehouse.VersionAntecedentID], \r" +
                    "\n            T.VersionCertainty AS [Q_Warehouse.VersionCertainty], \r\n           " +
                    " T.VersionWorkflowInstanceID AS [Q_Warehouse.VersionWorkflowInstanceID], \r\n     " +
                    "       T.VersionUpdatedBy AS [Q_Warehouse.VersionUpdatedBy], \r\n            T.Ver" +
                    "sionDeletedBy AS [Q_Warehouse.VersionDeletedBy], \r\n            T.VersionOwnerCon" +
                    "tactID AS [Q_Warehouse.VersionOwnerContactID], \r\n            T.VersionOwnerCompa" +
                    "nyID AS [Q_Warehouse.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [" +
                    "Q_Warehouse.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Wa" +
                    "rehouses AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_WarehouseModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2115);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_WarehouseModel\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.Store.Q_WarehouseModel](T1.[Q_WarehouseModel.WarehouseModelID], T1.[Q_");
            viewString.Append("WarehouseModel.ModelID], T1.[Q_WarehouseModel.WarehouseID], T1.[Q_WarehouseModel");
            viewString.Append(".IssueCost], T1.[Q_WarehouseModel.QuantityOnOrder], T1.[Q_WarehouseModel.Quantit");
            viewString.Append("yInStock], T1.[Q_WarehouseModel.QuantityOnHold], T1.[Q_WarehouseModel.QuantityRe");
            viewString.Append("OrderLevel], T1.[Q_WarehouseModel.Version], T1.[Q_WarehouseModel.VersionAntecede");
            viewString.Append("ntID], T1.[Q_WarehouseModel.VersionCertainty], T1.[Q_WarehouseModel.VersionWorkf");
            viewString.Append("lowInstanceID], T1.[Q_WarehouseModel.VersionUpdatedBy], T1.[Q_WarehouseModel.Ver");
            viewString.Append("sionDeletedBy], T1.[Q_WarehouseModel.VersionOwnerContactID], T1.[Q_WarehouseMode");
            viewString.Append("l.VersionOwnerCompanyID], T1.[Q_WarehouseModel.VersionUpdated])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.WarehouseModelID AS [Q_WarehouseModel.WarehouseModel");
            viewString.Append("ID], \r\n            T.ModelID AS [Q_WarehouseModel.ModelID], \r\n            T.Ware");
            viewString.Append("houseID AS [Q_WarehouseModel.WarehouseID], \r\n            T.IssueCost AS [Q_Wareh");
            viewString.Append("ouseModel.IssueCost], \r\n            T.QuantityOnOrder AS [Q_WarehouseModel.Quant");
            viewString.Append("ityOnOrder], \r\n            T.QuantityInStock AS [Q_WarehouseModel.QuantityInStoc");
            viewString.Append("k], \r\n            T.QuantityOnHold AS [Q_WarehouseModel.QuantityOnHold], \r\n     ");
            viewString.Append("       T.QuantityReOrderLevel AS [Q_WarehouseModel.QuantityReOrderLevel], \r\n    ");
            viewString.Append("        T.Version AS [Q_WarehouseModel.Version], \r\n            T.VersionAntecede");
            viewString.Append("ntID AS [Q_WarehouseModel.VersionAntecedentID], \r\n            T.VersionCertainty");
            viewString.Append(" AS [Q_WarehouseModel.VersionCertainty], \r\n            T.VersionWorkflowInstance");
            viewString.Append("ID AS [Q_WarehouseModel.VersionWorkflowInstanceID], \r\n            T.VersionUpdat");
            viewString.Append("edBy AS [Q_WarehouseModel.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS");
            viewString.Append(" [Q_WarehouseModel.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [");
            viewString.Append("Q_WarehouseModel.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID A");
            viewString.Append("S [Q_WarehouseModel.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q");
            viewString.Append("_WarehouseModel.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODB");
            viewString.Append("C.WarehouseModels AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_WarehouseModel", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_WarehouseModelSupplier
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2306);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_WarehouseModelSupplier\r\n        [XODB.Modul");
            viewString.Append("e.BusinessObjects.Store.Q_WarehouseModelSupplier](T1.[Q_WarehouseModelSupplier.W");
            viewString.Append("arehouseModelSupplierID], T1.[Q_WarehouseModelSupplier.WarehouseModelID], T1.[Q_");
            viewString.Append("WarehouseModelSupplier.SupplierModelID], T1.[Q_WarehouseModelSupplier.QuantityUn");
            viewString.Append("itID], T1.[Q_WarehouseModelSupplier.QuantityOrdered], T1.[Q_WarehouseModelSuppli");
            viewString.Append("er.Ordered], T1.[Q_WarehouseModelSupplier.Received], T1.[Q_WarehouseModelSupplie");
            viewString.Append("r.Version], T1.[Q_WarehouseModelSupplier.VersionAntecedentID], T1.[Q_WarehouseMo");
            viewString.Append("delSupplier.VersionCertainty], T1.[Q_WarehouseModelSupplier.VersionWorkflowInsta");
            viewString.Append("nceID], T1.[Q_WarehouseModelSupplier.VersionUpdatedBy], T1.[Q_WarehouseModelSupp");
            viewString.Append("lier.VersionDeletedBy], T1.[Q_WarehouseModelSupplier.VersionOwnerContactID], T1.");
            viewString.Append("[Q_WarehouseModelSupplier.VersionOwnerCompanyID], T1.[Q_WarehouseModelSupplier.V");
            viewString.Append("ersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.WarehouseModelSuppli");
            viewString.Append("erID AS [Q_WarehouseModelSupplier.WarehouseModelSupplierID], \r\n            T.War");
            viewString.Append("ehouseModelID AS [Q_WarehouseModelSupplier.WarehouseModelID], \r\n            T.Su");
            viewString.Append("pplierModelID AS [Q_WarehouseModelSupplier.SupplierModelID], \r\n            T.Qua");
            viewString.Append("ntityUnitID AS [Q_WarehouseModelSupplier.QuantityUnitID], \r\n            T.Quanti");
            viewString.Append("tyOrdered AS [Q_WarehouseModelSupplier.QuantityOrdered], \r\n            T.Ordered");
            viewString.Append(" AS [Q_WarehouseModelSupplier.Ordered], \r\n            T.Received AS [Q_Warehouse");
            viewString.Append("ModelSupplier.Received], \r\n            T.Version AS [Q_WarehouseModelSupplier.Ve");
            viewString.Append("rsion], \r\n            T.VersionAntecedentID AS [Q_WarehouseModelSupplier.Version");
            viewString.Append("AntecedentID], \r\n            T.VersionCertainty AS [Q_WarehouseModelSupplier.Ver");
            viewString.Append("sionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_WarehouseModelSu");
            viewString.Append("pplier.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_Wareho");
            viewString.Append("useModelSupplier.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_Wareh");
            viewString.Append("ouseModelSupplier.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q");
            viewString.Append("_WarehouseModelSupplier.VersionOwnerContactID], \r\n            T.VersionOwnerComp");
            viewString.Append("anyID AS [Q_WarehouseModelSupplier.VersionOwnerCompanyID], \r\n            T.Versi");
            viewString.Append("onUpdated AS [Q_WarehouseModelSupplier.VersionUpdated], \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM XODBC.WarehouseModelSuppliers AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_WarehouseModelSupplier", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_WarehousePart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2072);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_WarehousePart\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.Store.Q_WarehousePart](T1.[Q_WarehousePart.WarehousePartID], T1.[Q_Ware");
            viewString.Append("housePart.PartID], T1.[Q_WarehousePart.WarehouseID], T1.[Q_WarehousePart.IssueCo");
            viewString.Append("st], T1.[Q_WarehousePart.QuantityOnOrder], T1.[Q_WarehousePart.QuantityInStock],");
            viewString.Append(" T1.[Q_WarehousePart.QuantityOnHold], T1.[Q_WarehousePart.QuantityReOrderLevel],");
            viewString.Append(" T1.[Q_WarehousePart.Version], T1.[Q_WarehousePart.VersionAntecedentID], T1.[Q_W");
            viewString.Append("arehousePart.VersionCertainty], T1.[Q_WarehousePart.VersionWorkflowInstanceID], ");
            viewString.Append("T1.[Q_WarehousePart.VersionUpdatedBy], T1.[Q_WarehousePart.VersionDeletedBy], T1");
            viewString.Append(".[Q_WarehousePart.VersionOwnerContactID], T1.[Q_WarehousePart.VersionOwnerCompan");
            viewString.Append("yID], T1.[Q_WarehousePart.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.WarehousePartID AS [Q_WarehousePart.WarehousePartID], \r\n            T.Par");
            viewString.Append("tID AS [Q_WarehousePart.PartID], \r\n            T.WarehouseID AS [Q_WarehousePart");
            viewString.Append(".WarehouseID], \r\n            T.IssueCost AS [Q_WarehousePart.IssueCost], \r\n     ");
            viewString.Append("       T.QuantityOnOrder AS [Q_WarehousePart.QuantityOnOrder], \r\n            T.Q");
            viewString.Append("uantityInStock AS [Q_WarehousePart.QuantityInStock], \r\n            T.QuantityOnH");
            viewString.Append("old AS [Q_WarehousePart.QuantityOnHold], \r\n            T.QuantityReOrderLevel AS");
            viewString.Append(" [Q_WarehousePart.QuantityReOrderLevel], \r\n            T.Version AS [Q_Warehouse");
            viewString.Append("Part.Version], \r\n            T.VersionAntecedentID AS [Q_WarehousePart.VersionAn");
            viewString.Append("tecedentID], \r\n            T.VersionCertainty AS [Q_WarehousePart.VersionCertain");
            viewString.Append("ty], \r\n            T.VersionWorkflowInstanceID AS [Q_WarehousePart.VersionWorkfl");
            viewString.Append("owInstanceID], \r\n            T.VersionUpdatedBy AS [Q_WarehousePart.VersionUpdat");
            viewString.Append("edBy], \r\n            T.VersionDeletedBy AS [Q_WarehousePart.VersionDeletedBy], \r");
            viewString.Append("\n            T.VersionOwnerContactID AS [Q_WarehousePart.VersionOwnerContactID],");
            viewString.Append(" \r\n            T.VersionOwnerCompanyID AS [Q_WarehousePart.VersionOwnerCompanyID");
            viewString.Append("], \r\n            T.VersionUpdated AS [Q_WarehousePart.VersionUpdated], \r\n       ");
            viewString.Append("     True AS _from0\r\n        FROM XODBC.WarehouseParts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_WarehousePart", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_WarehousePartSupplier
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2262);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Q_WarehousePartSupplier\r\n        [XODB.Module");
            viewString.Append(".BusinessObjects.Store.Q_WarehousePartSupplier](T1.[Q_WarehousePartSupplier.Ware");
            viewString.Append("housePartSupplierID], T1.[Q_WarehousePartSupplier.WarehousePartID], T1.[Q_Wareho");
            viewString.Append("usePartSupplier.SupplierPartID], T1.[Q_WarehousePartSupplier.QuantityUnitID], T1");
            viewString.Append(".[Q_WarehousePartSupplier.QuantityOrdered], T1.[Q_WarehousePartSupplier.Ordered]");
            viewString.Append(", T1.[Q_WarehousePartSupplier.Received], T1.[Q_WarehousePartSupplier.Version], T");
            viewString.Append("1.[Q_WarehousePartSupplier.VersionAntecedentID], T1.[Q_WarehousePartSupplier.Ver");
            viewString.Append("sionCertainty], T1.[Q_WarehousePartSupplier.VersionWorkflowInstanceID], T1.[Q_Wa");
            viewString.Append("rehousePartSupplier.VersionUpdatedBy], T1.[Q_WarehousePartSupplier.VersionDelete");
            viewString.Append("dBy], T1.[Q_WarehousePartSupplier.VersionOwnerContactID], T1.[Q_WarehousePartSup");
            viewString.Append("plier.VersionOwnerCompanyID], T1.[Q_WarehousePartSupplier.VersionUpdated])\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.WarehousePartSupplierID AS [Q_WarehousePa");
            viewString.Append("rtSupplier.WarehousePartSupplierID], \r\n            T.WarehousePartID AS [Q_Wareh");
            viewString.Append("ousePartSupplier.WarehousePartID], \r\n            T.SupplierPartID AS [Q_Warehous");
            viewString.Append("ePartSupplier.SupplierPartID], \r\n            T.QuantityUnitID AS [Q_WarehousePar");
            viewString.Append("tSupplier.QuantityUnitID], \r\n            T.QuantityOrdered AS [Q_WarehousePartSu");
            viewString.Append("pplier.QuantityOrdered], \r\n            T.Ordered AS [Q_WarehousePartSupplier.Ord");
            viewString.Append("ered], \r\n            T.Received AS [Q_WarehousePartSupplier.Received], \r\n       ");
            viewString.Append("     T.Version AS [Q_WarehousePartSupplier.Version], \r\n            T.VersionAnte");
            viewString.Append("cedentID AS [Q_WarehousePartSupplier.VersionAntecedentID], \r\n            T.Versi");
            viewString.Append("onCertainty AS [Q_WarehousePartSupplier.VersionCertainty], \r\n            T.Versi");
            viewString.Append("onWorkflowInstanceID AS [Q_WarehousePartSupplier.VersionWorkflowInstanceID], \r\n ");
            viewString.Append("           T.VersionUpdatedBy AS [Q_WarehousePartSupplier.VersionUpdatedBy], \r\n ");
            viewString.Append("           T.VersionDeletedBy AS [Q_WarehousePartSupplier.VersionDeletedBy], \r\n ");
            viewString.Append("           T.VersionOwnerContactID AS [Q_WarehousePartSupplier.VersionOwnerConta");
            viewString.Append("ctID], \r\n            T.VersionOwnerCompanyID AS [Q_WarehousePartSupplier.Version");
            viewString.Append("OwnerCompanyID], \r\n            T.VersionUpdated AS [Q_WarehousePartSupplier.Vers");
            viewString.Append("ionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.WarehousePartSuppl");
            viewString.Append("iers AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_WarehousePartSupplier", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Q_WorkflowSchedule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Q_WorkflowSchedule", "\r\n    SELECT VALUE -- Constructing Q_WorkflowSchedule\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.Q_WorkflowSchedule](T1.[Q_WorkflowSchedule.WorkflowScheduleID]," +
                    " T1.[Q_WorkflowSchedule.EventTypeID], T1.[Q_WorkflowSchedule.TableType], T1.[Q_W" +
                    "orkflowSchedule.ReferenceID], T1.[Q_WorkflowSchedule.WorkerID], T1.[Q_WorkflowSc" +
                    "hedule.WorkflowInstanceID], T1.[Q_WorkflowSchedule.Version], T1.[Q_WorkflowSched" +
                    "ule.VersionAntecedentID], T1.[Q_WorkflowSchedule.VersionCertainty], T1.[Q_Workfl" +
                    "owSchedule.VersionWorkflowInstanceID], T1.[Q_WorkflowSchedule.VersionUpdatedBy]," +
                    " T1.[Q_WorkflowSchedule.VersionDeletedBy], T1.[Q_WorkflowSchedule.VersionOwnerCo" +
                    "ntactID], T1.[Q_WorkflowSchedule.VersionOwnerCompanyID], T1.[Q_WorkflowSchedule." +
                    "VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.WorkflowScheduleID " +
                    "AS [Q_WorkflowSchedule.WorkflowScheduleID], \r\n            T.EventTypeID AS [Q_Wo" +
                    "rkflowSchedule.EventTypeID], \r\n            T.TableType AS [Q_WorkflowSchedule.Ta" +
                    "bleType], \r\n            T.ReferenceID AS [Q_WorkflowSchedule.ReferenceID], \r\n   " +
                    "         T.WorkerID AS [Q_WorkflowSchedule.WorkerID], \r\n            T.WorkflowIn" +
                    "stanceID AS [Q_WorkflowSchedule.WorkflowInstanceID], \r\n            T.Version AS " +
                    "[Q_WorkflowSchedule.Version], \r\n            T.VersionAntecedentID AS [Q_Workflow" +
                    "Schedule.VersionAntecedentID], \r\n            T.VersionCertainty AS [Q_WorkflowSc" +
                    "hedule.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [Q_Workfl" +
                    "owSchedule.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [Q_Wo" +
                    "rkflowSchedule.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [Q_Workflo" +
                    "wSchedule.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [Q_Workflo" +
                    "wSchedule.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [Q_Wo" +
                    "rkflowSchedule.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [Q_Work" +
                    "flowSchedule.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.W" +
                    "orkflowSchedules AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Address
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2121);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Address\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Store.X_Address](T1.[X_Address.AddressID], T1.[X_Address.AddressName], T1.[X_");
            viewString.Append("Address.Street], T1.[X_Address.City], T1.[X_Address.State], T1.[X_Address.Postco");
            viewString.Append("de], T1.[X_Address.IsHQ], T1.[X_Address.IsPostBox], T1.[X_Address.Priority], T1.");
            viewString.Append("[X_Address.Phone], T1.[X_Address.Fax], T1.[X_Address.Email], T1.[X_Address.Mobil");
            viewString.Append("e], T1.[X_Address.LocationID], T1.[X_Address.Version], T1.[X_Address.VersionAnte");
            viewString.Append("cedentID], T1.[X_Address.VersionCertainty], T1.[X_Address.VersionWorkflowInstanc");
            viewString.Append("eID], T1.[X_Address.VersionUpdatedBy], T1.[X_Address.VersionDeletedBy], T1.[X_Ad");
            viewString.Append("dress.VersionOwnerContactID], T1.[X_Address.VersionOwnerCompanyID], T1.[X_Addres");
            viewString.Append("s.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.AddressID AS [X_A");
            viewString.Append("ddress.AddressID], \r\n            T.AddressName AS [X_Address.AddressName], \r\n   ");
            viewString.Append("         T.Street AS [X_Address.Street], \r\n            T.City AS [X_Address.City");
            viewString.Append("], \r\n            T.State AS [X_Address.State], \r\n            T.Postcode AS [X_Ad");
            viewString.Append("dress.Postcode], \r\n            T.IsHQ AS [X_Address.IsHQ], \r\n            T.IsPos");
            viewString.Append("tBox AS [X_Address.IsPostBox], \r\n            T.Priority AS [X_Address.Priority],");
            viewString.Append(" \r\n            T.Phone AS [X_Address.Phone], \r\n            T.Fax AS [X_Address.F");
            viewString.Append("ax], \r\n            T.Email AS [X_Address.Email], \r\n            T.Mobile AS [X_Ad");
            viewString.Append("dress.Mobile], \r\n            T.LocationID AS [X_Address.LocationID], \r\n         ");
            viewString.Append("   T.Version AS [X_Address.Version], \r\n            T.VersionAntecedentID AS [X_A");
            viewString.Append("ddress.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Address.Vers");
            viewString.Append("ionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Address.VersionWo");
            viewString.Append("rkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Address.VersionUpdated");
            viewString.Append("By], \r\n            T.VersionDeletedBy AS [X_Address.VersionDeletedBy], \r\n       ");
            viewString.Append("     T.VersionOwnerContactID AS [X_Address.VersionOwnerContactID], \r\n           ");
            viewString.Append(" T.VersionOwnerCompanyID AS [X_Address.VersionOwnerCompanyID], \r\n            T.V");
            viewString.Append("ersionUpdated AS [X_Address.VersionUpdated], \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM XODBC.Addresses AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Address", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_AssayGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2204);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_AssayGroup\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.X_AssayGroup](T1.[X_AssayGroup.AssayGroupID], T1.[X_AssayGroup.Proje");
            viewString.Append("ctID], T1.[X_AssayGroup.AssayGroupName], T1.[X_AssayGroup.LabCompanyID], T1.[X_A");
            viewString.Append("ssayGroup.Submitted], T1.[X_AssayGroup.SubmittedContactID], T1.[X_AssayGroup.Rec");
            viewString.Append("eived], T1.[X_AssayGroup.ReceivedContactID], T1.[X_AssayGroup.Entered], T1.[X_As");
            viewString.Append("sayGroup.EnteredContactID], T1.[X_AssayGroup.Comment], T1.[X_AssayGroup.Version]");
            viewString.Append(", T1.[X_AssayGroup.VersionAntecedentID], T1.[X_AssayGroup.VersionCertainty], T1.");
            viewString.Append("[X_AssayGroup.VersionWorkflowInstanceID], T1.[X_AssayGroup.VersionUpdatedBy], T1");
            viewString.Append(".[X_AssayGroup.VersionDeletedBy], T1.[X_AssayGroup.VersionOwnerContactID], T1.[X");
            viewString.Append("_AssayGroup.VersionOwnerCompanyID], T1.[X_AssayGroup.VersionUpdated])\r\n    FROM ");
            viewString.Append("(\r\n        SELECT \r\n            T.AssayGroupID AS [X_AssayGroup.AssayGroupID], \r");
            viewString.Append("\n            T.ProjectID AS [X_AssayGroup.ProjectID], \r\n            T.AssayGroup");
            viewString.Append("Name AS [X_AssayGroup.AssayGroupName], \r\n            T.LabCompanyID AS [X_AssayG");
            viewString.Append("roup.LabCompanyID], \r\n            T.Submitted AS [X_AssayGroup.Submitted], \r\n   ");
            viewString.Append("         T.SubmittedContactID AS [X_AssayGroup.SubmittedContactID], \r\n          ");
            viewString.Append("  T.Received AS [X_AssayGroup.Received], \r\n            T.ReceivedContactID AS [X");
            viewString.Append("_AssayGroup.ReceivedContactID], \r\n            T.Entered AS [X_AssayGroup.Entered");
            viewString.Append("], \r\n            T.EnteredContactID AS [X_AssayGroup.EnteredContactID], \r\n      ");
            viewString.Append("      T.Comment AS [X_AssayGroup.Comment], \r\n            T.Version AS [X_AssayGr");
            viewString.Append("oup.Version], \r\n            T.VersionAntecedentID AS [X_AssayGroup.VersionAntece");
            viewString.Append("dentID], \r\n            T.VersionCertainty AS [X_AssayGroup.VersionCertainty], \r\n");
            viewString.Append("            T.VersionWorkflowInstanceID AS [X_AssayGroup.VersionWorkflowInstance");
            viewString.Append("ID], \r\n            T.VersionUpdatedBy AS [X_AssayGroup.VersionUpdatedBy], \r\n    ");
            viewString.Append("        T.VersionDeletedBy AS [X_AssayGroup.VersionDeletedBy], \r\n            T.V");
            viewString.Append("ersionOwnerContactID AS [X_AssayGroup.VersionOwnerContactID], \r\n            T.Ve");
            viewString.Append("rsionOwnerCompanyID AS [X_AssayGroup.VersionOwnerCompanyID], \r\n            T.Ver");
            viewString.Append("sionUpdated AS [X_AssayGroup.VersionUpdated], \r\n            True AS _from0\r\n    ");
            viewString.Append("    FROM XODBC.AssayGroups AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_AssayGroup", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_AssayGroupStandardTestResult
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3350);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_AssayGroupStandardTestResult\r\n        [XODB");
            viewString.Append(".Module.BusinessObjects.Store.X_AssayGroupStandardTestResult](T1.[X_AssayGroupSt");
            viewString.Append("andardTestResult.AssayGroupStandardTestResultID], T1.[X_AssayGroupStandardTestRe");
            viewString.Append("sult.AssayGroupTestSampleID], T1.[X_AssayGroupStandardTestResult.AssayGroupTestI");
            viewString.Append("D], T1.[X_AssayGroupStandardTestResult.AssayStandardID], T1.[X_AssayGroupStandar");
            viewString.Append("dTestResult.SampleCategoryID], T1.[X_AssayGroupStandardTestResult.SampleStateID]");
            viewString.Append(", T1.[X_AssayGroupStandardTestResult.SampleTypeID], T1.[X_AssayGroupStandardTest");
            viewString.Append("Result.LabResultText], T1.[X_AssayGroupStandardTestResult.LabResult], T1.[X_Assa");
            viewString.Append("yGroupStandardTestResult.LabSampleNumber], T1.[X_AssayGroupStandardTestResult.La");
            viewString.Append("bBatchNumber], T1.[X_AssayGroupStandardTestResult.Sampled], T1.[X_AssayGroupStan");
            viewString.Append("dardTestResult.SampledBy], T1.[X_AssayGroupStandardTestResult.Version], T1.[X_As");
            viewString.Append("sayGroupStandardTestResult.VersionAntecedentID], T1.[X_AssayGroupStandardTestRes");
            viewString.Append("ult.VersionCertainty], T1.[X_AssayGroupStandardTestResult.VersionWorkflowInstanc");
            viewString.Append("eID], T1.[X_AssayGroupStandardTestResult.VersionUpdatedBy], T1.[X_AssayGroupStan");
            viewString.Append("dardTestResult.VersionDeletedBy], T1.[X_AssayGroupStandardTestResult.VersionOwne");
            viewString.Append("rContactID], T1.[X_AssayGroupStandardTestResult.VersionOwnerCompanyID], T1.[X_As");
            viewString.Append("sayGroupStandardTestResult.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n      ");
            viewString.Append("      T.AssayGroupStandardTestResultID AS [X_AssayGroupStandardTestResult.AssayG");
            viewString.Append("roupStandardTestResultID], \r\n            T.AssayGroupTestSampleID AS [X_AssayGro");
            viewString.Append("upStandardTestResult.AssayGroupTestSampleID], \r\n            T.AssayGroupTestID A");
            viewString.Append("S [X_AssayGroupStandardTestResult.AssayGroupTestID], \r\n            T.AssayStanda");
            viewString.Append("rdID AS [X_AssayGroupStandardTestResult.AssayStandardID], \r\n            T.Sample");
            viewString.Append("CategoryID AS [X_AssayGroupStandardTestResult.SampleCategoryID], \r\n            T");
            viewString.Append(".SampleStateID AS [X_AssayGroupStandardTestResult.SampleStateID], \r\n            ");
            viewString.Append("T.SampleTypeID AS [X_AssayGroupStandardTestResult.SampleTypeID], \r\n            T");
            viewString.Append(".LabResultText AS [X_AssayGroupStandardTestResult.LabResultText], \r\n            ");
            viewString.Append("T.LabResult AS [X_AssayGroupStandardTestResult.LabResult], \r\n            T.LabSa");
            viewString.Append("mpleNumber AS [X_AssayGroupStandardTestResult.LabSampleNumber], \r\n            T.");
            viewString.Append("LabBatchNumber AS [X_AssayGroupStandardTestResult.LabBatchNumber], \r\n           ");
            viewString.Append(" T.Sampled AS [X_AssayGroupStandardTestResult.Sampled], \r\n            T.SampledB");
            viewString.Append("y AS [X_AssayGroupStandardTestResult.SampledBy], \r\n            T.Version AS [X_A");
            viewString.Append("ssayGroupStandardTestResult.Version], \r\n            T.VersionAntecedentID AS [X_");
            viewString.Append("AssayGroupStandardTestResult.VersionAntecedentID], \r\n            T.VersionCertai");
            viewString.Append("nty AS [X_AssayGroupStandardTestResult.VersionCertainty], \r\n            T.Versio");
            viewString.Append("nWorkflowInstanceID AS [X_AssayGroupStandardTestResult.VersionWorkflowInstanceID");
            viewString.Append("], \r\n            T.VersionUpdatedBy AS [X_AssayGroupStandardTestResult.VersionUp");
            viewString.Append("datedBy], \r\n            T.VersionDeletedBy AS [X_AssayGroupStandardTestResult.Ve");
            viewString.Append("rsionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_AssayGroupStandardT");
            viewString.Append("estResult.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_As");
            viewString.Append("sayGroupStandardTestResult.VersionOwnerCompanyID], \r\n            T.VersionUpdate");
            viewString.Append("d AS [X_AssayGroupStandardTestResult.VersionUpdated], \r\n            True AS _fro");
            viewString.Append("m0\r\n        FROM XODBC.AssayGroupStandardTestResults AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_AssayGroupStandardTestResult", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTest
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2112);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_AssayGroupTest\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.Store.X_AssayGroupTest](T1.[X_AssayGroupTest.AssayGroupTestID], T1.[X_");
            viewString.Append("AssayGroupTest.AssayGroupID], T1.[X_AssayGroupTest.AssayTypeName], T1.[X_AssayGr");
            viewString.Append("oupTest.AssayTestName], T1.[X_AssayGroupTest.ParameterID], T1.[X_AssayGroupTest.");
            viewString.Append("AssayTestPriority], T1.[X_AssayGroupTest.AssayMethodID], T1.[X_AssayGroupTest.As");
            viewString.Append("sayTypeID], T1.[X_AssayGroupTest.Version], T1.[X_AssayGroupTest.VersionAnteceden");
            viewString.Append("tID], T1.[X_AssayGroupTest.VersionCertainty], T1.[X_AssayGroupTest.VersionWorkfl");
            viewString.Append("owInstanceID], T1.[X_AssayGroupTest.VersionUpdatedBy], T1.[X_AssayGroupTest.Vers");
            viewString.Append("ionDeletedBy], T1.[X_AssayGroupTest.VersionOwnerContactID], T1.[X_AssayGroupTest");
            viewString.Append(".VersionOwnerCompanyID], T1.[X_AssayGroupTest.VersionUpdated])\r\n    FROM (\r\n    ");
            viewString.Append("    SELECT \r\n            T.AssayGroupTestID AS [X_AssayGroupTest.AssayGroupTestI");
            viewString.Append("D], \r\n            T.AssayGroupID AS [X_AssayGroupTest.AssayGroupID], \r\n         ");
            viewString.Append("   T.AssayTypeName AS [X_AssayGroupTest.AssayTypeName], \r\n            T.AssayTes");
            viewString.Append("tName AS [X_AssayGroupTest.AssayTestName], \r\n            T.ParameterID AS [X_Ass");
            viewString.Append("ayGroupTest.ParameterID], \r\n            T.AssayTestPriority AS [X_AssayGroupTest");
            viewString.Append(".AssayTestPriority], \r\n            T.AssayMethodID AS [X_AssayGroupTest.AssayMet");
            viewString.Append("hodID], \r\n            T.AssayTypeID AS [X_AssayGroupTest.AssayTypeID], \r\n       ");
            viewString.Append("     T.Version AS [X_AssayGroupTest.Version], \r\n            T.VersionAntecedentI");
            viewString.Append("D AS [X_AssayGroupTest.VersionAntecedentID], \r\n            T.VersionCertainty AS");
            viewString.Append(" [X_AssayGroupTest.VersionCertainty], \r\n            T.VersionWorkflowInstanceID ");
            viewString.Append("AS [X_AssayGroupTest.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedB");
            viewString.Append("y AS [X_AssayGroupTest.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X");
            viewString.Append("_AssayGroupTest.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_A");
            viewString.Append("ssayGroupTest.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [");
            viewString.Append("X_AssayGroupTest.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_As");
            viewString.Append("sayGroupTest.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.A");
            viewString.Append("ssayGroupTests AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTest", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTestResult
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2432);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_AssayGroupTestResult\r\n        [XODB.Module.");
            viewString.Append("BusinessObjects.Store.X_AssayGroupTestResult](T1.[X_AssayGroupTestResult.AssayGr");
            viewString.Append("oupTestResultID], T1.[X_AssayGroupTestResult.SampleID], T1.[X_AssayGroupTestResu");
            viewString.Append("lt.AssayGroupTestID], T1.[X_AssayGroupTestResult.LabResultText], T1.[X_AssayGrou");
            viewString.Append("pTestResult.LabResult], T1.[X_AssayGroupTestResult.LabSampleNumber], T1.[X_Assay");
            viewString.Append("GroupTestResult.LabBatchNumber], T1.[X_AssayGroupTestResult.Sampled], T1.[X_Assa");
            viewString.Append("yGroupTestResult.SampledBy], T1.[X_AssayGroupTestResult.Version], T1.[X_AssayGro");
            viewString.Append("upTestResult.VersionAntecedentID], T1.[X_AssayGroupTestResult.VersionCertainty],");
            viewString.Append(" T1.[X_AssayGroupTestResult.VersionWorkflowInstanceID], T1.[X_AssayGroupTestResu");
            viewString.Append("lt.VersionUpdatedBy], T1.[X_AssayGroupTestResult.VersionDeletedBy], T1.[X_AssayG");
            viewString.Append("roupTestResult.VersionOwnerContactID], T1.[X_AssayGroupTestResult.VersionOwnerCo");
            viewString.Append("mpanyID], T1.[X_AssayGroupTestResult.VersionUpdated])\r\n    FROM (\r\n        SELEC");
            viewString.Append("T \r\n            T.AssayGroupTestResultID AS [X_AssayGroupTestResult.AssayGroupTe");
            viewString.Append("stResultID], \r\n            T.SampleID AS [X_AssayGroupTestResult.SampleID], \r\n  ");
            viewString.Append("          T.AssayGroupTestID AS [X_AssayGroupTestResult.AssayGroupTestID], \r\n   ");
            viewString.Append("         T.LabResultText AS [X_AssayGroupTestResult.LabResultText], \r\n          ");
            viewString.Append("  T.LabResult AS [X_AssayGroupTestResult.LabResult], \r\n            T.LabSampleNu");
            viewString.Append("mber AS [X_AssayGroupTestResult.LabSampleNumber], \r\n            T.LabBatchNumber");
            viewString.Append(" AS [X_AssayGroupTestResult.LabBatchNumber], \r\n            T.Sampled AS [X_Assay");
            viewString.Append("GroupTestResult.Sampled], \r\n            T.SampledBy AS [X_AssayGroupTestResult.S");
            viewString.Append("ampledBy], \r\n            T.Version AS [X_AssayGroupTestResult.Version], \r\n      ");
            viewString.Append("      T.VersionAntecedentID AS [X_AssayGroupTestResult.VersionAntecedentID], \r\n ");
            viewString.Append("           T.VersionCertainty AS [X_AssayGroupTestResult.VersionCertainty], \r\n  ");
            viewString.Append("          T.VersionWorkflowInstanceID AS [X_AssayGroupTestResult.VersionWorkflow");
            viewString.Append("InstanceID], \r\n            T.VersionUpdatedBy AS [X_AssayGroupTestResult.Version");
            viewString.Append("UpdatedBy], \r\n            T.VersionDeletedBy AS [X_AssayGroupTestResult.VersionD");
            viewString.Append("eletedBy], \r\n            T.VersionOwnerContactID AS [X_AssayGroupTestResult.Vers");
            viewString.Append("ionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_AssayGroupTestRe");
            viewString.Append("sult.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_AssayGroupTest");
            viewString.Append("Result.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.AssayGr");
            viewString.Append("oupTestResults AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTestResult", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTestResultComment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTestResultComment", "\r\n    SELECT VALUE -- Constructing X_AssayGroupTestResultComment\r\n        [XODB.M" +
                    "odule.BusinessObjects.Store.X_AssayGroupTestResultComment](T1.[X_AssayGroupTestR" +
                    "esultComment.AssayGroupTestResultCommentID], T1.[X_AssayGroupTestResultComment.A" +
                    "ssayGroupTestResultID], T1.[X_AssayGroupTestResultComment.Comment], T1.[X_AssayG" +
                    "roupTestResultComment.Version], T1.[X_AssayGroupTestResultComment.VersionAnteced" +
                    "entID], T1.[X_AssayGroupTestResultComment.VersionCertainty], T1.[X_AssayGroupTes" +
                    "tResultComment.VersionWorkflowInstanceID], T1.[X_AssayGroupTestResultComment.Ver" +
                    "sionUpdatedBy], T1.[X_AssayGroupTestResultComment.VersionDeletedBy], T1.[X_Assay" +
                    "GroupTestResultComment.VersionOwnerContactID], T1.[X_AssayGroupTestResultComment" +
                    ".VersionOwnerCompanyID], T1.[X_AssayGroupTestResultComment.VersionUpdated])\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.AssayGroupTestResultCommentID AS [X_Assa" +
                    "yGroupTestResultComment.AssayGroupTestResultCommentID], \r\n            T.AssayGro" +
                    "upTestResultID AS [X_AssayGroupTestResultComment.AssayGroupTestResultID], \r\n    " +
                    "        T.Comment AS [X_AssayGroupTestResultComment.Comment], \r\n            T.Ve" +
                    "rsion AS [X_AssayGroupTestResultComment.Version], \r\n            T.VersionAnteced" +
                    "entID AS [X_AssayGroupTestResultComment.VersionAntecedentID], \r\n            T.Ve" +
                    "rsionCertainty AS [X_AssayGroupTestResultComment.VersionCertainty], \r\n          " +
                    "  T.VersionWorkflowInstanceID AS [X_AssayGroupTestResultComment.VersionWorkflowI" +
                    "nstanceID], \r\n            T.VersionUpdatedBy AS [X_AssayGroupTestResultComment.V" +
                    "ersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_AssayGroupTestResultCom" +
                    "ment.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_AssayGroupTe" +
                    "stResultComment.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS" +
                    " [X_AssayGroupTestResultComment.VersionOwnerCompanyID], \r\n            T.VersionU" +
                    "pdated AS [X_AssayGroupTestResultComment.VersionUpdated], \r\n            True AS " +
                    "_from0\r\n        FROM XODBC.AssayGroupTestResultComments AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTestResultDuplicate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2709);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_AssayGroupTestResultDuplicate\r\n        [XOD");
            viewString.Append("B.Module.BusinessObjects.Store.X_AssayGroupTestResultDuplicate](T1.[X_AssayGroup");
            viewString.Append("TestResultDuplicate.AssayGroupTestResultDuplicateID], T1.[X_AssayGroupTestResult");
            viewString.Append("Duplicate.AssayGroupTestResultID], T1.[X_AssayGroupTestResultDuplicate.LabResult");
            viewString.Append("Text], T1.[X_AssayGroupTestResultDuplicate.LabResult], T1.[X_AssayGroupTestResul");
            viewString.Append("tDuplicate.LabSampleNumber], T1.[X_AssayGroupTestResultDuplicate.LabBatchNumber]");
            viewString.Append(", T1.[X_AssayGroupTestResultDuplicate.Sampled], T1.[X_AssayGroupTestResultDuplic");
            viewString.Append("ate.SampledBy], T1.[X_AssayGroupTestResultDuplicate.Version], T1.[X_AssayGroupTe");
            viewString.Append("stResultDuplicate.VersionAntecedentID], T1.[X_AssayGroupTestResultDuplicate.Vers");
            viewString.Append("ionCertainty], T1.[X_AssayGroupTestResultDuplicate.VersionWorkflowInstanceID], T");
            viewString.Append("1.[X_AssayGroupTestResultDuplicate.VersionUpdatedBy], T1.[X_AssayGroupTestResult");
            viewString.Append("Duplicate.VersionDeletedBy], T1.[X_AssayGroupTestResultDuplicate.VersionOwnerCon");
            viewString.Append("tactID], T1.[X_AssayGroupTestResultDuplicate.VersionOwnerCompanyID], T1.[X_Assay");
            viewString.Append("GroupTestResultDuplicate.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n        ");
            viewString.Append("    T.AssayGroupTestResultDuplicateID AS [X_AssayGroupTestResultDuplicate.AssayG");
            viewString.Append("roupTestResultDuplicateID], \r\n            T.AssayGroupTestResultID AS [X_AssayGr");
            viewString.Append("oupTestResultDuplicate.AssayGroupTestResultID], \r\n            T.LabResultText AS");
            viewString.Append(" [X_AssayGroupTestResultDuplicate.LabResultText], \r\n            T.LabResult AS [");
            viewString.Append("X_AssayGroupTestResultDuplicate.LabResult], \r\n            T.LabSampleNumber AS [");
            viewString.Append("X_AssayGroupTestResultDuplicate.LabSampleNumber], \r\n            T.LabBatchNumber");
            viewString.Append(" AS [X_AssayGroupTestResultDuplicate.LabBatchNumber], \r\n            T.Sampled AS");
            viewString.Append(" [X_AssayGroupTestResultDuplicate.Sampled], \r\n            T.SampledBy AS [X_Assa");
            viewString.Append("yGroupTestResultDuplicate.SampledBy], \r\n            T.Version AS [X_AssayGroupTe");
            viewString.Append("stResultDuplicate.Version], \r\n            T.VersionAntecedentID AS [X_AssayGroup");
            viewString.Append("TestResultDuplicate.VersionAntecedentID], \r\n            T.VersionCertainty AS [X");
            viewString.Append("_AssayGroupTestResultDuplicate.VersionCertainty], \r\n            T.VersionWorkflo");
            viewString.Append("wInstanceID AS [X_AssayGroupTestResultDuplicate.VersionWorkflowInstanceID], \r\n  ");
            viewString.Append("          T.VersionUpdatedBy AS [X_AssayGroupTestResultDuplicate.VersionUpdatedB");
            viewString.Append("y], \r\n            T.VersionDeletedBy AS [X_AssayGroupTestResultDuplicate.Version");
            viewString.Append("DeletedBy], \r\n            T.VersionOwnerContactID AS [X_AssayGroupTestResultDupl");
            viewString.Append("icate.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_AssayG");
            viewString.Append("roupTestResultDuplicate.VersionOwnerCompanyID], \r\n            T.VersionUpdated A");
            viewString.Append("S [X_AssayGroupTestResultDuplicate.VersionUpdated], \r\n            True AS _from0");
            viewString.Append("\r\n        FROM XODBC.AssayGroupTestResultDuplicates AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTestResultDuplicate", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_BlockModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4430);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_BlockModel\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.X_BlockModel](T1.[X_BlockModel.BlockModelID], T1.[X_BlockModel.Proje");
            viewString.Append("ctID], T1.[X_BlockModel.Alias], T1.[X_BlockModel.OriginX], T1.[X_BlockModel.Orig");
            viewString.Append("inY], T1.[X_BlockModel.OriginZ], T1.[X_BlockModel.IsIJKCalculated], T1.[X_BlockM");
            viewString.Append("odel.OriginI], T1.[X_BlockModel.OriginJ], T1.[X_BlockModel.OriginK], T1.[X_Block");
            viewString.Append("Model.MaximumI], T1.[X_BlockModel.MaximumJ], T1.[X_BlockModel.MaximumK], T1.[X_B");
            viewString.Append("lockModel.MinimumI], T1.[X_BlockModel.MinimumJ], T1.[X_BlockModel.MinimumK], T1.");
            viewString.Append("[X_BlockModel.DimensionEasting], T1.[X_BlockModel.DimensionNorthing], T1.[X_Bloc");
            viewString.Append("kModel.DimensionElevation], T1.[X_BlockModel.IsOriginNorthPositive], T1.[X_Block");
            viewString.Append("Model.IsOriginEastPositive], T1.[X_BlockModel.IsOriginElevationUpwardsPositive],");
            viewString.Append(" T1.[X_BlockModel.CubeCentroid0OriginOffsetX], T1.[X_BlockModel.CubeCentroid0Ori");
            viewString.Append("ginOffsetY], T1.[X_BlockModel.CubeCentroid0OriginOffsetZ], T1.[X_BlockModel.Unit");
            viewString.Append("IJK], T1.[X_BlockModel.DefaultISize], T1.[X_BlockModel.DefaultJSize], T1.[X_Bloc");
            viewString.Append("kModel.DefaultKSize], T1.[X_BlockModel.AuthorContactID], T1.[X_BlockModel.Respon");
            viewString.Append("sibleContactID], T1.[X_BlockModel.ApproverContactID], T1.[X_BlockModel.ExternalR");
            viewString.Append("eviewerContactID], T1.[X_BlockModel.Version], T1.[X_BlockModel.VersionAntecedent");
            viewString.Append("ID], T1.[X_BlockModel.VersionCertainty], T1.[X_BlockModel.VersionWorkflowInstanc");
            viewString.Append("eID], T1.[X_BlockModel.VersionUpdatedBy], T1.[X_BlockModel.VersionDeletedBy], T1");
            viewString.Append(".[X_BlockModel.VersionOwnerContactID], T1.[X_BlockModel.VersionOwnerCompanyID], ");
            viewString.Append("T1.[X_BlockModel.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Bl");
            viewString.Append("ockModelID AS [X_BlockModel.BlockModelID], \r\n            T.ProjectID AS [X_Block");
            viewString.Append("Model.ProjectID], \r\n            T.Alias AS [X_BlockModel.Alias], \r\n            T");
            viewString.Append(".OriginX AS [X_BlockModel.OriginX], \r\n            T.OriginY AS [X_BlockModel.Ori");
            viewString.Append("ginY], \r\n            T.OriginZ AS [X_BlockModel.OriginZ], \r\n            T.IsIJKC");
            viewString.Append("alculated AS [X_BlockModel.IsIJKCalculated], \r\n            T.OriginI AS [X_Block");
            viewString.Append("Model.OriginI], \r\n            T.OriginJ AS [X_BlockModel.OriginJ], \r\n           ");
            viewString.Append(" T.OriginK AS [X_BlockModel.OriginK], \r\n            T.MaximumI AS [X_BlockModel.");
            viewString.Append("MaximumI], \r\n            T.MaximumJ AS [X_BlockModel.MaximumJ], \r\n            T.");
            viewString.Append("MaximumK AS [X_BlockModel.MaximumK], \r\n            T.MinimumI AS [X_BlockModel.M");
            viewString.Append("inimumI], \r\n            T.MinimumJ AS [X_BlockModel.MinimumJ], \r\n            T.M");
            viewString.Append("inimumK AS [X_BlockModel.MinimumK], \r\n            T.DimensionEasting AS [X_Block");
            viewString.Append("Model.DimensionEasting], \r\n            T.DimensionNorthing AS [X_BlockModel.Dime");
            viewString.Append("nsionNorthing], \r\n            T.DimensionElevation AS [X_BlockModel.DimensionEle");
            viewString.Append("vation], \r\n            T.IsOriginNorthPositive AS [X_BlockModel.IsOriginNorthPos");
            viewString.Append("itive], \r\n            T.IsOriginEastPositive AS [X_BlockModel.IsOriginEastPositi");
            viewString.Append("ve], \r\n            T.IsOriginElevationUpwardsPositive AS [X_BlockModel.IsOriginE");
            viewString.Append("levationUpwardsPositive], \r\n            T.CubeCentroid0OriginOffsetX AS [X_Block");
            viewString.Append("Model.CubeCentroid0OriginOffsetX], \r\n            T.CubeCentroid0OriginOffsetY AS");
            viewString.Append(" [X_BlockModel.CubeCentroid0OriginOffsetY], \r\n            T.CubeCentroid0OriginO");
            viewString.Append("ffsetZ AS [X_BlockModel.CubeCentroid0OriginOffsetZ], \r\n            T.UnitIJK AS ");
            viewString.Append("[X_BlockModel.UnitIJK], \r\n            T.DefaultISize AS [X_BlockModel.DefaultISi");
            viewString.Append("ze], \r\n            T.DefaultJSize AS [X_BlockModel.DefaultJSize], \r\n            ");
            viewString.Append("T.DefaultKSize AS [X_BlockModel.DefaultKSize], \r\n            T.AuthorContactID A");
            viewString.Append("S [X_BlockModel.AuthorContactID], \r\n            T.ResponsibleContactID AS [X_Blo");
            viewString.Append("ckModel.ResponsibleContactID], \r\n            T.ApproverContactID AS [X_BlockMode");
            viewString.Append("l.ApproverContactID], \r\n            T.ExternalReviewerContactID AS [X_BlockModel");
            viewString.Append(".ExternalReviewerContactID], \r\n            T.Version AS [X_BlockModel.Version], ");
            viewString.Append("\r\n            T.VersionAntecedentID AS [X_BlockModel.VersionAntecedentID], \r\n   ");
            viewString.Append("         T.VersionCertainty AS [X_BlockModel.VersionCertainty], \r\n            T.");
            viewString.Append("VersionWorkflowInstanceID AS [X_BlockModel.VersionWorkflowInstanceID], \r\n       ");
            viewString.Append("     T.VersionUpdatedBy AS [X_BlockModel.VersionUpdatedBy], \r\n            T.Vers");
            viewString.Append("ionDeletedBy AS [X_BlockModel.VersionDeletedBy], \r\n            T.VersionOwnerCon");
            viewString.Append("tactID AS [X_BlockModel.VersionOwnerContactID], \r\n            T.VersionOwnerComp");
            viewString.Append("anyID AS [X_BlockModel.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS");
            viewString.Append(" [X_BlockModel.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC");
            viewString.Append(".BlockModels AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_BlockModel", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_BlockModelBlock
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(7214);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_BlockModelBlock\r\n        [XODB.Module.Busin");
            viewString.Append("essObjects.Store.X_BlockModelBlock](T1.[X_BlockModelBlock.BlockModelBlockID], T1");
            viewString.Append(".[X_BlockModelBlock.BlockModelID], T1.[X_BlockModelBlock.Domain], T1.[X_BlockMod");
            viewString.Append("elBlock.I], T1.[X_BlockModelBlock.J], T1.[X_BlockModelBlock.K], T1.[X_BlockModel");
            viewString.Append("Block.CentroidX], T1.[X_BlockModelBlock.CentroidY], T1.[X_BlockModelBlock.Centro");
            viewString.Append("idZ], T1.[X_BlockModelBlock.LengthX], T1.[X_BlockModelBlock.LengthY], T1.[X_Bloc");
            viewString.Append("kModelBlock.LengthZ], T1.[X_BlockModelBlock.MinimumSamples], T1.[X_BlockModelBlo");
            viewString.Append("ck.MaximumSamples], T1.[X_BlockModelBlock.EstimationTechnique], T1.[X_BlockModel");
            viewString.Append("Block.KrigingEfficiency], T1.[X_BlockModelBlock.KrigingError], T1.[X_BlockModelB");
            viewString.Append("lock.KrigingVariance], T1.[X_BlockModelBlock.SlopeOfRegression], T1.[X_BlockMode");
            viewString.Append("lBlock.Density], T1.[X_BlockModelBlock.ResourceCategory], T1.[X_BlockModelBlock.");
            viewString.Append("Numeric1], T1.[X_BlockModelBlock.Numeric2], T1.[X_BlockModelBlock.Numeric3], T1.");
            viewString.Append("[X_BlockModelBlock.Numeric4], T1.[X_BlockModelBlock.Numeric5], T1.[X_BlockModelB");
            viewString.Append("lock.Numeric6], T1.[X_BlockModelBlock.Numeric7], T1.[X_BlockModelBlock.Numeric8]");
            viewString.Append(", T1.[X_BlockModelBlock.Numeric9], T1.[X_BlockModelBlock.Numeric10], T1.[X_Block");
            viewString.Append("ModelBlock.Numeric11], T1.[X_BlockModelBlock.Numeric12], T1.[X_BlockModelBlock.N");
            viewString.Append("umeric13], T1.[X_BlockModelBlock.Numeric14], T1.[X_BlockModelBlock.Numeric15], T");
            viewString.Append("1.[X_BlockModelBlock.Numeric16], T1.[X_BlockModelBlock.Numeric17], T1.[X_BlockMo");
            viewString.Append("delBlock.Numeric18], T1.[X_BlockModelBlock.Numeric19], T1.[X_BlockModelBlock.Num");
            viewString.Append("eric20], T1.[X_BlockModelBlock.Numeric21], T1.[X_BlockModelBlock.Numeric22], T1.");
            viewString.Append("[X_BlockModelBlock.Numeric23], T1.[X_BlockModelBlock.Numeric24], T1.[X_BlockMode");
            viewString.Append("lBlock.Numeric25], T1.[X_BlockModelBlock.Numeric26], T1.[X_BlockModelBlock.Numer");
            viewString.Append("ic27], T1.[X_BlockModelBlock.Numeric28], T1.[X_BlockModelBlock.Numeric29], T1.[X");
            viewString.Append("_BlockModelBlock.Numeric30], T1.[X_BlockModelBlock.Numeric31], T1.[X_BlockModelB");
            viewString.Append("lock.String1], T1.[X_BlockModelBlock.String2], T1.[X_BlockModelBlock.String3], T");
            viewString.Append("1.[X_BlockModelBlock.String4], T1.[X_BlockModelBlock.String5], T1.[X_BlockModelB");
            viewString.Append("lock.String6], T1.[X_BlockModelBlock.String7], T1.[X_BlockModelBlock.String8], T");
            viewString.Append("1.[X_BlockModelBlock.String9], T1.[X_BlockModelBlock.String10], T1.[X_BlockModel");
            viewString.Append("Block.String11], T1.[X_BlockModelBlock.Version], T1.[X_BlockModelBlock.VersionAn");
            viewString.Append("tecedentID], T1.[X_BlockModelBlock.VersionCertainty], T1.[X_BlockModelBlock.Vers");
            viewString.Append("ionWorkflowInstanceID], T1.[X_BlockModelBlock.VersionUpdatedBy], T1.[X_BlockMode");
            viewString.Append("lBlock.VersionDeletedBy], T1.[X_BlockModelBlock.VersionOwnerContactID], T1.[X_Bl");
            viewString.Append("ockModelBlock.VersionOwnerCompanyID], T1.[X_BlockModelBlock.VersionUpdated])\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.BlockModelBlockID AS [X_BlockModelBlock");
            viewString.Append(".BlockModelBlockID], \r\n            T.BlockModelID AS [X_BlockModelBlock.BlockMod");
            viewString.Append("elID], \r\n            T.Domain AS [X_BlockModelBlock.Domain], \r\n            T.I A");
            viewString.Append("S [X_BlockModelBlock.I], \r\n            T.J AS [X_BlockModelBlock.J], \r\n         ");
            viewString.Append("   T.K AS [X_BlockModelBlock.K], \r\n            T.CentroidX AS [X_BlockModelBlock");
            viewString.Append(".CentroidX], \r\n            T.CentroidY AS [X_BlockModelBlock.CentroidY], \r\n     ");
            viewString.Append("       T.CentroidZ AS [X_BlockModelBlock.CentroidZ], \r\n            T.LengthX AS ");
            viewString.Append("[X_BlockModelBlock.LengthX], \r\n            T.LengthY AS [X_BlockModelBlock.Lengt");
            viewString.Append("hY], \r\n            T.LengthZ AS [X_BlockModelBlock.LengthZ], \r\n            T.Min");
            viewString.Append("imumSamples AS [X_BlockModelBlock.MinimumSamples], \r\n            T.MaximumSample");
            viewString.Append("s AS [X_BlockModelBlock.MaximumSamples], \r\n            T.EstimationTechnique AS ");
            viewString.Append("[X_BlockModelBlock.EstimationTechnique], \r\n            T.KrigingEfficiency AS [X");
            viewString.Append("_BlockModelBlock.KrigingEfficiency], \r\n            T.KrigingError AS [X_BlockMod");
            viewString.Append("elBlock.KrigingError], \r\n            T.KrigingVariance AS [X_BlockModelBlock.Kri");
            viewString.Append("gingVariance], \r\n            T.SlopeOfRegression AS [X_BlockModelBlock.SlopeOfRe");
            viewString.Append("gression], \r\n            T.Density AS [X_BlockModelBlock.Density], \r\n           ");
            viewString.Append(" T.ResourceCategory AS [X_BlockModelBlock.ResourceCategory], \r\n            T.Num");
            viewString.Append("eric1 AS [X_BlockModelBlock.Numeric1], \r\n            T.Numeric2 AS [X_BlockModel");
            viewString.Append("Block.Numeric2], \r\n            T.Numeric3 AS [X_BlockModelBlock.Numeric3], \r\n   ");
            viewString.Append("         T.Numeric4 AS [X_BlockModelBlock.Numeric4], \r\n            T.Numeric5 AS");
            viewString.Append(" [X_BlockModelBlock.Numeric5], \r\n            T.Numeric6 AS [X_BlockModelBlock.Nu");
            viewString.Append("meric6], \r\n            T.Numeric7 AS [X_BlockModelBlock.Numeric7], \r\n           ");
            viewString.Append(" T.Numeric8 AS [X_BlockModelBlock.Numeric8], \r\n            T.Numeric9 AS [X_Bloc");
            viewString.Append("kModelBlock.Numeric9], \r\n            T.Numeric10 AS [X_BlockModelBlock.Numeric10");
            viewString.Append("], \r\n            T.Numeric11 AS [X_BlockModelBlock.Numeric11], \r\n            T.N");
            viewString.Append("umeric12 AS [X_BlockModelBlock.Numeric12], \r\n            T.Numeric13 AS [X_Block");
            viewString.Append("ModelBlock.Numeric13], \r\n            T.Numeric14 AS [X_BlockModelBlock.Numeric14");
            viewString.Append("], \r\n            T.Numeric15 AS [X_BlockModelBlock.Numeric15], \r\n            T.N");
            viewString.Append("umeric16 AS [X_BlockModelBlock.Numeric16], \r\n            T.Numeric17 AS [X_Block");
            viewString.Append("ModelBlock.Numeric17], \r\n            T.Numeric18 AS [X_BlockModelBlock.Numeric18");
            viewString.Append("], \r\n            T.Numeric19 AS [X_BlockModelBlock.Numeric19], \r\n            T.N");
            viewString.Append("umeric20 AS [X_BlockModelBlock.Numeric20], \r\n            T.Numeric21 AS [X_Block");
            viewString.Append("ModelBlock.Numeric21], \r\n            T.Numeric22 AS [X_BlockModelBlock.Numeric22");
            viewString.Append("], \r\n            T.Numeric23 AS [X_BlockModelBlock.Numeric23], \r\n            T.N");
            viewString.Append("umeric24 AS [X_BlockModelBlock.Numeric24], \r\n            T.Numeric25 AS [X_Block");
            viewString.Append("ModelBlock.Numeric25], \r\n            T.Numeric26 AS [X_BlockModelBlock.Numeric26");
            viewString.Append("], \r\n            T.Numeric27 AS [X_BlockModelBlock.Numeric27], \r\n            T.N");
            viewString.Append("umeric28 AS [X_BlockModelBlock.Numeric28], \r\n            T.Numeric29 AS [X_Block");
            viewString.Append("ModelBlock.Numeric29], \r\n            T.Numeric30 AS [X_BlockModelBlock.Numeric30");
            viewString.Append("], \r\n            T.Numeric31 AS [X_BlockModelBlock.Numeric31], \r\n            T.S");
            viewString.Append("tring1 AS [X_BlockModelBlock.String1], \r\n            T.String2 AS [X_BlockModelB");
            viewString.Append("lock.String2], \r\n            T.String3 AS [X_BlockModelBlock.String3], \r\n       ");
            viewString.Append("     T.String4 AS [X_BlockModelBlock.String4], \r\n            T.String5 AS [X_Blo");
            viewString.Append("ckModelBlock.String5], \r\n            T.String6 AS [X_BlockModelBlock.String6], \r");
            viewString.Append("\n            T.String7 AS [X_BlockModelBlock.String7], \r\n            T.String8 A");
            viewString.Append("S [X_BlockModelBlock.String8], \r\n            T.String9 AS [X_BlockModelBlock.Str");
            viewString.Append("ing9], \r\n            T.String10 AS [X_BlockModelBlock.String10], \r\n            T");
            viewString.Append(".String11 AS [X_BlockModelBlock.String11], \r\n            T.Version AS [X_BlockMo");
            viewString.Append("delBlock.Version], \r\n            T.VersionAntecedentID AS [X_BlockModelBlock.Ver");
            viewString.Append("sionAntecedentID], \r\n            T.VersionCertainty AS [X_BlockModelBlock.Versio");
            viewString.Append("nCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_BlockModelBlock.Ver");
            viewString.Append("sionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_BlockModelBlock.");
            viewString.Append("VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_BlockModelBlock.Versio");
            viewString.Append("nDeletedBy], \r\n            T.VersionOwnerContactID AS [X_BlockModelBlock.Version");
            viewString.Append("OwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_BlockModelBlock.Ver");
            viewString.Append("sionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_BlockModelBlock.Versio");
            viewString.Append("nUpdated], \r\n            True AS _from0\r\n        FROM XODBC.BlockModelBlocks AS ");
            viewString.Append("T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_BlockModelBlock", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_BlockModelBlockData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2153);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_BlockModelBlockData\r\n        [XODB.Module.B");
            viewString.Append("usinessObjects.Store.X_BlockModelBlockData](T1.[X_BlockModelBlockData.BlockModel");
            viewString.Append("BlockDataID], T1.[X_BlockModelBlockData.BlockModelID], T1.[X_BlockModelBlockData");
            viewString.Append(".BlockModelBlockID], T1.[X_BlockModelBlockData.ParameterID], T1.[X_BlockModelBlo");
            viewString.Append("ckData.BlockModelBlockDataText], T1.[X_BlockModelBlockData.BlockModelBlockDataVa");
            viewString.Append("lue], T1.[X_BlockModelBlockData.Version], T1.[X_BlockModelBlockData.VersionAntec");
            viewString.Append("edentID], T1.[X_BlockModelBlockData.VersionCertainty], T1.[X_BlockModelBlockData");
            viewString.Append(".VersionWorkflowInstanceID], T1.[X_BlockModelBlockData.VersionUpdatedBy], T1.[X_");
            viewString.Append("BlockModelBlockData.VersionDeletedBy], T1.[X_BlockModelBlockData.VersionOwnerCon");
            viewString.Append("tactID], T1.[X_BlockModelBlockData.VersionOwnerCompanyID], T1.[X_BlockModelBlock");
            viewString.Append("Data.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.BlockModelBloc");
            viewString.Append("kDataID AS [X_BlockModelBlockData.BlockModelBlockDataID], \r\n            T.BlockM");
            viewString.Append("odelID AS [X_BlockModelBlockData.BlockModelID], \r\n            T.BlockModelBlockI");
            viewString.Append("D AS [X_BlockModelBlockData.BlockModelBlockID], \r\n            T.ParameterID AS [");
            viewString.Append("X_BlockModelBlockData.ParameterID], \r\n            T.BlockModelBlockDataText AS [");
            viewString.Append("X_BlockModelBlockData.BlockModelBlockDataText], \r\n            T.BlockModelBlockD");
            viewString.Append("ataValue AS [X_BlockModelBlockData.BlockModelBlockDataValue], \r\n            T.Ve");
            viewString.Append("rsion AS [X_BlockModelBlockData.Version], \r\n            T.VersionAntecedentID AS");
            viewString.Append(" [X_BlockModelBlockData.VersionAntecedentID], \r\n            T.VersionCertainty A");
            viewString.Append("S [X_BlockModelBlockData.VersionCertainty], \r\n            T.VersionWorkflowInsta");
            viewString.Append("nceID AS [X_BlockModelBlockData.VersionWorkflowInstanceID], \r\n            T.Vers");
            viewString.Append("ionUpdatedBy AS [X_BlockModelBlockData.VersionUpdatedBy], \r\n            T.Versio");
            viewString.Append("nDeletedBy AS [X_BlockModelBlockData.VersionDeletedBy], \r\n            T.VersionO");
            viewString.Append("wnerContactID AS [X_BlockModelBlockData.VersionOwnerContactID], \r\n            T.");
            viewString.Append("VersionOwnerCompanyID AS [X_BlockModelBlockData.VersionOwnerCompanyID], \r\n      ");
            viewString.Append("      T.VersionUpdated AS [X_BlockModelBlockData.VersionUpdated], \r\n            ");
            viewString.Append("True AS _from0\r\n        FROM XODBC.BlockModelBlockDatas AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_BlockModelBlockData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_BlockModelMetadata
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2096);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_BlockModelMetadata\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.X_BlockModelMetadata](T1.[X_BlockModelMetadata.BlockModelMet");
            viewString.Append("adataID], T1.[X_BlockModelMetadata.BlockModelID], T1.[X_BlockModelMetadata.Param");
            viewString.Append("eterID], T1.[X_BlockModelMetadata.IsColumnData], T1.[X_BlockModelMetadata.BlockM");
            viewString.Append("odelMetadataText], T1.[X_BlockModelMetadata.BlockModelMetadataValue], T1.[X_Bloc");
            viewString.Append("kModelMetadata.Version], T1.[X_BlockModelMetadata.VersionAntecedentID], T1.[X_Bl");
            viewString.Append("ockModelMetadata.VersionCertainty], T1.[X_BlockModelMetadata.VersionWorkflowInst");
            viewString.Append("anceID], T1.[X_BlockModelMetadata.VersionUpdatedBy], T1.[X_BlockModelMetadata.Ve");
            viewString.Append("rsionDeletedBy], T1.[X_BlockModelMetadata.VersionOwnerContactID], T1.[X_BlockMod");
            viewString.Append("elMetadata.VersionOwnerCompanyID], T1.[X_BlockModelMetadata.VersionUpdated])\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.BlockModelMetadataID AS [X_BlockModelMe");
            viewString.Append("tadata.BlockModelMetadataID], \r\n            T.BlockModelID AS [X_BlockModelMetad");
            viewString.Append("ata.BlockModelID], \r\n            T.ParameterID AS [X_BlockModelMetadata.Paramete");
            viewString.Append("rID], \r\n            T.IsColumnData AS [X_BlockModelMetadata.IsColumnData], \r\n   ");
            viewString.Append("         T.BlockModelMetadataText AS [X_BlockModelMetadata.BlockModelMetadataTex");
            viewString.Append("t], \r\n            T.BlockModelMetadataValue AS [X_BlockModelMetadata.BlockModelM");
            viewString.Append("etadataValue], \r\n            T.Version AS [X_BlockModelMetadata.Version], \r\n    ");
            viewString.Append("        T.VersionAntecedentID AS [X_BlockModelMetadata.VersionAntecedentID], \r\n ");
            viewString.Append("           T.VersionCertainty AS [X_BlockModelMetadata.VersionCertainty], \r\n    ");
            viewString.Append("        T.VersionWorkflowInstanceID AS [X_BlockModelMetadata.VersionWorkflowInst");
            viewString.Append("anceID], \r\n            T.VersionUpdatedBy AS [X_BlockModelMetadata.VersionUpdate");
            viewString.Append("dBy], \r\n            T.VersionDeletedBy AS [X_BlockModelMetadata.VersionDeletedBy");
            viewString.Append("], \r\n            T.VersionOwnerContactID AS [X_BlockModelMetadata.VersionOwnerCo");
            viewString.Append("ntactID], \r\n            T.VersionOwnerCompanyID AS [X_BlockModelMetadata.Version");
            viewString.Append("OwnerCompanyID], \r\n            T.VersionUpdated AS [X_BlockModelMetadata.Version");
            viewString.Append("Updated], \r\n            True AS _from0\r\n        FROM XODBC.BlockModelMetadatas A");
            viewString.Append("S T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_BlockModelMetadata", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Casing
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2235);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Casing\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Store.X_Casing](T1.[X_Casing.CasingID], T1.[X_Casing.HeaderID], T1.[X_Casing.F");
            viewString.Append("romDepth], T1.[X_Casing.ToDepth], T1.[X_Casing.CasingTypeID], T1.[X_Casing.Casin");
            viewString.Append("gSize], T1.[X_Casing.CasingSizeUnit], T1.[X_Casing.CasingInsideData], T1.[X_Casi");
            viewString.Append("ng.CasingInsideDataUnit], T1.[X_Casing.CasingOutsideData], T1.[X_Casing.CasingOu");
            viewString.Append("tsideDataUnit], T1.[X_Casing.LengthRecovered], T1.[X_Casing.Comment], T1.[X_Casi");
            viewString.Append("ng.Version], T1.[X_Casing.VersionAntecedentID], T1.[X_Casing.VersionCertainty], ");
            viewString.Append("T1.[X_Casing.VersionWorkflowInstanceID], T1.[X_Casing.VersionUpdatedBy], T1.[X_C");
            viewString.Append("asing.VersionDeletedBy], T1.[X_Casing.VersionOwnerContactID], T1.[X_Casing.Versi");
            viewString.Append("onOwnerCompanyID], T1.[X_Casing.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n ");
            viewString.Append("           T.CasingID AS [X_Casing.CasingID], \r\n            T.HeaderID AS [X_Cas");
            viewString.Append("ing.HeaderID], \r\n            T.FromDepth AS [X_Casing.FromDepth], \r\n            ");
            viewString.Append("T.ToDepth AS [X_Casing.ToDepth], \r\n            T.CasingTypeID AS [X_Casing.Casin");
            viewString.Append("gTypeID], \r\n            T.CasingSize AS [X_Casing.CasingSize], \r\n            T.C");
            viewString.Append("asingSizeUnit AS [X_Casing.CasingSizeUnit], \r\n            T.CasingInsideData AS ");
            viewString.Append("[X_Casing.CasingInsideData], \r\n            T.CasingInsideDataUnit AS [X_Casing.C");
            viewString.Append("asingInsideDataUnit], \r\n            T.CasingOutsideData AS [X_Casing.CasingOutsi");
            viewString.Append("deData], \r\n            T.CasingOutsideDataUnit AS [X_Casing.CasingOutsideDataUni");
            viewString.Append("t], \r\n            T.LengthRecovered AS [X_Casing.LengthRecovered], \r\n           ");
            viewString.Append(" T.Comment AS [X_Casing.Comment], \r\n            T.Version AS [X_Casing.Version],");
            viewString.Append(" \r\n            T.VersionAntecedentID AS [X_Casing.VersionAntecedentID], \r\n      ");
            viewString.Append("      T.VersionCertainty AS [X_Casing.VersionCertainty], \r\n            T.Version");
            viewString.Append("WorkflowInstanceID AS [X_Casing.VersionWorkflowInstanceID], \r\n            T.Vers");
            viewString.Append("ionUpdatedBy AS [X_Casing.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS");
            viewString.Append(" [X_Casing.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Casing");
            viewString.Append(".VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Casing.Vers");
            viewString.Append("ionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Casing.VersionUpdated],");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM XODBC.Casings AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Casing", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Cementing
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Cementing", "\r\n    SELECT VALUE -- Constructing X_Cementing\r\n        [XODB.Module.BusinessObje" +
                    "cts.Store.X_Cementing](T1.[X_Cementing.CementingID], T1.[X_Cementing.HeaderID], " +
                    "T1.[X_Cementing.FromDepth], T1.[X_Cementing.ToDepth], T1.[X_Cementing.CementingD" +
                    "ate], T1.[X_Cementing.Volume], T1.[X_Cementing.Comment], T1.[X_Cementing.Version" +
                    "], T1.[X_Cementing.VersionAntecedentID], T1.[X_Cementing.VersionCertainty], T1.[" +
                    "X_Cementing.VersionWorkflowInstanceID], T1.[X_Cementing.VersionUpdatedBy], T1.[X" +
                    "_Cementing.VersionDeletedBy], T1.[X_Cementing.VersionOwnerContactID], T1.[X_Ceme" +
                    "nting.VersionOwnerCompanyID], T1.[X_Cementing.VersionUpdated])\r\n    FROM (\r\n    " +
                    "    SELECT \r\n            T.CementingID AS [X_Cementing.CementingID], \r\n         " +
                    "   T.HeaderID AS [X_Cementing.HeaderID], \r\n            T.FromDepth AS [X_Cementi" +
                    "ng.FromDepth], \r\n            T.ToDepth AS [X_Cementing.ToDepth], \r\n            T" +
                    ".CementingDate AS [X_Cementing.CementingDate], \r\n            T.Volume AS [X_Ceme" +
                    "nting.Volume], \r\n            T.Comment AS [X_Cementing.Comment], \r\n            T" +
                    ".Version AS [X_Cementing.Version], \r\n            T.VersionAntecedentID AS [X_Cem" +
                    "enting.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Cementing.Ve" +
                    "rsionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Cementing.Versi" +
                    "onWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Cementing.VersionU" +
                    "pdatedBy], \r\n            T.VersionDeletedBy AS [X_Cementing.VersionDeletedBy], \r" +
                    "\n            T.VersionOwnerContactID AS [X_Cementing.VersionOwnerContactID], \r\n " +
                    "           T.VersionOwnerCompanyID AS [X_Cementing.VersionOwnerCompanyID], \r\n   " +
                    "         T.VersionUpdated AS [X_Cementing.VersionUpdated], \r\n            True AS" +
                    " _from0\r\n        FROM XODBC.Cementings AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Company", "\r\n    SELECT VALUE -- Constructing X_Company\r\n        [XODB.Module.BusinessObject" +
                    "s.Store.X_Company](T1.[X_Company.CompanyID], T1.[X_Company.CompanyName], T1.[X_C" +
                    "ompany.CountryID], T1.[X_Company.PrimaryContactID], T1.[X_Company.Comment], T1.[" +
                    "X_Company.Version], T1.[X_Company.VersionAntecedentID], T1.[X_Company.VersionCer" +
                    "tainty], T1.[X_Company.VersionWorkflowInstanceID], T1.[X_Company.VersionUpdatedB" +
                    "y], T1.[X_Company.VersionDeletedBy], T1.[X_Company.VersionOwnerContactID], T1.[X" +
                    "_Company.VersionOwnerCompanyID], T1.[X_Company.VersionUpdated])\r\n    FROM (\r\n   " +
                    "     SELECT \r\n            T.CompanyID AS [X_Company.CompanyID], \r\n            T." +
                    "CompanyName AS [X_Company.CompanyName], \r\n            T.CountryID AS [X_Company." +
                    "CountryID], \r\n            T.PrimaryContactID AS [X_Company.PrimaryContactID], \r\n" +
                    "            T.Comment AS [X_Company.Comment], \r\n            T.Version AS [X_Comp" +
                    "any.Version], \r\n            T.VersionAntecedentID AS [X_Company.VersionAnteceden" +
                    "tID], \r\n            T.VersionCertainty AS [X_Company.VersionCertainty], \r\n      " +
                    "      T.VersionWorkflowInstanceID AS [X_Company.VersionWorkflowInstanceID], \r\n  " +
                    "          T.VersionUpdatedBy AS [X_Company.VersionUpdatedBy], \r\n            T.Ve" +
                    "rsionDeletedBy AS [X_Company.VersionDeletedBy], \r\n            T.VersionOwnerCont" +
                    "actID AS [X_Company.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyI" +
                    "D AS [X_Company.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Com" +
                    "pany.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Companies" +
                    " AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_CompanyAddress
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_CompanyAddress", "\r\n    SELECT VALUE -- Constructing X_CompanyAddress\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_CompanyAddress](T1.[X_CompanyAddress.CompanyAddressID], T1.[X_C" +
                    "ompanyAddress.CompanyID], T1.[X_CompanyAddress.AddressID], T1.[X_CompanyAddress." +
                    "Version], T1.[X_CompanyAddress.VersionAntecedentID], T1.[X_CompanyAddress.Versio" +
                    "nCertainty], T1.[X_CompanyAddress.VersionWorkflowInstanceID], T1.[X_CompanyAddre" +
                    "ss.VersionUpdatedBy], T1.[X_CompanyAddress.VersionDeletedBy], T1.[X_CompanyAddre" +
                    "ss.VersionOwnerContactID], T1.[X_CompanyAddress.VersionOwnerCompanyID], T1.[X_Co" +
                    "mpanyAddress.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Compan" +
                    "yAddressID AS [X_CompanyAddress.CompanyAddressID], \r\n            T.CompanyID AS " +
                    "[X_CompanyAddress.CompanyID], \r\n            T.AddressID AS [X_CompanyAddress.Add" +
                    "ressID], \r\n            T.Version AS [X_CompanyAddress.Version], \r\n            T." +
                    "VersionAntecedentID AS [X_CompanyAddress.VersionAntecedentID], \r\n            T.V" +
                    "ersionCertainty AS [X_CompanyAddress.VersionCertainty], \r\n            T.VersionW" +
                    "orkflowInstanceID AS [X_CompanyAddress.VersionWorkflowInstanceID], \r\n           " +
                    " T.VersionUpdatedBy AS [X_CompanyAddress.VersionUpdatedBy], \r\n            T.Vers" +
                    "ionDeletedBy AS [X_CompanyAddress.VersionDeletedBy], \r\n            T.VersionOwne" +
                    "rContactID AS [X_CompanyAddress.VersionOwnerContactID], \r\n            T.VersionO" +
                    "wnerCompanyID AS [X_CompanyAddress.VersionOwnerCompanyID], \r\n            T.Versi" +
                    "onUpdated AS [X_CompanyAddress.VersionUpdated], \r\n            True AS _from0\r\n  " +
                    "      FROM XODBC.CompanyAddresses AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_CompanyRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_CompanyRelation", "\r\n    SELECT VALUE -- Constructing X_CompanyRelation\r\n        [XODB.Module.Busine" +
                    "ssObjects.Store.X_CompanyRelation](T1.[X_CompanyRelation.CompanyRelationID], T1." +
                    "[X_CompanyRelation.CompanyID], T1.[X_CompanyRelation.ParentCompanyID], T1.[X_Com" +
                    "panyRelation.IsChildVisible], T1.[X_CompanyRelation.IsParentVisible], T1.[X_Comp" +
                    "anyRelation.Version], T1.[X_CompanyRelation.VersionAntecedentID], T1.[X_CompanyR" +
                    "elation.VersionCertainty], T1.[X_CompanyRelation.VersionWorkflowInstanceID], T1." +
                    "[X_CompanyRelation.VersionUpdatedBy], T1.[X_CompanyRelation.VersionDeletedBy], T" +
                    "1.[X_CompanyRelation.VersionOwnerContactID], T1.[X_CompanyRelation.VersionOwnerC" +
                    "ompanyID], T1.[X_CompanyRelation.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n" +
                    "            T.CompanyRelationID AS [X_CompanyRelation.CompanyRelationID], \r\n    " +
                    "        T.CompanyID AS [X_CompanyRelation.CompanyID], \r\n            T.ParentComp" +
                    "anyID AS [X_CompanyRelation.ParentCompanyID], \r\n            T.IsChildVisible AS " +
                    "[X_CompanyRelation.IsChildVisible], \r\n            T.IsParentVisible AS [X_Compan" +
                    "yRelation.IsParentVisible], \r\n            T.Version AS [X_CompanyRelation.Versio" +
                    "n], \r\n            T.VersionAntecedentID AS [X_CompanyRelation.VersionAntecedentI" +
                    "D], \r\n            T.VersionCertainty AS [X_CompanyRelation.VersionCertainty], \r\n" +
                    "            T.VersionWorkflowInstanceID AS [X_CompanyRelation.VersionWorkflowIns" +
                    "tanceID], \r\n            T.VersionUpdatedBy AS [X_CompanyRelation.VersionUpdatedB" +
                    "y], \r\n            T.VersionDeletedBy AS [X_CompanyRelation.VersionDeletedBy], \r\n" +
                    "            T.VersionOwnerContactID AS [X_CompanyRelation.VersionOwnerContactID]" +
                    ", \r\n            T.VersionOwnerCompanyID AS [X_CompanyRelation.VersionOwnerCompan" +
                    "yID], \r\n            T.VersionUpdated AS [X_CompanyRelation.VersionUpdated], \r\n  " +
                    "          True AS _from0\r\n        FROM XODBC.CompanyRelations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Compliance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2213);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Compliance\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.X_Compliance](T1.[X_Compliance.ComplianceID], T1.[X_Compliance.Compl");
            viewString.Append("ianceName], T1.[X_Compliance.ComplianceVersion], T1.[X_Compliance.CountryID], T1");
            viewString.Append(".[X_Compliance.ProvinceID], T1.[X_Compliance.ValidFrom], T1.[X_Compliance.Expiry");
            viewString.Append("], T1.[X_Compliance.AuthorityCompanyID], T1.[X_Compliance.MaintainedBy], T1.[X_C");
            viewString.Append("ompliance.Description], T1.[X_Compliance.ComplianceForm], T1.[X_Compliance.Versi");
            viewString.Append("on], T1.[X_Compliance.VersionAntecedentID], T1.[X_Compliance.VersionCertainty], ");
            viewString.Append("T1.[X_Compliance.VersionWorkflowInstanceID], T1.[X_Compliance.VersionUpdatedBy],");
            viewString.Append(" T1.[X_Compliance.VersionDeletedBy], T1.[X_Compliance.VersionOwnerContactID], T1");
            viewString.Append(".[X_Compliance.VersionOwnerCompanyID], T1.[X_Compliance.VersionUpdated])\r\n    FR");
            viewString.Append("OM (\r\n        SELECT \r\n            T.ComplianceID AS [X_Compliance.ComplianceID]");
            viewString.Append(", \r\n            T.ComplianceName AS [X_Compliance.ComplianceName], \r\n           ");
            viewString.Append(" T.ComplianceVersion AS [X_Compliance.ComplianceVersion], \r\n            T.Countr");
            viewString.Append("yID AS [X_Compliance.CountryID], \r\n            T.ProvinceID AS [X_Compliance.Pro");
            viewString.Append("vinceID], \r\n            T.ValidFrom AS [X_Compliance.ValidFrom], \r\n            T");
            viewString.Append(".Expiry AS [X_Compliance.Expiry], \r\n            T.AuthorityCompanyID AS [X_Compl");
            viewString.Append("iance.AuthorityCompanyID], \r\n            T.MaintainedBy AS [X_Compliance.Maintai");
            viewString.Append("nedBy], \r\n            T.Description AS [X_Compliance.Description], \r\n           ");
            viewString.Append(" T.ComplianceForm AS [X_Compliance.ComplianceForm], \r\n            T.Version AS [");
            viewString.Append("X_Compliance.Version], \r\n            T.VersionAntecedentID AS [X_Compliance.Vers");
            viewString.Append("ionAntecedentID], \r\n            T.VersionCertainty AS [X_Compliance.VersionCerta");
            viewString.Append("inty], \r\n            T.VersionWorkflowInstanceID AS [X_Compliance.VersionWorkflo");
            viewString.Append("wInstanceID], \r\n            T.VersionUpdatedBy AS [X_Compliance.VersionUpdatedBy");
            viewString.Append("], \r\n            T.VersionDeletedBy AS [X_Compliance.VersionDeletedBy], \r\n      ");
            viewString.Append("      T.VersionOwnerContactID AS [X_Compliance.VersionOwnerContactID], \r\n       ");
            viewString.Append("     T.VersionOwnerCompanyID AS [X_Compliance.VersionOwnerCompanyID], \r\n        ");
            viewString.Append("    T.VersionUpdated AS [X_Compliance.VersionUpdated], \r\n            True AS _fr");
            viewString.Append("om0\r\n        FROM XODBC.Compliances AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Compliance", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ComplianceTask
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ComplianceTask", "\r\n    SELECT VALUE -- Constructing X_ComplianceTask\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_ComplianceTask](T1.[X_ComplianceTask.ComplianceTaskID], T1.[X_C" +
                    "omplianceTask.ComplianceID], T1.[X_ComplianceTask.TaskID], T1.[X_ComplianceTask." +
                    "ExecutePrior], T1.[X_ComplianceTask.Version], T1.[X_ComplianceTask.VersionAntece" +
                    "dentID], T1.[X_ComplianceTask.VersionCertainty], T1.[X_ComplianceTask.VersionWor" +
                    "kflowInstanceID], T1.[X_ComplianceTask.VersionUpdatedBy], T1.[X_ComplianceTask.V" +
                    "ersionDeletedBy], T1.[X_ComplianceTask.VersionOwnerContactID], T1.[X_ComplianceT" +
                    "ask.VersionOwnerCompanyID], T1.[X_ComplianceTask.VersionUpdated])\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.ComplianceTaskID AS [X_ComplianceTask.ComplianceTa" +
                    "skID], \r\n            T.ComplianceID AS [X_ComplianceTask.ComplianceID], \r\n      " +
                    "      T.TaskID AS [X_ComplianceTask.TaskID], \r\n            T.ExecutePrior AS [X_" +
                    "ComplianceTask.ExecutePrior], \r\n            T.Version AS [X_ComplianceTask.Versi" +
                    "on], \r\n            T.VersionAntecedentID AS [X_ComplianceTask.VersionAntecedentI" +
                    "D], \r\n            T.VersionCertainty AS [X_ComplianceTask.VersionCertainty], \r\n " +
                    "           T.VersionWorkflowInstanceID AS [X_ComplianceTask.VersionWorkflowInsta" +
                    "nceID], \r\n            T.VersionUpdatedBy AS [X_ComplianceTask.VersionUpdatedBy]," +
                    " \r\n            T.VersionDeletedBy AS [X_ComplianceTask.VersionDeletedBy], \r\n    " +
                    "        T.VersionOwnerContactID AS [X_ComplianceTask.VersionOwnerContactID], \r\n " +
                    "           T.VersionOwnerCompanyID AS [X_ComplianceTask.VersionOwnerCompanyID], " +
                    "\r\n            T.VersionUpdated AS [X_ComplianceTask.VersionUpdated], \r\n         " +
                    "   True AS _from0\r\n        FROM XODBC.ComplianceTasks AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ComplianceWorkType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ComplianceWorkType", "\r\n    SELECT VALUE -- Constructing X_ComplianceWorkType\r\n        [XODB.Module.Bus" +
                    "inessObjects.Store.X_ComplianceWorkType](T1.[X_ComplianceWorkType.ComplianceWork" +
                    "TypeID], T1.[X_ComplianceWorkType.ComplianceID], T1.[X_ComplianceWorkType.WorkTy" +
                    "peID], T1.[X_ComplianceWorkType.Version], T1.[X_ComplianceWorkType.VersionAntece" +
                    "dentID], T1.[X_ComplianceWorkType.VersionCertainty], T1.[X_ComplianceWorkType.Ve" +
                    "rsionWorkflowInstanceID], T1.[X_ComplianceWorkType.VersionUpdatedBy], T1.[X_Comp" +
                    "lianceWorkType.VersionDeletedBy], T1.[X_ComplianceWorkType.VersionOwnerContactID" +
                    "], T1.[X_ComplianceWorkType.VersionOwnerCompanyID], T1.[X_ComplianceWorkType.Ver" +
                    "sionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.ComplianceWorkTypeID A" +
                    "S [X_ComplianceWorkType.ComplianceWorkTypeID], \r\n            T.ComplianceID AS [" +
                    "X_ComplianceWorkType.ComplianceID], \r\n            T.WorkTypeID AS [X_ComplianceW" +
                    "orkType.WorkTypeID], \r\n            T.Version AS [X_ComplianceWorkType.Version], " +
                    "\r\n            T.VersionAntecedentID AS [X_ComplianceWorkType.VersionAntecedentID" +
                    "], \r\n            T.VersionCertainty AS [X_ComplianceWorkType.VersionCertainty], " +
                    "\r\n            T.VersionWorkflowInstanceID AS [X_ComplianceWorkType.VersionWorkfl" +
                    "owInstanceID], \r\n            T.VersionUpdatedBy AS [X_ComplianceWorkType.Version" +
                    "UpdatedBy], \r\n            T.VersionDeletedBy AS [X_ComplianceWorkType.VersionDel" +
                    "etedBy], \r\n            T.VersionOwnerContactID AS [X_ComplianceWorkType.VersionO" +
                    "wnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_ComplianceWorkType.V" +
                    "ersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_ComplianceWorkType.V" +
                    "ersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.ComplianceWorkT" +
                    "ypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Contact
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2516);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Contact\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Store.X_Contact](T1.[X_Contact.ContactID], T1.[X_Contact.ContactName], T1.[X_");
            viewString.Append("Contact.Title], T1.[X_Contact.Surname], T1.[X_Contact.Firstname], T1.[X_Contact.");
            viewString.Append("Username], T1.[X_Contact.Hash], T1.[X_Contact.DefaultEmail], T1.[X_Contact.Middl");
            viewString.Append("eNames], T1.[X_Contact.Initials], T1.[X_Contact.DOB], T1.[X_Contact.BirthCountry");
            viewString.Append("ID], T1.[X_Contact.BirthCity], T1.[X_Contact.AspNetUserID], T1.[X_Contact.XafUse");
            viewString.Append("rID], T1.[X_Contact.OAuthID], T1.[X_Contact.Photo], T1.[X_Contact.ShortBiography");
            viewString.Append("], T1.[X_Contact.Version], T1.[X_Contact.VersionAntecedentID], T1.[X_Contact.Ver");
            viewString.Append("sionCertainty], T1.[X_Contact.VersionWorkflowInstanceID], T1.[X_Contact.VersionU");
            viewString.Append("pdatedBy], T1.[X_Contact.VersionDeletedBy], T1.[X_Contact.VersionOwnerContactID]");
            viewString.Append(", T1.[X_Contact.VersionOwnerCompanyID], T1.[X_Contact.VersionUpdated])\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.ContactID AS [X_Contact.ContactID], \r\n       ");
            viewString.Append("     T.ContactName AS [X_Contact.ContactName], \r\n            T.Title AS [X_Conta");
            viewString.Append("ct.Title], \r\n            T.Surname AS [X_Contact.Surname], \r\n            T.First");
            viewString.Append("name AS [X_Contact.Firstname], \r\n            T.Username AS [X_Contact.Username],");
            viewString.Append(" \r\n            T.Hash AS [X_Contact.Hash], \r\n            T.DefaultEmail AS [X_Co");
            viewString.Append("ntact.DefaultEmail], \r\n            T.MiddleNames AS [X_Contact.MiddleNames], \r\n ");
            viewString.Append("           T.Initials AS [X_Contact.Initials], \r\n            T.DOB AS [X_Contact");
            viewString.Append(".DOB], \r\n            T.BirthCountryID AS [X_Contact.BirthCountryID], \r\n         ");
            viewString.Append("   T.BirthCity AS [X_Contact.BirthCity], \r\n            T.AspNetUserID AS [X_Cont");
            viewString.Append("act.AspNetUserID], \r\n            T.XafUserID AS [X_Contact.XafUserID], \r\n       ");
            viewString.Append("     T.OAuthID AS [X_Contact.OAuthID], \r\n            T.Photo AS [X_Contact.Photo");
            viewString.Append("], \r\n            T.ShortBiography AS [X_Contact.ShortBiography], \r\n            T");
            viewString.Append(".Version AS [X_Contact.Version], \r\n            T.VersionAntecedentID AS [X_Conta");
            viewString.Append("ct.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Contact.VersionC");
            viewString.Append("ertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Contact.VersionWorkfl");
            viewString.Append("owInstanceID], \r\n            T.VersionUpdatedBy AS [X_Contact.VersionUpdatedBy],");
            viewString.Append(" \r\n            T.VersionDeletedBy AS [X_Contact.VersionDeletedBy], \r\n           ");
            viewString.Append(" T.VersionOwnerContactID AS [X_Contact.VersionOwnerContactID], \r\n            T.V");
            viewString.Append("ersionOwnerCompanyID AS [X_Contact.VersionOwnerCompanyID], \r\n            T.Versi");
            viewString.Append("onUpdated AS [X_Contact.VersionUpdated], \r\n            True AS _from0\r\n        F");
            viewString.Append("ROM XODBC.Contacts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Contact", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ContactAddress
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ContactAddress", "\r\n    SELECT VALUE -- Constructing X_ContactAddress\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_ContactAddress](T1.[X_ContactAddress.ContactAddressID], T1.[X_C" +
                    "ontactAddress.ContactID], T1.[X_ContactAddress.AddressID], T1.[X_ContactAddress." +
                    "Version], T1.[X_ContactAddress.VersionAntecedentID], T1.[X_ContactAddress.Versio" +
                    "nCertainty], T1.[X_ContactAddress.VersionWorkflowInstanceID], T1.[X_ContactAddre" +
                    "ss.VersionUpdatedBy], T1.[X_ContactAddress.VersionDeletedBy], T1.[X_ContactAddre" +
                    "ss.VersionOwnerContactID], T1.[X_ContactAddress.VersionOwnerCompanyID], T1.[X_Co" +
                    "ntactAddress.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Contac" +
                    "tAddressID AS [X_ContactAddress.ContactAddressID], \r\n            T.ContactID AS " +
                    "[X_ContactAddress.ContactID], \r\n            T.AddressID AS [X_ContactAddress.Add" +
                    "ressID], \r\n            T.Version AS [X_ContactAddress.Version], \r\n            T." +
                    "VersionAntecedentID AS [X_ContactAddress.VersionAntecedentID], \r\n            T.V" +
                    "ersionCertainty AS [X_ContactAddress.VersionCertainty], \r\n            T.VersionW" +
                    "orkflowInstanceID AS [X_ContactAddress.VersionWorkflowInstanceID], \r\n           " +
                    " T.VersionUpdatedBy AS [X_ContactAddress.VersionUpdatedBy], \r\n            T.Vers" +
                    "ionDeletedBy AS [X_ContactAddress.VersionDeletedBy], \r\n            T.VersionOwne" +
                    "rContactID AS [X_ContactAddress.VersionOwnerContactID], \r\n            T.VersionO" +
                    "wnerCompanyID AS [X_ContactAddress.VersionOwnerCompanyID], \r\n            T.Versi" +
                    "onUpdated AS [X_ContactAddress.VersionUpdated], \r\n            True AS _from0\r\n  " +
                    "      FROM XODBC.ContactAddresses AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Contract
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3469);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Contract\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.Store.X_Contract](T1.[X_Contract.ContractID], T1.[X_Contract.ParentContractI");
            viewString.Append("D], T1.[X_Contract.ContractName], T1.[X_Contract.Description], T1.[X_Contract.Pr");
            viewString.Append("ojectID], T1.[X_Contract.LastDeliverableID], T1.[X_Contract.ObligeeID], T1.[X_Co");
            viewString.Append("ntract.ObligeeCompanyID], T1.[X_Contract.ObligorID], T1.[X_Contract.ObligorCompa");
            viewString.Append("nyID], T1.[X_Contract.AssigneeID], T1.[X_Contract.AssigneeCompanyID], T1.[X_Cont");
            viewString.Append("ract.SolicitorID], T1.[X_Contract.SolicitorCompanyID], T1.[X_Contract.Risk], T1.");
            viewString.Append("[X_Contract.RiskStarts], T1.[X_Contract.RiskEnds], T1.[X_Contract.RiskCriticalit");
            viewString.Append("y], T1.[X_Contract.RiskLikelihood], T1.[X_Contract.Value], T1.[X_Contract.Tax], ");
            viewString.Append("T1.[X_Contract.Started], T1.[X_Contract.Ended], T1.[X_Contract.Completed], T1.[X");
            viewString.Append("_Contract.Comment], T1.[X_Contract.FileDataID], T1.[X_Contract.RespondWithinHour");
            viewString.Append("s], T1.[X_Contract.Version], T1.[X_Contract.VersionAntecedentID], T1.[X_Contract");
            viewString.Append(".VersionCertainty], T1.[X_Contract.VersionWorkflowInstanceID], T1.[X_Contract.Ve");
            viewString.Append("rsionUpdatedBy], T1.[X_Contract.VersionDeletedBy], T1.[X_Contract.VersionOwnerCo");
            viewString.Append("ntactID], T1.[X_Contract.VersionOwnerCompanyID], T1.[X_Contract.VersionUpdated])");
            viewString.Append("\r\n    FROM (\r\n        SELECT \r\n            T.ContractID AS [X_Contract.ContractI");
            viewString.Append("D], \r\n            T.ParentContractID AS [X_Contract.ParentContractID], \r\n       ");
            viewString.Append("     T.ContractName AS [X_Contract.ContractName], \r\n            T.Description AS");
            viewString.Append(" [X_Contract.Description], \r\n            T.ProjectID AS [X_Contract.ProjectID], ");
            viewString.Append("\r\n            T.LastDeliverableID AS [X_Contract.LastDeliverableID], \r\n         ");
            viewString.Append("   T.ObligeeID AS [X_Contract.ObligeeID], \r\n            T.ObligeeCompanyID AS [X");
            viewString.Append("_Contract.ObligeeCompanyID], \r\n            T.ObligorID AS [X_Contract.ObligorID]");
            viewString.Append(", \r\n            T.ObligorCompanyID AS [X_Contract.ObligorCompanyID], \r\n         ");
            viewString.Append("   T.AssigneeID AS [X_Contract.AssigneeID], \r\n            T.AssigneeCompanyID AS");
            viewString.Append(" [X_Contract.AssigneeCompanyID], \r\n            T.SolicitorID AS [X_Contract.Soli");
            viewString.Append("citorID], \r\n            T.SolicitorCompanyID AS [X_Contract.SolicitorCompanyID],");
            viewString.Append(" \r\n            T.Risk AS [X_Contract.Risk], \r\n            T.RiskStarts AS [X_Con");
            viewString.Append("tract.RiskStarts], \r\n            T.RiskEnds AS [X_Contract.RiskEnds], \r\n        ");
            viewString.Append("    T.RiskCriticality AS [X_Contract.RiskCriticality], \r\n            T.RiskLikel");
            viewString.Append("ihood AS [X_Contract.RiskLikelihood], \r\n            T.[Value] AS [X_Contract.Val");
            viewString.Append("ue], \r\n            T.Tax AS [X_Contract.Tax], \r\n            T.Started AS [X_Cont");
            viewString.Append("ract.Started], \r\n            T.Ended AS [X_Contract.Ended], \r\n            T.Comp");
            viewString.Append("leted AS [X_Contract.Completed], \r\n            T.Comment AS [X_Contract.Comment]");
            viewString.Append(", \r\n            T.FileDataID AS [X_Contract.FileDataID], \r\n            T.Respond");
            viewString.Append("WithinHours AS [X_Contract.RespondWithinHours], \r\n            T.Version AS [X_Co");
            viewString.Append("ntract.Version], \r\n            T.VersionAntecedentID AS [X_Contract.VersionAntec");
            viewString.Append("edentID], \r\n            T.VersionCertainty AS [X_Contract.VersionCertainty], \r\n ");
            viewString.Append("           T.VersionWorkflowInstanceID AS [X_Contract.VersionWorkflowInstanceID]");
            viewString.Append(", \r\n            T.VersionUpdatedBy AS [X_Contract.VersionUpdatedBy], \r\n         ");
            viewString.Append("   T.VersionDeletedBy AS [X_Contract.VersionDeletedBy], \r\n            T.VersionO");
            viewString.Append("wnerContactID AS [X_Contract.VersionOwnerContactID], \r\n            T.VersionOwne");
            viewString.Append("rCompanyID AS [X_Contract.VersionOwnerCompanyID], \r\n            T.VersionUpdated");
            viewString.Append(" AS [X_Contract.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODB");
            viewString.Append("C.Contracts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Contract", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ContractCondition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2598);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ContractCondition\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.Store.X_ContractCondition](T1.[X_ContractCondition.ContractConditio");
            viewString.Append("nID], T1.[X_ContractCondition.ContractID], T1.[X_ContractCondition.ContractCondi");
            viewString.Append("tionTypeID], T1.[X_ContractCondition.IsIncluded], T1.[X_ContractCondition.IsExlu");
            viewString.Append("ded], T1.[X_ContractCondition.UnitID], T1.[X_ContractCondition.Maximum], T1.[X_C");
            viewString.Append("ontractCondition.Minimum], T1.[X_ContractCondition.EstimatedValueUpfront], T1.[X");
            viewString.Append("_ContractCondition.EstimatedValueOngoingUnitID], T1.[X_ContractCondition.Estimat");
            viewString.Append("edValueOngoing], T1.[X_ContractCondition.Version], T1.[X_ContractCondition.Versi");
            viewString.Append("onAntecedentID], T1.[X_ContractCondition.VersionCertainty], T1.[X_ContractCondit");
            viewString.Append("ion.VersionWorkflowInstanceID], T1.[X_ContractCondition.VersionUpdatedBy], T1.[X");
            viewString.Append("_ContractCondition.VersionDeletedBy], T1.[X_ContractCondition.VersionOwnerContac");
            viewString.Append("tID], T1.[X_ContractCondition.VersionOwnerCompanyID], T1.[X_ContractCondition.Ve");
            viewString.Append("rsionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.ContractConditionID A");
            viewString.Append("S [X_ContractCondition.ContractConditionID], \r\n            T.ContractID AS [X_Co");
            viewString.Append("ntractCondition.ContractID], \r\n            T.ContractConditionTypeID AS [X_Contr");
            viewString.Append("actCondition.ContractConditionTypeID], \r\n            T.IsIncluded AS [X_Contract");
            viewString.Append("Condition.IsIncluded], \r\n            T.IsExluded AS [X_ContractCondition.IsExlud");
            viewString.Append("ed], \r\n            T.UnitID AS [X_ContractCondition.UnitID], \r\n            T.Max");
            viewString.Append("imum AS [X_ContractCondition.Maximum], \r\n            T.Minimum AS [X_ContractCon");
            viewString.Append("dition.Minimum], \r\n            T.EstimatedValueUpfront AS [X_ContractCondition.E");
            viewString.Append("stimatedValueUpfront], \r\n            T.EstimatedValueOngoingUnitID AS [X_Contrac");
            viewString.Append("tCondition.EstimatedValueOngoingUnitID], \r\n            T.EstimatedValueOngoing A");
            viewString.Append("S [X_ContractCondition.EstimatedValueOngoing], \r\n            T.Version AS [X_Con");
            viewString.Append("tractCondition.Version], \r\n            T.VersionAntecedentID AS [X_ContractCondi");
            viewString.Append("tion.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_ContractCondit");
            viewString.Append("ion.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_ContractC");
            viewString.Append("ondition.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Cont");
            viewString.Append("ractCondition.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Contract");
            viewString.Append("Condition.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Contrac");
            viewString.Append("tCondition.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_C");
            viewString.Append("ontractCondition.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Co");
            viewString.Append("ntractCondition.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODB");
            viewString.Append("C.ContractConditions AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ContractCondition", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ContractConditionModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ContractConditionModel", "\r\n    SELECT VALUE -- Constructing X_ContractConditionModel\r\n        [XODB.Module" +
                    ".BusinessObjects.Store.X_ContractConditionModel](T1.[X_ContractConditionModel.Co" +
                    "ntractConditionModelID], T1.[X_ContractConditionModel.ContractConditionID], T1.[" +
                    "X_ContractConditionModel.ModelID], T1.[X_ContractConditionModel.Version], T1.[X_" +
                    "ContractConditionModel.VersionAntecedentID], T1.[X_ContractConditionModel.Versio" +
                    "nCertainty], T1.[X_ContractConditionModel.VersionWorkflowInstanceID], T1.[X_Cont" +
                    "ractConditionModel.VersionUpdatedBy], T1.[X_ContractConditionModel.VersionDelete" +
                    "dBy], T1.[X_ContractConditionModel.VersionOwnerContactID], T1.[X_ContractConditi" +
                    "onModel.VersionOwnerCompanyID], T1.[X_ContractConditionModel.VersionUpdated])\r\n " +
                    "   FROM (\r\n        SELECT \r\n            T.ContractConditionModelID AS [X_Contrac" +
                    "tConditionModel.ContractConditionModelID], \r\n            T.ContractConditionID A" +
                    "S [X_ContractConditionModel.ContractConditionID], \r\n            T.ModelID AS [X_" +
                    "ContractConditionModel.ModelID], \r\n            T.Version AS [X_ContractCondition" +
                    "Model.Version], \r\n            T.VersionAntecedentID AS [X_ContractConditionModel" +
                    ".VersionAntecedentID], \r\n            T.VersionCertainty AS [X_ContractConditionM" +
                    "odel.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Contract" +
                    "ConditionModel.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [" +
                    "X_ContractConditionModel.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS " +
                    "[X_ContractConditionModel.VersionDeletedBy], \r\n            T.VersionOwnerContact" +
                    "ID AS [X_ContractConditionModel.VersionOwnerContactID], \r\n            T.VersionO" +
                    "wnerCompanyID AS [X_ContractConditionModel.VersionOwnerCompanyID], \r\n           " +
                    " T.VersionUpdated AS [X_ContractConditionModel.VersionUpdated], \r\n            Tr" +
                    "ue AS _from0\r\n        FROM XODBC.ContractConditionModels AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ContractConditionPart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ContractConditionPart", "\r\n    SELECT VALUE -- Constructing X_ContractConditionPart\r\n        [XODB.Module." +
                    "BusinessObjects.Store.X_ContractConditionPart](T1.[X_ContractConditionPart.Contr" +
                    "actConditionPartID], T1.[X_ContractConditionPart.ContractConditionID], T1.[X_Con" +
                    "tractConditionPart.PartID], T1.[X_ContractConditionPart.Version], T1.[X_Contract" +
                    "ConditionPart.VersionAntecedentID], T1.[X_ContractConditionPart.VersionCertainty" +
                    "], T1.[X_ContractConditionPart.VersionWorkflowInstanceID], T1.[X_ContractConditi" +
                    "onPart.VersionUpdatedBy], T1.[X_ContractConditionPart.VersionDeletedBy], T1.[X_C" +
                    "ontractConditionPart.VersionOwnerContactID], T1.[X_ContractConditionPart.Version" +
                    "OwnerCompanyID], T1.[X_ContractConditionPart.VersionUpdated])\r\n    FROM (\r\n     " +
                    "   SELECT \r\n            T.ContractConditionPartID AS [X_ContractConditionPart.Co" +
                    "ntractConditionPartID], \r\n            T.ContractConditionID AS [X_ContractCondit" +
                    "ionPart.ContractConditionID], \r\n            T.PartID AS [X_ContractConditionPart" +
                    ".PartID], \r\n            T.Version AS [X_ContractConditionPart.Version], \r\n      " +
                    "      T.VersionAntecedentID AS [X_ContractConditionPart.VersionAntecedentID], \r\n" +
                    "            T.VersionCertainty AS [X_ContractConditionPart.VersionCertainty], \r\n" +
                    "            T.VersionWorkflowInstanceID AS [X_ContractConditionPart.VersionWorkf" +
                    "lowInstanceID], \r\n            T.VersionUpdatedBy AS [X_ContractConditionPart.Ver" +
                    "sionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_ContractConditionPart.Ver" +
                    "sionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_ContractConditionPar" +
                    "t.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_ContractCo" +
                    "nditionPart.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Contrac" +
                    "tConditionPart.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC" +
                    ".ContractConditionParts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_CostEstimateModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2773);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_CostEstimateModel\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.Store.X_CostEstimateModel](T1.[X_CostEstimateModel.CostEstimateMode");
            viewString.Append("lID], T1.[X_CostEstimateModel.ParentCostEstimateModelID], T1.[X_CostEstimateMode");
            viewString.Append("l.ContractID], T1.[X_CostEstimateModel.ModelID], T1.[X_CostEstimateModel.CostTyp");
            viewString.Append("eID], T1.[X_CostEstimateModel.ProRataUnitID], T1.[X_CostEstimateModel.ProRataUni");
            viewString.Append("ts], T1.[X_CostEstimateModel.ProRataCost], T1.[X_CostEstimateModel.IsAccruableWi");
            viewString.Append("thParentCost], T1.[X_CostEstimateModel.AccruedQuantumSIUnitID], T1.[X_CostEstima");
            viewString.Append("teModel.Accrued], T1.[X_CostEstimateModel.Source], T1.[X_CostEstimateModel.Note]");
            viewString.Append(", T1.[X_CostEstimateModel.Version], T1.[X_CostEstimateModel.VersionAntecedentID]");
            viewString.Append(", T1.[X_CostEstimateModel.VersionCertainty], T1.[X_CostEstimateModel.VersionWork");
            viewString.Append("flowInstanceID], T1.[X_CostEstimateModel.VersionUpdatedBy], T1.[X_CostEstimateMo");
            viewString.Append("del.VersionDeletedBy], T1.[X_CostEstimateModel.VersionOwnerContactID], T1.[X_Cos");
            viewString.Append("tEstimateModel.VersionOwnerCompanyID], T1.[X_CostEstimateModel.VersionUpdated])\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.CostEstimateModelID AS [X_CostEstima");
            viewString.Append("teModel.CostEstimateModelID], \r\n            T.ParentCostEstimateModelID AS [X_Co");
            viewString.Append("stEstimateModel.ParentCostEstimateModelID], \r\n            T.ContractID AS [X_Cos");
            viewString.Append("tEstimateModel.ContractID], \r\n            T.ModelID AS [X_CostEstimateModel.Mode");
            viewString.Append("lID], \r\n            T.CostTypeID AS [X_CostEstimateModel.CostTypeID], \r\n        ");
            viewString.Append("    T.ProRataUnitID AS [X_CostEstimateModel.ProRataUnitID], \r\n            T.ProR");
            viewString.Append("ataUnits AS [X_CostEstimateModel.ProRataUnits], \r\n            T.ProRataCost AS [");
            viewString.Append("X_CostEstimateModel.ProRataCost], \r\n            T.IsAccruableWithParentCost AS [");
            viewString.Append("X_CostEstimateModel.IsAccruableWithParentCost], \r\n            T.AccruedQuantumSI");
            viewString.Append("UnitID AS [X_CostEstimateModel.AccruedQuantumSIUnitID], \r\n            T.Accrued ");
            viewString.Append("AS [X_CostEstimateModel.Accrued], \r\n            T.Source AS [X_CostEstimateModel");
            viewString.Append(".Source], \r\n            T.Note AS [X_CostEstimateModel.Note], \r\n            T.Ve");
            viewString.Append("rsion AS [X_CostEstimateModel.Version], \r\n            T.VersionAntecedentID AS [");
            viewString.Append("X_CostEstimateModel.VersionAntecedentID], \r\n            T.VersionCertainty AS [X");
            viewString.Append("_CostEstimateModel.VersionCertainty], \r\n            T.VersionWorkflowInstanceID ");
            viewString.Append("AS [X_CostEstimateModel.VersionWorkflowInstanceID], \r\n            T.VersionUpdat");
            viewString.Append("edBy AS [X_CostEstimateModel.VersionUpdatedBy], \r\n            T.VersionDeletedBy");
            viewString.Append(" AS [X_CostEstimateModel.VersionDeletedBy], \r\n            T.VersionOwnerContactI");
            viewString.Append("D AS [X_CostEstimateModel.VersionOwnerContactID], \r\n            T.VersionOwnerCo");
            viewString.Append("mpanyID AS [X_CostEstimateModel.VersionOwnerCompanyID], \r\n            T.VersionU");
            viewString.Append("pdated AS [X_CostEstimateModel.VersionUpdated], \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM XODBC.CostEstimateModels AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_CostEstimateModel", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Defect
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4254);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Defect\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Store.X_Defect](T1.[X_Defect.DefectID], T1.[X_Defect.HeaderID], T1.[X_Defect.F");
            viewString.Append("romDepth], T1.[X_Defect.ToDepth], T1.[X_Defect.WeatheringID], T1.[X_Defect.RockM");
            viewString.Append("assUnitTypeID], T1.[X_Defect.AlterationID], T1.[X_Defect.EstimatedStrengthID], T");
            viewString.Append("1.[X_Defect.BedSpacingID], T1.[X_Defect.BedDip], T1.[X_Defect.MoistureSensitivit");
            viewString.Append("yID], T1.[X_Defect.PlasticityID], T1.[X_Defect.DefectDepth], T1.[X_Defect.Defect");
            viewString.Append("Length], T1.[X_Defect.NumberOfDefects], T1.[X_Defect.DefectsSpacing], T1.[X_Defe");
            viewString.Append("ct.DefectTypeID], T1.[X_Defect.DefectCompletenessID], T1.[X_Defect.DefectContinu");
            viewString.Append("ityID], T1.[X_Defect.DefectDip], T1.[X_Defect.MinimumDipBrokenZone], T1.[X_Defec");
            viewString.Append("t.MaximumDipBrokenZone], T1.[X_Defect.DipOrientation], T1.[X_Defect.DipOrientati");
            viewString.Append("onMethodID], T1.[X_Defect.ShapeID], T1.[X_Defect.RoughnessID], T1.[X_Defect.Join");
            viewString.Append("tRoughnessCoefficient], T1.[X_Defect.PerpendicularWidth], T1.[X_Defect.PrimaryIn");
            viewString.Append("fillTypeID], T1.[X_Defect.SecondaryInfillTypeID], T1.[X_Defect.InfillModeID], T1");
            viewString.Append(".[X_Defect.InfillEstimatedStrengthID], T1.[X_Defect.InfillPlasticityID], T1.[X_D");
            viewString.Append("efect.Comment], T1.[X_Defect.Version], T1.[X_Defect.VersionAntecedentID], T1.[X_");
            viewString.Append("Defect.VersionCertainty], T1.[X_Defect.VersionWorkflowInstanceID], T1.[X_Defect.");
            viewString.Append("VersionUpdatedBy], T1.[X_Defect.VersionDeletedBy], T1.[X_Defect.VersionOwnerCont");
            viewString.Append("actID], T1.[X_Defect.VersionOwnerCompanyID], T1.[X_Defect.VersionUpdated])\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.DefectID AS [X_Defect.DefectID], \r\n      ");
            viewString.Append("      T.HeaderID AS [X_Defect.HeaderID], \r\n            T.FromDepth AS [X_Defect.");
            viewString.Append("FromDepth], \r\n            T.ToDepth AS [X_Defect.ToDepth], \r\n            T.Weath");
            viewString.Append("eringID AS [X_Defect.WeatheringID], \r\n            T.RockMassUnitTypeID AS [X_Def");
            viewString.Append("ect.RockMassUnitTypeID], \r\n            T.AlterationID AS [X_Defect.AlterationID]");
            viewString.Append(", \r\n            T.EstimatedStrengthID AS [X_Defect.EstimatedStrengthID], \r\n     ");
            viewString.Append("       T.BedSpacingID AS [X_Defect.BedSpacingID], \r\n            T.BedDip AS [X_D");
            viewString.Append("efect.BedDip], \r\n            T.MoistureSensitivityID AS [X_Defect.MoistureSensit");
            viewString.Append("ivityID], \r\n            T.PlasticityID AS [X_Defect.PlasticityID], \r\n           ");
            viewString.Append(" T.DefectDepth AS [X_Defect.DefectDepth], \r\n            T.DefectLength AS [X_Def");
            viewString.Append("ect.DefectLength], \r\n            T.NumberOfDefects AS [X_Defect.NumberOfDefects]");
            viewString.Append(", \r\n            T.DefectsSpacing AS [X_Defect.DefectsSpacing], \r\n            T.D");
            viewString.Append("efectTypeID AS [X_Defect.DefectTypeID], \r\n            T.DefectCompletenessID AS ");
            viewString.Append("[X_Defect.DefectCompletenessID], \r\n            T.DefectContinuityID AS [X_Defect");
            viewString.Append(".DefectContinuityID], \r\n            T.DefectDip AS [X_Defect.DefectDip], \r\n     ");
            viewString.Append("       T.MinimumDipBrokenZone AS [X_Defect.MinimumDipBrokenZone], \r\n            ");
            viewString.Append("T.MaximumDipBrokenZone AS [X_Defect.MaximumDipBrokenZone], \r\n            T.DipOr");
            viewString.Append("ientation AS [X_Defect.DipOrientation], \r\n            T.DipOrientationMethodID A");
            viewString.Append("S [X_Defect.DipOrientationMethodID], \r\n            T.ShapeID AS [X_Defect.ShapeI");
            viewString.Append("D], \r\n            T.RoughnessID AS [X_Defect.RoughnessID], \r\n            T.Joint");
            viewString.Append("RoughnessCoefficient AS [X_Defect.JointRoughnessCoefficient], \r\n            T.Pe");
            viewString.Append("rpendicularWidth AS [X_Defect.PerpendicularWidth], \r\n            T.PrimaryInfill");
            viewString.Append("TypeID AS [X_Defect.PrimaryInfillTypeID], \r\n            T.SecondaryInfillTypeID ");
            viewString.Append("AS [X_Defect.SecondaryInfillTypeID], \r\n            T.InfillModeID AS [X_Defect.I");
            viewString.Append("nfillModeID], \r\n            T.InfillEstimatedStrengthID AS [X_Defect.InfillEstim");
            viewString.Append("atedStrengthID], \r\n            T.InfillPlasticityID AS [X_Defect.InfillPlasticit");
            viewString.Append("yID], \r\n            T.Comment AS [X_Defect.Comment], \r\n            T.Version AS ");
            viewString.Append("[X_Defect.Version], \r\n            T.VersionAntecedentID AS [X_Defect.VersionAnte");
            viewString.Append("cedentID], \r\n            T.VersionCertainty AS [X_Defect.VersionCertainty], \r\n  ");
            viewString.Append("          T.VersionWorkflowInstanceID AS [X_Defect.VersionWorkflowInstanceID], \r");
            viewString.Append("\n            T.VersionUpdatedBy AS [X_Defect.VersionUpdatedBy], \r\n            T.");
            viewString.Append("VersionDeletedBy AS [X_Defect.VersionDeletedBy], \r\n            T.VersionOwnerCon");
            viewString.Append("tactID AS [X_Defect.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyI");
            viewString.Append("D AS [X_Defect.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Defe");
            viewString.Append("ct.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Defects AS ");
            viewString.Append("T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Defect", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Desurvey
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Desurvey", @"
    SELECT VALUE -- Constructing X_Desurvey
        [XODB.Module.BusinessObjects.Store.X_Desurvey](T1.[X_Desurvey.DesurveyID], T1.[X_Desurvey.SurveyID], T1.[X_Desurvey.DesurveyAlgorithmTypeID], T1.[X_Desurvey.Version], T1.[X_Desurvey.VersionAntecedentID], T1.[X_Desurvey.VersionCertainty], T1.[X_Desurvey.VersionWorkflowInstanceID], T1.[X_Desurvey.VersionUpdatedBy], T1.[X_Desurvey.VersionDeletedBy], T1.[X_Desurvey.VersionOwnerContactID], T1.[X_Desurvey.VersionOwnerCompanyID], T1.[X_Desurvey.VersionUpdated])
    FROM (
        SELECT 
            T.DesurveyID AS [X_Desurvey.DesurveyID], 
            T.SurveyID AS [X_Desurvey.SurveyID], 
            T.DesurveyAlgorithmTypeID AS [X_Desurvey.DesurveyAlgorithmTypeID], 
            T.Version AS [X_Desurvey.Version], 
            T.VersionAntecedentID AS [X_Desurvey.VersionAntecedentID], 
            T.VersionCertainty AS [X_Desurvey.VersionCertainty], 
            T.VersionWorkflowInstanceID AS [X_Desurvey.VersionWorkflowInstanceID], 
            T.VersionUpdatedBy AS [X_Desurvey.VersionUpdatedBy], 
            T.VersionDeletedBy AS [X_Desurvey.VersionDeletedBy], 
            T.VersionOwnerContactID AS [X_Desurvey.VersionOwnerContactID], 
            T.VersionOwnerCompanyID AS [X_Desurvey.VersionOwnerCompanyID], 
            T.VersionUpdated AS [X_Desurvey.VersionUpdated], 
            True AS _from0
        FROM XODBC.Desurveys AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryAdjective
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryAdjective", @"
    SELECT VALUE -- Constructing X_DictionaryAdjective
        [XODB.Module.BusinessObjects.Store.X_DictionaryAdjective](T1.[X_DictionaryAdjective.AdjectiveID], T1.[X_DictionaryAdjective.StandardAdjectiveName], T1.[X_DictionaryAdjective.CoalAdjectiveName], T1.[X_DictionaryAdjective.GoldAdjectiveName], T1.[X_DictionaryAdjective.CustomAdjectiveName], T1.[X_DictionaryAdjective.Description], T1.[X_DictionaryAdjective.FullDescription], T1.[X_DictionaryAdjective.Thumbnail], T1.[X_DictionaryAdjective.OriginalFileDataID])
    FROM (
        SELECT 
            T.AdjectiveID AS [X_DictionaryAdjective.AdjectiveID], 
            T.StandardAdjectiveName AS [X_DictionaryAdjective.StandardAdjectiveName], 
            T.CoalAdjectiveName AS [X_DictionaryAdjective.CoalAdjectiveName], 
            T.GoldAdjectiveName AS [X_DictionaryAdjective.GoldAdjectiveName], 
            T.CustomAdjectiveName AS [X_DictionaryAdjective.CustomAdjectiveName], 
            T.Description AS [X_DictionaryAdjective.Description], 
            T.FullDescription AS [X_DictionaryAdjective.FullDescription], 
            T.Thumbnail AS [X_DictionaryAdjective.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryAdjective.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryAdjectives AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryAlteration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryAlteration", @"
    SELECT VALUE -- Constructing X_DictionaryAlteration
        [XODB.Module.BusinessObjects.Store.X_DictionaryAlteration](T1.[X_DictionaryAlteration.AlterationID], T1.[X_DictionaryAlteration.StandardAlterationName], T1.[X_DictionaryAlteration.CoalAlterationName], T1.[X_DictionaryAlteration.GoldAlterationName], T1.[X_DictionaryAlteration.CustomAlterationName], T1.[X_DictionaryAlteration.Description], T1.[X_DictionaryAlteration.FullDescription], T1.[X_DictionaryAlteration.Thumbnail], T1.[X_DictionaryAlteration.OriginalFileDataID])
    FROM (
        SELECT 
            T.AlterationID AS [X_DictionaryAlteration.AlterationID], 
            T.StandardAlterationName AS [X_DictionaryAlteration.StandardAlterationName], 
            T.CoalAlterationName AS [X_DictionaryAlteration.CoalAlterationName], 
            T.GoldAlterationName AS [X_DictionaryAlteration.GoldAlterationName], 
            T.CustomAlterationName AS [X_DictionaryAlteration.CustomAlterationName], 
            T.Description AS [X_DictionaryAlteration.Description], 
            T.FullDescription AS [X_DictionaryAlteration.FullDescription], 
            T.Thumbnail AS [X_DictionaryAlteration.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryAlteration.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryAlterations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayMethod", @"
    SELECT VALUE -- Constructing X_DictionaryAssayMethod
        [XODB.Module.BusinessObjects.Store.X_DictionaryAssayMethod](T1.[X_DictionaryAssayMethod.AssayMethodID], T1.[X_DictionaryAssayMethod.StandardAssayMethodName], T1.[X_DictionaryAssayMethod.CoalAssayMethodName], T1.[X_DictionaryAssayMethod.GoldAssayMethodName], T1.[X_DictionaryAssayMethod.CustomAssayMethodName], T1.[X_DictionaryAssayMethod.Description], T1.[X_DictionaryAssayMethod.FullDescription], T1.[X_DictionaryAssayMethod.Thumbnail], T1.[X_DictionaryAssayMethod.OriginalFileDataID])
    FROM (
        SELECT 
            T.AssayMethodID AS [X_DictionaryAssayMethod.AssayMethodID], 
            T.StandardAssayMethodName AS [X_DictionaryAssayMethod.StandardAssayMethodName], 
            T.CoalAssayMethodName AS [X_DictionaryAssayMethod.CoalAssayMethodName], 
            T.GoldAssayMethodName AS [X_DictionaryAssayMethod.GoldAssayMethodName], 
            T.CustomAssayMethodName AS [X_DictionaryAssayMethod.CustomAssayMethodName], 
            T.Description AS [X_DictionaryAssayMethod.Description], 
            T.FullDescription AS [X_DictionaryAssayMethod.FullDescription], 
            T.Thumbnail AS [X_DictionaryAssayMethod.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryAssayMethod.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryAssayMethods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayStandard
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayStandard", @"
    SELECT VALUE -- Constructing X_DictionaryAssayStandard
        [XODB.Module.BusinessObjects.Store.X_DictionaryAssayStandard](T1.[X_DictionaryAssayStandard.AssayStandardID], T1.[X_DictionaryAssayStandard.StandardAssayStandardName], T1.[X_DictionaryAssayStandard.CoalAssayStandardName], T1.[X_DictionaryAssayStandard.GoldAssayStandardName], T1.[X_DictionaryAssayStandard.CustomAssayStandardName], T1.[X_DictionaryAssayStandard.Description], T1.[X_DictionaryAssayStandard.FullDescription], T1.[X_DictionaryAssayStandard.Thumbnail], T1.[X_DictionaryAssayStandard.OriginalFileDataID])
    FROM (
        SELECT 
            T.AssayStandardID AS [X_DictionaryAssayStandard.AssayStandardID], 
            T.StandardAssayStandardName AS [X_DictionaryAssayStandard.StandardAssayStandardName], 
            T.CoalAssayStandardName AS [X_DictionaryAssayStandard.CoalAssayStandardName], 
            T.GoldAssayStandardName AS [X_DictionaryAssayStandard.GoldAssayStandardName], 
            T.CustomAssayStandardName AS [X_DictionaryAssayStandard.CustomAssayStandardName], 
            T.Description AS [X_DictionaryAssayStandard.Description], 
            T.FullDescription AS [X_DictionaryAssayStandard.FullDescription], 
            T.Thumbnail AS [X_DictionaryAssayStandard.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryAssayStandard.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryAssayStandards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayTest
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayTest", @"
    SELECT VALUE -- Constructing X_DictionaryAssayTest
        [XODB.Module.BusinessObjects.Store.X_DictionaryAssayTest](T1.[X_DictionaryAssayTest.AssayTestID], T1.[X_DictionaryAssayTest.StandardAssayTestName], T1.[X_DictionaryAssayTest.CoalAssayTestName], T1.[X_DictionaryAssayTest.GoldAssayTestName], T1.[X_DictionaryAssayTest.CustomAssayTestName], T1.[X_DictionaryAssayTest.Description], T1.[X_DictionaryAssayTest.FullDescription], T1.[X_DictionaryAssayTest.Thumbnail], T1.[X_DictionaryAssayTest.OriginalFileDataID])
    FROM (
        SELECT 
            T.AssayTestID AS [X_DictionaryAssayTest.AssayTestID], 
            T.StandardAssayTestName AS [X_DictionaryAssayTest.StandardAssayTestName], 
            T.CoalAssayTestName AS [X_DictionaryAssayTest.CoalAssayTestName], 
            T.GoldAssayTestName AS [X_DictionaryAssayTest.GoldAssayTestName], 
            T.CustomAssayTestName AS [X_DictionaryAssayTest.CustomAssayTestName], 
            T.Description AS [X_DictionaryAssayTest.Description], 
            T.FullDescription AS [X_DictionaryAssayTest.FullDescription], 
            T.Thumbnail AS [X_DictionaryAssayTest.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryAssayTest.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryAssayTests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayType", @"
    SELECT VALUE -- Constructing X_DictionaryAssayType
        [XODB.Module.BusinessObjects.Store.X_DictionaryAssayType](T1.[X_DictionaryAssayType.AssayTypeID], T1.[X_DictionaryAssayType.StandardAssayTypeName], T1.[X_DictionaryAssayType.CoalAssayTypeName], T1.[X_DictionaryAssayType.GoldAssayTypeName], T1.[X_DictionaryAssayType.CustomAssayTypeName], T1.[X_DictionaryAssayType.Description], T1.[X_DictionaryAssayType.FullDescription], T1.[X_DictionaryAssayType.Thumbnail], T1.[X_DictionaryAssayType.OriginalFileDataID])
    FROM (
        SELECT 
            T.AssayTypeID AS [X_DictionaryAssayType.AssayTypeID], 
            T.StandardAssayTypeName AS [X_DictionaryAssayType.StandardAssayTypeName], 
            T.CoalAssayTypeName AS [X_DictionaryAssayType.CoalAssayTypeName], 
            T.GoldAssayTypeName AS [X_DictionaryAssayType.GoldAssayTypeName], 
            T.CustomAssayTypeName AS [X_DictionaryAssayType.CustomAssayTypeName], 
            T.Description AS [X_DictionaryAssayType.Description], 
            T.FullDescription AS [X_DictionaryAssayType.FullDescription], 
            T.Thumbnail AS [X_DictionaryAssayType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryAssayType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryAssayTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryBasalContact
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryBasalContact", @"
    SELECT VALUE -- Constructing X_DictionaryBasalContact
        [XODB.Module.BusinessObjects.Store.X_DictionaryBasalContact](T1.[X_DictionaryBasalContact.BasalContactID], T1.[X_DictionaryBasalContact.StandardBasalContactName], T1.[X_DictionaryBasalContact.CoalBasalContactName], T1.[X_DictionaryBasalContact.GoldBasalContactName], T1.[X_DictionaryBasalContact.CustomBasalContactName], T1.[X_DictionaryBasalContact.Description], T1.[X_DictionaryBasalContact.FullDescription], T1.[X_DictionaryBasalContact.Thumbnail], T1.[X_DictionaryBasalContact.OriginalFileDataID])
    FROM (
        SELECT 
            T.BasalContactID AS [X_DictionaryBasalContact.BasalContactID], 
            T.StandardBasalContactName AS [X_DictionaryBasalContact.StandardBasalContactName], 
            T.CoalBasalContactName AS [X_DictionaryBasalContact.CoalBasalContactName], 
            T.GoldBasalContactName AS [X_DictionaryBasalContact.GoldBasalContactName], 
            T.CustomBasalContactName AS [X_DictionaryBasalContact.CustomBasalContactName], 
            T.Description AS [X_DictionaryBasalContact.Description], 
            T.FullDescription AS [X_DictionaryBasalContact.FullDescription], 
            T.Thumbnail AS [X_DictionaryBasalContact.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryBasalContact.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryBasalContacts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryBedSpacing
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryBedSpacing", @"
    SELECT VALUE -- Constructing X_DictionaryBedSpacing
        [XODB.Module.BusinessObjects.Store.X_DictionaryBedSpacing](T1.[X_DictionaryBedSpacing.BedSpacingID], T1.[X_DictionaryBedSpacing.StandardBedSpacingName], T1.[X_DictionaryBedSpacing.CoalBedSpacingName], T1.[X_DictionaryBedSpacing.GoldBedSpacingName], T1.[X_DictionaryBedSpacing.CustomBedSpacingName], T1.[X_DictionaryBedSpacing.Description], T1.[X_DictionaryBedSpacing.FullDescription], T1.[X_DictionaryBedSpacing.Thumbnail], T1.[X_DictionaryBedSpacing.OriginalFileDataID])
    FROM (
        SELECT 
            T.BedSpacingID AS [X_DictionaryBedSpacing.BedSpacingID], 
            T.StandardBedSpacingName AS [X_DictionaryBedSpacing.StandardBedSpacingName], 
            T.CoalBedSpacingName AS [X_DictionaryBedSpacing.CoalBedSpacingName], 
            T.GoldBedSpacingName AS [X_DictionaryBedSpacing.GoldBedSpacingName], 
            T.CustomBedSpacingName AS [X_DictionaryBedSpacing.CustomBedSpacingName], 
            T.Description AS [X_DictionaryBedSpacing.Description], 
            T.FullDescription AS [X_DictionaryBedSpacing.FullDescription], 
            T.Thumbnail AS [X_DictionaryBedSpacing.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryBedSpacing.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryBedSpacings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryCharacteristic
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryCharacteristic", @"
    SELECT VALUE -- Constructing X_DictionaryCharacteristic
        [XODB.Module.BusinessObjects.Store.X_DictionaryCharacteristic](T1.[X_DictionaryCharacteristic.CharacteristicID], T1.[X_DictionaryCharacteristic.StandardCharacteristicName], T1.[X_DictionaryCharacteristic.CustomCharacteristicName], T1.[X_DictionaryCharacteristic.UnitID], T1.[X_DictionaryCharacteristic.CharacteristicTypeID], T1.[X_DictionaryCharacteristic.Description], T1.[X_DictionaryCharacteristic.FullDescription], T1.[X_DictionaryCharacteristic.Thumbnail], T1.[X_DictionaryCharacteristic.OriginalFileDataID])
    FROM (
        SELECT 
            T.CharacteristicID AS [X_DictionaryCharacteristic.CharacteristicID], 
            T.StandardCharacteristicName AS [X_DictionaryCharacteristic.StandardCharacteristicName], 
            T.CustomCharacteristicName AS [X_DictionaryCharacteristic.CustomCharacteristicName], 
            T.UnitID AS [X_DictionaryCharacteristic.UnitID], 
            T.CharacteristicTypeID AS [X_DictionaryCharacteristic.CharacteristicTypeID], 
            T.Description AS [X_DictionaryCharacteristic.Description], 
            T.FullDescription AS [X_DictionaryCharacteristic.FullDescription], 
            T.Thumbnail AS [X_DictionaryCharacteristic.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryCharacteristic.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryCharacteristics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryCharacteristicType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryCharacteristicType", @"
    SELECT VALUE -- Constructing X_DictionaryCharacteristicType
        [XODB.Module.BusinessObjects.Store.X_DictionaryCharacteristicType](T1.[X_DictionaryCharacteristicType.CharacteristicTypeID], T1.[X_DictionaryCharacteristicType.StandardCharacteristicTypeName], T1.[X_DictionaryCharacteristicType.CustomCharacteristicTypeName], T1.[X_DictionaryCharacteristicType.Description], T1.[X_DictionaryCharacteristicType.FullDescription], T1.[X_DictionaryCharacteristicType.Thumbnail], T1.[X_DictionaryCharacteristicType.OriginalFileDataID])
    FROM (
        SELECT 
            T.CharacteristicTypeID AS [X_DictionaryCharacteristicType.CharacteristicTypeID], 
            T.StandardCharacteristicTypeName AS [X_DictionaryCharacteristicType.StandardCharacteristicTypeName], 
            T.CustomCharacteristicTypeName AS [X_DictionaryCharacteristicType.CustomCharacteristicTypeName], 
            T.Description AS [X_DictionaryCharacteristicType.Description], 
            T.FullDescription AS [X_DictionaryCharacteristicType.FullDescription], 
            T.Thumbnail AS [X_DictionaryCharacteristicType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryCharacteristicType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryCharacteristicTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryColour
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryColour", @"
    SELECT VALUE -- Constructing X_DictionaryColour
        [XODB.Module.BusinessObjects.Store.X_DictionaryColour](T1.[X_DictionaryColour.ColourID], T1.[X_DictionaryColour.StandardColourName], T1.[X_DictionaryColour.CoalColourName], T1.[X_DictionaryColour.GoldColourName], T1.[X_DictionaryColour.CustomColourName], T1.[X_DictionaryColour.Description], T1.[X_DictionaryColour.FullDescription], T1.[X_DictionaryColour.Thumbnail], T1.[X_DictionaryColour.OriginalFileDataID])
    FROM (
        SELECT 
            T.ColourID AS [X_DictionaryColour.ColourID], 
            T.StandardColourName AS [X_DictionaryColour.StandardColourName], 
            T.CoalColourName AS [X_DictionaryColour.CoalColourName], 
            T.GoldColourName AS [X_DictionaryColour.GoldColourName], 
            T.CustomColourName AS [X_DictionaryColour.CustomColourName], 
            T.Description AS [X_DictionaryColour.Description], 
            T.FullDescription AS [X_DictionaryColour.FullDescription], 
            T.Thumbnail AS [X_DictionaryColour.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryColour.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryColours AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryCommodity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryCommodity", @"
    SELECT VALUE -- Constructing X_DictionaryCommodity
        [XODB.Module.BusinessObjects.Store.X_DictionaryCommodity](T1.[X_DictionaryCommodity.CommodityID], T1.[X_DictionaryCommodity.StandardCommodityName], T1.[X_DictionaryCommodity.CoalCommodityName], T1.[X_DictionaryCommodity.GoldCommodityName], T1.[X_DictionaryCommodity.CustomCommodityName], T1.[X_DictionaryCommodity.Description], T1.[X_DictionaryCommodity.FullDescription], T1.[X_DictionaryCommodity.Thumbnail], T1.[X_DictionaryCommodity.OriginalFileDataID])
    FROM (
        SELECT 
            T.CommodityID AS [X_DictionaryCommodity.CommodityID], 
            T.StandardCommodityName AS [X_DictionaryCommodity.StandardCommodityName], 
            T.CoalCommodityName AS [X_DictionaryCommodity.CoalCommodityName], 
            T.GoldCommodityName AS [X_DictionaryCommodity.GoldCommodityName], 
            T.CustomCommodityName AS [X_DictionaryCommodity.CustomCommodityName], 
            T.Description AS [X_DictionaryCommodity.Description], 
            T.FullDescription AS [X_DictionaryCommodity.FullDescription], 
            T.Thumbnail AS [X_DictionaryCommodity.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryCommodity.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryCommodities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryContractConditionType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryContractConditionType", @"
    SELECT VALUE -- Constructing X_DictionaryContractConditionType
        [XODB.Module.BusinessObjects.Store.X_DictionaryContractConditionType](T1.[X_DictionaryContractConditionType.ContractConditionTypeID], T1.[X_DictionaryContractConditionType.StandardContractConditionTypeName], T1.[X_DictionaryContractConditionType.CustomContractConditionTypeName], T1.[X_DictionaryContractConditionType.Description], T1.[X_DictionaryContractConditionType.FullDescription], T1.[X_DictionaryContractConditionType.Thumbnail], T1.[X_DictionaryContractConditionType.OriginalFileDataID])
    FROM (
        SELECT 
            T.ContractConditionTypeID AS [X_DictionaryContractConditionType.ContractConditionTypeID], 
            T.StandardContractConditionTypeName AS [X_DictionaryContractConditionType.StandardContractConditionTypeName], 
            T.CustomContractConditionTypeName AS [X_DictionaryContractConditionType.CustomContractConditionTypeName], 
            T.Description AS [X_DictionaryContractConditionType.Description], 
            T.FullDescription AS [X_DictionaryContractConditionType.FullDescription], 
            T.Thumbnail AS [X_DictionaryContractConditionType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryContractConditionType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryContractConditionTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryCoreState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryCoreState", @"
    SELECT VALUE -- Constructing X_DictionaryCoreState
        [XODB.Module.BusinessObjects.Store.X_DictionaryCoreState](T1.[X_DictionaryCoreState.CoreStateID], T1.[X_DictionaryCoreState.StandardCoreStateName], T1.[X_DictionaryCoreState.CoalCoreStateName], T1.[X_DictionaryCoreState.GoldCoreStateName], T1.[X_DictionaryCoreState.CustomCoreStateName], T1.[X_DictionaryCoreState.Description], T1.[X_DictionaryCoreState.FullDescription], T1.[X_DictionaryCoreState.Thumbnail], T1.[X_DictionaryCoreState.OriginalFileDataID])
    FROM (
        SELECT 
            T.CoreStateID AS [X_DictionaryCoreState.CoreStateID], 
            T.StandardCoreStateName AS [X_DictionaryCoreState.StandardCoreStateName], 
            T.CoalCoreStateName AS [X_DictionaryCoreState.CoalCoreStateName], 
            T.GoldCoreStateName AS [X_DictionaryCoreState.GoldCoreStateName], 
            T.CustomCoreStateName AS [X_DictionaryCoreState.CustomCoreStateName], 
            T.Description AS [X_DictionaryCoreState.Description], 
            T.FullDescription AS [X_DictionaryCoreState.FullDescription], 
            T.Thumbnail AS [X_DictionaryCoreState.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryCoreState.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryCoreStates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryCostType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryCostType", @"
    SELECT VALUE -- Constructing X_DictionaryCostType
        [XODB.Module.BusinessObjects.Store.X_DictionaryCostType](T1.[X_DictionaryCostType.CostTypeID], T1.[X_DictionaryCostType.StandardCostTypeName], T1.[X_DictionaryCostType.CustomCostTypeName], T1.[X_DictionaryCostType.Description], T1.[X_DictionaryCostType.FullDescription], T1.[X_DictionaryCostType.Thumbnail], T1.[X_DictionaryCostType.OriginalFileDataID])
    FROM (
        SELECT 
            T.CostTypeID AS [X_DictionaryCostType.CostTypeID], 
            T.StandardCostTypeName AS [X_DictionaryCostType.StandardCostTypeName], 
            T.CustomCostTypeName AS [X_DictionaryCostType.CustomCostTypeName], 
            T.Description AS [X_DictionaryCostType.Description], 
            T.FullDescription AS [X_DictionaryCostType.FullDescription], 
            T.Thumbnail AS [X_DictionaryCostType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryCostType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryCostTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryCountry
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryCountry", @"
    SELECT VALUE -- Constructing X_DictionaryCountry
        [XODB.Module.BusinessObjects.Store.X_DictionaryCountry](T1.[X_DictionaryCountry.CountryID], T1.[X_DictionaryCountry.StandardCountryName], T1.[X_DictionaryCountry.CoalCountryName], T1.[X_DictionaryCountry.GoldCountryName], T1.[X_DictionaryCountry.CustomCountryName], T1.[X_DictionaryCountry.CurrencyCode], T1.[X_DictionaryCountry.CurrencyFormat], T1.[X_DictionaryCountry.Description], T1.[X_DictionaryCountry.FullDescription], T1.[X_DictionaryCountry.Thumbnail], T1.[X_DictionaryCountry.OriginalFileDataID])
    FROM (
        SELECT 
            T.CountryID AS [X_DictionaryCountry.CountryID], 
            T.StandardCountryName AS [X_DictionaryCountry.StandardCountryName], 
            T.CoalCountryName AS [X_DictionaryCountry.CoalCountryName], 
            T.GoldCountryName AS [X_DictionaryCountry.GoldCountryName], 
            T.CustomCountryName AS [X_DictionaryCountry.CustomCountryName], 
            T.CurrencyCode AS [X_DictionaryCountry.CurrencyCode], 
            T.CurrencyFormat AS [X_DictionaryCountry.CurrencyFormat], 
            T.Description AS [X_DictionaryCountry.Description], 
            T.FullDescription AS [X_DictionaryCountry.FullDescription], 
            T.Thumbnail AS [X_DictionaryCountry.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryCountry.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryCountries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryCountryState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryCountryState", "\r\n    SELECT VALUE -- Constructing X_DictionaryCountryState\r\n        [XODB.Module" +
                    ".BusinessObjects.Store.X_DictionaryCountryState](T1.[X_DictionaryCountryState.Co" +
                    "untryStateID], T1.[X_DictionaryCountryState.CountryID], T1.[X_DictionaryCountryS" +
                    "tate.StandardCountryStateName], T1.[X_DictionaryCountryState.CoalCountryStateNam" +
                    "e], T1.[X_DictionaryCountryState.GoldCountryStateName], T1.[X_DictionaryCountryS" +
                    "tate.CustomCountryStateName], T1.[X_DictionaryCountryState.Description], T1.[X_D" +
                    "ictionaryCountryState.FullDescription], T1.[X_DictionaryCountryState.Thumbnail]," +
                    " T1.[X_DictionaryCountryState.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.CountryStateID AS [X_DictionaryCountryState.CountryStateID], \r\n  " +
                    "          T.CountryID AS [X_DictionaryCountryState.CountryID], \r\n            T.S" +
                    "tandardCountryStateName AS [X_DictionaryCountryState.StandardCountryStateName], " +
                    "\r\n            T.CoalCountryStateName AS [X_DictionaryCountryState.CoalCountrySta" +
                    "teName], \r\n            T.GoldCountryStateName AS [X_DictionaryCountryState.GoldC" +
                    "ountryStateName], \r\n            T.CustomCountryStateName AS [X_DictionaryCountry" +
                    "State.CustomCountryStateName], \r\n            T.Description AS [X_DictionaryCount" +
                    "ryState.Description], \r\n            T.FullDescription AS [X_DictionaryCountrySta" +
                    "te.FullDescription], \r\n            T.Thumbnail AS [X_DictionaryCountryState.Thum" +
                    "bnail], \r\n            T.OriginalFileDataID AS [X_DictionaryCountryState.Original" +
                    "FileDataID], \r\n            True AS _from0\r\n        FROM XODBC.DictionaryCountryS" +
                    "tates AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDataStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDataStatus", @"
    SELECT VALUE -- Constructing X_DictionaryDataStatus
        [XODB.Module.BusinessObjects.Store.X_DictionaryDataStatus](T1.[X_DictionaryDataStatus.DataStatusID], T1.[X_DictionaryDataStatus.StandardDataStatusName], T1.[X_DictionaryDataStatus.CoalDataStatusName], T1.[X_DictionaryDataStatus.GoldDataStatusName], T1.[X_DictionaryDataStatus.CustomDataStatusName], T1.[X_DictionaryDataStatus.Description], T1.[X_DictionaryDataStatus.FullDescription], T1.[X_DictionaryDataStatus.Thumbnail], T1.[X_DictionaryDataStatus.OriginalFileDataID])
    FROM (
        SELECT 
            T.DataStatusID AS [X_DictionaryDataStatus.DataStatusID], 
            T.StandardDataStatusName AS [X_DictionaryDataStatus.StandardDataStatusName], 
            T.CoalDataStatusName AS [X_DictionaryDataStatus.CoalDataStatusName], 
            T.GoldDataStatusName AS [X_DictionaryDataStatus.GoldDataStatusName], 
            T.CustomDataStatusName AS [X_DictionaryDataStatus.CustomDataStatusName], 
            T.Description AS [X_DictionaryDataStatus.Description], 
            T.FullDescription AS [X_DictionaryDataStatus.FullDescription], 
            T.Thumbnail AS [X_DictionaryDataStatus.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDataStatus.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDataStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectCompleteness
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectCompleteness", "\r\n    SELECT VALUE -- Constructing X_DictionaryDefectCompleteness\r\n        [XODB." +
                    "Module.BusinessObjects.Store.X_DictionaryDefectCompleteness](T1.[X_DictionaryDef" +
                    "ectCompleteness.DefectCompletenessID], T1.[X_DictionaryDefectCompleteness.Standa" +
                    "rdDefectCompletenessName], T1.[X_DictionaryDefectCompleteness.CoalDefectComplete" +
                    "nessName], T1.[X_DictionaryDefectCompleteness.GoldDefectCompletenessName], T1.[X" +
                    "_DictionaryDefectCompleteness.CustomDefectCompletenessName], T1.[X_DictionaryDef" +
                    "ectCompleteness.Description], T1.[X_DictionaryDefectCompleteness.FullDescription" +
                    "], T1.[X_DictionaryDefectCompleteness.Thumbnail], T1.[X_DictionaryDefectComplete" +
                    "ness.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n            T.DefectComp" +
                    "letenessID AS [X_DictionaryDefectCompleteness.DefectCompletenessID], \r\n         " +
                    "   T.StandardDefectCompletenessName AS [X_DictionaryDefectCompleteness.StandardD" +
                    "efectCompletenessName], \r\n            T.CoalDefectCompletenessName AS [X_Diction" +
                    "aryDefectCompleteness.CoalDefectCompletenessName], \r\n            T.GoldDefectCom" +
                    "pletenessName AS [X_DictionaryDefectCompleteness.GoldDefectCompletenessName], \r\n" +
                    "            T.CustomDefectCompletenessName AS [X_DictionaryDefectCompleteness.Cu" +
                    "stomDefectCompletenessName], \r\n            T.Description AS [X_DictionaryDefectC" +
                    "ompleteness.Description], \r\n            T.FullDescription AS [X_DictionaryDefect" +
                    "Completeness.FullDescription], \r\n            T.Thumbnail AS [X_DictionaryDefectC" +
                    "ompleteness.Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryDefec" +
                    "tCompleteness.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XO" +
                    "DBC.DictionaryDefectCompletenesses AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectContinuity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView121()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectContinuity", "\r\n    SELECT VALUE -- Constructing X_DictionaryDefectContinuity\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.Store.X_DictionaryDefectContinuity](T1.[X_DictionaryDefectC" +
                    "ontinuity.DefectContinuityID], T1.[X_DictionaryDefectContinuity.StandardDefectCo" +
                    "ntinuityName], T1.[X_DictionaryDefectContinuity.CoalDefectContinuityName], T1.[X" +
                    "_DictionaryDefectContinuity.GoldDefectContinuityName], T1.[X_DictionaryDefectCon" +
                    "tinuity.CustomDefectContinuityName], T1.[X_DictionaryDefectContinuity.Descriptio" +
                    "n], T1.[X_DictionaryDefectContinuity.FullDescription], T1.[X_DictionaryDefectCon" +
                    "tinuity.Thumbnail], T1.[X_DictionaryDefectContinuity.OriginalFileDataID])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.DefectContinuityID AS [X_DictionaryDefectC" +
                    "ontinuity.DefectContinuityID], \r\n            T.StandardDefectContinuityName AS [" +
                    "X_DictionaryDefectContinuity.StandardDefectContinuityName], \r\n            T.Coal" +
                    "DefectContinuityName AS [X_DictionaryDefectContinuity.CoalDefectContinuityName]," +
                    " \r\n            T.GoldDefectContinuityName AS [X_DictionaryDefectContinuity.GoldD" +
                    "efectContinuityName], \r\n            T.CustomDefectContinuityName AS [X_Dictionar" +
                    "yDefectContinuity.CustomDefectContinuityName], \r\n            T.Description AS [X" +
                    "_DictionaryDefectContinuity.Description], \r\n            T.FullDescription AS [X_" +
                    "DictionaryDefectContinuity.FullDescription], \r\n            T.Thumbnail AS [X_Dic" +
                    "tionaryDefectContinuity.Thumbnail], \r\n            T.OriginalFileDataID AS [X_Dic" +
                    "tionaryDefectContinuity.OriginalFileDataID], \r\n            True AS _from0\r\n     " +
                    "   FROM XODBC.DictionaryDefectContinuities AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectSpacing
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView122()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectSpacing", @"
    SELECT VALUE -- Constructing X_DictionaryDefectSpacing
        [XODB.Module.BusinessObjects.Store.X_DictionaryDefectSpacing](T1.[X_DictionaryDefectSpacing.DefectSpacingID], T1.[X_DictionaryDefectSpacing.StandardDefectSpacingName], T1.[X_DictionaryDefectSpacing.CoalDefectSpacingName], T1.[X_DictionaryDefectSpacing.GoldDefectSpacingName], T1.[X_DictionaryDefectSpacing.CustomDefectSpacingName], T1.[X_DictionaryDefectSpacing.Description], T1.[X_DictionaryDefectSpacing.FullDescription], T1.[X_DictionaryDefectSpacing.Thumbnail], T1.[X_DictionaryDefectSpacing.OriginalFileDataID])
    FROM (
        SELECT 
            T.DefectSpacingID AS [X_DictionaryDefectSpacing.DefectSpacingID], 
            T.StandardDefectSpacingName AS [X_DictionaryDefectSpacing.StandardDefectSpacingName], 
            T.CoalDefectSpacingName AS [X_DictionaryDefectSpacing.CoalDefectSpacingName], 
            T.GoldDefectSpacingName AS [X_DictionaryDefectSpacing.GoldDefectSpacingName], 
            T.CustomDefectSpacingName AS [X_DictionaryDefectSpacing.CustomDefectSpacingName], 
            T.Description AS [X_DictionaryDefectSpacing.Description], 
            T.FullDescription AS [X_DictionaryDefectSpacing.FullDescription], 
            T.Thumbnail AS [X_DictionaryDefectSpacing.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDefectSpacing.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDefectSpacings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView123()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectType", @"
    SELECT VALUE -- Constructing X_DictionaryDefectType
        [XODB.Module.BusinessObjects.Store.X_DictionaryDefectType](T1.[X_DictionaryDefectType.DefectTypeID], T1.[X_DictionaryDefectType.StandardDefectTypeName], T1.[X_DictionaryDefectType.CoalDefectTypeName], T1.[X_DictionaryDefectType.GoldDefectTypeName], T1.[X_DictionaryDefectType.CustomDefectTypeName], T1.[X_DictionaryDefectType.Description], T1.[X_DictionaryDefectType.FullDescription], T1.[X_DictionaryDefectType.Thumbnail], T1.[X_DictionaryDefectType.OriginalFileDataID])
    FROM (
        SELECT 
            T.DefectTypeID AS [X_DictionaryDefectType.DefectTypeID], 
            T.StandardDefectTypeName AS [X_DictionaryDefectType.StandardDefectTypeName], 
            T.CoalDefectTypeName AS [X_DictionaryDefectType.CoalDefectTypeName], 
            T.GoldDefectTypeName AS [X_DictionaryDefectType.GoldDefectTypeName], 
            T.CustomDefectTypeName AS [X_DictionaryDefectType.CustomDefectTypeName], 
            T.Description AS [X_DictionaryDefectType.Description], 
            T.FullDescription AS [X_DictionaryDefectType.FullDescription], 
            T.Thumbnail AS [X_DictionaryDefectType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDefectType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDefectTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDesurveyAlgorithmType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDesurveyAlgorithmType", "\r\n    SELECT VALUE -- Constructing X_DictionaryDesurveyAlgorithmType\r\n        [XO" +
                    "DB.Module.BusinessObjects.Store.X_DictionaryDesurveyAlgorithmType](T1.[X_Diction" +
                    "aryDesurveyAlgorithmType.DesurveyAlgorithmTypeID], T1.[X_DictionaryDesurveyAlgor" +
                    "ithmType.StandardDesurveyAlgorithmTypeName], T1.[X_DictionaryDesurveyAlgorithmTy" +
                    "pe.CoalDesurveyAlgorithmTypeName], T1.[X_DictionaryDesurveyAlgorithmType.GoldDes" +
                    "urveyAlgorithmTypeName], T1.[X_DictionaryDesurveyAlgorithmType.CustomDesurveyAlg" +
                    "orithmTypeName], T1.[X_DictionaryDesurveyAlgorithmType.Description], T1.[X_Dicti" +
                    "onaryDesurveyAlgorithmType.FullDescription], T1.[X_DictionaryDesurveyAlgorithmTy" +
                    "pe.Thumbnail], T1.[X_DictionaryDesurveyAlgorithmType.OriginalFileDataID])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.DesurveyAlgorithmTypeID AS [X_DictionaryDe" +
                    "surveyAlgorithmType.DesurveyAlgorithmTypeID], \r\n            T.StandardDesurveyAl" +
                    "gorithmTypeName AS [X_DictionaryDesurveyAlgorithmType.StandardDesurveyAlgorithmT" +
                    "ypeName], \r\n            T.CoalDesurveyAlgorithmTypeName AS [X_DictionaryDesurvey" +
                    "AlgorithmType.CoalDesurveyAlgorithmTypeName], \r\n            T.GoldDesurveyAlgori" +
                    "thmTypeName AS [X_DictionaryDesurveyAlgorithmType.GoldDesurveyAlgorithmTypeName]" +
                    ", \r\n            T.CustomDesurveyAlgorithmTypeName AS [X_DictionaryDesurveyAlgori" +
                    "thmType.CustomDesurveyAlgorithmTypeName], \r\n            T.Description AS [X_Dict" +
                    "ionaryDesurveyAlgorithmType.Description], \r\n            T.FullDescription AS [X_" +
                    "DictionaryDesurveyAlgorithmType.FullDescription], \r\n            T.Thumbnail AS [" +
                    "X_DictionaryDesurveyAlgorithmType.Thumbnail], \r\n            T.OriginalFileDataID" +
                    " AS [X_DictionaryDesurveyAlgorithmType.OriginalFileDataID], \r\n            True A" +
                    "S _from0\r\n        FROM XODBC.DictionaryDesurveyAlgorithmTypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDimension
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView125()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDimension", @"
    SELECT VALUE -- Constructing X_DictionaryDimension
        [XODB.Module.BusinessObjects.Store.X_DictionaryDimension](T1.[X_DictionaryDimension.DimensionID], T1.[X_DictionaryDimension.StandardDimensionName], T1.[X_DictionaryDimension.CoalDimensionName], T1.[X_DictionaryDimension.GoldDimensionName], T1.[X_DictionaryDimension.CustomDimensionName], T1.[X_DictionaryDimension.Description], T1.[X_DictionaryDimension.FullDescription], T1.[X_DictionaryDimension.Thumbnail], T1.[X_DictionaryDimension.OriginalFileDataID])
    FROM (
        SELECT 
            T.DimensionID AS [X_DictionaryDimension.DimensionID], 
            T.StandardDimensionName AS [X_DictionaryDimension.StandardDimensionName], 
            T.CoalDimensionName AS [X_DictionaryDimension.CoalDimensionName], 
            T.GoldDimensionName AS [X_DictionaryDimension.GoldDimensionName], 
            T.CustomDimensionName AS [X_DictionaryDimension.CustomDimensionName], 
            T.Description AS [X_DictionaryDimension.Description], 
            T.FullDescription AS [X_DictionaryDimension.FullDescription], 
            T.Thumbnail AS [X_DictionaryDimension.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDimension.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDimensions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDipOrientationMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView126()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDipOrientationMethod", "\r\n    SELECT VALUE -- Constructing X_DictionaryDipOrientationMethod\r\n        [XOD" +
                    "B.Module.BusinessObjects.Store.X_DictionaryDipOrientationMethod](T1.[X_Dictionar" +
                    "yDipOrientationMethod.DipOrientationMethodID], T1.[X_DictionaryDipOrientationMet" +
                    "hod.StandardDipOrientationMethodName], T1.[X_DictionaryDipOrientationMethod.Coal" +
                    "DipOrientationMethodName], T1.[X_DictionaryDipOrientationMethod.GoldDipOrientati" +
                    "onMethodName], T1.[X_DictionaryDipOrientationMethod.CustomDipOrientationMethodNa" +
                    "me], T1.[X_DictionaryDipOrientationMethod.Description], T1.[X_DictionaryDipOrien" +
                    "tationMethod.FullDescription], T1.[X_DictionaryDipOrientationMethod.Thumbnail], " +
                    "T1.[X_DictionaryDipOrientationMethod.OriginalFileDataID])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.DipOrientationMethodID AS [X_DictionaryDipOrientationMetho" +
                    "d.DipOrientationMethodID], \r\n            T.StandardDipOrientationMethodName AS [" +
                    "X_DictionaryDipOrientationMethod.StandardDipOrientationMethodName], \r\n          " +
                    "  T.CoalDipOrientationMethodName AS [X_DictionaryDipOrientationMethod.CoalDipOri" +
                    "entationMethodName], \r\n            T.GoldDipOrientationMethodName AS [X_Dictiona" +
                    "ryDipOrientationMethod.GoldDipOrientationMethodName], \r\n            T.CustomDipO" +
                    "rientationMethodName AS [X_DictionaryDipOrientationMethod.CustomDipOrientationMe" +
                    "thodName], \r\n            T.Description AS [X_DictionaryDipOrientationMethod.Desc" +
                    "ription], \r\n            T.FullDescription AS [X_DictionaryDipOrientationMethod.F" +
                    "ullDescription], \r\n            T.Thumbnail AS [X_DictionaryDipOrientationMethod." +
                    "Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryDipOrientationMet" +
                    "hod.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XODBC.Dictio" +
                    "naryDipOrientationMethods AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDomain
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView127()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDomain", @"
    SELECT VALUE -- Constructing X_DictionaryDomain
        [XODB.Module.BusinessObjects.Store.X_DictionaryDomain](T1.[X_DictionaryDomain.DomainID], T1.[X_DictionaryDomain.StandardDomainName], T1.[X_DictionaryDomain.Description], T1.[X_DictionaryDomain.FullDescription], T1.[X_DictionaryDomain.Thumbnail], T1.[X_DictionaryDomain.OriginalFileDataID])
    FROM (
        SELECT 
            T.DomainID AS [X_DictionaryDomain.DomainID], 
            T.StandardDomainName AS [X_DictionaryDomain.StandardDomainName], 
            T.Description AS [X_DictionaryDomain.Description], 
            T.FullDescription AS [X_DictionaryDomain.FullDescription], 
            T.Thumbnail AS [X_DictionaryDomain.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDomain.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDomains AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDomainAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView128()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDomainAlias", @"
    SELECT VALUE -- Constructing X_DictionaryDomainAlias
        [XODB.Module.BusinessObjects.Store.X_DictionaryDomainAlias](T1.[X_DictionaryDomainAlias.DomainAliasID], T1.[X_DictionaryDomainAlias.DomainID], T1.[X_DictionaryDomainAlias.CustomDomainName], T1.[X_DictionaryDomainAlias.FullDescription], T1.[X_DictionaryDomainAlias.Thumbnail], T1.[X_DictionaryDomainAlias.OriginalFileDataID])
    FROM (
        SELECT 
            T.DomainAliasID AS [X_DictionaryDomainAlias.DomainAliasID], 
            T.DomainID AS [X_DictionaryDomainAlias.DomainID], 
            T.CustomDomainName AS [X_DictionaryDomainAlias.CustomDomainName], 
            T.FullDescription AS [X_DictionaryDomainAlias.FullDescription], 
            T.Thumbnail AS [X_DictionaryDomainAlias.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDomainAlias.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDomainAlias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillBitType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillBitType", @"
    SELECT VALUE -- Constructing X_DictionaryDrillBitType
        [XODB.Module.BusinessObjects.Store.X_DictionaryDrillBitType](T1.[X_DictionaryDrillBitType.DrillBitTypeID], T1.[X_DictionaryDrillBitType.StandardDrillBitTypeName], T1.[X_DictionaryDrillBitType.CoalDrillBitTypeName], T1.[X_DictionaryDrillBitType.GoldDrillBitTypeName], T1.[X_DictionaryDrillBitType.CustomDrillBitTypeName], T1.[X_DictionaryDrillBitType.Description], T1.[X_DictionaryDrillBitType.FullDescription], T1.[X_DictionaryDrillBitType.Thumbnail], T1.[X_DictionaryDrillBitType.OriginalFileDataID])
    FROM (
        SELECT 
            T.DrillBitTypeID AS [X_DictionaryDrillBitType.DrillBitTypeID], 
            T.StandardDrillBitTypeName AS [X_DictionaryDrillBitType.StandardDrillBitTypeName], 
            T.CoalDrillBitTypeName AS [X_DictionaryDrillBitType.CoalDrillBitTypeName], 
            T.GoldDrillBitTypeName AS [X_DictionaryDrillBitType.GoldDrillBitTypeName], 
            T.CustomDrillBitTypeName AS [X_DictionaryDrillBitType.CustomDrillBitTypeName], 
            T.Description AS [X_DictionaryDrillBitType.Description], 
            T.FullDescription AS [X_DictionaryDrillBitType.FullDescription], 
            T.Thumbnail AS [X_DictionaryDrillBitType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDrillBitType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDrillBitTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillCasingType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillCasingType", "\r\n    SELECT VALUE -- Constructing X_DictionaryDrillCasingType\r\n        [XODB.Mod" +
                    "ule.BusinessObjects.Store.X_DictionaryDrillCasingType](T1.[X_DictionaryDrillCasi" +
                    "ngType.DrillCasingTypeID], T1.[X_DictionaryDrillCasingType.StandardDrillCasingTy" +
                    "peName], T1.[X_DictionaryDrillCasingType.CoalDrillCasingTypeName], T1.[X_Diction" +
                    "aryDrillCasingType.GoldDrillCasingTypeName], T1.[X_DictionaryDrillCasingType.Cus" +
                    "tomDrillCasingTypeName], T1.[X_DictionaryDrillCasingType.Description], T1.[X_Dic" +
                    "tionaryDrillCasingType.FullDescription], T1.[X_DictionaryDrillCasingType.Thumbna" +
                    "il], T1.[X_DictionaryDrillCasingType.OriginalFileDataID])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.DrillCasingTypeID AS [X_DictionaryDrillCasingType.DrillCas" +
                    "ingTypeID], \r\n            T.StandardDrillCasingTypeName AS [X_DictionaryDrillCas" +
                    "ingType.StandardDrillCasingTypeName], \r\n            T.CoalDrillCasingTypeName AS" +
                    " [X_DictionaryDrillCasingType.CoalDrillCasingTypeName], \r\n            T.GoldDril" +
                    "lCasingTypeName AS [X_DictionaryDrillCasingType.GoldDrillCasingTypeName], \r\n    " +
                    "        T.CustomDrillCasingTypeName AS [X_DictionaryDrillCasingType.CustomDrillC" +
                    "asingTypeName], \r\n            T.Description AS [X_DictionaryDrillCasingType.Desc" +
                    "ription], \r\n            T.FullDescription AS [X_DictionaryDrillCasingType.FullDe" +
                    "scription], \r\n            T.Thumbnail AS [X_DictionaryDrillCasingType.Thumbnail]" +
                    ", \r\n            T.OriginalFileDataID AS [X_DictionaryDrillCasingType.OriginalFil" +
                    "eDataID], \r\n            True AS _from0\r\n        FROM XODBC.DictionaryDrillCasing" +
                    "Types AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillFluid
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillFluid", @"
    SELECT VALUE -- Constructing X_DictionaryDrillFluid
        [XODB.Module.BusinessObjects.Store.X_DictionaryDrillFluid](T1.[X_DictionaryDrillFluid.DrillFluidID], T1.[X_DictionaryDrillFluid.StandardDrillFluidName], T1.[X_DictionaryDrillFluid.CoalDrillFluidName], T1.[X_DictionaryDrillFluid.GoldDrillFluidName], T1.[X_DictionaryDrillFluid.CustomDrillFluidName], T1.[X_DictionaryDrillFluid.Description], T1.[X_DictionaryDrillFluid.FullDescription], T1.[X_DictionaryDrillFluid.Thumbnail], T1.[X_DictionaryDrillFluid.OriginalFileDataID])
    FROM (
        SELECT 
            T.DrillFluidID AS [X_DictionaryDrillFluid.DrillFluidID], 
            T.StandardDrillFluidName AS [X_DictionaryDrillFluid.StandardDrillFluidName], 
            T.CoalDrillFluidName AS [X_DictionaryDrillFluid.CoalDrillFluidName], 
            T.GoldDrillFluidName AS [X_DictionaryDrillFluid.GoldDrillFluidName], 
            T.CustomDrillFluidName AS [X_DictionaryDrillFluid.CustomDrillFluidName], 
            T.Description AS [X_DictionaryDrillFluid.Description], 
            T.FullDescription AS [X_DictionaryDrillFluid.FullDescription], 
            T.Thumbnail AS [X_DictionaryDrillFluid.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDrillFluid.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDrillFluids AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillRigType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView132()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillRigType", @"
    SELECT VALUE -- Constructing X_DictionaryDrillRigType
        [XODB.Module.BusinessObjects.Store.X_DictionaryDrillRigType](T1.[X_DictionaryDrillRigType.DrillRigTypeID], T1.[X_DictionaryDrillRigType.StandardDrillRigTypeName], T1.[X_DictionaryDrillRigType.CoalDrillRigTypeName], T1.[X_DictionaryDrillRigType.GoldDrillRigTypeName], T1.[X_DictionaryDrillRigType.CustomDrillRigTypeName], T1.[X_DictionaryDrillRigType.Description], T1.[X_DictionaryDrillRigType.FullDescription], T1.[X_DictionaryDrillRigType.Thumbnail], T1.[X_DictionaryDrillRigType.OriginalFileDataID])
    FROM (
        SELECT 
            T.DrillRigTypeID AS [X_DictionaryDrillRigType.DrillRigTypeID], 
            T.StandardDrillRigTypeName AS [X_DictionaryDrillRigType.StandardDrillRigTypeName], 
            T.CoalDrillRigTypeName AS [X_DictionaryDrillRigType.CoalDrillRigTypeName], 
            T.GoldDrillRigTypeName AS [X_DictionaryDrillRigType.GoldDrillRigTypeName], 
            T.CustomDrillRigTypeName AS [X_DictionaryDrillRigType.CustomDrillRigTypeName], 
            T.Description AS [X_DictionaryDrillRigType.Description], 
            T.FullDescription AS [X_DictionaryDrillRigType.FullDescription], 
            T.Thumbnail AS [X_DictionaryDrillRigType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDrillRigType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDrillRigTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillSize
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillSize", @"
    SELECT VALUE -- Constructing X_DictionaryDrillSize
        [XODB.Module.BusinessObjects.Store.X_DictionaryDrillSize](T1.[X_DictionaryDrillSize.DrillSizeID], T1.[X_DictionaryDrillSize.StandardDrillSizeName], T1.[X_DictionaryDrillSize.CoalDrillSizeName], T1.[X_DictionaryDrillSize.GoldDrillSizeName], T1.[X_DictionaryDrillSize.CustomDrillSizeName], T1.[X_DictionaryDrillSize.Description], T1.[X_DictionaryDrillSize.FullDescription], T1.[X_DictionaryDrillSize.Thumbnail], T1.[X_DictionaryDrillSize.OriginalFileDataID])
    FROM (
        SELECT 
            T.DrillSizeID AS [X_DictionaryDrillSize.DrillSizeID], 
            T.StandardDrillSizeName AS [X_DictionaryDrillSize.StandardDrillSizeName], 
            T.CoalDrillSizeName AS [X_DictionaryDrillSize.CoalDrillSizeName], 
            T.GoldDrillSizeName AS [X_DictionaryDrillSize.GoldDrillSizeName], 
            T.CustomDrillSizeName AS [X_DictionaryDrillSize.CustomDrillSizeName], 
            T.Description AS [X_DictionaryDrillSize.Description], 
            T.FullDescription AS [X_DictionaryDrillSize.FullDescription], 
            T.Thumbnail AS [X_DictionaryDrillSize.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryDrillSize.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryDrillSizes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryEstimatedStrength
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView134()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryEstimatedStrength", "\r\n    SELECT VALUE -- Constructing X_DictionaryEstimatedStrength\r\n        [XODB.M" +
                    "odule.BusinessObjects.Store.X_DictionaryEstimatedStrength](T1.[X_DictionaryEstim" +
                    "atedStrength.EstimatedStrengthID], T1.[X_DictionaryEstimatedStrength.StandardEst" +
                    "imatedStrengthName], T1.[X_DictionaryEstimatedStrength.CoalEstimatedStrengthName" +
                    "], T1.[X_DictionaryEstimatedStrength.GoldEstimatedStrengthName], T1.[X_Dictionar" +
                    "yEstimatedStrength.CustomEstimatedStrengthName], T1.[X_DictionaryEstimatedStreng" +
                    "th.Description], T1.[X_DictionaryEstimatedStrength.FullDescription], T1.[X_Dicti" +
                    "onaryEstimatedStrength.Thumbnail], T1.[X_DictionaryEstimatedStrength.OriginalFil" +
                    "eDataID])\r\n    FROM (\r\n        SELECT \r\n            T.EstimatedStrengthID AS [X_" +
                    "DictionaryEstimatedStrength.EstimatedStrengthID], \r\n            T.StandardEstima" +
                    "tedStrengthName AS [X_DictionaryEstimatedStrength.StandardEstimatedStrengthName]" +
                    ", \r\n            T.CoalEstimatedStrengthName AS [X_DictionaryEstimatedStrength.Co" +
                    "alEstimatedStrengthName], \r\n            T.GoldEstimatedStrengthName AS [X_Dictio" +
                    "naryEstimatedStrength.GoldEstimatedStrengthName], \r\n            T.CustomEstimate" +
                    "dStrengthName AS [X_DictionaryEstimatedStrength.CustomEstimatedStrengthName], \r\n" +
                    "            T.Description AS [X_DictionaryEstimatedStrength.Description], \r\n    " +
                    "        T.FullDescription AS [X_DictionaryEstimatedStrength.FullDescription], \r\n" +
                    "            T.Thumbnail AS [X_DictionaryEstimatedStrength.Thumbnail], \r\n        " +
                    "    T.OriginalFileDataID AS [X_DictionaryEstimatedStrength.OriginalFileDataID], " +
                    "\r\n            True AS _from0\r\n        FROM XODBC.DictionaryEstimatedStrengths AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryFailureMode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryFailureMode", @"
    SELECT VALUE -- Constructing X_DictionaryFailureMode
        [XODB.Module.BusinessObjects.Store.X_DictionaryFailureMode](T1.[X_DictionaryFailureMode.FailureModeID], T1.[X_DictionaryFailureMode.StandardFailureModeName], T1.[X_DictionaryFailureMode.CoalFailureModeName], T1.[X_DictionaryFailureMode.GoldFailureModeName], T1.[X_DictionaryFailureMode.CustomFailureModeName], T1.[X_DictionaryFailureMode.Description], T1.[X_DictionaryFailureMode.FullDescription], T1.[X_DictionaryFailureMode.Thumbnail], T1.[X_DictionaryFailureMode.OriginalFileDataID])
    FROM (
        SELECT 
            T.FailureModeID AS [X_DictionaryFailureMode.FailureModeID], 
            T.StandardFailureModeName AS [X_DictionaryFailureMode.StandardFailureModeName], 
            T.CoalFailureModeName AS [X_DictionaryFailureMode.CoalFailureModeName], 
            T.GoldFailureModeName AS [X_DictionaryFailureMode.GoldFailureModeName], 
            T.CustomFailureModeName AS [X_DictionaryFailureMode.CustomFailureModeName], 
            T.Description AS [X_DictionaryFailureMode.Description], 
            T.FullDescription AS [X_DictionaryFailureMode.FullDescription], 
            T.Thumbnail AS [X_DictionaryFailureMode.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryFailureMode.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryFailureModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryFileType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView136()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2393);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_DictionaryFileType\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.X_DictionaryFileType](T1.[X_DictionaryFileType.FileTypeID], ");
            viewString.Append("T1.[X_DictionaryFileType.ParentFileTypeID], T1.[X_DictionaryFileType.CompanyID],");
            viewString.Append(" T1.[X_DictionaryFileType.StandardFileTypeName], T1.[X_DictionaryFileType.Custom");
            viewString.Append("FileTypeName], T1.[X_DictionaryFileType.Description], T1.[X_DictionaryFileType.F");
            viewString.Append("ullDescription], T1.[X_DictionaryFileType.Thumbnail], T1.[X_DictionaryFileType.O");
            viewString.Append("riginalFileDataID], T1.[X_DictionaryFileType.Version], T1.[X_DictionaryFileType.");
            viewString.Append("VersionAntecedentID], T1.[X_DictionaryFileType.VersionCertainty], T1.[X_Dictiona");
            viewString.Append("ryFileType.VersionWorkflowInstanceID], T1.[X_DictionaryFileType.VersionUpdatedBy");
            viewString.Append("], T1.[X_DictionaryFileType.VersionDeletedBy], T1.[X_DictionaryFileType.VersionO");
            viewString.Append("wnerContactID], T1.[X_DictionaryFileType.VersionOwnerCompanyID], T1.[X_Dictionar");
            viewString.Append("yFileType.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.FileTypeI");
            viewString.Append("D AS [X_DictionaryFileType.FileTypeID], \r\n            T.ParentFileTypeID AS [X_D");
            viewString.Append("ictionaryFileType.ParentFileTypeID], \r\n            T.CompanyID AS [X_DictionaryF");
            viewString.Append("ileType.CompanyID], \r\n            T.StandardFileTypeName AS [X_DictionaryFileTyp");
            viewString.Append("e.StandardFileTypeName], \r\n            T.CustomFileTypeName AS [X_DictionaryFile");
            viewString.Append("Type.CustomFileTypeName], \r\n            T.Description AS [X_DictionaryFileType.D");
            viewString.Append("escription], \r\n            T.FullDescription AS [X_DictionaryFileType.FullDescri");
            viewString.Append("ption], \r\n            T.Thumbnail AS [X_DictionaryFileType.Thumbnail], \r\n       ");
            viewString.Append("     T.OriginalFileDataID AS [X_DictionaryFileType.OriginalFileDataID], \r\n      ");
            viewString.Append("      T.Version AS [X_DictionaryFileType.Version], \r\n            T.VersionAntece");
            viewString.Append("dentID AS [X_DictionaryFileType.VersionAntecedentID], \r\n            T.VersionCer");
            viewString.Append("tainty AS [X_DictionaryFileType.VersionCertainty], \r\n            T.VersionWorkfl");
            viewString.Append("owInstanceID AS [X_DictionaryFileType.VersionWorkflowInstanceID], \r\n            ");
            viewString.Append("T.VersionUpdatedBy AS [X_DictionaryFileType.VersionUpdatedBy], \r\n            T.V");
            viewString.Append("ersionDeletedBy AS [X_DictionaryFileType.VersionDeletedBy], \r\n            T.Vers");
            viewString.Append("ionOwnerContactID AS [X_DictionaryFileType.VersionOwnerContactID], \r\n           ");
            viewString.Append(" T.VersionOwnerCompanyID AS [X_DictionaryFileType.VersionOwnerCompanyID], \r\n    ");
            viewString.Append("        T.VersionUpdated AS [X_DictionaryFileType.VersionUpdated], \r\n           ");
            viewString.Append(" True AS _from0\r\n        FROM XODBC.DictionaryFileTypes AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryFileType", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryFlowTestType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView137()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryFlowTestType", @"
    SELECT VALUE -- Constructing X_DictionaryFlowTestType
        [XODB.Module.BusinessObjects.Store.X_DictionaryFlowTestType](T1.[X_DictionaryFlowTestType.FlowTestTypeID], T1.[X_DictionaryFlowTestType.StandardFlowTestTypeName], T1.[X_DictionaryFlowTestType.CoalFlowTestTypeName], T1.[X_DictionaryFlowTestType.GoldFlowTestTypeName], T1.[X_DictionaryFlowTestType.CustomFlowTestTypeName], T1.[X_DictionaryFlowTestType.Description], T1.[X_DictionaryFlowTestType.FullDescription], T1.[X_DictionaryFlowTestType.Thumbnail], T1.[X_DictionaryFlowTestType.OriginalFileDataID])
    FROM (
        SELECT 
            T.FlowTestTypeID AS [X_DictionaryFlowTestType.FlowTestTypeID], 
            T.StandardFlowTestTypeName AS [X_DictionaryFlowTestType.StandardFlowTestTypeName], 
            T.CoalFlowTestTypeName AS [X_DictionaryFlowTestType.CoalFlowTestTypeName], 
            T.GoldFlowTestTypeName AS [X_DictionaryFlowTestType.GoldFlowTestTypeName], 
            T.CustomFlowTestTypeName AS [X_DictionaryFlowTestType.CustomFlowTestTypeName], 
            T.Description AS [X_DictionaryFlowTestType.Description], 
            T.FullDescription AS [X_DictionaryFlowTestType.FullDescription], 
            T.Thumbnail AS [X_DictionaryFlowTestType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryFlowTestType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryFlowTestTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryGasDetected
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryGasDetected", @"
    SELECT VALUE -- Constructing X_DictionaryGasDetected
        [XODB.Module.BusinessObjects.Store.X_DictionaryGasDetected](T1.[X_DictionaryGasDetected.GasDetectedID], T1.[X_DictionaryGasDetected.StandardGasDetectedName], T1.[X_DictionaryGasDetected.CoalGasDetectedName], T1.[X_DictionaryGasDetected.GoldGasDetectedName], T1.[X_DictionaryGasDetected.CustomGasDetectedName], T1.[X_DictionaryGasDetected.Description], T1.[X_DictionaryGasDetected.FullDescription], T1.[X_DictionaryGasDetected.Thumbnail], T1.[X_DictionaryGasDetected.OriginalFileDataID])
    FROM (
        SELECT 
            T.GasDetectedID AS [X_DictionaryGasDetected.GasDetectedID], 
            T.StandardGasDetectedName AS [X_DictionaryGasDetected.StandardGasDetectedName], 
            T.CoalGasDetectedName AS [X_DictionaryGasDetected.CoalGasDetectedName], 
            T.GoldGasDetectedName AS [X_DictionaryGasDetected.GoldGasDetectedName], 
            T.CustomGasDetectedName AS [X_DictionaryGasDetected.CustomGasDetectedName], 
            T.Description AS [X_DictionaryGasDetected.Description], 
            T.FullDescription AS [X_DictionaryGasDetected.FullDescription], 
            T.Thumbnail AS [X_DictionaryGasDetected.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryGasDetected.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryGasDetecteds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryGeodeticDatum
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryGeodeticDatum", @"
    SELECT VALUE -- Constructing X_DictionaryGeodeticDatum
        [XODB.Module.BusinessObjects.Store.X_DictionaryGeodeticDatum](T1.[X_DictionaryGeodeticDatum.GeodeticDatumID], T1.[X_DictionaryGeodeticDatum.StandardGeodeticDatumName], T1.[X_DictionaryGeodeticDatum.CoalGeodeticDatumName], T1.[X_DictionaryGeodeticDatum.GoldGeodeticDatumName], T1.[X_DictionaryGeodeticDatum.CustomGeodeticDatumName], T1.[X_DictionaryGeodeticDatum.Description], T1.[X_DictionaryGeodeticDatum.FullDescription], T1.[X_DictionaryGeodeticDatum.Thumbnail], T1.[X_DictionaryGeodeticDatum.OriginalFileDataID])
    FROM (
        SELECT 
            T.GeodeticDatumID AS [X_DictionaryGeodeticDatum.GeodeticDatumID], 
            T.StandardGeodeticDatumName AS [X_DictionaryGeodeticDatum.StandardGeodeticDatumName], 
            T.CoalGeodeticDatumName AS [X_DictionaryGeodeticDatum.CoalGeodeticDatumName], 
            T.GoldGeodeticDatumName AS [X_DictionaryGeodeticDatum.GoldGeodeticDatumName], 
            T.CustomGeodeticDatumName AS [X_DictionaryGeodeticDatum.CustomGeodeticDatumName], 
            T.Description AS [X_DictionaryGeodeticDatum.Description], 
            T.FullDescription AS [X_DictionaryGeodeticDatum.FullDescription], 
            T.Thumbnail AS [X_DictionaryGeodeticDatum.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryGeodeticDatum.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryGeodeticDatums AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryGeophysicalLogType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView140()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryGeophysicalLogType", "\r\n    SELECT VALUE -- Constructing X_DictionaryGeophysicalLogType\r\n        [XODB." +
                    "Module.BusinessObjects.Store.X_DictionaryGeophysicalLogType](T1.[X_DictionaryGeo" +
                    "physicalLogType.GeophysicalLogTypeID], T1.[X_DictionaryGeophysicalLogType.Standa" +
                    "rdGeophysicalLogTypeName], T1.[X_DictionaryGeophysicalLogType.CoalGeophysicalLog" +
                    "TypeName], T1.[X_DictionaryGeophysicalLogType.GoldGeophysicalLogTypeName], T1.[X" +
                    "_DictionaryGeophysicalLogType.CustomGeophysicalLogTypeName], T1.[X_DictionaryGeo" +
                    "physicalLogType.Description], T1.[X_DictionaryGeophysicalLogType.FullDescription" +
                    "], T1.[X_DictionaryGeophysicalLogType.Thumbnail], T1.[X_DictionaryGeophysicalLog" +
                    "Type.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n            T.Geophysica" +
                    "lLogTypeID AS [X_DictionaryGeophysicalLogType.GeophysicalLogTypeID], \r\n         " +
                    "   T.StandardGeophysicalLogTypeName AS [X_DictionaryGeophysicalLogType.StandardG" +
                    "eophysicalLogTypeName], \r\n            T.CoalGeophysicalLogTypeName AS [X_Diction" +
                    "aryGeophysicalLogType.CoalGeophysicalLogTypeName], \r\n            T.GoldGeophysic" +
                    "alLogTypeName AS [X_DictionaryGeophysicalLogType.GoldGeophysicalLogTypeName], \r\n" +
                    "            T.CustomGeophysicalLogTypeName AS [X_DictionaryGeophysicalLogType.Cu" +
                    "stomGeophysicalLogTypeName], \r\n            T.Description AS [X_DictionaryGeophys" +
                    "icalLogType.Description], \r\n            T.FullDescription AS [X_DictionaryGeophy" +
                    "sicalLogType.FullDescription], \r\n            T.Thumbnail AS [X_DictionaryGeophys" +
                    "icalLogType.Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryGeoph" +
                    "ysicalLogType.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XO" +
                    "DBC.DictionaryGeophysicalLogTypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView141()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryGroup", @"
    SELECT VALUE -- Constructing X_DictionaryGroup
        [XODB.Module.BusinessObjects.Store.X_DictionaryGroup](T1.[X_DictionaryGroup.GroupID], T1.[X_DictionaryGroup.StandardGroupName], T1.[X_DictionaryGroup.CoalGroupName], T1.[X_DictionaryGroup.GoldGroupName], T1.[X_DictionaryGroup.CustomGroupName], T1.[X_DictionaryGroup.Description], T1.[X_DictionaryGroup.FullDescription], T1.[X_DictionaryGroup.Thumbnail], T1.[X_DictionaryGroup.OriginalFileDataID])
    FROM (
        SELECT 
            T.GroupID AS [X_DictionaryGroup.GroupID], 
            T.StandardGroupName AS [X_DictionaryGroup.StandardGroupName], 
            T.CoalGroupName AS [X_DictionaryGroup.CoalGroupName], 
            T.GoldGroupName AS [X_DictionaryGroup.GoldGroupName], 
            T.CustomGroupName AS [X_DictionaryGroup.CustomGroupName], 
            T.Description AS [X_DictionaryGroup.Description], 
            T.FullDescription AS [X_DictionaryGroup.FullDescription], 
            T.Thumbnail AS [X_DictionaryGroup.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryGroup.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryGroupMembership
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView142()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryGroupMembership", @"
    SELECT VALUE -- Constructing X_DictionaryGroupMembership
        [XODB.Module.BusinessObjects.Store.X_DictionaryGroupMembership](T1.[X_DictionaryGroupMembership.GroupMembershipID], T1.[X_DictionaryGroupMembership.ParentGroupID], T1.[X_DictionaryGroupMembership.ChildGroupID], T1.[X_DictionaryGroupMembership.FullDescription], T1.[X_DictionaryGroupMembership.Thumbnail], T1.[X_DictionaryGroupMembership.OriginalFileDataID])
    FROM (
        SELECT 
            T.GroupMembershipID AS [X_DictionaryGroupMembership.GroupMembershipID], 
            T.ParentGroupID AS [X_DictionaryGroupMembership.ParentGroupID], 
            T.ChildGroupID AS [X_DictionaryGroupMembership.ChildGroupID], 
            T.FullDescription AS [X_DictionaryGroupMembership.FullDescription], 
            T.Thumbnail AS [X_DictionaryGroupMembership.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryGroupMembership.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryGroupMemberships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryHeightDatum
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView143()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryHeightDatum", @"
    SELECT VALUE -- Constructing X_DictionaryHeightDatum
        [XODB.Module.BusinessObjects.Store.X_DictionaryHeightDatum](T1.[X_DictionaryHeightDatum.HeightDatumID], T1.[X_DictionaryHeightDatum.StandardHeightDatumName], T1.[X_DictionaryHeightDatum.CoalHeightDatumName], T1.[X_DictionaryHeightDatum.GoldHeightDatumName], T1.[X_DictionaryHeightDatum.CustomHeightDatumName], T1.[X_DictionaryHeightDatum.Description], T1.[X_DictionaryHeightDatum.FullDescription], T1.[X_DictionaryHeightDatum.Thumbnail], T1.[X_DictionaryHeightDatum.OriginalFileDataID])
    FROM (
        SELECT 
            T.HeightDatumID AS [X_DictionaryHeightDatum.HeightDatumID], 
            T.StandardHeightDatumName AS [X_DictionaryHeightDatum.StandardHeightDatumName], 
            T.CoalHeightDatumName AS [X_DictionaryHeightDatum.CoalHeightDatumName], 
            T.GoldHeightDatumName AS [X_DictionaryHeightDatum.GoldHeightDatumName], 
            T.CustomHeightDatumName AS [X_DictionaryHeightDatum.CustomHeightDatumName], 
            T.Description AS [X_DictionaryHeightDatum.Description], 
            T.FullDescription AS [X_DictionaryHeightDatum.FullDescription], 
            T.Thumbnail AS [X_DictionaryHeightDatum.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryHeightDatum.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryHeightDatums AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryHolePurpose
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView144()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryHolePurpose", @"
    SELECT VALUE -- Constructing X_DictionaryHolePurpose
        [XODB.Module.BusinessObjects.Store.X_DictionaryHolePurpose](T1.[X_DictionaryHolePurpose.HolePurposeID], T1.[X_DictionaryHolePurpose.StandardHolePurposeName], T1.[X_DictionaryHolePurpose.CoalHolePurposeName], T1.[X_DictionaryHolePurpose.GoldHolePurposeName], T1.[X_DictionaryHolePurpose.CustomHolePurposeName], T1.[X_DictionaryHolePurpose.Description], T1.[X_DictionaryHolePurpose.FullDescription], T1.[X_DictionaryHolePurpose.Thumbnail], T1.[X_DictionaryHolePurpose.OriginalFileDataID])
    FROM (
        SELECT 
            T.HolePurposeID AS [X_DictionaryHolePurpose.HolePurposeID], 
            T.StandardHolePurposeName AS [X_DictionaryHolePurpose.StandardHolePurposeName], 
            T.CoalHolePurposeName AS [X_DictionaryHolePurpose.CoalHolePurposeName], 
            T.GoldHolePurposeName AS [X_DictionaryHolePurpose.GoldHolePurposeName], 
            T.CustomHolePurposeName AS [X_DictionaryHolePurpose.CustomHolePurposeName], 
            T.Description AS [X_DictionaryHolePurpose.Description], 
            T.FullDescription AS [X_DictionaryHolePurpose.FullDescription], 
            T.Thumbnail AS [X_DictionaryHolePurpose.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryHolePurpose.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryHolePurposes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryHoleStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView145()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryHoleStatus", @"
    SELECT VALUE -- Constructing X_DictionaryHoleStatus
        [XODB.Module.BusinessObjects.Store.X_DictionaryHoleStatus](T1.[X_DictionaryHoleStatus.HoleStatusID], T1.[X_DictionaryHoleStatus.StandardHoleStatusName], T1.[X_DictionaryHoleStatus.CoalHoleStatusName], T1.[X_DictionaryHoleStatus.GoldHoleStatusName], T1.[X_DictionaryHoleStatus.CustomHoleStatusName], T1.[X_DictionaryHoleStatus.Description], T1.[X_DictionaryHoleStatus.FullDescription], T1.[X_DictionaryHoleStatus.Thumbnail], T1.[X_DictionaryHoleStatus.OriginalFileDataID])
    FROM (
        SELECT 
            T.HoleStatusID AS [X_DictionaryHoleStatus.HoleStatusID], 
            T.StandardHoleStatusName AS [X_DictionaryHoleStatus.StandardHoleStatusName], 
            T.CoalHoleStatusName AS [X_DictionaryHoleStatus.CoalHoleStatusName], 
            T.GoldHoleStatusName AS [X_DictionaryHoleStatus.GoldHoleStatusName], 
            T.CustomHoleStatusName AS [X_DictionaryHoleStatus.CustomHoleStatusName], 
            T.Description AS [X_DictionaryHoleStatus.Description], 
            T.FullDescription AS [X_DictionaryHoleStatus.FullDescription], 
            T.Thumbnail AS [X_DictionaryHoleStatus.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryHoleStatus.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryHoleStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryHoleType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView146()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryHoleType", @"
    SELECT VALUE -- Constructing X_DictionaryHoleType
        [XODB.Module.BusinessObjects.Store.X_DictionaryHoleType](T1.[X_DictionaryHoleType.HoleTypeID], T1.[X_DictionaryHoleType.StandardHoleTypeName], T1.[X_DictionaryHoleType.CoalHoleTypeName], T1.[X_DictionaryHoleType.GoldHoleTypeName], T1.[X_DictionaryHoleType.CustomHoleTypeName], T1.[X_DictionaryHoleType.Description], T1.[X_DictionaryHoleType.FullDescription], T1.[X_DictionaryHoleType.Thumbnail], T1.[X_DictionaryHoleType.OriginalFileDataID])
    FROM (
        SELECT 
            T.HoleTypeID AS [X_DictionaryHoleType.HoleTypeID], 
            T.StandardHoleTypeName AS [X_DictionaryHoleType.StandardHoleTypeName], 
            T.CoalHoleTypeName AS [X_DictionaryHoleType.CoalHoleTypeName], 
            T.GoldHoleTypeName AS [X_DictionaryHoleType.GoldHoleTypeName], 
            T.CustomHoleTypeName AS [X_DictionaryHoleType.CustomHoleTypeName], 
            T.Description AS [X_DictionaryHoleType.Description], 
            T.FullDescription AS [X_DictionaryHoleType.FullDescription], 
            T.Thumbnail AS [X_DictionaryHoleType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryHoleType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryHoleTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryHorizon
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView147()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryHorizon", @"
    SELECT VALUE -- Constructing X_DictionaryHorizon
        [XODB.Module.BusinessObjects.Store.X_DictionaryHorizon](T1.[X_DictionaryHorizon.HorizonID], T1.[X_DictionaryHorizon.StandardHorizonName], T1.[X_DictionaryHorizon.CoalHorizonName], T1.[X_DictionaryHorizon.GoldHorizonName], T1.[X_DictionaryHorizon.CustomHorizonName], T1.[X_DictionaryHorizon.Description], T1.[X_DictionaryHorizon.FullDescription], T1.[X_DictionaryHorizon.Thumbnail], T1.[X_DictionaryHorizon.OriginalFileDataID])
    FROM (
        SELECT 
            T.HorizonID AS [X_DictionaryHorizon.HorizonID], 
            T.StandardHorizonName AS [X_DictionaryHorizon.StandardHorizonName], 
            T.CoalHorizonName AS [X_DictionaryHorizon.CoalHorizonName], 
            T.GoldHorizonName AS [X_DictionaryHorizon.GoldHorizonName], 
            T.CustomHorizonName AS [X_DictionaryHorizon.CustomHorizonName], 
            T.Description AS [X_DictionaryHorizon.Description], 
            T.FullDescription AS [X_DictionaryHorizon.FullDescription], 
            T.Thumbnail AS [X_DictionaryHorizon.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryHorizon.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryHorizons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryHue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView148()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryHue", @"
    SELECT VALUE -- Constructing X_DictionaryHue
        [XODB.Module.BusinessObjects.Store.X_DictionaryHue](T1.[X_DictionaryHue.HueID], T1.[X_DictionaryHue.StandardHueName], T1.[X_DictionaryHue.CoalHueName], T1.[X_DictionaryHue.GoldHueName], T1.[X_DictionaryHue.CustomHueName], T1.[X_DictionaryHue.Description], T1.[X_DictionaryHue.FullDescription], T1.[X_DictionaryHue.Thumbnail], T1.[X_DictionaryHue.OriginalFileDataID])
    FROM (
        SELECT 
            T.HueID AS [X_DictionaryHue.HueID], 
            T.StandardHueName AS [X_DictionaryHue.StandardHueName], 
            T.CoalHueName AS [X_DictionaryHue.CoalHueName], 
            T.GoldHueName AS [X_DictionaryHue.GoldHueName], 
            T.CustomHueName AS [X_DictionaryHue.CustomHueName], 
            T.Description AS [X_DictionaryHue.Description], 
            T.FullDescription AS [X_DictionaryHue.FullDescription], 
            T.Thumbnail AS [X_DictionaryHue.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryHue.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryHues AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryInfillMode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView149()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryInfillMode", @"
    SELECT VALUE -- Constructing X_DictionaryInfillMode
        [XODB.Module.BusinessObjects.Store.X_DictionaryInfillMode](T1.[X_DictionaryInfillMode.InfillModeID], T1.[X_DictionaryInfillMode.StandardInfillModeName], T1.[X_DictionaryInfillMode.CoalInfillModeName], T1.[X_DictionaryInfillMode.GoldInfillModeName], T1.[X_DictionaryInfillMode.CustomInfillModeName], T1.[X_DictionaryInfillMode.Description], T1.[X_DictionaryInfillMode.FullDescription], T1.[X_DictionaryInfillMode.Thumbnail], T1.[X_DictionaryInfillMode.OriginalFileDataID])
    FROM (
        SELECT 
            T.InfillModeID AS [X_DictionaryInfillMode.InfillModeID], 
            T.StandardInfillModeName AS [X_DictionaryInfillMode.StandardInfillModeName], 
            T.CoalInfillModeName AS [X_DictionaryInfillMode.CoalInfillModeName], 
            T.GoldInfillModeName AS [X_DictionaryInfillMode.GoldInfillModeName], 
            T.CustomInfillModeName AS [X_DictionaryInfillMode.CustomInfillModeName], 
            T.Description AS [X_DictionaryInfillMode.Description], 
            T.FullDescription AS [X_DictionaryInfillMode.FullDescription], 
            T.Thumbnail AS [X_DictionaryInfillMode.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryInfillMode.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryInfillModes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryInfillType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView150()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryInfillType", @"
    SELECT VALUE -- Constructing X_DictionaryInfillType
        [XODB.Module.BusinessObjects.Store.X_DictionaryInfillType](T1.[X_DictionaryInfillType.InfillTypeID], T1.[X_DictionaryInfillType.StandardInfillTypeName], T1.[X_DictionaryInfillType.CoalInfillTypeName], T1.[X_DictionaryInfillType.GoldInfillTypeName], T1.[X_DictionaryInfillType.CustomInfillTypeName], T1.[X_DictionaryInfillType.Description], T1.[X_DictionaryInfillType.FullDescription], T1.[X_DictionaryInfillType.Thumbnail], T1.[X_DictionaryInfillType.OriginalFileDataID])
    FROM (
        SELECT 
            T.InfillTypeID AS [X_DictionaryInfillType.InfillTypeID], 
            T.StandardInfillTypeName AS [X_DictionaryInfillType.StandardInfillTypeName], 
            T.CoalInfillTypeName AS [X_DictionaryInfillType.CoalInfillTypeName], 
            T.GoldInfillTypeName AS [X_DictionaryInfillType.GoldInfillTypeName], 
            T.CustomInfillTypeName AS [X_DictionaryInfillType.CustomInfillTypeName], 
            T.Description AS [X_DictionaryInfillType.Description], 
            T.FullDescription AS [X_DictionaryInfillType.FullDescription], 
            T.Thumbnail AS [X_DictionaryInfillType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryInfillType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryInfillTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryIntervalStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView151()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryIntervalStatus", "\r\n    SELECT VALUE -- Constructing X_DictionaryIntervalStatus\r\n        [XODB.Modu" +
                    "le.BusinessObjects.Store.X_DictionaryIntervalStatus](T1.[X_DictionaryIntervalSta" +
                    "tus.IntervalStatusID], T1.[X_DictionaryIntervalStatus.StandardIntervalStatusName" +
                    "], T1.[X_DictionaryIntervalStatus.CoalIntervalStatusName], T1.[X_DictionaryInter" +
                    "valStatus.GoldIntervalStatusName], T1.[X_DictionaryIntervalStatus.CustomInterval" +
                    "StatusName], T1.[X_DictionaryIntervalStatus.Description], T1.[X_DictionaryInterv" +
                    "alStatus.FullDescription], T1.[X_DictionaryIntervalStatus.Thumbnail], T1.[X_Dict" +
                    "ionaryIntervalStatus.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n        " +
                    "    T.IntervalStatusID AS [X_DictionaryIntervalStatus.IntervalStatusID], \r\n     " +
                    "       T.StandardIntervalStatusName AS [X_DictionaryIntervalStatus.StandardInter" +
                    "valStatusName], \r\n            T.CoalIntervalStatusName AS [X_DictionaryIntervalS" +
                    "tatus.CoalIntervalStatusName], \r\n            T.GoldIntervalStatusName AS [X_Dict" +
                    "ionaryIntervalStatus.GoldIntervalStatusName], \r\n            T.CustomIntervalStat" +
                    "usName AS [X_DictionaryIntervalStatus.CustomIntervalStatusName], \r\n            T" +
                    ".Description AS [X_DictionaryIntervalStatus.Description], \r\n            T.FullDe" +
                    "scription AS [X_DictionaryIntervalStatus.FullDescription], \r\n            T.Thumb" +
                    "nail AS [X_DictionaryIntervalStatus.Thumbnail], \r\n            T.OriginalFileData" +
                    "ID AS [X_DictionaryIntervalStatus.OriginalFileDataID], \r\n            True AS _fr" +
                    "om0\r\n        FROM XODBC.DictionaryIntervalStatus AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryLeaseApplicationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView152()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryLeaseApplicationType", "\r\n    SELECT VALUE -- Constructing X_DictionaryLeaseApplicationType\r\n        [XOD" +
                    "B.Module.BusinessObjects.Store.X_DictionaryLeaseApplicationType](T1.[X_Dictionar" +
                    "yLeaseApplicationType.LeaseApplicationTypeID], T1.[X_DictionaryLeaseApplicationT" +
                    "ype.StandardLeaseApplicationTypeName], T1.[X_DictionaryLeaseApplicationType.Coal" +
                    "LeaseApplicationTypeName], T1.[X_DictionaryLeaseApplicationType.GoldLeaseApplica" +
                    "tionTypeName], T1.[X_DictionaryLeaseApplicationType.CustomLeaseApplicationTypeNa" +
                    "me], T1.[X_DictionaryLeaseApplicationType.Description], T1.[X_DictionaryLeaseApp" +
                    "licationType.FullDescription], T1.[X_DictionaryLeaseApplicationType.Thumbnail], " +
                    "T1.[X_DictionaryLeaseApplicationType.OriginalFileDataID])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.LeaseApplicationTypeID AS [X_DictionaryLeaseApplicationTyp" +
                    "e.LeaseApplicationTypeID], \r\n            T.StandardLeaseApplicationTypeName AS [" +
                    "X_DictionaryLeaseApplicationType.StandardLeaseApplicationTypeName], \r\n          " +
                    "  T.CoalLeaseApplicationTypeName AS [X_DictionaryLeaseApplicationType.CoalLeaseA" +
                    "pplicationTypeName], \r\n            T.GoldLeaseApplicationTypeName AS [X_Dictiona" +
                    "ryLeaseApplicationType.GoldLeaseApplicationTypeName], \r\n            T.CustomLeas" +
                    "eApplicationTypeName AS [X_DictionaryLeaseApplicationType.CustomLeaseApplication" +
                    "TypeName], \r\n            T.Description AS [X_DictionaryLeaseApplicationType.Desc" +
                    "ription], \r\n            T.FullDescription AS [X_DictionaryLeaseApplicationType.F" +
                    "ullDescription], \r\n            T.Thumbnail AS [X_DictionaryLeaseApplicationType." +
                    "Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryLeaseApplicationT" +
                    "ype.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XODBC.Dictio" +
                    "naryLeaseApplicationTypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryLicenseType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView153()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2304);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_DictionaryLicenseType\r\n        [XODB.Module");
            viewString.Append(".BusinessObjects.Store.X_DictionaryLicenseType](T1.[X_DictionaryLicenseType.Lice");
            viewString.Append("nseTypeID], T1.[X_DictionaryLicenseType.StandardLicenseTypeName], T1.[X_Dictiona");
            viewString.Append("ryLicenseType.CustomLicenseTypeName], T1.[X_DictionaryLicenseType.Description], ");
            viewString.Append("T1.[X_DictionaryLicenseType.FullDescription], T1.[X_DictionaryLicenseType.Thumbn");
            viewString.Append("ail], T1.[X_DictionaryLicenseType.OriginalFileDataID], T1.[X_DictionaryLicenseTy");
            viewString.Append("pe.Version], T1.[X_DictionaryLicenseType.VersionAntecedentID], T1.[X_DictionaryL");
            viewString.Append("icenseType.VersionCertainty], T1.[X_DictionaryLicenseType.VersionWorkflowInstanc");
            viewString.Append("eID], T1.[X_DictionaryLicenseType.VersionUpdatedBy], T1.[X_DictionaryLicenseType");
            viewString.Append(".VersionDeletedBy], T1.[X_DictionaryLicenseType.VersionOwnerContactID], T1.[X_Di");
            viewString.Append("ctionaryLicenseType.VersionOwnerCompanyID], T1.[X_DictionaryLicenseType.VersionU");
            viewString.Append("pdated])\r\n    FROM (\r\n        SELECT \r\n            T.LicenseTypeID AS [X_Diction");
            viewString.Append("aryLicenseType.LicenseTypeID], \r\n            T.StandardLicenseTypeName AS [X_Dic");
            viewString.Append("tionaryLicenseType.StandardLicenseTypeName], \r\n            T.CustomLicenseTypeNa");
            viewString.Append("me AS [X_DictionaryLicenseType.CustomLicenseTypeName], \r\n            T.Descripti");
            viewString.Append("on AS [X_DictionaryLicenseType.Description], \r\n            T.FullDescription AS ");
            viewString.Append("[X_DictionaryLicenseType.FullDescription], \r\n            T.Thumbnail AS [X_Dicti");
            viewString.Append("onaryLicenseType.Thumbnail], \r\n            T.OriginalFileDataID AS [X_Dictionary");
            viewString.Append("LicenseType.OriginalFileDataID], \r\n            T.Version AS [X_DictionaryLicense");
            viewString.Append("Type.Version], \r\n            T.VersionAntecedentID AS [X_DictionaryLicenseType.V");
            viewString.Append("ersionAntecedentID], \r\n            T.VersionCertainty AS [X_DictionaryLicenseTyp");
            viewString.Append("e.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_DictionaryL");
            viewString.Append("icenseType.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Di");
            viewString.Append("ctionaryLicenseType.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Di");
            viewString.Append("ctionaryLicenseType.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS ");
            viewString.Append("[X_DictionaryLicenseType.VersionOwnerContactID], \r\n            T.VersionOwnerCom");
            viewString.Append("panyID AS [X_DictionaryLicenseType.VersionOwnerCompanyID], \r\n            T.Versi");
            viewString.Append("onUpdated AS [X_DictionaryLicenseType.VersionUpdated], \r\n            True AS _fr");
            viewString.Append("om0\r\n        FROM XODBC.DictionaryLicenseTypes AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryLicenseType", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryLithologyInterrelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView154()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryLithologyInterrelation", "\r\n    SELECT VALUE -- Constructing X_DictionaryLithologyInterrelation\r\n        [X" +
                    "ODB.Module.BusinessObjects.Store.X_DictionaryLithologyInterrelation](T1.[X_Dicti" +
                    "onaryLithologyInterrelation.LithologyInterralationID], T1.[X_DictionaryLithology" +
                    "Interrelation.StandardLithologyInterrelationName], T1.[X_DictionaryLithologyInte" +
                    "rrelation.CoalLithologyInterrelationName], T1.[X_DictionaryLithologyInterrelatio" +
                    "n.GoldLithologyInterrelationName], T1.[X_DictionaryLithologyInterrelation.Custom" +
                    "LithologyInterrelationName], T1.[X_DictionaryLithologyInterrelation.Description]" +
                    ", T1.[X_DictionaryLithologyInterrelation.FullDescription], T1.[X_DictionaryLitho" +
                    "logyInterrelation.Thumbnail], T1.[X_DictionaryLithologyInterrelation.OriginalFil" +
                    "eDataID])\r\n    FROM (\r\n        SELECT \r\n            T.LithologyInterralationID A" +
                    "S [X_DictionaryLithologyInterrelation.LithologyInterralationID], \r\n            T" +
                    ".StandardLithologyInterrelationName AS [X_DictionaryLithologyInterrelation.Stand" +
                    "ardLithologyInterrelationName], \r\n            T.CoalLithologyInterrelationName A" +
                    "S [X_DictionaryLithologyInterrelation.CoalLithologyInterrelationName], \r\n       " +
                    "     T.GoldLithologyInterrelationName AS [X_DictionaryLithologyInterrelation.Gol" +
                    "dLithologyInterrelationName], \r\n            T.CustomLithologyInterrelationName A" +
                    "S [X_DictionaryLithologyInterrelation.CustomLithologyInterrelationName], \r\n     " +
                    "       T.Description AS [X_DictionaryLithologyInterrelation.Description], \r\n    " +
                    "        T.FullDescription AS [X_DictionaryLithologyInterrelation.FullDescription" +
                    "], \r\n            T.Thumbnail AS [X_DictionaryLithologyInterrelation.Thumbnail], " +
                    "\r\n            T.OriginalFileDataID AS [X_DictionaryLithologyInterrelation.Origin" +
                    "alFileDataID], \r\n            True AS _from0\r\n        FROM XODBC.DictionaryLithol" +
                    "ogyInterrelations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryLithologyQualifier
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView155()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryLithologyQualifier", "\r\n    SELECT VALUE -- Constructing X_DictionaryLithologyQualifier\r\n        [XODB." +
                    "Module.BusinessObjects.Store.X_DictionaryLithologyQualifier](T1.[X_DictionaryLit" +
                    "hologyQualifier.LithologyQualifierID], T1.[X_DictionaryLithologyQualifier.Standa" +
                    "rdLithologyQualifierName], T1.[X_DictionaryLithologyQualifier.CoalLithologyQuali" +
                    "fierName], T1.[X_DictionaryLithologyQualifier.GoldLithologyQualifierName], T1.[X" +
                    "_DictionaryLithologyQualifier.CustomLithologyQualifierName], T1.[X_DictionaryLit" +
                    "hologyQualifier.Description], T1.[X_DictionaryLithologyQualifier.FullDescription" +
                    "], T1.[X_DictionaryLithologyQualifier.Thumbnail], T1.[X_DictionaryLithologyQuali" +
                    "fier.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n            T.LithologyQ" +
                    "ualifierID AS [X_DictionaryLithologyQualifier.LithologyQualifierID], \r\n         " +
                    "   T.StandardLithologyQualifierName AS [X_DictionaryLithologyQualifier.StandardL" +
                    "ithologyQualifierName], \r\n            T.CoalLithologyQualifierName AS [X_Diction" +
                    "aryLithologyQualifier.CoalLithologyQualifierName], \r\n            T.GoldLithology" +
                    "QualifierName AS [X_DictionaryLithologyQualifier.GoldLithologyQualifierName], \r\n" +
                    "            T.CustomLithologyQualifierName AS [X_DictionaryLithologyQualifier.Cu" +
                    "stomLithologyQualifierName], \r\n            T.Description AS [X_DictionaryLitholo" +
                    "gyQualifier.Description], \r\n            T.FullDescription AS [X_DictionaryLithol" +
                    "ogyQualifier.FullDescription], \r\n            T.Thumbnail AS [X_DictionaryLitholo" +
                    "gyQualifier.Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryLitho" +
                    "logyQualifier.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XO" +
                    "DBC.DictionaryLithologyQualifiers AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryLithologyType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView156()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryLithologyType", @"
    SELECT VALUE -- Constructing X_DictionaryLithologyType
        [XODB.Module.BusinessObjects.Store.X_DictionaryLithologyType](T1.[X_DictionaryLithologyType.LithologyTypeID], T1.[X_DictionaryLithologyType.StandardLithologyTypeName], T1.[X_DictionaryLithologyType.CoalLithologyTypeName], T1.[X_DictionaryLithologyType.GoldLithologyTypeName], T1.[X_DictionaryLithologyType.CustomLithologyTypeName], T1.[X_DictionaryLithologyType.Description], T1.[X_DictionaryLithologyType.FullDescription], T1.[X_DictionaryLithologyType.Thumbnail], T1.[X_DictionaryLithologyType.OriginalFileDataID])
    FROM (
        SELECT 
            T.LithologyTypeID AS [X_DictionaryLithologyType.LithologyTypeID], 
            T.StandardLithologyTypeName AS [X_DictionaryLithologyType.StandardLithologyTypeName], 
            T.CoalLithologyTypeName AS [X_DictionaryLithologyType.CoalLithologyTypeName], 
            T.GoldLithologyTypeName AS [X_DictionaryLithologyType.GoldLithologyTypeName], 
            T.CustomLithologyTypeName AS [X_DictionaryLithologyType.CustomLithologyTypeName], 
            T.Description AS [X_DictionaryLithologyType.Description], 
            T.FullDescription AS [X_DictionaryLithologyType.FullDescription], 
            T.Thumbnail AS [X_DictionaryLithologyType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryLithologyType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryLithologyTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryLocationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView157()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryLocationType", @"
    SELECT VALUE -- Constructing X_DictionaryLocationType
        [XODB.Module.BusinessObjects.Store.X_DictionaryLocationType](T1.[X_DictionaryLocationType.LocationTypeID], T1.[X_DictionaryLocationType.StandardLocationTypeName], T1.[X_DictionaryLocationType.CoalLocationTypeName], T1.[X_DictionaryLocationType.GoldLocationTypeName], T1.[X_DictionaryLocationType.CustomLocationTypeName], T1.[X_DictionaryLocationType.Description], T1.[X_DictionaryLocationType.FullDescription], T1.[X_DictionaryLocationType.Thumbnail], T1.[X_DictionaryLocationType.OriginalFileDataID])
    FROM (
        SELECT 
            T.LocationTypeID AS [X_DictionaryLocationType.LocationTypeID], 
            T.StandardLocationTypeName AS [X_DictionaryLocationType.StandardLocationTypeName], 
            T.CoalLocationTypeName AS [X_DictionaryLocationType.CoalLocationTypeName], 
            T.GoldLocationTypeName AS [X_DictionaryLocationType.GoldLocationTypeName], 
            T.CustomLocationTypeName AS [X_DictionaryLocationType.CustomLocationTypeName], 
            T.Description AS [X_DictionaryLocationType.Description], 
            T.FullDescription AS [X_DictionaryLocationType.FullDescription], 
            T.Thumbnail AS [X_DictionaryLocationType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryLocationType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryLocationTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMechanicalState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView158()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMechanicalState", "\r\n    SELECT VALUE -- Constructing X_DictionaryMechanicalState\r\n        [XODB.Mod" +
                    "ule.BusinessObjects.Store.X_DictionaryMechanicalState](T1.[X_DictionaryMechanica" +
                    "lState.MechanicalStateID], T1.[X_DictionaryMechanicalState.StandardMechanicalSta" +
                    "teName], T1.[X_DictionaryMechanicalState.CoalMechanicalStateName], T1.[X_Diction" +
                    "aryMechanicalState.GoldMechanicalStateName], T1.[X_DictionaryMechanicalState.Cus" +
                    "tomMechanicalStateName], T1.[X_DictionaryMechanicalState.Description], T1.[X_Dic" +
                    "tionaryMechanicalState.FullDescription], T1.[X_DictionaryMechanicalState.Thumbna" +
                    "il], T1.[X_DictionaryMechanicalState.OriginalFileDataID])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.MechanicalStateID AS [X_DictionaryMechanicalState.Mechanic" +
                    "alStateID], \r\n            T.StandardMechanicalStateName AS [X_DictionaryMechanic" +
                    "alState.StandardMechanicalStateName], \r\n            T.CoalMechanicalStateName AS" +
                    " [X_DictionaryMechanicalState.CoalMechanicalStateName], \r\n            T.GoldMech" +
                    "anicalStateName AS [X_DictionaryMechanicalState.GoldMechanicalStateName], \r\n    " +
                    "        T.CustomMechanicalStateName AS [X_DictionaryMechanicalState.CustomMechan" +
                    "icalStateName], \r\n            T.Description AS [X_DictionaryMechanicalState.Desc" +
                    "ription], \r\n            T.FullDescription AS [X_DictionaryMechanicalState.FullDe" +
                    "scription], \r\n            T.Thumbnail AS [X_DictionaryMechanicalState.Thumbnail]" +
                    ", \r\n            T.OriginalFileDataID AS [X_DictionaryMechanicalState.OriginalFil" +
                    "eDataID], \r\n            True AS _from0\r\n        FROM XODBC.DictionaryMechanicalS" +
                    "tates AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAbundance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView159()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAbundance", "\r\n    SELECT VALUE -- Constructing X_DictionaryMineralAbundance\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.Store.X_DictionaryMineralAbundance](T1.[X_DictionaryMineral" +
                    "Abundance.MineralAbundanceID], T1.[X_DictionaryMineralAbundance.StandardMineralA" +
                    "bundanceName], T1.[X_DictionaryMineralAbundance.CoalMineralAbundanceName], T1.[X" +
                    "_DictionaryMineralAbundance.GoldMineralAbundanceName], T1.[X_DictionaryMineralAb" +
                    "undance.CustomMineralAbundanceName], T1.[X_DictionaryMineralAbundance.Descriptio" +
                    "n], T1.[X_DictionaryMineralAbundance.FullDescription], T1.[X_DictionaryMineralAb" +
                    "undance.Thumbnail], T1.[X_DictionaryMineralAbundance.OriginalFileDataID])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.MineralAbundanceID AS [X_DictionaryMineral" +
                    "Abundance.MineralAbundanceID], \r\n            T.StandardMineralAbundanceName AS [" +
                    "X_DictionaryMineralAbundance.StandardMineralAbundanceName], \r\n            T.Coal" +
                    "MineralAbundanceName AS [X_DictionaryMineralAbundance.CoalMineralAbundanceName]," +
                    " \r\n            T.GoldMineralAbundanceName AS [X_DictionaryMineralAbundance.GoldM" +
                    "ineralAbundanceName], \r\n            T.CustomMineralAbundanceName AS [X_Dictionar" +
                    "yMineralAbundance.CustomMineralAbundanceName], \r\n            T.Description AS [X" +
                    "_DictionaryMineralAbundance.Description], \r\n            T.FullDescription AS [X_" +
                    "DictionaryMineralAbundance.FullDescription], \r\n            T.Thumbnail AS [X_Dic" +
                    "tionaryMineralAbundance.Thumbnail], \r\n            T.OriginalFileDataID AS [X_Dic" +
                    "tionaryMineralAbundance.OriginalFileDataID], \r\n            True AS _from0\r\n     " +
                    "   FROM XODBC.DictionaryMineralAbundances AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilAbundance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView160()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilAbundance", "\r\n    SELECT VALUE -- Constructing X_DictionaryMineralAndFossilAbundance\r\n       " +
                    " [XODB.Module.BusinessObjects.Store.X_DictionaryMineralAndFossilAbundance](T1.[X" +
                    "_DictionaryMineralAndFossilAbundance.MineralAndFossilAbundanceID], T1.[X_Diction" +
                    "aryMineralAndFossilAbundance.StandardMineralAndFossilAbundanceName], T1.[X_Dicti" +
                    "onaryMineralAndFossilAbundance.CoalMineralAndFossilAbundanceName], T1.[X_Diction" +
                    "aryMineralAndFossilAbundance.GoldMineralAndFossilAbundanceName], T1.[X_Dictionar" +
                    "yMineralAndFossilAbundance.CustomMineralAndFossilAbundanceName], T1.[X_Dictionar" +
                    "yMineralAndFossilAbundance.Description], T1.[X_DictionaryMineralAndFossilAbundan" +
                    "ce.FullDescription], T1.[X_DictionaryMineralAndFossilAbundance.Thumbnail], T1.[X" +
                    "_DictionaryMineralAndFossilAbundance.OriginalFileDataID])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.MineralAndFossilAbundanceID AS [X_DictionaryMineralAndFoss" +
                    "ilAbundance.MineralAndFossilAbundanceID], \r\n            T.StandardMineralAndFoss" +
                    "ilAbundanceName AS [X_DictionaryMineralAndFossilAbundance.StandardMineralAndFoss" +
                    "ilAbundanceName], \r\n            T.CoalMineralAndFossilAbundanceName AS [X_Dictio" +
                    "naryMineralAndFossilAbundance.CoalMineralAndFossilAbundanceName], \r\n            " +
                    "T.GoldMineralAndFossilAbundanceName AS [X_DictionaryMineralAndFossilAbundance.Go" +
                    "ldMineralAndFossilAbundanceName], \r\n            T.CustomMineralAndFossilAbundanc" +
                    "eName AS [X_DictionaryMineralAndFossilAbundance.CustomMineralAndFossilAbundanceN" +
                    "ame], \r\n            T.Description AS [X_DictionaryMineralAndFossilAbundance.Desc" +
                    "ription], \r\n            T.FullDescription AS [X_DictionaryMineralAndFossilAbunda" +
                    "nce.FullDescription], \r\n            T.Thumbnail AS [X_DictionaryMineralAndFossil" +
                    "Abundance.Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryMineral" +
                    "AndFossilAbundance.OriginalFileDataID], \r\n            True AS _from0\r\n        FR" +
                    "OM XODBC.DictionaryMineralAndFossilAbundances AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilAssociation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView161()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilAssociation", "\r\n    SELECT VALUE -- Constructing X_DictionaryMineralAndFossilAssociation\r\n     " +
                    "   [XODB.Module.BusinessObjects.Store.X_DictionaryMineralAndFossilAssociation](T" +
                    "1.[X_DictionaryMineralAndFossilAssociation.MineralAndFossilAssociationID], T1.[X" +
                    "_DictionaryMineralAndFossilAssociation.StandardMineralAndFossilAssociationName]," +
                    " T1.[X_DictionaryMineralAndFossilAssociation.CoalMineralAndFossilAssociationName" +
                    "], T1.[X_DictionaryMineralAndFossilAssociation.GoldMineralAndFossilAssociationNa" +
                    "me], T1.[X_DictionaryMineralAndFossilAssociation.CustomMineralAndFossilAssociati" +
                    "onName], T1.[X_DictionaryMineralAndFossilAssociation.Description], T1.[X_Diction" +
                    "aryMineralAndFossilAssociation.FullDescription], T1.[X_DictionaryMineralAndFossi" +
                    "lAssociation.Thumbnail], T1.[X_DictionaryMineralAndFossilAssociation.OriginalFil" +
                    "eDataID])\r\n    FROM (\r\n        SELECT \r\n            T.MineralAndFossilAssociatio" +
                    "nID AS [X_DictionaryMineralAndFossilAssociation.MineralAndFossilAssociationID], " +
                    "\r\n            T.StandardMineralAndFossilAssociationName AS [X_DictionaryMineralA" +
                    "ndFossilAssociation.StandardMineralAndFossilAssociationName], \r\n            T.Co" +
                    "alMineralAndFossilAssociationName AS [X_DictionaryMineralAndFossilAssociation.Co" +
                    "alMineralAndFossilAssociationName], \r\n            T.GoldMineralAndFossilAssociat" +
                    "ionName AS [X_DictionaryMineralAndFossilAssociation.GoldMineralAndFossilAssociat" +
                    "ionName], \r\n            T.CustomMineralAndFossilAssociationName AS [X_Dictionary" +
                    "MineralAndFossilAssociation.CustomMineralAndFossilAssociationName], \r\n          " +
                    "  T.Description AS [X_DictionaryMineralAndFossilAssociation.Description], \r\n    " +
                    "        T.FullDescription AS [X_DictionaryMineralAndFossilAssociation.FullDescri" +
                    "ption], \r\n            T.Thumbnail AS [X_DictionaryMineralAndFossilAssociation.Th" +
                    "umbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryMineralAndFossilAss" +
                    "ociation.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XODBC.D" +
                    "ictionaryMineralAndFossilAssociations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView162()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilType", "\r\n    SELECT VALUE -- Constructing X_DictionaryMineralAndFossilType\r\n        [XOD" +
                    "B.Module.BusinessObjects.Store.X_DictionaryMineralAndFossilType](T1.[X_Dictionar" +
                    "yMineralAndFossilType.MineralAndFossilTypeID], T1.[X_DictionaryMineralAndFossilT" +
                    "ype.StandardMineralAndFossilTypeName], T1.[X_DictionaryMineralAndFossilType.Coal" +
                    "MineralAndFossilTypeName], T1.[X_DictionaryMineralAndFossilType.GoldMineralAndFo" +
                    "ssilTypeName], T1.[X_DictionaryMineralAndFossilType.CustomMineralAndFossilTypeNa" +
                    "me], T1.[X_DictionaryMineralAndFossilType.Description], T1.[X_DictionaryMineralA" +
                    "ndFossilType.FullDescription], T1.[X_DictionaryMineralAndFossilType.Thumbnail], " +
                    "T1.[X_DictionaryMineralAndFossilType.OriginalFileDataID])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.MineralAndFossilTypeID AS [X_DictionaryMineralAndFossilTyp" +
                    "e.MineralAndFossilTypeID], \r\n            T.StandardMineralAndFossilTypeName AS [" +
                    "X_DictionaryMineralAndFossilType.StandardMineralAndFossilTypeName], \r\n          " +
                    "  T.CoalMineralAndFossilTypeName AS [X_DictionaryMineralAndFossilType.CoalMinera" +
                    "lAndFossilTypeName], \r\n            T.GoldMineralAndFossilTypeName AS [X_Dictiona" +
                    "ryMineralAndFossilType.GoldMineralAndFossilTypeName], \r\n            T.CustomMine" +
                    "ralAndFossilTypeName AS [X_DictionaryMineralAndFossilType.CustomMineralAndFossil" +
                    "TypeName], \r\n            T.Description AS [X_DictionaryMineralAndFossilType.Desc" +
                    "ription], \r\n            T.FullDescription AS [X_DictionaryMineralAndFossilType.F" +
                    "ullDescription], \r\n            T.Thumbnail AS [X_DictionaryMineralAndFossilType." +
                    "Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionaryMineralAndFossilT" +
                    "ype.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XODBC.Dictio" +
                    "naryMineralAndFossilTypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralForm
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView163()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralForm", @"
    SELECT VALUE -- Constructing X_DictionaryMineralForm
        [XODB.Module.BusinessObjects.Store.X_DictionaryMineralForm](T1.[X_DictionaryMineralForm.MineralFormID], T1.[X_DictionaryMineralForm.StandardMineralFormName], T1.[X_DictionaryMineralForm.CoalMineralFormName], T1.[X_DictionaryMineralForm.GoldMineralFormName], T1.[X_DictionaryMineralForm.CustomMineralFormName], T1.[X_DictionaryMineralForm.Description], T1.[X_DictionaryMineralForm.FullDescription], T1.[X_DictionaryMineralForm.Thumbnail], T1.[X_DictionaryMineralForm.OriginalFileDataID])
    FROM (
        SELECT 
            T.MineralFormID AS [X_DictionaryMineralForm.MineralFormID], 
            T.StandardMineralFormName AS [X_DictionaryMineralForm.StandardMineralFormName], 
            T.CoalMineralFormName AS [X_DictionaryMineralForm.CoalMineralFormName], 
            T.GoldMineralFormName AS [X_DictionaryMineralForm.GoldMineralFormName], 
            T.CustomMineralFormName AS [X_DictionaryMineralForm.CustomMineralFormName], 
            T.Description AS [X_DictionaryMineralForm.Description], 
            T.FullDescription AS [X_DictionaryMineralForm.FullDescription], 
            T.Thumbnail AS [X_DictionaryMineralForm.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryMineralForm.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryMineralForms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralStyle
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView164()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralStyle", @"
    SELECT VALUE -- Constructing X_DictionaryMineralStyle
        [XODB.Module.BusinessObjects.Store.X_DictionaryMineralStyle](T1.[X_DictionaryMineralStyle.MineralStyleID], T1.[X_DictionaryMineralStyle.StandardMineralStyleName], T1.[X_DictionaryMineralStyle.CoalMineralStyleName], T1.[X_DictionaryMineralStyle.GoldMineralStyleName], T1.[X_DictionaryMineralStyle.CustomMineralStyleName], T1.[X_DictionaryMineralStyle.Description], T1.[X_DictionaryMineralStyle.FullDescription], T1.[X_DictionaryMineralStyle.Thumbnail], T1.[X_DictionaryMineralStyle.OriginalFileDataID])
    FROM (
        SELECT 
            T.MineralStyleID AS [X_DictionaryMineralStyle.MineralStyleID], 
            T.StandardMineralStyleName AS [X_DictionaryMineralStyle.StandardMineralStyleName], 
            T.CoalMineralStyleName AS [X_DictionaryMineralStyle.CoalMineralStyleName], 
            T.GoldMineralStyleName AS [X_DictionaryMineralStyle.GoldMineralStyleName], 
            T.CustomMineralStyleName AS [X_DictionaryMineralStyle.CustomMineralStyleName], 
            T.Description AS [X_DictionaryMineralStyle.Description], 
            T.FullDescription AS [X_DictionaryMineralStyle.FullDescription], 
            T.Thumbnail AS [X_DictionaryMineralStyle.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryMineralStyle.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryMineralStyles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView165()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralType", @"
    SELECT VALUE -- Constructing X_DictionaryMineralType
        [XODB.Module.BusinessObjects.Store.X_DictionaryMineralType](T1.[X_DictionaryMineralType.MineralTypeID], T1.[X_DictionaryMineralType.StandardMineralTypeName], T1.[X_DictionaryMineralType.CoalMineralTypeName], T1.[X_DictionaryMineralType.GoldMineralTypeName], T1.[X_DictionaryMineralType.CustomMineralTypeName], T1.[X_DictionaryMineralType.Description], T1.[X_DictionaryMineralType.FullDescription], T1.[X_DictionaryMineralType.Thumbnail], T1.[X_DictionaryMineralType.OriginalFileDataID])
    FROM (
        SELECT 
            T.MineralTypeID AS [X_DictionaryMineralType.MineralTypeID], 
            T.StandardMineralTypeName AS [X_DictionaryMineralType.StandardMineralTypeName], 
            T.CoalMineralTypeName AS [X_DictionaryMineralType.CoalMineralTypeName], 
            T.GoldMineralTypeName AS [X_DictionaryMineralType.GoldMineralTypeName], 
            T.CustomMineralTypeName AS [X_DictionaryMineralType.CustomMineralTypeName], 
            T.Description AS [X_DictionaryMineralType.Description], 
            T.FullDescription AS [X_DictionaryMineralType.FullDescription], 
            T.Thumbnail AS [X_DictionaryMineralType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryMineralType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryMineralTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryModel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView166()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3375);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_DictionaryModel\r\n        [XODB.Module.Busin");
            viewString.Append("essObjects.Store.X_DictionaryModel](T1.[X_DictionaryModel.ModelID], T1.[X_Dictio");
            viewString.Append("naryModel.ParentModelID], T1.[X_DictionaryModel.StandardModelName], T1.[X_Dictio");
            viewString.Append("naryModel.EcriModelName], T1.[X_DictionaryModel.CustomModelName], T1.[X_Dictiona");
            viewString.Append("ryModel.CompanyID], T1.[X_DictionaryModel.OriginalManufacturerName], T1.[X_Dicti");
            viewString.Append("onaryModel.ModelStatusID], T1.[X_DictionaryModel.DeviceTypeID], T1.[X_Dictionary");
            viewString.Append("Model.IsMake], T1.[X_DictionaryModel.ManufacturedFrom], T1.[X_DictionaryModel.Ma");
            viewString.Append("nufacturedUntil], T1.[X_DictionaryModel.SupportedUntil], T1.[X_DictionaryModel.E");
            viewString.Append("stimatedLifetimeUnitID], T1.[X_DictionaryModel.EstimatedLifetime], T1.[X_Diction");
            viewString.Append("aryModel.Description], T1.[X_DictionaryModel.FullDescription], T1.[X_DictionaryM");
            viewString.Append("odel.Thumbnail], T1.[X_DictionaryModel.OriginalFileDataID], T1.[X_DictionaryMode");
            viewString.Append("l.Version], T1.[X_DictionaryModel.VersionAntecedentID], T1.[X_DictionaryModel.Ve");
            viewString.Append("rsionCertainty], T1.[X_DictionaryModel.VersionWorkflowInstanceID], T1.[X_Diction");
            viewString.Append("aryModel.VersionUpdatedBy], T1.[X_DictionaryModel.VersionDeletedBy], T1.[X_Dicti");
            viewString.Append("onaryModel.VersionOwnerContactID], T1.[X_DictionaryModel.VersionOwnerCompanyID],");
            viewString.Append(" T1.[X_DictionaryModel.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n          ");
            viewString.Append("  T.ModelID AS [X_DictionaryModel.ModelID], \r\n            T.ParentModelID AS [X_");
            viewString.Append("DictionaryModel.ParentModelID], \r\n            T.StandardModelName AS [X_Dictiona");
            viewString.Append("ryModel.StandardModelName], \r\n            T.EcriModelName AS [X_DictionaryModel.");
            viewString.Append("EcriModelName], \r\n            T.CustomModelName AS [X_DictionaryModel.CustomMode");
            viewString.Append("lName], \r\n            T.CompanyID AS [X_DictionaryModel.CompanyID], \r\n          ");
            viewString.Append("  T.OriginalManufacturerName AS [X_DictionaryModel.OriginalManufacturerName], \r\n");
            viewString.Append("            T.ModelStatusID AS [X_DictionaryModel.ModelStatusID], \r\n            ");
            viewString.Append("T.DeviceTypeID AS [X_DictionaryModel.DeviceTypeID], \r\n            T.IsMake AS [X");
            viewString.Append("_DictionaryModel.IsMake], \r\n            T.ManufacturedFrom AS [X_DictionaryModel");
            viewString.Append(".ManufacturedFrom], \r\n            T.ManufacturedUntil AS [X_DictionaryModel.Manu");
            viewString.Append("facturedUntil], \r\n            T.SupportedUntil AS [X_DictionaryModel.SupportedUn");
            viewString.Append("til], \r\n            T.EstimatedLifetimeUnitID AS [X_DictionaryModel.EstimatedLif");
            viewString.Append("etimeUnitID], \r\n            T.EstimatedLifetime AS [X_DictionaryModel.EstimatedL");
            viewString.Append("ifetime], \r\n            T.Description AS [X_DictionaryModel.Description], \r\n    ");
            viewString.Append("        T.FullDescription AS [X_DictionaryModel.FullDescription], \r\n            ");
            viewString.Append("T.Thumbnail AS [X_DictionaryModel.Thumbnail], \r\n            T.OriginalFileDataID");
            viewString.Append(" AS [X_DictionaryModel.OriginalFileDataID], \r\n            T.Version AS [X_Dictio");
            viewString.Append("naryModel.Version], \r\n            T.VersionAntecedentID AS [X_DictionaryModel.Ve");
            viewString.Append("rsionAntecedentID], \r\n            T.VersionCertainty AS [X_DictionaryModel.Versi");
            viewString.Append("onCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_DictionaryModel.Ve");
            viewString.Append("rsionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_DictionaryModel");
            viewString.Append(".VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_DictionaryModel.Versi");
            viewString.Append("onDeletedBy], \r\n            T.VersionOwnerContactID AS [X_DictionaryModel.Versio");
            viewString.Append("nOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_DictionaryModel.Ve");
            viewString.Append("rsionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_DictionaryModel.Versi");
            viewString.Append("onUpdated], \r\n            True AS _from0\r\n        FROM XODBC.DictionaryModels AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryModel", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView167()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelCategory", @"
    SELECT VALUE -- Constructing X_DictionaryModelCategory
        [XODB.Module.BusinessObjects.Store.X_DictionaryModelCategory](T1.[X_DictionaryModelCategory.ModelCategoryID], T1.[X_DictionaryModelCategory.ModelID], T1.[X_DictionaryModelCategory.CategoryDeviceTypeID])
    FROM (
        SELECT 
            T.ModelCategoryID AS [X_DictionaryModelCategory.ModelCategoryID], 
            T.ModelID AS [X_DictionaryModelCategory.ModelID], 
            T.CategoryDeviceTypeID AS [X_DictionaryModelCategory.CategoryDeviceTypeID], 
            True AS _from0
        FROM XODBC.DictionaryModelCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView168()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelRelation", @"
    SELECT VALUE -- Constructing X_DictionaryModelRelation
        [XODB.Module.BusinessObjects.Store.X_DictionaryModelRelation](T1.[X_DictionaryModelRelation.ModelRelationID], T1.[X_DictionaryModelRelation.OriginalModelID], T1.[X_DictionaryModelRelation.RelatedModelID], T1.[X_DictionaryModelRelation.RelationTypeID], T1.[X_DictionaryModelRelation.Related])
    FROM (
        SELECT 
            T.ModelRelationID AS [X_DictionaryModelRelation.ModelRelationID], 
            T.OriginalModelID AS [X_DictionaryModelRelation.OriginalModelID], 
            T.RelatedModelID AS [X_DictionaryModelRelation.RelatedModelID], 
            T.RelationTypeID AS [X_DictionaryModelRelation.RelationTypeID], 
            T.Related AS [X_DictionaryModelRelation.Related], 
            True AS _from0
        FROM XODBC.DictionaryModelRelations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView169()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelStatus", @"
    SELECT VALUE -- Constructing X_DictionaryModelStatus
        [XODB.Module.BusinessObjects.Store.X_DictionaryModelStatus](T1.[X_DictionaryModelStatus.ModelStatusID], T1.[X_DictionaryModelStatus.StandardModelStatusName], T1.[X_DictionaryModelStatus.CustomModelStatusName], T1.[X_DictionaryModelStatus.Description], T1.[X_DictionaryModelStatus.FullDescription], T1.[X_DictionaryModelStatus.Thumbnail], T1.[X_DictionaryModelStatus.OriginalFileDataID])
    FROM (
        SELECT 
            T.ModelStatusID AS [X_DictionaryModelStatus.ModelStatusID], 
            T.StandardModelStatusName AS [X_DictionaryModelStatus.StandardModelStatusName], 
            T.CustomModelStatusName AS [X_DictionaryModelStatus.CustomModelStatusName], 
            T.Description AS [X_DictionaryModelStatus.Description], 
            T.FullDescription AS [X_DictionaryModelStatus.FullDescription], 
            T.Thumbnail AS [X_DictionaryModelStatus.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryModelStatus.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryModelStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryMoistureSensitivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView170()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryMoistureSensitivity", "\r\n    SELECT VALUE -- Constructing X_DictionaryMoistureSensitivity\r\n        [XODB" +
                    ".Module.BusinessObjects.Store.X_DictionaryMoistureSensitivity](T1.[X_DictionaryM" +
                    "oistureSensitivity.MoistureSensitivityID], T1.[X_DictionaryMoistureSensitivity.S" +
                    "tandardMoistureSensitivityName], T1.[X_DictionaryMoistureSensitivity.CoalMoistur" +
                    "eSensitivityName], T1.[X_DictionaryMoistureSensitivity.GoldMoistureSensitivityNa" +
                    "me], T1.[X_DictionaryMoistureSensitivity.CustomMoistureSensitivityName], T1.[X_D" +
                    "ictionaryMoistureSensitivity.Description], T1.[X_DictionaryMoistureSensitivity.F" +
                    "ullDescription], T1.[X_DictionaryMoistureSensitivity.Thumbnail], T1.[X_Dictionar" +
                    "yMoistureSensitivity.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n        " +
                    "    T.MoistureSensitivityID AS [X_DictionaryMoistureSensitivity.MoistureSensitiv" +
                    "ityID], \r\n            T.StandardMoistureSensitivityName AS [X_DictionaryMoisture" +
                    "Sensitivity.StandardMoistureSensitivityName], \r\n            T.CoalMoistureSensit" +
                    "ivityName AS [X_DictionaryMoistureSensitivity.CoalMoistureSensitivityName], \r\n  " +
                    "          T.GoldMoistureSensitivityName AS [X_DictionaryMoistureSensitivity.Gold" +
                    "MoistureSensitivityName], \r\n            T.CustomMoistureSensitivityName AS [X_Di" +
                    "ctionaryMoistureSensitivity.CustomMoistureSensitivityName], \r\n            T.Desc" +
                    "ription AS [X_DictionaryMoistureSensitivity.Description], \r\n            T.FullDe" +
                    "scription AS [X_DictionaryMoistureSensitivity.FullDescription], \r\n            T." +
                    "Thumbnail AS [X_DictionaryMoistureSensitivity.Thumbnail], \r\n            T.Origin" +
                    "alFileDataID AS [X_DictionaryMoistureSensitivity.OriginalFileDataID], \r\n        " +
                    "    True AS _from0\r\n        FROM XODBC.DictionaryMoistureSensitivities AS T\r\n   " +
                    " ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryPartStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView171()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryPartStatus", @"
    SELECT VALUE -- Constructing X_DictionaryPartStatus
        [XODB.Module.BusinessObjects.Store.X_DictionaryPartStatus](T1.[X_DictionaryPartStatus.PartStatusID], T1.[X_DictionaryPartStatus.StandardPartStatusName], T1.[X_DictionaryPartStatus.CustomPartStatusName], T1.[X_DictionaryPartStatus.Description], T1.[X_DictionaryPartStatus.FullDescription], T1.[X_DictionaryPartStatus.Thumbnail], T1.[X_DictionaryPartStatus.OriginalFileDataID])
    FROM (
        SELECT 
            T.PartStatusID AS [X_DictionaryPartStatus.PartStatusID], 
            T.StandardPartStatusName AS [X_DictionaryPartStatus.StandardPartStatusName], 
            T.CustomPartStatusName AS [X_DictionaryPartStatus.CustomPartStatusName], 
            T.Description AS [X_DictionaryPartStatus.Description], 
            T.FullDescription AS [X_DictionaryPartStatus.FullDescription], 
            T.Thumbnail AS [X_DictionaryPartStatus.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryPartStatus.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryPartStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryPlasticity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView172()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryPlasticity", @"
    SELECT VALUE -- Constructing X_DictionaryPlasticity
        [XODB.Module.BusinessObjects.Store.X_DictionaryPlasticity](T1.[X_DictionaryPlasticity.PlasticityID], T1.[X_DictionaryPlasticity.StandardPlasticityName], T1.[X_DictionaryPlasticity.CoalPlasticityName], T1.[X_DictionaryPlasticity.GoldPlasticityName], T1.[X_DictionaryPlasticity.CustomPlasticityName], T1.[X_DictionaryPlasticity.Description], T1.[X_DictionaryPlasticity.FullDescription], T1.[X_DictionaryPlasticity.Thumbnail], T1.[X_DictionaryPlasticity.OriginalFileDataID])
    FROM (
        SELECT 
            T.PlasticityID AS [X_DictionaryPlasticity.PlasticityID], 
            T.StandardPlasticityName AS [X_DictionaryPlasticity.StandardPlasticityName], 
            T.CoalPlasticityName AS [X_DictionaryPlasticity.CoalPlasticityName], 
            T.GoldPlasticityName AS [X_DictionaryPlasticity.GoldPlasticityName], 
            T.CustomPlasticityName AS [X_DictionaryPlasticity.CustomPlasticityName], 
            T.Description AS [X_DictionaryPlasticity.Description], 
            T.FullDescription AS [X_DictionaryPlasticity.FullDescription], 
            T.Thumbnail AS [X_DictionaryPlasticity.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryPlasticity.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryPlasticities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryPly
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView173()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryPly", @"
    SELECT VALUE -- Constructing X_DictionaryPly
        [XODB.Module.BusinessObjects.Store.X_DictionaryPly](T1.[X_DictionaryPly.PlyID], T1.[X_DictionaryPly.StandardPlyName], T1.[X_DictionaryPly.Description], T1.[X_DictionaryPly.FullDescription], T1.[X_DictionaryPly.Thumbnail], T1.[X_DictionaryPly.OriginalFileDataID])
    FROM (
        SELECT 
            T.PlyID AS [X_DictionaryPly.PlyID], 
            T.StandardPlyName AS [X_DictionaryPly.StandardPlyName], 
            T.Description AS [X_DictionaryPly.Description], 
            T.FullDescription AS [X_DictionaryPly.FullDescription], 
            T.Thumbnail AS [X_DictionaryPly.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryPly.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryPlies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryPlyAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView174()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryPlyAlias", @"
    SELECT VALUE -- Constructing X_DictionaryPlyAlias
        [XODB.Module.BusinessObjects.Store.X_DictionaryPlyAlias](T1.[X_DictionaryPlyAlias.PlyAliasID], T1.[X_DictionaryPlyAlias.PlyID], T1.[X_DictionaryPlyAlias.CustomPlyName], T1.[X_DictionaryPlyAlias.FullDescription], T1.[X_DictionaryPlyAlias.Thumbnail], T1.[X_DictionaryPlyAlias.OriginalFileDataID])
    FROM (
        SELECT 
            T.PlyAliasID AS [X_DictionaryPlyAlias.PlyAliasID], 
            T.PlyID AS [X_DictionaryPlyAlias.PlyID], 
            T.CustomPlyName AS [X_DictionaryPlyAlias.CustomPlyName], 
            T.FullDescription AS [X_DictionaryPlyAlias.FullDescription], 
            T.Thumbnail AS [X_DictionaryPlyAlias.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryPlyAlias.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryPlyAlias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryPointLoadTestType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView175()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryPointLoadTestType", "\r\n    SELECT VALUE -- Constructing X_DictionaryPointLoadTestType\r\n        [XODB.M" +
                    "odule.BusinessObjects.Store.X_DictionaryPointLoadTestType](T1.[X_DictionaryPoint" +
                    "LoadTestType.PointLoadTestTypeID], T1.[X_DictionaryPointLoadTestType.StandardPoi" +
                    "ntLoadTestTypeName], T1.[X_DictionaryPointLoadTestType.CoalPointLoadTestTypeName" +
                    "], T1.[X_DictionaryPointLoadTestType.GoldPointLoadTestTypeName], T1.[X_Dictionar" +
                    "yPointLoadTestType.CustomPointLoadTestTypeName], T1.[X_DictionaryPointLoadTestTy" +
                    "pe.Description], T1.[X_DictionaryPointLoadTestType.FullDescription], T1.[X_Dicti" +
                    "onaryPointLoadTestType.Thumbnail], T1.[X_DictionaryPointLoadTestType.OriginalFil" +
                    "eDataID])\r\n    FROM (\r\n        SELECT \r\n            T.PointLoadTestTypeID AS [X_" +
                    "DictionaryPointLoadTestType.PointLoadTestTypeID], \r\n            T.StandardPointL" +
                    "oadTestTypeName AS [X_DictionaryPointLoadTestType.StandardPointLoadTestTypeName]" +
                    ", \r\n            T.CoalPointLoadTestTypeName AS [X_DictionaryPointLoadTestType.Co" +
                    "alPointLoadTestTypeName], \r\n            T.GoldPointLoadTestTypeName AS [X_Dictio" +
                    "naryPointLoadTestType.GoldPointLoadTestTypeName], \r\n            T.CustomPointLoa" +
                    "dTestTypeName AS [X_DictionaryPointLoadTestType.CustomPointLoadTestTypeName], \r\n" +
                    "            T.Description AS [X_DictionaryPointLoadTestType.Description], \r\n    " +
                    "        T.FullDescription AS [X_DictionaryPointLoadTestType.FullDescription], \r\n" +
                    "            T.Thumbnail AS [X_DictionaryPointLoadTestType.Thumbnail], \r\n        " +
                    "    T.OriginalFileDataID AS [X_DictionaryPointLoadTestType.OriginalFileDataID], " +
                    "\r\n            True AS _from0\r\n        FROM XODBC.DictionaryPointLoadTestTypes AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryPosition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView176()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryPosition", @"
    SELECT VALUE -- Constructing X_DictionaryPosition
        [XODB.Module.BusinessObjects.Store.X_DictionaryPosition](T1.[X_DictionaryPosition.PositionID], T1.[X_DictionaryPosition.StandardPositionName], T1.[X_DictionaryPosition.CoalPositionName], T1.[X_DictionaryPosition.GoldPositionName], T1.[X_DictionaryPosition.CustomPositionName], T1.[X_DictionaryPosition.Description], T1.[X_DictionaryPosition.FullDescription], T1.[X_DictionaryPosition.Thumbnail], T1.[X_DictionaryPosition.OriginalFileDataID])
    FROM (
        SELECT 
            T.PositionID AS [X_DictionaryPosition.PositionID], 
            T.StandardPositionName AS [X_DictionaryPosition.StandardPositionName], 
            T.CoalPositionName AS [X_DictionaryPosition.CoalPositionName], 
            T.GoldPositionName AS [X_DictionaryPosition.GoldPositionName], 
            T.CustomPositionName AS [X_DictionaryPosition.CustomPositionName], 
            T.Description AS [X_DictionaryPosition.Description], 
            T.FullDescription AS [X_DictionaryPosition.FullDescription], 
            T.Thumbnail AS [X_DictionaryPosition.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryPosition.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryPositions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryProfession
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView177()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryProfession", @"
    SELECT VALUE -- Constructing X_DictionaryProfession
        [XODB.Module.BusinessObjects.Store.X_DictionaryProfession](T1.[X_DictionaryProfession.ProfessionID], T1.[X_DictionaryProfession.StandardProfessionName], T1.[X_DictionaryProfession.CoalProfessionName], T1.[X_DictionaryProfession.GoldProfessionName], T1.[X_DictionaryProfession.CustomProfessionName], T1.[X_DictionaryProfession.Description], T1.[X_DictionaryProfession.FullDescription], T1.[X_DictionaryProfession.Thumbnail], T1.[X_DictionaryProfession.OriginalFileDataID])
    FROM (
        SELECT 
            T.ProfessionID AS [X_DictionaryProfession.ProfessionID], 
            T.StandardProfessionName AS [X_DictionaryProfession.StandardProfessionName], 
            T.CoalProfessionName AS [X_DictionaryProfession.CoalProfessionName], 
            T.GoldProfessionName AS [X_DictionaryProfession.GoldProfessionName], 
            T.CustomProfessionName AS [X_DictionaryProfession.CustomProfessionName], 
            T.Description AS [X_DictionaryProfession.Description], 
            T.FullDescription AS [X_DictionaryProfession.FullDescription], 
            T.Thumbnail AS [X_DictionaryProfession.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryProfession.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryProfessions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryProvinceGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView178()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryProvinceGroup", "\r\n    SELECT VALUE -- Constructing X_DictionaryProvinceGroup\r\n        [XODB.Modul" +
                    "e.BusinessObjects.Store.X_DictionaryProvinceGroup](T1.[X_DictionaryProvinceGroup" +
                    ".ProvinceGroupID], T1.[X_DictionaryProvinceGroup.StandardProvinceGroupName], T1." +
                    "[X_DictionaryProvinceGroup.CoalProvinceGroupName], T1.[X_DictionaryProvinceGroup" +
                    ".GoldProvinceGroupName], T1.[X_DictionaryProvinceGroup.CustomProvinceGroupName]," +
                    " T1.[X_DictionaryProvinceGroup.ParentProvinceTypeID], T1.[X_DictionaryProvinceGr" +
                    "oup.Description], T1.[X_DictionaryProvinceGroup.FullDescription], T1.[X_Dictiona" +
                    "ryProvinceGroup.Thumbnail], T1.[X_DictionaryProvinceGroup.OriginalFileDataID])\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.ProvinceGroupID AS [X_DictionaryProvi" +
                    "nceGroup.ProvinceGroupID], \r\n            T.StandardProvinceGroupName AS [X_Dicti" +
                    "onaryProvinceGroup.StandardProvinceGroupName], \r\n            T.CoalProvinceGroup" +
                    "Name AS [X_DictionaryProvinceGroup.CoalProvinceGroupName], \r\n            T.GoldP" +
                    "rovinceGroupName AS [X_DictionaryProvinceGroup.GoldProvinceGroupName], \r\n       " +
                    "     T.CustomProvinceGroupName AS [X_DictionaryProvinceGroup.CustomProvinceGroup" +
                    "Name], \r\n            T.ParentProvinceTypeID AS [X_DictionaryProvinceGroup.Parent" +
                    "ProvinceTypeID], \r\n            T.Description AS [X_DictionaryProvinceGroup.Descr" +
                    "iption], \r\n            T.FullDescription AS [X_DictionaryProvinceGroup.FullDescr" +
                    "iption], \r\n            T.Thumbnail AS [X_DictionaryProvinceGroup.Thumbnail], \r\n " +
                    "           T.OriginalFileDataID AS [X_DictionaryProvinceGroup.OriginalFileDataID" +
                    "], \r\n            True AS _from0\r\n        FROM XODBC.DictionaryProvinceGroups AS " +
                    "T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryProvinceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView179()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryProvinceType", @"
    SELECT VALUE -- Constructing X_DictionaryProvinceType
        [XODB.Module.BusinessObjects.Store.X_DictionaryProvinceType](T1.[X_DictionaryProvinceType.ProvinceTypeID], T1.[X_DictionaryProvinceType.StandardProvinceTypeName], T1.[X_DictionaryProvinceType.CoalProvinceTypeName], T1.[X_DictionaryProvinceType.GoldProvinceTypeName], T1.[X_DictionaryProvinceType.CustomProvinceTypeName], T1.[X_DictionaryProvinceType.Description], T1.[X_DictionaryProvinceType.FullDescription], T1.[X_DictionaryProvinceType.Thumbnail], T1.[X_DictionaryProvinceType.OriginalFileDataID])
    FROM (
        SELECT 
            T.ProvinceTypeID AS [X_DictionaryProvinceType.ProvinceTypeID], 
            T.StandardProvinceTypeName AS [X_DictionaryProvinceType.StandardProvinceTypeName], 
            T.CoalProvinceTypeName AS [X_DictionaryProvinceType.CoalProvinceTypeName], 
            T.GoldProvinceTypeName AS [X_DictionaryProvinceType.GoldProvinceTypeName], 
            T.CustomProvinceTypeName AS [X_DictionaryProvinceType.CustomProvinceTypeName], 
            T.Description AS [X_DictionaryProvinceType.Description], 
            T.FullDescription AS [X_DictionaryProvinceType.FullDescription], 
            T.Thumbnail AS [X_DictionaryProvinceType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryProvinceType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryProvinceTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryRelationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView180()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryRelationType", @"
    SELECT VALUE -- Constructing X_DictionaryRelationType
        [XODB.Module.BusinessObjects.Store.X_DictionaryRelationType](T1.[X_DictionaryRelationType.RelationTypeID], T1.[X_DictionaryRelationType.StandardRelationTypeName], T1.[X_DictionaryRelationType.CoalRelationTypeName], T1.[X_DictionaryRelationType.GoldRelationTypeName], T1.[X_DictionaryRelationType.CustomRelationTypeName], T1.[X_DictionaryRelationType.Description], T1.[X_DictionaryRelationType.FullDescription], T1.[X_DictionaryRelationType.Thumbnail], T1.[X_DictionaryRelationType.OriginalFileDataID])
    FROM (
        SELECT 
            T.RelationTypeID AS [X_DictionaryRelationType.RelationTypeID], 
            T.StandardRelationTypeName AS [X_DictionaryRelationType.StandardRelationTypeName], 
            T.CoalRelationTypeName AS [X_DictionaryRelationType.CoalRelationTypeName], 
            T.GoldRelationTypeName AS [X_DictionaryRelationType.GoldRelationTypeName], 
            T.CustomRelationTypeName AS [X_DictionaryRelationType.CustomRelationTypeName], 
            T.Description AS [X_DictionaryRelationType.Description], 
            T.FullDescription AS [X_DictionaryRelationType.FullDescription], 
            T.Thumbnail AS [X_DictionaryRelationType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryRelationType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryRelationTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryRockMassUnitType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView181()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryRockMassUnitType", "\r\n    SELECT VALUE -- Constructing X_DictionaryRockMassUnitType\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.Store.X_DictionaryRockMassUnitType](T1.[X_DictionaryRockMas" +
                    "sUnitType.RockMassUnitTypeID], T1.[X_DictionaryRockMassUnitType.StandardRockMass" +
                    "UnitTypeName], T1.[X_DictionaryRockMassUnitType.CoalRockMassUnitTypeName], T1.[X" +
                    "_DictionaryRockMassUnitType.GoldRockMassUnitTypeName], T1.[X_DictionaryRockMassU" +
                    "nitType.CustomRockMassUnitTypeName], T1.[X_DictionaryRockMassUnitType.Descriptio" +
                    "n], T1.[X_DictionaryRockMassUnitType.FullDescription], T1.[X_DictionaryRockMassU" +
                    "nitType.Thumbnail], T1.[X_DictionaryRockMassUnitType.OriginalFileDataID])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.RockMassUnitTypeID AS [X_DictionaryRockMas" +
                    "sUnitType.RockMassUnitTypeID], \r\n            T.StandardRockMassUnitTypeName AS [" +
                    "X_DictionaryRockMassUnitType.StandardRockMassUnitTypeName], \r\n            T.Coal" +
                    "RockMassUnitTypeName AS [X_DictionaryRockMassUnitType.CoalRockMassUnitTypeName]," +
                    " \r\n            T.GoldRockMassUnitTypeName AS [X_DictionaryRockMassUnitType.GoldR" +
                    "ockMassUnitTypeName], \r\n            T.CustomRockMassUnitTypeName AS [X_Dictionar" +
                    "yRockMassUnitType.CustomRockMassUnitTypeName], \r\n            T.Description AS [X" +
                    "_DictionaryRockMassUnitType.Description], \r\n            T.FullDescription AS [X_" +
                    "DictionaryRockMassUnitType.FullDescription], \r\n            T.Thumbnail AS [X_Dic" +
                    "tionaryRockMassUnitType.Thumbnail], \r\n            T.OriginalFileDataID AS [X_Dic" +
                    "tionaryRockMassUnitType.OriginalFileDataID], \r\n            True AS _from0\r\n     " +
                    "   FROM XODBC.DictionaryRockMassUnitTypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView182()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleCategory", "\r\n    SELECT VALUE -- Constructing X_DictionarySampleCategory\r\n        [XODB.Modu" +
                    "le.BusinessObjects.Store.X_DictionarySampleCategory](T1.[X_DictionarySampleCateg" +
                    "ory.SampleCategoryID], T1.[X_DictionarySampleCategory.StandardSampleCategoryName" +
                    "], T1.[X_DictionarySampleCategory.CoalSampleCategoryName], T1.[X_DictionarySampl" +
                    "eCategory.GoldSampleCategoryName], T1.[X_DictionarySampleCategory.CustomSampleCa" +
                    "tegoryName], T1.[X_DictionarySampleCategory.Description], T1.[X_DictionarySample" +
                    "Category.FullDescription], T1.[X_DictionarySampleCategory.Thumbnail], T1.[X_Dict" +
                    "ionarySampleCategory.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n        " +
                    "    T.SampleCategoryID AS [X_DictionarySampleCategory.SampleCategoryID], \r\n     " +
                    "       T.StandardSampleCategoryName AS [X_DictionarySampleCategory.StandardSampl" +
                    "eCategoryName], \r\n            T.CoalSampleCategoryName AS [X_DictionarySampleCat" +
                    "egory.CoalSampleCategoryName], \r\n            T.GoldSampleCategoryName AS [X_Dict" +
                    "ionarySampleCategory.GoldSampleCategoryName], \r\n            T.CustomSampleCatego" +
                    "ryName AS [X_DictionarySampleCategory.CustomSampleCategoryName], \r\n            T" +
                    ".Description AS [X_DictionarySampleCategory.Description], \r\n            T.FullDe" +
                    "scription AS [X_DictionarySampleCategory.FullDescription], \r\n            T.Thumb" +
                    "nail AS [X_DictionarySampleCategory.Thumbnail], \r\n            T.OriginalFileData" +
                    "ID AS [X_DictionarySampleCategory.OriginalFileDataID], \r\n            True AS _fr" +
                    "om0\r\n        FROM XODBC.DictionarySampleCategories AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView183()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleState", @"
    SELECT VALUE -- Constructing X_DictionarySampleState
        [XODB.Module.BusinessObjects.Store.X_DictionarySampleState](T1.[X_DictionarySampleState.SampleStateID], T1.[X_DictionarySampleState.StandardSampleStateName], T1.[X_DictionarySampleState.CoalSampleStateName], T1.[X_DictionarySampleState.GoldSampleStateName], T1.[X_DictionarySampleState.CustomSampleStateName], T1.[X_DictionarySampleState.Description], T1.[X_DictionarySampleState.FullDescription], T1.[X_DictionarySampleState.Thumbnail], T1.[X_DictionarySampleState.OriginalFileDataID])
    FROM (
        SELECT 
            T.SampleStateID AS [X_DictionarySampleState.SampleStateID], 
            T.StandardSampleStateName AS [X_DictionarySampleState.StandardSampleStateName], 
            T.CoalSampleStateName AS [X_DictionarySampleState.CoalSampleStateName], 
            T.GoldSampleStateName AS [X_DictionarySampleState.GoldSampleStateName], 
            T.CustomSampleStateName AS [X_DictionarySampleState.CustomSampleStateName], 
            T.Description AS [X_DictionarySampleState.Description], 
            T.FullDescription AS [X_DictionarySampleState.FullDescription], 
            T.Thumbnail AS [X_DictionarySampleState.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionarySampleState.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionarySampleStates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView184()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleType", @"
    SELECT VALUE -- Constructing X_DictionarySampleType
        [XODB.Module.BusinessObjects.Store.X_DictionarySampleType](T1.[X_DictionarySampleType.SampleTypeID], T1.[X_DictionarySampleType.StandardSampleTypeName], T1.[X_DictionarySampleType.CoalSampleTypeName], T1.[X_DictionarySampleType.GoldSampleTypeName], T1.[X_DictionarySampleType.CustomSampleTypeName], T1.[X_DictionarySampleType.Description], T1.[X_DictionarySampleType.FullDescription], T1.[X_DictionarySampleType.Thumbnail], T1.[X_DictionarySampleType.OriginalFileDataID])
    FROM (
        SELECT 
            T.SampleTypeID AS [X_DictionarySampleType.SampleTypeID], 
            T.StandardSampleTypeName AS [X_DictionarySampleType.StandardSampleTypeName], 
            T.CoalSampleTypeName AS [X_DictionarySampleType.CoalSampleTypeName], 
            T.GoldSampleTypeName AS [X_DictionarySampleType.GoldSampleTypeName], 
            T.CustomSampleTypeName AS [X_DictionarySampleType.CustomSampleTypeName], 
            T.Description AS [X_DictionarySampleType.Description], 
            T.FullDescription AS [X_DictionarySampleType.FullDescription], 
            T.Thumbnail AS [X_DictionarySampleType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionarySampleType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionarySampleTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySeam
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView185()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySeam", @"
    SELECT VALUE -- Constructing X_DictionarySeam
        [XODB.Module.BusinessObjects.Store.X_DictionarySeam](T1.[X_DictionarySeam.SeamID], T1.[X_DictionarySeam.StandardSeamName], T1.[X_DictionarySeam.Description], T1.[X_DictionarySeam.FullDescription], T1.[X_DictionarySeam.Thumbnail], T1.[X_DictionarySeam.OriginalFileDataID])
    FROM (
        SELECT 
            T.SeamID AS [X_DictionarySeam.SeamID], 
            T.StandardSeamName AS [X_DictionarySeam.StandardSeamName], 
            T.Description AS [X_DictionarySeam.Description], 
            T.FullDescription AS [X_DictionarySeam.FullDescription], 
            T.Thumbnail AS [X_DictionarySeam.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionarySeam.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionarySeams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySeamAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView186()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySeamAlias", @"
    SELECT VALUE -- Constructing X_DictionarySeamAlias
        [XODB.Module.BusinessObjects.Store.X_DictionarySeamAlias](T1.[X_DictionarySeamAlias.SeamAliasID], T1.[X_DictionarySeamAlias.SeamID], T1.[X_DictionarySeamAlias.CustomSeamName], T1.[X_DictionarySeamAlias.FullDescription], T1.[X_DictionarySeamAlias.Thumbnail], T1.[X_DictionarySeamAlias.OriginalFileDataID])
    FROM (
        SELECT 
            T.SeamAliasID AS [X_DictionarySeamAlias.SeamAliasID], 
            T.SeamID AS [X_DictionarySeamAlias.SeamID], 
            T.CustomSeamName AS [X_DictionarySeamAlias.CustomSeamName], 
            T.FullDescription AS [X_DictionarySeamAlias.FullDescription], 
            T.Thumbnail AS [X_DictionarySeamAlias.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionarySeamAlias.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionarySeamAlias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySedimentaryFeature
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView187()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySedimentaryFeature", "\r\n    SELECT VALUE -- Constructing X_DictionarySedimentaryFeature\r\n        [XODB." +
                    "Module.BusinessObjects.Store.X_DictionarySedimentaryFeature](T1.[X_DictionarySed" +
                    "imentaryFeature.SedimentaryFeatureID], T1.[X_DictionarySedimentaryFeature.Standa" +
                    "rdSedimentaryFeatureName], T1.[X_DictionarySedimentaryFeature.CoalSedimentaryFea" +
                    "tureName], T1.[X_DictionarySedimentaryFeature.GoldSedimentaryFeatureName], T1.[X" +
                    "_DictionarySedimentaryFeature.CustomSedimentaryFeatureName], T1.[X_DictionarySed" +
                    "imentaryFeature.Description], T1.[X_DictionarySedimentaryFeature.FullDescription" +
                    "], T1.[X_DictionarySedimentaryFeature.Thumbnail], T1.[X_DictionarySedimentaryFea" +
                    "ture.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n            T.Sedimentar" +
                    "yFeatureID AS [X_DictionarySedimentaryFeature.SedimentaryFeatureID], \r\n         " +
                    "   T.StandardSedimentaryFeatureName AS [X_DictionarySedimentaryFeature.StandardS" +
                    "edimentaryFeatureName], \r\n            T.CoalSedimentaryFeatureName AS [X_Diction" +
                    "arySedimentaryFeature.CoalSedimentaryFeatureName], \r\n            T.GoldSedimenta" +
                    "ryFeatureName AS [X_DictionarySedimentaryFeature.GoldSedimentaryFeatureName], \r\n" +
                    "            T.CustomSedimentaryFeatureName AS [X_DictionarySedimentaryFeature.Cu" +
                    "stomSedimentaryFeatureName], \r\n            T.Description AS [X_DictionarySedimen" +
                    "taryFeature.Description], \r\n            T.FullDescription AS [X_DictionarySedime" +
                    "ntaryFeature.FullDescription], \r\n            T.Thumbnail AS [X_DictionarySedimen" +
                    "taryFeature.Thumbnail], \r\n            T.OriginalFileDataID AS [X_DictionarySedim" +
                    "entaryFeature.OriginalFileDataID], \r\n            True AS _from0\r\n        FROM XO" +
                    "DBC.DictionarySedimentaryFeatures AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryShade
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView188()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryShade", @"
    SELECT VALUE -- Constructing X_DictionaryShade
        [XODB.Module.BusinessObjects.Store.X_DictionaryShade](T1.[X_DictionaryShade.ShadeID], T1.[X_DictionaryShade.StandardShadeName], T1.[X_DictionaryShade.CoalShadeName], T1.[X_DictionaryShade.GoldShadeName], T1.[X_DictionaryShade.CustomShadeName], T1.[X_DictionaryShade.Description], T1.[X_DictionaryShade.FullDescription], T1.[X_DictionaryShade.Thumbnail], T1.[X_DictionaryShade.OriginalFileDataID])
    FROM (
        SELECT 
            T.ShadeID AS [X_DictionaryShade.ShadeID], 
            T.StandardShadeName AS [X_DictionaryShade.StandardShadeName], 
            T.CoalShadeName AS [X_DictionaryShade.CoalShadeName], 
            T.GoldShadeName AS [X_DictionaryShade.GoldShadeName], 
            T.CustomShadeName AS [X_DictionaryShade.CustomShadeName], 
            T.Description AS [X_DictionaryShade.Description], 
            T.FullDescription AS [X_DictionaryShade.FullDescription], 
            T.Thumbnail AS [X_DictionaryShade.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryShade.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryShades AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryShape
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView189()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryShape", @"
    SELECT VALUE -- Constructing X_DictionaryShape
        [XODB.Module.BusinessObjects.Store.X_DictionaryShape](T1.[X_DictionaryShape.ShapeID], T1.[X_DictionaryShape.StandardShapeName], T1.[X_DictionaryShape.CoalShapeName], T1.[X_DictionaryShape.GoldShapeName], T1.[X_DictionaryShape.CustomShapeName], T1.[X_DictionaryShape.Description], T1.[X_DictionaryShape.FullDescription], T1.[X_DictionaryShape.Thumbnail], T1.[X_DictionaryShape.OriginalFileDataID])
    FROM (
        SELECT 
            T.ShapeID AS [X_DictionaryShape.ShapeID], 
            T.StandardShapeName AS [X_DictionaryShape.StandardShapeName], 
            T.CoalShapeName AS [X_DictionaryShape.CoalShapeName], 
            T.GoldShapeName AS [X_DictionaryShape.GoldShapeName], 
            T.CustomShapeName AS [X_DictionaryShape.CustomShapeName], 
            T.Description AS [X_DictionaryShape.Description], 
            T.FullDescription AS [X_DictionaryShape.FullDescription], 
            T.Thumbnail AS [X_DictionaryShape.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryShape.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryShapes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryStratigraphy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView190()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryStratigraphy", @"
    SELECT VALUE -- Constructing X_DictionaryStratigraphy
        [XODB.Module.BusinessObjects.Store.X_DictionaryStratigraphy](T1.[X_DictionaryStratigraphy.StratigraphyID], T1.[X_DictionaryStratigraphy.StandardStratigraphyName], T1.[X_DictionaryStratigraphy.CoalStratigraphyName], T1.[X_DictionaryStratigraphy.GoldStratigraphyName], T1.[X_DictionaryStratigraphy.CustomStratigraphyName], T1.[X_DictionaryStratigraphy.Description], T1.[X_DictionaryStratigraphy.FullDescription], T1.[X_DictionaryStratigraphy.Thumbnail], T1.[X_DictionaryStratigraphy.OriginalFileDataID])
    FROM (
        SELECT 
            T.StratigraphyID AS [X_DictionaryStratigraphy.StratigraphyID], 
            T.StandardStratigraphyName AS [X_DictionaryStratigraphy.StandardStratigraphyName], 
            T.CoalStratigraphyName AS [X_DictionaryStratigraphy.CoalStratigraphyName], 
            T.GoldStratigraphyName AS [X_DictionaryStratigraphy.GoldStratigraphyName], 
            T.CustomStratigraphyName AS [X_DictionaryStratigraphy.CustomStratigraphyName], 
            T.Description AS [X_DictionaryStratigraphy.Description], 
            T.FullDescription AS [X_DictionaryStratigraphy.FullDescription], 
            T.Thumbnail AS [X_DictionaryStratigraphy.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryStratigraphy.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryStratigraphies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySurfaceRoughness
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView191()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySurfaceRoughness", "\r\n    SELECT VALUE -- Constructing X_DictionarySurfaceRoughness\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.Store.X_DictionarySurfaceRoughness](T1.[X_DictionarySurface" +
                    "Roughness.SurfaceRoughnessID], T1.[X_DictionarySurfaceRoughness.StandardSurfaceR" +
                    "oughnessName], T1.[X_DictionarySurfaceRoughness.CoalSurfaceRoughnessName], T1.[X" +
                    "_DictionarySurfaceRoughness.GoldSurfaceRoughnessName], T1.[X_DictionarySurfaceRo" +
                    "ughness.CustomSurfaceRoughnessName], T1.[X_DictionarySurfaceRoughness.Descriptio" +
                    "n], T1.[X_DictionarySurfaceRoughness.FullDescription], T1.[X_DictionarySurfaceRo" +
                    "ughness.Thumbnail], T1.[X_DictionarySurfaceRoughness.OriginalFileDataID])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.SurfaceRoughnessID AS [X_DictionarySurface" +
                    "Roughness.SurfaceRoughnessID], \r\n            T.StandardSurfaceRoughnessName AS [" +
                    "X_DictionarySurfaceRoughness.StandardSurfaceRoughnessName], \r\n            T.Coal" +
                    "SurfaceRoughnessName AS [X_DictionarySurfaceRoughness.CoalSurfaceRoughnessName]," +
                    " \r\n            T.GoldSurfaceRoughnessName AS [X_DictionarySurfaceRoughness.GoldS" +
                    "urfaceRoughnessName], \r\n            T.CustomSurfaceRoughnessName AS [X_Dictionar" +
                    "ySurfaceRoughness.CustomSurfaceRoughnessName], \r\n            T.Description AS [X" +
                    "_DictionarySurfaceRoughness.Description], \r\n            T.FullDescription AS [X_" +
                    "DictionarySurfaceRoughness.FullDescription], \r\n            T.Thumbnail AS [X_Dic" +
                    "tionarySurfaceRoughness.Thumbnail], \r\n            T.OriginalFileDataID AS [X_Dic" +
                    "tionarySurfaceRoughness.OriginalFileDataID], \r\n            True AS _from0\r\n     " +
                    "   FROM XODBC.DictionarySurfaceRoughnesses AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionarySurveyAccuracy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView192()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionarySurveyAccuracy", "\r\n    SELECT VALUE -- Constructing X_DictionarySurveyAccuracy\r\n        [XODB.Modu" +
                    "le.BusinessObjects.Store.X_DictionarySurveyAccuracy](T1.[X_DictionarySurveyAccur" +
                    "acy.SurveyAccuracyID], T1.[X_DictionarySurveyAccuracy.StandardSurveyAccuracyName" +
                    "], T1.[X_DictionarySurveyAccuracy.CoalSurveyAccuracyName], T1.[X_DictionarySurve" +
                    "yAccuracy.GoldSurveyAccuracyName], T1.[X_DictionarySurveyAccuracy.CustomSurveyAc" +
                    "curacyName], T1.[X_DictionarySurveyAccuracy.Description], T1.[X_DictionarySurvey" +
                    "Accuracy.FullDescription], T1.[X_DictionarySurveyAccuracy.Thumbnail], T1.[X_Dict" +
                    "ionarySurveyAccuracy.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n        " +
                    "    T.SurveyAccuracyID AS [X_DictionarySurveyAccuracy.SurveyAccuracyID], \r\n     " +
                    "       T.StandardSurveyAccuracyName AS [X_DictionarySurveyAccuracy.StandardSurve" +
                    "yAccuracyName], \r\n            T.CoalSurveyAccuracyName AS [X_DictionarySurveyAcc" +
                    "uracy.CoalSurveyAccuracyName], \r\n            T.GoldSurveyAccuracyName AS [X_Dict" +
                    "ionarySurveyAccuracy.GoldSurveyAccuracyName], \r\n            T.CustomSurveyAccura" +
                    "cyName AS [X_DictionarySurveyAccuracy.CustomSurveyAccuracyName], \r\n            T" +
                    ".Description AS [X_DictionarySurveyAccuracy.Description], \r\n            T.FullDe" +
                    "scription AS [X_DictionarySurveyAccuracy.FullDescription], \r\n            T.Thumb" +
                    "nail AS [X_DictionarySurveyAccuracy.Thumbnail], \r\n            T.OriginalFileData" +
                    "ID AS [X_DictionarySurveyAccuracy.OriginalFileDataID], \r\n            True AS _fr" +
                    "om0\r\n        FROM XODBC.DictionarySurveyAccuracies AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryTexture
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView193()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryTexture", @"
    SELECT VALUE -- Constructing X_DictionaryTexture
        [XODB.Module.BusinessObjects.Store.X_DictionaryTexture](T1.[X_DictionaryTexture.TextureID], T1.[X_DictionaryTexture.StandardTextureName], T1.[X_DictionaryTexture.CoalTextureName], T1.[X_DictionaryTexture.GoldTextureName], T1.[X_DictionaryTexture.CustomTextureName], T1.[X_DictionaryTexture.Description], T1.[X_DictionaryTexture.FullDescription], T1.[X_DictionaryTexture.Thumbnail], T1.[X_DictionaryTexture.OriginalFileDataID])
    FROM (
        SELECT 
            T.TextureID AS [X_DictionaryTexture.TextureID], 
            T.StandardTextureName AS [X_DictionaryTexture.StandardTextureName], 
            T.CoalTextureName AS [X_DictionaryTexture.CoalTextureName], 
            T.GoldTextureName AS [X_DictionaryTexture.GoldTextureName], 
            T.CustomTextureName AS [X_DictionaryTexture.CustomTextureName], 
            T.Description AS [X_DictionaryTexture.Description], 
            T.FullDescription AS [X_DictionaryTexture.FullDescription], 
            T.Thumbnail AS [X_DictionaryTexture.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryTexture.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryTextures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryUnit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView194()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryUnit", "\r\n    SELECT VALUE -- Constructing X_DictionaryUnit\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_DictionaryUnit](T1.[X_DictionaryUnit.UnitID], T1.[X_DictionaryU" +
                    "nit.UnitTypeID], T1.[X_DictionaryUnit.StrictlySI], T1.[X_DictionaryUnit.Equivale" +
                    "ntUnit], T1.[X_DictionaryUnit.EquivalentMultiplier], T1.[X_DictionaryUnit.Standa" +
                    "rdUnitName], T1.[X_DictionaryUnit.CoalUnitName], T1.[X_DictionaryUnit.GoldUnitNa" +
                    "me], T1.[X_DictionaryUnit.CustomUnitName], T1.[X_DictionaryUnit.Description], T1" +
                    ".[X_DictionaryUnit.FullDescription], T1.[X_DictionaryUnit.Thumbnail], T1.[X_Dict" +
                    "ionaryUnit.OriginalFileDataID])\r\n    FROM (\r\n        SELECT \r\n            T.Unit" +
                    "ID AS [X_DictionaryUnit.UnitID], \r\n            T.UnitTypeID AS [X_DictionaryUnit" +
                    ".UnitTypeID], \r\n            T.StrictlySI AS [X_DictionaryUnit.StrictlySI], \r\n   " +
                    "         T.EquivalentUnit AS [X_DictionaryUnit.EquivalentUnit], \r\n            T." +
                    "EquivalentMultiplier AS [X_DictionaryUnit.EquivalentMultiplier], \r\n            T" +
                    ".StandardUnitName AS [X_DictionaryUnit.StandardUnitName], \r\n            T.CoalUn" +
                    "itName AS [X_DictionaryUnit.CoalUnitName], \r\n            T.GoldUnitName AS [X_Di" +
                    "ctionaryUnit.GoldUnitName], \r\n            T.CustomUnitName AS [X_DictionaryUnit." +
                    "CustomUnitName], \r\n            T.Description AS [X_DictionaryUnit.Description], " +
                    "\r\n            T.FullDescription AS [X_DictionaryUnit.FullDescription], \r\n       " +
                    "     T.Thumbnail AS [X_DictionaryUnit.Thumbnail], \r\n            T.OriginalFileDa" +
                    "taID AS [X_DictionaryUnit.OriginalFileDataID], \r\n            True AS _from0\r\n   " +
                    "     FROM XODBC.DictionaryUnits AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryUnitType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView195()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryUnitType", @"
    SELECT VALUE -- Constructing X_DictionaryUnitType
        [XODB.Module.BusinessObjects.Store.X_DictionaryUnitType](T1.[X_DictionaryUnitType.UnitTypeID], T1.[X_DictionaryUnitType.StandardUnitTypeName], T1.[X_DictionaryUnitType.CustomUnitTypeName], T1.[X_DictionaryUnitType.Description], T1.[X_DictionaryUnitType.FullDescription], T1.[X_DictionaryUnitType.Thumbnail], T1.[X_DictionaryUnitType.OriginalFileDataID])
    FROM (
        SELECT 
            T.UnitTypeID AS [X_DictionaryUnitType.UnitTypeID], 
            T.StandardUnitTypeName AS [X_DictionaryUnitType.StandardUnitTypeName], 
            T.CustomUnitTypeName AS [X_DictionaryUnitType.CustomUnitTypeName], 
            T.Description AS [X_DictionaryUnitType.Description], 
            T.FullDescription AS [X_DictionaryUnitType.FullDescription], 
            T.Thumbnail AS [X_DictionaryUnitType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryUnitType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryUnitTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryUsageAuditType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView196()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryUsageAuditType", @"
    SELECT VALUE -- Constructing X_DictionaryUsageAuditType
        [XODB.Module.BusinessObjects.Store.X_DictionaryUsageAuditType](T1.[X_DictionaryUsageAuditType.UsageAuditTypeID], T1.[X_DictionaryUsageAuditType.UsageAuditTypeName], T1.[X_DictionaryUsageAuditType.Description], T1.[X_DictionaryUsageAuditType.FullDescription], T1.[X_DictionaryUsageAuditType.Thumbnail], T1.[X_DictionaryUsageAuditType.OriginalFileDataID])
    FROM (
        SELECT 
            T.UsageAuditTypeID AS [X_DictionaryUsageAuditType.UsageAuditTypeID], 
            T.UsageAuditTypeName AS [X_DictionaryUsageAuditType.UsageAuditTypeName], 
            T.Description AS [X_DictionaryUsageAuditType.Description], 
            T.FullDescription AS [X_DictionaryUsageAuditType.FullDescription], 
            T.Thumbnail AS [X_DictionaryUsageAuditType.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryUsageAuditType.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryUsageAuditTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryWeathering
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView197()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryWeathering", @"
    SELECT VALUE -- Constructing X_DictionaryWeathering
        [XODB.Module.BusinessObjects.Store.X_DictionaryWeathering](T1.[X_DictionaryWeathering.WeatheringID], T1.[X_DictionaryWeathering.StandardWeatheringName], T1.[X_DictionaryWeathering.CoalWeatheringName], T1.[X_DictionaryWeathering.GoldWeatheringName], T1.[X_DictionaryWeathering.CustomWeatheringName], T1.[X_DictionaryWeathering.Description], T1.[X_DictionaryWeathering.FullDescription], T1.[X_DictionaryWeathering.Thumbnail], T1.[X_DictionaryWeathering.OriginalFileDataID])
    FROM (
        SELECT 
            T.WeatheringID AS [X_DictionaryWeathering.WeatheringID], 
            T.StandardWeatheringName AS [X_DictionaryWeathering.StandardWeatheringName], 
            T.CoalWeatheringName AS [X_DictionaryWeathering.CoalWeatheringName], 
            T.GoldWeatheringName AS [X_DictionaryWeathering.GoldWeatheringName], 
            T.CustomWeatheringName AS [X_DictionaryWeathering.CustomWeatheringName], 
            T.Description AS [X_DictionaryWeathering.Description], 
            T.FullDescription AS [X_DictionaryWeathering.FullDescription], 
            T.Thumbnail AS [X_DictionaryWeathering.Thumbnail], 
            T.OriginalFileDataID AS [X_DictionaryWeathering.OriginalFileDataID], 
            True AS _from0
        FROM XODBC.DictionaryWeatherings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView198()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2272);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_DictionaryWorkType\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.X_DictionaryWorkType](T1.[X_DictionaryWorkType.WorkTypeID], ");
            viewString.Append("T1.[X_DictionaryWorkType.ProfessionID], T1.[X_DictionaryWorkType.WorkTypeClassID");
            viewString.Append("], T1.[X_DictionaryWorkType.WorkTypeName], T1.[X_DictionaryWorkType.WorkTypeDesc");
            viewString.Append("ription], T1.[X_DictionaryWorkType.FullDescription], T1.[X_DictionaryWorkType.Th");
            viewString.Append("umbnail], T1.[X_DictionaryWorkType.OriginalFileDataID], T1.[X_DictionaryWorkType");
            viewString.Append(".Version], T1.[X_DictionaryWorkType.VersionAntecedentID], T1.[X_DictionaryWorkTy");
            viewString.Append("pe.VersionCertainty], T1.[X_DictionaryWorkType.VersionWorkflowInstanceID], T1.[X");
            viewString.Append("_DictionaryWorkType.VersionUpdatedBy], T1.[X_DictionaryWorkType.VersionDeletedBy");
            viewString.Append("], T1.[X_DictionaryWorkType.VersionOwnerContactID], T1.[X_DictionaryWorkType.Ver");
            viewString.Append("sionOwnerCompanyID], T1.[X_DictionaryWorkType.VersionUpdated])\r\n    FROM (\r\n    ");
            viewString.Append("    SELECT \r\n            T.WorkTypeID AS [X_DictionaryWorkType.WorkTypeID], \r\n  ");
            viewString.Append("          T.ProfessionID AS [X_DictionaryWorkType.ProfessionID], \r\n            T");
            viewString.Append(".WorkTypeClassID AS [X_DictionaryWorkType.WorkTypeClassID], \r\n            T.Work");
            viewString.Append("TypeName AS [X_DictionaryWorkType.WorkTypeName], \r\n            T.WorkTypeDescrip");
            viewString.Append("tion AS [X_DictionaryWorkType.WorkTypeDescription], \r\n            T.FullDescript");
            viewString.Append("ion AS [X_DictionaryWorkType.FullDescription], \r\n            T.Thumbnail AS [X_D");
            viewString.Append("ictionaryWorkType.Thumbnail], \r\n            T.OriginalFileDataID AS [X_Dictionar");
            viewString.Append("yWorkType.OriginalFileDataID], \r\n            T.Version AS [X_DictionaryWorkType.");
            viewString.Append("Version], \r\n            T.VersionAntecedentID AS [X_DictionaryWorkType.VersionAn");
            viewString.Append("tecedentID], \r\n            T.VersionCertainty AS [X_DictionaryWorkType.VersionCe");
            viewString.Append("rtainty], \r\n            T.VersionWorkflowInstanceID AS [X_DictionaryWorkType.Ver");
            viewString.Append("sionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_DictionaryWorkTy");
            viewString.Append("pe.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_DictionaryWorkType.");
            viewString.Append("VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_DictionaryWorkTyp");
            viewString.Append("e.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Dictionary");
            viewString.Append("WorkType.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Dictionary");
            viewString.Append("WorkType.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Dicti");
            viewString.Append("onaryWorkTypes AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkType", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkTypeClass
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView199()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2685);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_DictionaryWorkTypeClass\r\n        [XODB.Modu");
            viewString.Append("le.BusinessObjects.Store.X_DictionaryWorkTypeClass](T1.[X_DictionaryWorkTypeClas");
            viewString.Append("s.WorkTypeClassID], T1.[X_DictionaryWorkTypeClass.StandardWorkTypeClassName], T1");
            viewString.Append(".[X_DictionaryWorkTypeClass.CoalWorkTypeClassName], T1.[X_DictionaryWorkTypeClas");
            viewString.Append("s.GoldWorkTypeClassName], T1.[X_DictionaryWorkTypeClass.CustomWorkTypeClassName]");
            viewString.Append(", T1.[X_DictionaryWorkTypeClass.Description], T1.[X_DictionaryWorkTypeClass.Full");
            viewString.Append("Description], T1.[X_DictionaryWorkTypeClass.Thumbnail], T1.[X_DictionaryWorkType");
            viewString.Append("Class.OriginalFileDataID], T1.[X_DictionaryWorkTypeClass.Version], T1.[X_Diction");
            viewString.Append("aryWorkTypeClass.VersionAntecedentID], T1.[X_DictionaryWorkTypeClass.VersionCert");
            viewString.Append("ainty], T1.[X_DictionaryWorkTypeClass.VersionWorkflowInstanceID], T1.[X_Dictiona");
            viewString.Append("ryWorkTypeClass.VersionUpdatedBy], T1.[X_DictionaryWorkTypeClass.VersionDeletedB");
            viewString.Append("y], T1.[X_DictionaryWorkTypeClass.VersionOwnerContactID], T1.[X_DictionaryWorkTy");
            viewString.Append("peClass.VersionOwnerCompanyID], T1.[X_DictionaryWorkTypeClass.VersionUpdated])\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.WorkTypeClassID AS [X_DictionaryWorkT");
            viewString.Append("ypeClass.WorkTypeClassID], \r\n            T.StandardWorkTypeClassName AS [X_Dicti");
            viewString.Append("onaryWorkTypeClass.StandardWorkTypeClassName], \r\n            T.CoalWorkTypeClass");
            viewString.Append("Name AS [X_DictionaryWorkTypeClass.CoalWorkTypeClassName], \r\n            T.GoldW");
            viewString.Append("orkTypeClassName AS [X_DictionaryWorkTypeClass.GoldWorkTypeClassName], \r\n       ");
            viewString.Append("     T.CustomWorkTypeClassName AS [X_DictionaryWorkTypeClass.CustomWorkTypeClass");
            viewString.Append("Name], \r\n            T.Description AS [X_DictionaryWorkTypeClass.Description], \r");
            viewString.Append("\n            T.FullDescription AS [X_DictionaryWorkTypeClass.FullDescription], \r");
            viewString.Append("\n            T.Thumbnail AS [X_DictionaryWorkTypeClass.Thumbnail], \r\n           ");
            viewString.Append(" T.OriginalFileDataID AS [X_DictionaryWorkTypeClass.OriginalFileDataID], \r\n     ");
            viewString.Append("       T.Version AS [X_DictionaryWorkTypeClass.Version], \r\n            T.Version");
            viewString.Append("AntecedentID AS [X_DictionaryWorkTypeClass.VersionAntecedentID], \r\n            T");
            viewString.Append(".VersionCertainty AS [X_DictionaryWorkTypeClass.VersionCertainty], \r\n           ");
            viewString.Append(" T.VersionWorkflowInstanceID AS [X_DictionaryWorkTypeClass.VersionWorkflowInstan");
            viewString.Append("ceID], \r\n            T.VersionUpdatedBy AS [X_DictionaryWorkTypeClass.VersionUpd");
            viewString.Append("atedBy], \r\n            T.VersionDeletedBy AS [X_DictionaryWorkTypeClass.VersionD");
            viewString.Append("eletedBy], \r\n            T.VersionOwnerContactID AS [X_DictionaryWorkTypeClass.V");
            viewString.Append("ersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_DictionaryWor");
            viewString.Append("kTypeClass.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Dictiona");
            viewString.Append("ryWorkTypeClass.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODB");
            viewString.Append("C.DictionaryWorkTypeClasses AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkTypeClass", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkTypeRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView200()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkTypeRelation", "\r\n    SELECT VALUE -- Constructing X_DictionaryWorkTypeRelation\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.Store.X_DictionaryWorkTypeRelation](T1.[X_DictionaryWorkTyp" +
                    "eRelation.WorkTypeRelationID], T1.[X_DictionaryWorkTypeRelation.WorkTypeID], T1." +
                    "[X_DictionaryWorkTypeRelation.ParentWorkTypeID], T1.[X_DictionaryWorkTypeRelatio" +
                    "n.Version], T1.[X_DictionaryWorkTypeRelation.VersionAntecedentID], T1.[X_Diction" +
                    "aryWorkTypeRelation.VersionCertainty], T1.[X_DictionaryWorkTypeRelation.VersionW" +
                    "orkflowInstanceID], T1.[X_DictionaryWorkTypeRelation.VersionUpdatedBy], T1.[X_Di" +
                    "ctionaryWorkTypeRelation.VersionDeletedBy], T1.[X_DictionaryWorkTypeRelation.Ver" +
                    "sionOwnerContactID], T1.[X_DictionaryWorkTypeRelation.VersionOwnerCompanyID], T1" +
                    ".[X_DictionaryWorkTypeRelation.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n  " +
                    "          T.WorkTypeRelationID AS [X_DictionaryWorkTypeRelation.WorkTypeRelation" +
                    "ID], \r\n            T.WorkTypeID AS [X_DictionaryWorkTypeRelation.WorkTypeID], \r\n" +
                    "            T.ParentWorkTypeID AS [X_DictionaryWorkTypeRelation.ParentWorkTypeID" +
                    "], \r\n            T.Version AS [X_DictionaryWorkTypeRelation.Version], \r\n        " +
                    "    T.VersionAntecedentID AS [X_DictionaryWorkTypeRelation.VersionAntecedentID]," +
                    " \r\n            T.VersionCertainty AS [X_DictionaryWorkTypeRelation.VersionCertai" +
                    "nty], \r\n            T.VersionWorkflowInstanceID AS [X_DictionaryWorkTypeRelation" +
                    ".VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_DictionaryWo" +
                    "rkTypeRelation.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Diction" +
                    "aryWorkTypeRelation.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS " +
                    "[X_DictionaryWorkTypeRelation.VersionOwnerContactID], \r\n            T.VersionOwn" +
                    "erCompanyID AS [X_DictionaryWorkTypeRelation.VersionOwnerCompanyID], \r\n         " +
                    "   T.VersionUpdated AS [X_DictionaryWorkTypeRelation.VersionUpdated], \r\n        " +
                    "    True AS _from0\r\n        FROM XODBC.DictionaryWorkTypeRelations AS T\r\n    ) A" +
                    "S T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Drilling
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView201()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2681);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Drilling\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.Store.X_Drilling](T1.[X_Drilling.DrillingID], T1.[X_Drilling.HeaderID], T1.[");
            viewString.Append("X_Drilling.FromDepth], T1.[X_Drilling.ToDepth], T1.[X_Drilling.RunNumber], T1.[X");
            viewString.Append("_Drilling.RecoveredThickness], T1.[X_Drilling.DrillingDate], T1.[X_Drilling.Dril");
            viewString.Append("lingCompanyID], T1.[X_Drilling.DrillRigNumber], T1.[X_Drilling.DrillRigTypeID], ");
            viewString.Append("T1.[X_Drilling.DrillerID], T1.[X_Drilling.DrillBitTypeID], T1.[X_Drilling.DrillF");
            viewString.Append("luidID], T1.[X_Drilling.DrillSizeID], T1.[X_Drilling.CoreSize], T1.[X_Drilling.H");
            viewString.Append("oleSize], T1.[X_Drilling.Reamed], T1.[X_Drilling.Comment], T1.[X_Drilling.Versio");
            viewString.Append("n], T1.[X_Drilling.VersionAntecedentID], T1.[X_Drilling.VersionCertainty], T1.[X");
            viewString.Append("_Drilling.VersionWorkflowInstanceID], T1.[X_Drilling.VersionUpdatedBy], T1.[X_Dr");
            viewString.Append("illing.VersionDeletedBy], T1.[X_Drilling.VersionOwnerContactID], T1.[X_Drilling.");
            viewString.Append("VersionOwnerCompanyID], T1.[X_Drilling.VersionUpdated])\r\n    FROM (\r\n        SEL");
            viewString.Append("ECT \r\n            T.DrillingID AS [X_Drilling.DrillingID], \r\n            T.Heade");
            viewString.Append("rID AS [X_Drilling.HeaderID], \r\n            T.FromDepth AS [X_Drilling.FromDepth");
            viewString.Append("], \r\n            T.ToDepth AS [X_Drilling.ToDepth], \r\n            T.RunNumber AS");
            viewString.Append(" [X_Drilling.RunNumber], \r\n            T.RecoveredThickness AS [X_Drilling.Recov");
            viewString.Append("eredThickness], \r\n            T.DrillingDate AS [X_Drilling.DrillingDate], \r\n   ");
            viewString.Append("         T.DrillingCompanyID AS [X_Drilling.DrillingCompanyID], \r\n            T.");
            viewString.Append("DrillRigNumber AS [X_Drilling.DrillRigNumber], \r\n            T.DrillRigTypeID AS");
            viewString.Append(" [X_Drilling.DrillRigTypeID], \r\n            T.DrillerID AS [X_Drilling.DrillerID");
            viewString.Append("], \r\n            T.DrillBitTypeID AS [X_Drilling.DrillBitTypeID], \r\n            ");
            viewString.Append("T.DrillFluidID AS [X_Drilling.DrillFluidID], \r\n            T.DrillSizeID AS [X_D");
            viewString.Append("rilling.DrillSizeID], \r\n            T.CoreSize AS [X_Drilling.CoreSize], \r\n     ");
            viewString.Append("       T.HoleSize AS [X_Drilling.HoleSize], \r\n            T.Reamed AS [X_Drillin");
            viewString.Append("g.Reamed], \r\n            T.Comment AS [X_Drilling.Comment], \r\n            T.Vers");
            viewString.Append("ion AS [X_Drilling.Version], \r\n            T.VersionAntecedentID AS [X_Drilling.");
            viewString.Append("VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Drilling.VersionCer");
            viewString.Append("tainty], \r\n            T.VersionWorkflowInstanceID AS [X_Drilling.VersionWorkflo");
            viewString.Append("wInstanceID], \r\n            T.VersionUpdatedBy AS [X_Drilling.VersionUpdatedBy],");
            viewString.Append(" \r\n            T.VersionDeletedBy AS [X_Drilling.VersionDeletedBy], \r\n          ");
            viewString.Append("  T.VersionOwnerContactID AS [X_Drilling.VersionOwnerContactID], \r\n            T");
            viewString.Append(".VersionOwnerCompanyID AS [X_Drilling.VersionOwnerCompanyID], \r\n            T.Ve");
            viewString.Append("rsionUpdated AS [X_Drilling.VersionUpdated], \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM XODBC.Drillings AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Drilling", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_DrillingProjectPlanTask
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView202()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_DrillingProjectPlanTask", "\r\n    SELECT VALUE -- Constructing X_DrillingProjectPlanTask\r\n        [XODB.Modul" +
                    "e.BusinessObjects.Store.X_DrillingProjectPlanTask](T1.[X_DrillingProjectPlanTask" +
                    ".DrillingProjectPlanTaskID], T1.[X_DrillingProjectPlanTask.DrillingID], T1.[X_Dr" +
                    "illingProjectPlanTask.ProjectPlanTaskID], T1.[X_DrillingProjectPlanTask.Version]" +
                    ", T1.[X_DrillingProjectPlanTask.VersionAntecedentID], T1.[X_DrillingProjectPlanT" +
                    "ask.VersionCertainty], T1.[X_DrillingProjectPlanTask.VersionWorkflowInstanceID]," +
                    " T1.[X_DrillingProjectPlanTask.VersionUpdatedBy], T1.[X_DrillingProjectPlanTask." +
                    "VersionDeletedBy], T1.[X_DrillingProjectPlanTask.VersionOwnerContactID], T1.[X_D" +
                    "rillingProjectPlanTask.VersionOwnerCompanyID], T1.[X_DrillingProjectPlanTask.Ver" +
                    "sionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.DrillingProjectPlanTas" +
                    "kID AS [X_DrillingProjectPlanTask.DrillingProjectPlanTaskID], \r\n            T.Dr" +
                    "illingID AS [X_DrillingProjectPlanTask.DrillingID], \r\n            T.ProjectPlanT" +
                    "askID AS [X_DrillingProjectPlanTask.ProjectPlanTaskID], \r\n            T.Version " +
                    "AS [X_DrillingProjectPlanTask.Version], \r\n            T.VersionAntecedentID AS [" +
                    "X_DrillingProjectPlanTask.VersionAntecedentID], \r\n            T.VersionCertainty" +
                    " AS [X_DrillingProjectPlanTask.VersionCertainty], \r\n            T.VersionWorkflo" +
                    "wInstanceID AS [X_DrillingProjectPlanTask.VersionWorkflowInstanceID], \r\n        " +
                    "    T.VersionUpdatedBy AS [X_DrillingProjectPlanTask.VersionUpdatedBy], \r\n      " +
                    "      T.VersionDeletedBy AS [X_DrillingProjectPlanTask.VersionDeletedBy], \r\n    " +
                    "        T.VersionOwnerContactID AS [X_DrillingProjectPlanTask.VersionOwnerContac" +
                    "tID], \r\n            T.VersionOwnerCompanyID AS [X_DrillingProjectPlanTask.Versio" +
                    "nOwnerCompanyID], \r\n            T.VersionUpdated AS [X_DrillingProjectPlanTask.V" +
                    "ersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.DrillingProject" +
                    "PlanTasks AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Experience
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView203()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3965);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Experience\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.X_Experience](T1.[X_Experience.ExperienceID], T1.[X_Experience.Exper");
            viewString.Append("ienceName], T1.[X_Experience.ExperienceGroupID], T1.[X_Experience.CompanyID], T1");
            viewString.Append(".[X_Experience.ProjectID], T1.[X_Experience.ContactID], T1.[X_Experience.Locatio");
            viewString.Append("nID], T1.[X_Experience.ProvinceID], T1.[X_Experience.WorkTypeID], T1.[X_Experien");
            viewString.Append("ce.ProfessionID], T1.[X_Experience.PositionID], T1.[X_Experience.ClientAlias], T");
            viewString.Append("1.[X_Experience.Division], T1.[X_Experience.OfficeLocationAlias], T1.[X_Experien");
            viewString.Append("ce.ExternalProjectCode], T1.[X_Experience.EstimatedDurationDays], T1.[X_Experien");
            viewString.Append("ce.UserExperienceLevel], T1.[X_Experience.AssignedExperienceLevel], T1.[X_Experi");
            viewString.Append("ence.NormalizedExperienceLevel], T1.[X_Experience.DateStart], T1.[X_Experience.D");
            viewString.Append("ateFinished], T1.[X_Experience.Expiry], T1.[X_Experience.HourlyRate], T1.[X_Expe");
            viewString.Append("rience.DailyRate], T1.[X_Experience.AnnualRate], T1.[X_Experience.BlendedHourlyR");
            viewString.Append("ate], T1.[X_Experience.BlendedHourlyCost], T1.[X_Experience.Comment], T1.[X_Expe");
            viewString.Append("rience.IsApproved], T1.[X_Experience.Version], T1.[X_Experience.VersionAnteceden");
            viewString.Append("tID], T1.[X_Experience.VersionCertainty], T1.[X_Experience.VersionWorkflowInstan");
            viewString.Append("ceID], T1.[X_Experience.VersionUpdatedBy], T1.[X_Experience.VersionDeletedBy], T");
            viewString.Append("1.[X_Experience.VersionOwnerContactID], T1.[X_Experience.VersionOwnerCompanyID],");
            viewString.Append(" T1.[X_Experience.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.E");
            viewString.Append("xperienceID AS [X_Experience.ExperienceID], \r\n            T.ExperienceName AS [X");
            viewString.Append("_Experience.ExperienceName], \r\n            T.ExperienceGroupID AS [X_Experience.");
            viewString.Append("ExperienceGroupID], \r\n            T.CompanyID AS [X_Experience.CompanyID], \r\n   ");
            viewString.Append("         T.ProjectID AS [X_Experience.ProjectID], \r\n            T.ContactID AS [");
            viewString.Append("X_Experience.ContactID], \r\n            T.LocationID AS [X_Experience.LocationID]");
            viewString.Append(", \r\n            T.ProvinceID AS [X_Experience.ProvinceID], \r\n            T.WorkT");
            viewString.Append("ypeID AS [X_Experience.WorkTypeID], \r\n            T.ProfessionID AS [X_Experienc");
            viewString.Append("e.ProfessionID], \r\n            T.PositionID AS [X_Experience.PositionID], \r\n    ");
            viewString.Append("        T.ClientAlias AS [X_Experience.ClientAlias], \r\n            T.Division AS");
            viewString.Append(" [X_Experience.Division], \r\n            T.OfficeLocationAlias AS [X_Experience.O");
            viewString.Append("fficeLocationAlias], \r\n            T.ExternalProjectCode AS [X_Experience.Extern");
            viewString.Append("alProjectCode], \r\n            T.EstimatedDurationDays AS [X_Experience.Estimated");
            viewString.Append("DurationDays], \r\n            T.UserExperienceLevel AS [X_Experience.UserExperien");
            viewString.Append("ceLevel], \r\n            T.AssignedExperienceLevel AS [X_Experience.AssignedExper");
            viewString.Append("ienceLevel], \r\n            T.NormalizedExperienceLevel AS [X_Experience.Normaliz");
            viewString.Append("edExperienceLevel], \r\n            T.DateStart AS [X_Experience.DateStart], \r\n   ");
            viewString.Append("         T.DateFinished AS [X_Experience.DateFinished], \r\n            T.Expiry A");
            viewString.Append("S [X_Experience.Expiry], \r\n            T.HourlyRate AS [X_Experience.HourlyRate]");
            viewString.Append(", \r\n            T.DailyRate AS [X_Experience.DailyRate], \r\n            T.AnnualR");
            viewString.Append("ate AS [X_Experience.AnnualRate], \r\n            T.BlendedHourlyRate AS [X_Experi");
            viewString.Append("ence.BlendedHourlyRate], \r\n            T.BlendedHourlyCost AS [X_Experience.Blen");
            viewString.Append("dedHourlyCost], \r\n            T.Comment AS [X_Experience.Comment], \r\n           ");
            viewString.Append(" T.IsApproved AS [X_Experience.IsApproved], \r\n            T.Version AS [X_Experi");
            viewString.Append("ence.Version], \r\n            T.VersionAntecedentID AS [X_Experience.VersionAntec");
            viewString.Append("edentID], \r\n            T.VersionCertainty AS [X_Experience.VersionCertainty], \r");
            viewString.Append("\n            T.VersionWorkflowInstanceID AS [X_Experience.VersionWorkflowInstanc");
            viewString.Append("eID], \r\n            T.VersionUpdatedBy AS [X_Experience.VersionUpdatedBy], \r\n   ");
            viewString.Append("         T.VersionDeletedBy AS [X_Experience.VersionDeletedBy], \r\n            T.");
            viewString.Append("VersionOwnerContactID AS [X_Experience.VersionOwnerContactID], \r\n            T.V");
            viewString.Append("ersionOwnerCompanyID AS [X_Experience.VersionOwnerCompanyID], \r\n            T.Ve");
            viewString.Append("rsionUpdated AS [X_Experience.VersionUpdated], \r\n            True AS _from0\r\n   ");
            viewString.Append("     FROM XODBC.Experiences AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Experience", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_FileData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView204()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2289);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_FileData\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.Store.X_FileData](T1.[X_FileData.FileDataID], T1.[X_FileData.ParentFileID], ");
            viewString.Append("T1.[X_FileData.TableType], T1.[X_FileData.ReferenceID], T1.[X_FileData.WorkerID]");
            viewString.Append(", T1.[X_FileData.FileTypeID], T1.[X_FileData.FileName], T1.[X_FileData.DocumentT");
            viewString.Append("ype], T1.[X_FileData.MimeType], T1.[X_FileData.Author], T1.[X_FileData.FileBytes");
            viewString.Append("], T1.[X_FileData.FileContent], T1.[X_FileData.FileChecksum], T1.[X_FileData.Com");
            viewString.Append("ment], T1.[X_FileData.Version], T1.[X_FileData.VersionAntecedentID], T1.[X_FileD");
            viewString.Append("ata.VersionCertainty], T1.[X_FileData.VersionWorkflowInstanceID], T1.[X_FileData");
            viewString.Append(".VersionUpdatedBy], T1.[X_FileData.VersionDeletedBy], T1.[X_FileData.VersionOwne");
            viewString.Append("rContactID], T1.[X_FileData.VersionOwnerCompanyID], T1.[X_FileData.VersionUpdate");
            viewString.Append("d])\r\n    FROM (\r\n        SELECT \r\n            T.FileDataID AS [X_FileData.FileDa");
            viewString.Append("taID], \r\n            T.ParentFileID AS [X_FileData.ParentFileID], \r\n            ");
            viewString.Append("T.TableType AS [X_FileData.TableType], \r\n            T.ReferenceID AS [X_FileDat");
            viewString.Append("a.ReferenceID], \r\n            T.WorkerID AS [X_FileData.WorkerID], \r\n           ");
            viewString.Append(" T.FileTypeID AS [X_FileData.FileTypeID], \r\n            T.FileName AS [X_FileDat");
            viewString.Append("a.FileName], \r\n            T.DocumentType AS [X_FileData.DocumentType], \r\n      ");
            viewString.Append("      T.MimeType AS [X_FileData.MimeType], \r\n            T.Author AS [X_FileData");
            viewString.Append(".Author], \r\n            T.FileBytes AS [X_FileData.FileBytes], \r\n            T.F");
            viewString.Append("ileContent AS [X_FileData.FileContent], \r\n            T.FileChecksum AS [X_FileD");
            viewString.Append("ata.FileChecksum], \r\n            T.Comment AS [X_FileData.Comment], \r\n          ");
            viewString.Append("  T.Version AS [X_FileData.Version], \r\n            T.VersionAntecedentID AS [X_F");
            viewString.Append("ileData.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_FileData.Ve");
            viewString.Append("rsionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_FileData.Versio");
            viewString.Append("nWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_FileData.VersionUpd");
            viewString.Append("atedBy], \r\n            T.VersionDeletedBy AS [X_FileData.VersionDeletedBy], \r\n  ");
            viewString.Append("          T.VersionOwnerContactID AS [X_FileData.VersionOwnerContactID], \r\n     ");
            viewString.Append("       T.VersionOwnerCompanyID AS [X_FileData.VersionOwnerCompanyID], \r\n        ");
            viewString.Append("    T.VersionUpdated AS [X_FileData.VersionUpdated], \r\n            True AS _from");
            viewString.Append("0\r\n        FROM XODBC.FileDatas AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_FileData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Geology
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView205()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Geology", "\r\n    SELECT VALUE -- Constructing X_Geology\r\n        [XODB.Module.BusinessObject" +
                    "s.Store.X_Geology](T1.[X_Geology.GeologyID], T1.[X_Geology.HeaderID], T1.[X_Geol" +
                    "ogy.GeologyContactID], T1.[X_Geology.FromDepth], T1.[X_Geology.ToDepth], T1.[X_G" +
                    "eology.Comment], T1.[X_Geology.Version], T1.[X_Geology.VersionAntecedentID], T1." +
                    "[X_Geology.VersionCertainty], T1.[X_Geology.VersionWorkflowInstanceID], T1.[X_Ge" +
                    "ology.VersionUpdatedBy], T1.[X_Geology.VersionDeletedBy], T1.[X_Geology.VersionO" +
                    "wnerContactID], T1.[X_Geology.VersionOwnerCompanyID], T1.[X_Geology.VersionUpdat" +
                    "ed])\r\n    FROM (\r\n        SELECT \r\n            T.GeologyID AS [X_Geology.Geology" +
                    "ID], \r\n            T.HeaderID AS [X_Geology.HeaderID], \r\n            T.GeologyCo" +
                    "ntactID AS [X_Geology.GeologyContactID], \r\n            T.FromDepth AS [X_Geology" +
                    ".FromDepth], \r\n            T.ToDepth AS [X_Geology.ToDepth], \r\n            T.Com" +
                    "ment AS [X_Geology.Comment], \r\n            T.Version AS [X_Geology.Version], \r\n " +
                    "           T.VersionAntecedentID AS [X_Geology.VersionAntecedentID], \r\n         " +
                    "   T.VersionCertainty AS [X_Geology.VersionCertainty], \r\n            T.VersionWo" +
                    "rkflowInstanceID AS [X_Geology.VersionWorkflowInstanceID], \r\n            T.Versi" +
                    "onUpdatedBy AS [X_Geology.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS" +
                    " [X_Geology.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Geolo" +
                    "gy.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Geology.V" +
                    "ersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Geology.VersionUpdat" +
                    "ed], \r\n            True AS _from0\r\n        FROM XODBC.Geologies AS T\r\n    ) AS T" +
                    "1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Geophysics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView206()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2092);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Geophysics\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.X_Geophysics](T1.[X_Geophysics.GeophysicsID], T1.[X_Geophysics.FileN");
            viewString.Append("ame], T1.[X_Geophysics.OriginalFileDataID], T1.[X_Geophysics.HeaderID], T1.[X_Ge");
            viewString.Append("ophysics.DimensionUnitID], T1.[X_Geophysics.LasVersion], T1.[X_Geophysics.LasFor");
            viewString.Append("mat], T1.[X_Geophysics.LasWrap], T1.[X_Geophysics.LasDelimiter], T1.[X_Geophysic");
            viewString.Append("s.LasNullValue], T1.[X_Geophysics.Version], T1.[X_Geophysics.VersionAntecedentID");
            viewString.Append("], T1.[X_Geophysics.VersionCertainty], T1.[X_Geophysics.VersionWorkflowInstanceI");
            viewString.Append("D], T1.[X_Geophysics.VersionUpdatedBy], T1.[X_Geophysics.VersionDeletedBy], T1.[");
            viewString.Append("X_Geophysics.VersionOwnerContactID], T1.[X_Geophysics.VersionOwnerCompanyID], T1");
            viewString.Append(".[X_Geophysics.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Geop");
            viewString.Append("hysicsID AS [X_Geophysics.GeophysicsID], \r\n            T.FileName AS [X_Geophysi");
            viewString.Append("cs.FileName], \r\n            T.OriginalFileDataID AS [X_Geophysics.OriginalFileDa");
            viewString.Append("taID], \r\n            T.HeaderID AS [X_Geophysics.HeaderID], \r\n            T.Dime");
            viewString.Append("nsionUnitID AS [X_Geophysics.DimensionUnitID], \r\n            T.LasVersion AS [X_");
            viewString.Append("Geophysics.LasVersion], \r\n            T.LasFormat AS [X_Geophysics.LasFormat], \r");
            viewString.Append("\n            T.LasWrap AS [X_Geophysics.LasWrap], \r\n            T.LasDelimiter A");
            viewString.Append("S [X_Geophysics.LasDelimiter], \r\n            T.LasNullValue AS [X_Geophysics.Las");
            viewString.Append("NullValue], \r\n            T.Version AS [X_Geophysics.Version], \r\n            T.V");
            viewString.Append("ersionAntecedentID AS [X_Geophysics.VersionAntecedentID], \r\n            T.Versio");
            viewString.Append("nCertainty AS [X_Geophysics.VersionCertainty], \r\n            T.VersionWorkflowIn");
            viewString.Append("stanceID AS [X_Geophysics.VersionWorkflowInstanceID], \r\n            T.VersionUpd");
            viewString.Append("atedBy AS [X_Geophysics.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [");
            viewString.Append("X_Geophysics.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Geop");
            viewString.Append("hysics.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Geoph");
            viewString.Append("ysics.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Geophysics.Ve");
            viewString.Append("rsionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Geophysics AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Geophysics", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_GeophysicsData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView207()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_GeophysicsData", "\r\n    SELECT VALUE -- Constructing X_GeophysicsData\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_GeophysicsData](T1.[X_GeophysicsData.GeophysicsDataID], T1.[X_G" +
                    "eophysicsData.GeophysicsMetadataID], T1.[X_GeophysicsData.Dimension], T1.[X_Geop" +
                    "hysicsData.MeasurementValue], T1.[X_GeophysicsData.MeasurementText], T1.[X_Geoph" +
                    "ysicsData.Version], T1.[X_GeophysicsData.VersionAntecedentID], T1.[X_GeophysicsD" +
                    "ata.VersionCertainty], T1.[X_GeophysicsData.VersionWorkflowInstanceID], T1.[X_Ge" +
                    "ophysicsData.VersionUpdatedBy], T1.[X_GeophysicsData.VersionDeletedBy], T1.[X_Ge" +
                    "ophysicsData.VersionOwnerContactID], T1.[X_GeophysicsData.VersionOwnerCompanyID]" +
                    ", T1.[X_GeophysicsData.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.GeophysicsDataID AS [X_GeophysicsData.GeophysicsDataID], \r\n            T.Geo" +
                    "physicsMetadataID AS [X_GeophysicsData.GeophysicsMetadataID], \r\n            T.Di" +
                    "mension AS [X_GeophysicsData.Dimension], \r\n            T.MeasurementValue AS [X_" +
                    "GeophysicsData.MeasurementValue], \r\n            T.MeasurementText AS [X_Geophysi" +
                    "csData.MeasurementText], \r\n            T.Version AS [X_GeophysicsData.Version], " +
                    "\r\n            T.VersionAntecedentID AS [X_GeophysicsData.VersionAntecedentID], \r" +
                    "\n            T.VersionCertainty AS [X_GeophysicsData.VersionCertainty], \r\n      " +
                    "      T.VersionWorkflowInstanceID AS [X_GeophysicsData.VersionWorkflowInstanceID" +
                    "], \r\n            T.VersionUpdatedBy AS [X_GeophysicsData.VersionUpdatedBy], \r\n  " +
                    "          T.VersionDeletedBy AS [X_GeophysicsData.VersionDeletedBy], \r\n         " +
                    "   T.VersionOwnerContactID AS [X_GeophysicsData.VersionOwnerContactID], \r\n      " +
                    "      T.VersionOwnerCompanyID AS [X_GeophysicsData.VersionOwnerCompanyID], \r\n   " +
                    "         T.VersionUpdated AS [X_GeophysicsData.VersionUpdated], \r\n            Tr" +
                    "ue AS _from0\r\n        FROM XODBC.GeophysicsDatas AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_GeophysicsMetadata
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView208()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2255);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_GeophysicsMetadata\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.X_GeophysicsMetadata](T1.[X_GeophysicsMetadata.GeophysicsMet");
            viewString.Append("adataID], T1.[X_GeophysicsMetadata.GeophysicsID], T1.[X_GeophysicsMetadata.Param");
            viewString.Append("eterID], T1.[X_GeophysicsMetadata.Mnemonic], T1.[X_GeophysicsMetadata.Unit], T1.");
            viewString.Append("[X_GeophysicsMetadata.Data], T1.[X_GeophysicsMetadata.Code], T1.[X_GeophysicsMet");
            viewString.Append("adata.Description], T1.[X_GeophysicsMetadata.Format], T1.[X_GeophysicsMetadata.V");
            viewString.Append("ersion], T1.[X_GeophysicsMetadata.VersionAntecedentID], T1.[X_GeophysicsMetadata");
            viewString.Append(".VersionCertainty], T1.[X_GeophysicsMetadata.VersionWorkflowInstanceID], T1.[X_G");
            viewString.Append("eophysicsMetadata.VersionUpdatedBy], T1.[X_GeophysicsMetadata.VersionDeletedBy],");
            viewString.Append(" T1.[X_GeophysicsMetadata.VersionOwnerContactID], T1.[X_GeophysicsMetadata.Versi");
            viewString.Append("onOwnerCompanyID], T1.[X_GeophysicsMetadata.VersionUpdated])\r\n    FROM (\r\n      ");
            viewString.Append("  SELECT \r\n            T.GeophysicsMetadataID AS [X_GeophysicsMetadata.Geophysic");
            viewString.Append("sMetadataID], \r\n            T.GeophysicsID AS [X_GeophysicsMetadata.GeophysicsID");
            viewString.Append("], \r\n            T.ParameterID AS [X_GeophysicsMetadata.ParameterID], \r\n        ");
            viewString.Append("    T.Mnemonic AS [X_GeophysicsMetadata.Mnemonic], \r\n            T.Unit AS [X_Ge");
            viewString.Append("ophysicsMetadata.Unit], \r\n            T.Data AS [X_GeophysicsMetadata.Data], \r\n ");
            viewString.Append("           T.Code AS [X_GeophysicsMetadata.Code], \r\n            T.Description AS");
            viewString.Append(" [X_GeophysicsMetadata.Description], \r\n            T.Format AS [X_GeophysicsMeta");
            viewString.Append("data.Format], \r\n            T.Version AS [X_GeophysicsMetadata.Version], \r\n     ");
            viewString.Append("       T.VersionAntecedentID AS [X_GeophysicsMetadata.VersionAntecedentID], \r\n  ");
            viewString.Append("          T.VersionCertainty AS [X_GeophysicsMetadata.VersionCertainty], \r\n     ");
            viewString.Append("       T.VersionWorkflowInstanceID AS [X_GeophysicsMetadata.VersionWorkflowInsta");
            viewString.Append("nceID], \r\n            T.VersionUpdatedBy AS [X_GeophysicsMetadata.VersionUpdated");
            viewString.Append("By], \r\n            T.VersionDeletedBy AS [X_GeophysicsMetadata.VersionDeletedBy]");
            viewString.Append(", \r\n            T.VersionOwnerContactID AS [X_GeophysicsMetadata.VersionOwnerCon");
            viewString.Append("tactID], \r\n            T.VersionOwnerCompanyID AS [X_GeophysicsMetadata.VersionO");
            viewString.Append("wnerCompanyID], \r\n            T.VersionUpdated AS [X_GeophysicsMetadata.VersionU");
            viewString.Append("pdated], \r\n            True AS _from0\r\n        FROM XODBC.GeophysicsMetadatas AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_GeophysicsMetadata", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Header
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView209()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4085);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Header\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Store.X_Header](T1.[X_Header.HeaderID], T1.[X_Header.ProjectID], T1.[X_Header.");
            viewString.Append("HoleName], T1.[X_Header.Site], T1.[X_Header.HoleTypeID], T1.[X_Header.DataStatus");
            viewString.Append("ID], T1.[X_Header.PrimaryHolePurposeID], T1.[X_Header.SecondaryHolePurposeID], T");
            viewString.Append("1.[X_Header.SurveyAccuracyID], T1.[X_Header.GeodeticDatumID], T1.[X_Header.UtmZo");
            viewString.Append("neNumber], T1.[X_Header.UtmZoneHemisphere], T1.[X_Header.HeightDatumID], T1.[X_H");
            viewString.Append("eader.EastingUtm], T1.[X_Header.NorthingUtm], T1.[X_Header.Elevation], T1.[X_Hea");
            viewString.Append("der.Inclination], T1.[X_Header.Azimuth], T1.[X_Header.LocationID], T1.[X_Header.");
            viewString.Append("StartDate], T1.[X_Header.CompleteDate], T1.[X_Header.TotalDepth], T1.[X_Header.H");
            viewString.Append("oleRedrilled], T1.[X_Header.GeologyCompanyID], T1.[X_Header.HasHadGeotechLogs], ");
            viewString.Append("T1.[X_Header.HasHadCorePhotos], T1.[X_Header.DefaultGeophysicalLoggingCompanyID]");
            viewString.Append(", T1.[X_Header.DefaultGeophysicalLoggerID], T1.[X_Header.StandingWaterLevel], T1");
            viewString.Append(".[X_Header.StandingWaterLevelDate], T1.[X_Header.DateRehabilitated], T1.[X_Heade");
            viewString.Append("r.HoleStatusID], T1.[X_Header.Comment], T1.[X_Header.Version], T1.[X_Header.Vers");
            viewString.Append("ionAntecedentID], T1.[X_Header.VersionCertainty], T1.[X_Header.VersionWorkflowIn");
            viewString.Append("stanceID], T1.[X_Header.VersionUpdatedBy], T1.[X_Header.VersionDeletedBy], T1.[X");
            viewString.Append("_Header.VersionOwnerContactID], T1.[X_Header.VersionOwnerCompanyID], T1.[X_Heade");
            viewString.Append("r.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.HeaderID AS [X_He");
            viewString.Append("ader.HeaderID], \r\n            T.ProjectID AS [X_Header.ProjectID], \r\n           ");
            viewString.Append(" T.HoleName AS [X_Header.HoleName], \r\n            T.Site AS [X_Header.Site], \r\n ");
            viewString.Append("           T.HoleTypeID AS [X_Header.HoleTypeID], \r\n            T.DataStatusID A");
            viewString.Append("S [X_Header.DataStatusID], \r\n            T.PrimaryHolePurposeID AS [X_Header.Pri");
            viewString.Append("maryHolePurposeID], \r\n            T.SecondaryHolePurposeID AS [X_Header.Secondar");
            viewString.Append("yHolePurposeID], \r\n            T.SurveyAccuracyID AS [X_Header.SurveyAccuracyID]");
            viewString.Append(", \r\n            T.GeodeticDatumID AS [X_Header.GeodeticDatumID], \r\n            T");
            viewString.Append(".UtmZoneNumber AS [X_Header.UtmZoneNumber], \r\n            T.UtmZoneHemisphere AS");
            viewString.Append(" [X_Header.UtmZoneHemisphere], \r\n            T.HeightDatumID AS [X_Header.Height");
            viewString.Append("DatumID], \r\n            T.EastingUtm AS [X_Header.EastingUtm], \r\n            T.N");
            viewString.Append("orthingUtm AS [X_Header.NorthingUtm], \r\n            T.Elevation AS [X_Header.Ele");
            viewString.Append("vation], \r\n            T.Inclination AS [X_Header.Inclination], \r\n            T.");
            viewString.Append("Azimuth AS [X_Header.Azimuth], \r\n            T.LocationID AS [X_Header.LocationI");
            viewString.Append("D], \r\n            T.StartDate AS [X_Header.StartDate], \r\n            T.CompleteD");
            viewString.Append("ate AS [X_Header.CompleteDate], \r\n            T.TotalDepth AS [X_Header.TotalDep");
            viewString.Append("th], \r\n            T.HoleRedrilled AS [X_Header.HoleRedrilled], \r\n            T.");
            viewString.Append("GeologyCompanyID AS [X_Header.GeologyCompanyID], \r\n            T.HasHadGeotechLo");
            viewString.Append("gs AS [X_Header.HasHadGeotechLogs], \r\n            T.HasHadCorePhotos AS [X_Heade");
            viewString.Append("r.HasHadCorePhotos], \r\n            T.DefaultGeophysicalLoggingCompanyID AS [X_He");
            viewString.Append("ader.DefaultGeophysicalLoggingCompanyID], \r\n            T.DefaultGeophysicalLogg");
            viewString.Append("erID AS [X_Header.DefaultGeophysicalLoggerID], \r\n            T.StandingWaterLeve");
            viewString.Append("l AS [X_Header.StandingWaterLevel], \r\n            T.StandingWaterLevelDate AS [X");
            viewString.Append("_Header.StandingWaterLevelDate], \r\n            T.DateRehabilitated AS [X_Header.");
            viewString.Append("DateRehabilitated], \r\n            T.HoleStatusID AS [X_Header.HoleStatusID], \r\n ");
            viewString.Append("           T.Comment AS [X_Header.Comment], \r\n            T.Version AS [X_Header");
            viewString.Append(".Version], \r\n            T.VersionAntecedentID AS [X_Header.VersionAntecedentID]");
            viewString.Append(", \r\n            T.VersionCertainty AS [X_Header.VersionCertainty], \r\n           ");
            viewString.Append(" T.VersionWorkflowInstanceID AS [X_Header.VersionWorkflowInstanceID], \r\n        ");
            viewString.Append("    T.VersionUpdatedBy AS [X_Header.VersionUpdatedBy], \r\n            T.VersionDe");
            viewString.Append("letedBy AS [X_Header.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS");
            viewString.Append(" [X_Header.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_H");
            viewString.Append("eader.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Header.Versio");
            viewString.Append("nUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Headers AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Header", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_HeaderGeophysicalLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView210()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2174);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_HeaderGeophysicalLog\r\n        [XODB.Module.");
            viewString.Append("BusinessObjects.Store.X_HeaderGeophysicalLog](T1.[X_HeaderGeophysicalLog.HeaderG");
            viewString.Append("eophysicalLogID], T1.[X_HeaderGeophysicalLog.HeaderID], T1.[X_HeaderGeophysicalL");
            viewString.Append("og.GeophysicalLogTypeID], T1.[X_HeaderGeophysicalLog.Sequence], T1.[X_HeaderGeop");
            viewString.Append("hysicalLog.GeophysicalLoggingCompanyID], T1.[X_HeaderGeophysicalLog.GeophysicalL");
            viewString.Append("oggerID], T1.[X_HeaderGeophysicalLog.Version], T1.[X_HeaderGeophysicalLog.Versio");
            viewString.Append("nAntecedentID], T1.[X_HeaderGeophysicalLog.VersionCertainty], T1.[X_HeaderGeophy");
            viewString.Append("sicalLog.VersionWorkflowInstanceID], T1.[X_HeaderGeophysicalLog.VersionUpdatedBy");
            viewString.Append("], T1.[X_HeaderGeophysicalLog.VersionDeletedBy], T1.[X_HeaderGeophysicalLog.Vers");
            viewString.Append("ionOwnerContactID], T1.[X_HeaderGeophysicalLog.VersionOwnerCompanyID], T1.[X_Hea");
            viewString.Append("derGeophysicalLog.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.H");
            viewString.Append("eaderGeophysicalLogID AS [X_HeaderGeophysicalLog.HeaderGeophysicalLogID], \r\n    ");
            viewString.Append("        T.HeaderID AS [X_HeaderGeophysicalLog.HeaderID], \r\n            T.Geophys");
            viewString.Append("icalLogTypeID AS [X_HeaderGeophysicalLog.GeophysicalLogTypeID], \r\n            T.");
            viewString.Append("Sequence AS [X_HeaderGeophysicalLog.Sequence], \r\n            T.GeophysicalLoggin");
            viewString.Append("gCompanyID AS [X_HeaderGeophysicalLog.GeophysicalLoggingCompanyID], \r\n          ");
            viewString.Append("  T.GeophysicalLoggerID AS [X_HeaderGeophysicalLog.GeophysicalLoggerID], \r\n     ");
            viewString.Append("       T.Version AS [X_HeaderGeophysicalLog.Version], \r\n            T.VersionAnt");
            viewString.Append("ecedentID AS [X_HeaderGeophysicalLog.VersionAntecedentID], \r\n            T.Versi");
            viewString.Append("onCertainty AS [X_HeaderGeophysicalLog.VersionCertainty], \r\n            T.Versio");
            viewString.Append("nWorkflowInstanceID AS [X_HeaderGeophysicalLog.VersionWorkflowInstanceID], \r\n   ");
            viewString.Append("         T.VersionUpdatedBy AS [X_HeaderGeophysicalLog.VersionUpdatedBy], \r\n    ");
            viewString.Append("        T.VersionDeletedBy AS [X_HeaderGeophysicalLog.VersionDeletedBy], \r\n     ");
            viewString.Append("       T.VersionOwnerContactID AS [X_HeaderGeophysicalLog.VersionOwnerContactID]");
            viewString.Append(", \r\n            T.VersionOwnerCompanyID AS [X_HeaderGeophysicalLog.VersionOwnerC");
            viewString.Append("ompanyID], \r\n            T.VersionUpdated AS [X_HeaderGeophysicalLog.VersionUpda");
            viewString.Append("ted], \r\n            True AS _from0\r\n        FROM XODBC.HeaderGeophysicalLogs AS ");
            viewString.Append("T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_HeaderGeophysicalLog", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_HeaderRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView211()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_HeaderRelation", "\r\n    SELECT VALUE -- Constructing X_HeaderRelation\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_HeaderRelation](T1.[X_HeaderRelation.HeaderRelationID], T1.[X_H" +
                    "eaderRelation.OriginalHeaderID], T1.[X_HeaderRelation.RelatedHeaderID], T1.[X_He" +
                    "aderRelation.RelationTypeID], T1.[X_HeaderRelation.Related], T1.[X_HeaderRelatio" +
                    "n.Version], T1.[X_HeaderRelation.VersionAntecedentID], T1.[X_HeaderRelation.Vers" +
                    "ionCertainty], T1.[X_HeaderRelation.VersionWorkflowInstanceID], T1.[X_HeaderRela" +
                    "tion.VersionUpdatedBy], T1.[X_HeaderRelation.VersionDeletedBy], T1.[X_HeaderRela" +
                    "tion.VersionOwnerContactID], T1.[X_HeaderRelation.VersionOwnerCompanyID], T1.[X_" +
                    "HeaderRelation.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Head" +
                    "erRelationID AS [X_HeaderRelation.HeaderRelationID], \r\n            T.OriginalHea" +
                    "derID AS [X_HeaderRelation.OriginalHeaderID], \r\n            T.RelatedHeaderID AS" +
                    " [X_HeaderRelation.RelatedHeaderID], \r\n            T.RelationTypeID AS [X_Header" +
                    "Relation.RelationTypeID], \r\n            T.Related AS [X_HeaderRelation.Related]," +
                    " \r\n            T.Version AS [X_HeaderRelation.Version], \r\n            T.VersionA" +
                    "ntecedentID AS [X_HeaderRelation.VersionAntecedentID], \r\n            T.VersionCe" +
                    "rtainty AS [X_HeaderRelation.VersionCertainty], \r\n            T.VersionWorkflowI" +
                    "nstanceID AS [X_HeaderRelation.VersionWorkflowInstanceID], \r\n            T.Versi" +
                    "onUpdatedBy AS [X_HeaderRelation.VersionUpdatedBy], \r\n            T.VersionDelet" +
                    "edBy AS [X_HeaderRelation.VersionDeletedBy], \r\n            T.VersionOwnerContact" +
                    "ID AS [X_HeaderRelation.VersionOwnerContactID], \r\n            T.VersionOwnerComp" +
                    "anyID AS [X_HeaderRelation.VersionOwnerCompanyID], \r\n            T.VersionUpdate" +
                    "d AS [X_HeaderRelation.VersionUpdated], \r\n            True AS _from0\r\n        FR" +
                    "OM XODBC.HeaderRelations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Interpretation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView212()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3892);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Interpretation\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.Store.X_Interpretation](T1.[X_Interpretation.InterpretationID], T1.[X_");
            viewString.Append("Interpretation.FromDepth], T1.[X_Interpretation.ToDepth], T1.[X_Interpretation.T");
            viewString.Append("opX], T1.[X_Interpretation.TopY], T1.[X_Interpretation.TopZ], T1.[X_Interpretati");
            viewString.Append("on.CentroidX], T1.[X_Interpretation.CentroidY], T1.[X_Interpretation.CentroidZ],");
            viewString.Append(" T1.[X_Interpretation.BottomX], T1.[X_Interpretation.BottomY], T1.[X_Interpretat");
            viewString.Append("ion.BottomZ], T1.[X_Interpretation.DesurveyID], T1.[X_Interpretation.HeaderID], ");
            viewString.Append("T1.[X_Interpretation.AssayGroupTestSampleID], T1.[X_Interpretation.CasingID], T1");
            viewString.Append(".[X_Interpretation.CementingID], T1.[X_Interpretation.DefectID], T1.[X_Interpret");
            viewString.Append("ation.DrillingID], T1.[X_Interpretation.GeologyID], T1.[X_Interpretation.Geophys");
            viewString.Append("icsDataID], T1.[X_Interpretation.LithologyID], T1.[X_Interpretation.SeamID], T1.");
            viewString.Append("[X_Interpretation.PlyID], T1.[X_Interpretation.MineralogyID], T1.[X_Interpretati");
            viewString.Append("on.PointLoadID], T1.[X_Interpretation.RecoveryID], T1.[X_Interpretation.BlockMod");
            viewString.Append("elBlockID], T1.[X_Interpretation.Version], T1.[X_Interpretation.VersionAnteceden");
            viewString.Append("tID], T1.[X_Interpretation.VersionCertainty], T1.[X_Interpretation.VersionWorkfl");
            viewString.Append("owInstanceID], T1.[X_Interpretation.VersionUpdatedBy], T1.[X_Interpretation.Vers");
            viewString.Append("ionDeletedBy], T1.[X_Interpretation.VersionOwnerContactID], T1.[X_Interpretation");
            viewString.Append(".VersionOwnerCompanyID], T1.[X_Interpretation.VersionUpdated])\r\n    FROM (\r\n    ");
            viewString.Append("    SELECT \r\n            T.InterpretationID AS [X_Interpretation.InterpretationI");
            viewString.Append("D], \r\n            T.FromDepth AS [X_Interpretation.FromDepth], \r\n            T.T");
            viewString.Append("oDepth AS [X_Interpretation.ToDepth], \r\n            T.TopX AS [X_Interpretation.");
            viewString.Append("TopX], \r\n            T.TopY AS [X_Interpretation.TopY], \r\n            T.TopZ AS ");
            viewString.Append("[X_Interpretation.TopZ], \r\n            T.CentroidX AS [X_Interpretation.Centroid");
            viewString.Append("X], \r\n            T.CentroidY AS [X_Interpretation.CentroidY], \r\n            T.C");
            viewString.Append("entroidZ AS [X_Interpretation.CentroidZ], \r\n            T.BottomX AS [X_Interpre");
            viewString.Append("tation.BottomX], \r\n            T.BottomY AS [X_Interpretation.BottomY], \r\n      ");
            viewString.Append("      T.BottomZ AS [X_Interpretation.BottomZ], \r\n            T.DesurveyID AS [X_");
            viewString.Append("Interpretation.DesurveyID], \r\n            T.HeaderID AS [X_Interpretation.Header");
            viewString.Append("ID], \r\n            T.AssayGroupTestSampleID AS [X_Interpretation.AssayGroupTestS");
            viewString.Append("ampleID], \r\n            T.CasingID AS [X_Interpretation.CasingID], \r\n           ");
            viewString.Append(" T.CementingID AS [X_Interpretation.CementingID], \r\n            T.DefectID AS [X");
            viewString.Append("_Interpretation.DefectID], \r\n            T.DrillingID AS [X_Interpretation.Drill");
            viewString.Append("ingID], \r\n            T.GeologyID AS [X_Interpretation.GeologyID], \r\n           ");
            viewString.Append(" T.GeophysicsDataID AS [X_Interpretation.GeophysicsDataID], \r\n            T.Lith");
            viewString.Append("ologyID AS [X_Interpretation.LithologyID], \r\n            T.SeamID AS [X_Interpre");
            viewString.Append("tation.SeamID], \r\n            T.PlyID AS [X_Interpretation.PlyID], \r\n           ");
            viewString.Append(" T.MineralogyID AS [X_Interpretation.MineralogyID], \r\n            T.PointLoadID ");
            viewString.Append("AS [X_Interpretation.PointLoadID], \r\n            T.RecoveryID AS [X_Interpretati");
            viewString.Append("on.RecoveryID], \r\n            T.BlockModelBlockID AS [X_Interpretation.BlockMode");
            viewString.Append("lBlockID], \r\n            T.Version AS [X_Interpretation.Version], \r\n            ");
            viewString.Append("T.VersionAntecedentID AS [X_Interpretation.VersionAntecedentID], \r\n            T");
            viewString.Append(".VersionCertainty AS [X_Interpretation.VersionCertainty], \r\n            T.Versio");
            viewString.Append("nWorkflowInstanceID AS [X_Interpretation.VersionWorkflowInstanceID], \r\n         ");
            viewString.Append("   T.VersionUpdatedBy AS [X_Interpretation.VersionUpdatedBy], \r\n            T.Ve");
            viewString.Append("rsionDeletedBy AS [X_Interpretation.VersionDeletedBy], \r\n            T.VersionOw");
            viewString.Append("nerContactID AS [X_Interpretation.VersionOwnerContactID], \r\n            T.Versio");
            viewString.Append("nOwnerCompanyID AS [X_Interpretation.VersionOwnerCompanyID], \r\n            T.Ver");
            viewString.Append("sionUpdated AS [X_Interpretation.VersionUpdated], \r\n            True AS _from0\r\n");
            viewString.Append("        FROM XODBC.Interpretations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Interpretation", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_InterpretationData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView213()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_InterpretationData", "\r\n    SELECT VALUE -- Constructing X_InterpretationData\r\n        [XODB.Module.Bus" +
                    "inessObjects.Store.X_InterpretationData](T1.[X_InterpretationData.Interpretation" +
                    "DataID], T1.[X_InterpretationData.InterpretationID], T1.[X_InterpretationData.Pa" +
                    "rameterID], T1.[X_InterpretationData.InterpretationDataText], T1.[X_Interpretati" +
                    "onData.InterpretationDataValue], T1.[X_InterpretationData.Version], T1.[X_Interp" +
                    "retationData.VersionAntecedentID], T1.[X_InterpretationData.VersionCertainty], T" +
                    "1.[X_InterpretationData.VersionWorkflowInstanceID], T1.[X_InterpretationData.Ver" +
                    "sionUpdatedBy], T1.[X_InterpretationData.VersionDeletedBy], T1.[X_Interpretation" +
                    "Data.VersionOwnerContactID], T1.[X_InterpretationData.VersionOwnerCompanyID], T1" +
                    ".[X_InterpretationData.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.InterpretationDataID AS [X_InterpretationData.InterpretationDataID], \r\n     " +
                    "       T.InterpretationID AS [X_InterpretationData.InterpretationID], \r\n        " +
                    "    T.ParameterID AS [X_InterpretationData.ParameterID], \r\n            T.Interpr" +
                    "etationDataText AS [X_InterpretationData.InterpretationDataText], \r\n            " +
                    "T.InterpretationDataValue AS [X_InterpretationData.InterpretationDataValue], \r\n " +
                    "           T.Version AS [X_InterpretationData.Version], \r\n            T.VersionA" +
                    "ntecedentID AS [X_InterpretationData.VersionAntecedentID], \r\n            T.Versi" +
                    "onCertainty AS [X_InterpretationData.VersionCertainty], \r\n            T.VersionW" +
                    "orkflowInstanceID AS [X_InterpretationData.VersionWorkflowInstanceID], \r\n       " +
                    "     T.VersionUpdatedBy AS [X_InterpretationData.VersionUpdatedBy], \r\n          " +
                    "  T.VersionDeletedBy AS [X_InterpretationData.VersionDeletedBy], \r\n            T" +
                    ".VersionOwnerContactID AS [X_InterpretationData.VersionOwnerContactID], \r\n      " +
                    "      T.VersionOwnerCompanyID AS [X_InterpretationData.VersionOwnerCompanyID], \r" +
                    "\n            T.VersionUpdated AS [X_InterpretationData.VersionUpdated], \r\n      " +
                    "      True AS _from0\r\n        FROM XODBC.InterpretationDatas AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Lease
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView214()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Lease", "\r\n    SELECT VALUE -- Constructing X_Lease\r\n        [XODB.Module.BusinessObjects." +
                    "Store.X_Lease](T1.[X_Lease.LeaseID], T1.[X_Lease.TenementID], T1.[X_Lease.LeaseN" +
                    "umber], T1.[X_Lease.OwnerCompanyID], T1.[X_Lease.ApprovedByContactID], T1.[X_Lea" +
                    "se.ValidFrom], T1.[X_Lease.Expiry], T1.[X_Lease.Comment], T1.[X_Lease.Version], " +
                    "T1.[X_Lease.VersionAntecedentID], T1.[X_Lease.VersionCertainty], T1.[X_Lease.Ver" +
                    "sionWorkflowInstanceID], T1.[X_Lease.VersionUpdatedBy], T1.[X_Lease.VersionDelet" +
                    "edBy], T1.[X_Lease.VersionOwnerContactID], T1.[X_Lease.VersionOwnerCompanyID], T" +
                    "1.[X_Lease.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.LeaseID " +
                    "AS [X_Lease.LeaseID], \r\n            T.TenementID AS [X_Lease.TenementID], \r\n    " +
                    "        T.LeaseNumber AS [X_Lease.LeaseNumber], \r\n            T.OwnerCompanyID A" +
                    "S [X_Lease.OwnerCompanyID], \r\n            T.ApprovedByContactID AS [X_Lease.Appr" +
                    "ovedByContactID], \r\n            T.ValidFrom AS [X_Lease.ValidFrom], \r\n          " +
                    "  T.Expiry AS [X_Lease.Expiry], \r\n            T.Comment AS [X_Lease.Comment], \r\n" +
                    "            T.Version AS [X_Lease.Version], \r\n            T.VersionAntecedentID " +
                    "AS [X_Lease.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Lease.V" +
                    "ersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Lease.VersionW" +
                    "orkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Lease.VersionUpdatedB" +
                    "y], \r\n            T.VersionDeletedBy AS [X_Lease.VersionDeletedBy], \r\n          " +
                    "  T.VersionOwnerContactID AS [X_Lease.VersionOwnerContactID], \r\n            T.Ve" +
                    "rsionOwnerCompanyID AS [X_Lease.VersionOwnerCompanyID], \r\n            T.VersionU" +
                    "pdated AS [X_Lease.VersionUpdated], \r\n            True AS _from0\r\n        FROM X" +
                    "ODBC.Leases AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_LeaseApplication
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView215()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2528);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_LeaseApplication\r\n        [XODB.Module.Busi");
            viewString.Append("nessObjects.Store.X_LeaseApplication](T1.[X_LeaseApplication.LeaseApplicationID]");
            viewString.Append(", T1.[X_LeaseApplication.TenementID], T1.[X_LeaseApplication.LeaseApplicationTyp");
            viewString.Append("eID], T1.[X_LeaseApplication.LeaseApplicationNumber], T1.[X_LeaseApplication.Own");
            viewString.Append("erCompanyID], T1.[X_LeaseApplication.OfficeOfApproval], T1.[X_LeaseApplication.A");
            viewString.Append("pproved], T1.[X_LeaseApplication.ApprovedByContactID], T1.[X_LeaseApplication.Va");
            viewString.Append("lidFrom], T1.[X_LeaseApplication.Expiry], T1.[X_LeaseApplication.Comment], T1.[X");
            viewString.Append("_LeaseApplication.Version], T1.[X_LeaseApplication.VersionAntecedentID], T1.[X_L");
            viewString.Append("easeApplication.VersionCertainty], T1.[X_LeaseApplication.VersionWorkflowInstanc");
            viewString.Append("eID], T1.[X_LeaseApplication.VersionUpdatedBy], T1.[X_LeaseApplication.VersionDe");
            viewString.Append("letedBy], T1.[X_LeaseApplication.VersionOwnerContactID], T1.[X_LeaseApplication.");
            viewString.Append("VersionOwnerCompanyID], T1.[X_LeaseApplication.VersionUpdated])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.LeaseApplicationID AS [X_LeaseApplication.LeaseAppli");
            viewString.Append("cationID], \r\n            T.TenementID AS [X_LeaseApplication.TenementID], \r\n    ");
            viewString.Append("        T.LeaseApplicationTypeID AS [X_LeaseApplication.LeaseApplicationTypeID],");
            viewString.Append(" \r\n            T.LeaseApplicationNumber AS [X_LeaseApplication.LeaseApplicationN");
            viewString.Append("umber], \r\n            T.OwnerCompanyID AS [X_LeaseApplication.OwnerCompanyID], \r");
            viewString.Append("\n            T.OfficeOfApproval AS [X_LeaseApplication.OfficeOfApproval], \r\n    ");
            viewString.Append("        T.Approved AS [X_LeaseApplication.Approved], \r\n            T.ApprovedByC");
            viewString.Append("ontactID AS [X_LeaseApplication.ApprovedByContactID], \r\n            T.ValidFrom ");
            viewString.Append("AS [X_LeaseApplication.ValidFrom], \r\n            T.Expiry AS [X_LeaseApplication");
            viewString.Append(".Expiry], \r\n            T.Comment AS [X_LeaseApplication.Comment], \r\n           ");
            viewString.Append(" T.Version AS [X_LeaseApplication.Version], \r\n            T.VersionAntecedentID ");
            viewString.Append("AS [X_LeaseApplication.VersionAntecedentID], \r\n            T.VersionCertainty AS");
            viewString.Append(" [X_LeaseApplication.VersionCertainty], \r\n            T.VersionWorkflowInstanceI");
            viewString.Append("D AS [X_LeaseApplication.VersionWorkflowInstanceID], \r\n            T.VersionUpda");
            viewString.Append("tedBy AS [X_LeaseApplication.VersionUpdatedBy], \r\n            T.VersionDeletedBy");
            viewString.Append(" AS [X_LeaseApplication.VersionDeletedBy], \r\n            T.VersionOwnerContactID");
            viewString.Append(" AS [X_LeaseApplication.VersionOwnerContactID], \r\n            T.VersionOwnerComp");
            viewString.Append("anyID AS [X_LeaseApplication.VersionOwnerCompanyID], \r\n            T.VersionUpda");
            viewString.Append("ted AS [X_LeaseApplication.VersionUpdated], \r\n            True AS _from0\r\n      ");
            viewString.Append("  FROM XODBC.LeaseApplications AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_LeaseApplication", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Lithology
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView216()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(5381);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Lithology\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.Store.X_Lithology](T1.[X_Lithology.LithologyID], T1.[X_Lithology.HeaderID],");
            viewString.Append(" T1.[X_Lithology.FromDepth], T1.[X_Lithology.ToDepth], T1.[X_Lithology.Recovered");
            viewString.Append("Thickness], T1.[X_Lithology.DomainID], T1.[X_Lithology.SeamID], T1.[X_Lithology.");
            viewString.Append("PlyID], T1.[X_Lithology.StratigraphyID], T1.[X_Lithology.HorizonID], T1.[X_Litho");
            viewString.Append("logy.SampleTypeID], T1.[X_Lithology.SampleNumber], T1.[X_Lithology.SampleMassKg]");
            viewString.Append(", T1.[X_Lithology.IntervalStatusID], T1.[X_Lithology.LithologyPercentage], T1.[X");
            viewString.Append("_Lithology.LithologyTypeID], T1.[X_Lithology.LithologyQualifierID], T1.[X_Lithol");
            viewString.Append("ogy.ShadeID], T1.[X_Lithology.HueID], T1.[X_Lithology.ColourID], T1.[X_Lithology");
            viewString.Append(".AdjectiveID1], T1.[X_Lithology.AdjectiveID2], T1.[X_Lithology.AdjectiveID3], T1");
            viewString.Append(".[X_Lithology.AdjectiveID4], T1.[X_Lithology.LithologyInterrelationID], T1.[X_Li");
            viewString.Append("thology.WeatheringID], T1.[X_Lithology.EstimatedStrengthID], T1.[X_Lithology.Bed");
            viewString.Append("SpacingID], T1.[X_Lithology.DefectTypeID], T1.[X_Lithology.DefectCompletenessID]");
            viewString.Append(", T1.[X_Lithology.DefectSpacingID], T1.[X_Lithology.DefectDip], T1.[X_Lithology.");
            viewString.Append("CoreStateID], T1.[X_Lithology.MechanicalStateID], T1.[X_Lithology.TextureID], T1");
            viewString.Append(".[X_Lithology.BasalContactID], T1.[X_Lithology.SedimentaryFeature1ID], T1.[X_Lit");
            viewString.Append("hology.SedimentaryFeature2ID], T1.[X_Lithology.BeddingDip], T1.[X_Lithology.Mine");
            viewString.Append("ralAndFossilAbundanceID], T1.[X_Lithology.MineralAndFossilTypeID], T1.[X_Litholo");
            viewString.Append("gy.MineralAndFossilAssociationID], T1.[X_Lithology.GasDetectedID], T1.[X_Litholo");
            viewString.Append("gy.Description], T1.[X_Lithology.Version], T1.[X_Lithology.VersionAntecedentID],");
            viewString.Append(" T1.[X_Lithology.VersionCertainty], T1.[X_Lithology.VersionWorkflowInstanceID], ");
            viewString.Append("T1.[X_Lithology.VersionUpdatedBy], T1.[X_Lithology.VersionDeletedBy], T1.[X_Lith");
            viewString.Append("ology.VersionOwnerContactID], T1.[X_Lithology.VersionOwnerCompanyID], T1.[X_Lith");
            viewString.Append("ology.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.LithologyID A");
            viewString.Append("S [X_Lithology.LithologyID], \r\n            T.HeaderID AS [X_Lithology.HeaderID],");
            viewString.Append(" \r\n            T.FromDepth AS [X_Lithology.FromDepth], \r\n            T.ToDepth A");
            viewString.Append("S [X_Lithology.ToDepth], \r\n            T.RecoveredThickness AS [X_Lithology.Reco");
            viewString.Append("veredThickness], \r\n            T.DomainID AS [X_Lithology.DomainID], \r\n         ");
            viewString.Append("   T.SeamID AS [X_Lithology.SeamID], \r\n            T.PlyID AS [X_Lithology.PlyID");
            viewString.Append("], \r\n            T.StratigraphyID AS [X_Lithology.StratigraphyID], \r\n           ");
            viewString.Append(" T.HorizonID AS [X_Lithology.HorizonID], \r\n            T.SampleTypeID AS [X_Lith");
            viewString.Append("ology.SampleTypeID], \r\n            T.SampleNumber AS [X_Lithology.SampleNumber],");
            viewString.Append(" \r\n            T.SampleMassKg AS [X_Lithology.SampleMassKg], \r\n            T.Int");
            viewString.Append("ervalStatusID AS [X_Lithology.IntervalStatusID], \r\n            T.LithologyPercen");
            viewString.Append("tage AS [X_Lithology.LithologyPercentage], \r\n            T.LithologyTypeID AS [X");
            viewString.Append("_Lithology.LithologyTypeID], \r\n            T.LithologyQualifierID AS [X_Litholog");
            viewString.Append("y.LithologyQualifierID], \r\n            T.ShadeID AS [X_Lithology.ShadeID], \r\n   ");
            viewString.Append("         T.HueID AS [X_Lithology.HueID], \r\n            T.ColourID AS [X_Litholog");
            viewString.Append("y.ColourID], \r\n            T.AdjectiveID1 AS [X_Lithology.AdjectiveID1], \r\n     ");
            viewString.Append("       T.AdjectiveID2 AS [X_Lithology.AdjectiveID2], \r\n            T.AdjectiveID");
            viewString.Append("3 AS [X_Lithology.AdjectiveID3], \r\n            T.AdjectiveID4 AS [X_Lithology.Ad");
            viewString.Append("jectiveID4], \r\n            T.LithologyInterrelationID AS [X_Lithology.LithologyI");
            viewString.Append("nterrelationID], \r\n            T.WeatheringID AS [X_Lithology.WeatheringID], \r\n ");
            viewString.Append("           T.EstimatedStrengthID AS [X_Lithology.EstimatedStrengthID], \r\n       ");
            viewString.Append("     T.BedSpacingID AS [X_Lithology.BedSpacingID], \r\n            T.DefectTypeID ");
            viewString.Append("AS [X_Lithology.DefectTypeID], \r\n            T.DefectCompletenessID AS [X_Lithol");
            viewString.Append("ogy.DefectCompletenessID], \r\n            T.DefectSpacingID AS [X_Lithology.Defec");
            viewString.Append("tSpacingID], \r\n            T.DefectDip AS [X_Lithology.DefectDip], \r\n           ");
            viewString.Append(" T.CoreStateID AS [X_Lithology.CoreStateID], \r\n            T.MechanicalStateID A");
            viewString.Append("S [X_Lithology.MechanicalStateID], \r\n            T.TextureID AS [X_Lithology.Tex");
            viewString.Append("tureID], \r\n            T.BasalContactID AS [X_Lithology.BasalContactID], \r\n     ");
            viewString.Append("       T.SedimentaryFeature1ID AS [X_Lithology.SedimentaryFeature1ID], \r\n       ");
            viewString.Append("     T.SedimentaryFeature2ID AS [X_Lithology.SedimentaryFeature2ID], \r\n         ");
            viewString.Append("   T.BeddingDip AS [X_Lithology.BeddingDip], \r\n            T.MineralAndFossilAbu");
            viewString.Append("ndanceID AS [X_Lithology.MineralAndFossilAbundanceID], \r\n            T.MineralAn");
            viewString.Append("dFossilTypeID AS [X_Lithology.MineralAndFossilTypeID], \r\n            T.MineralAn");
            viewString.Append("dFossilAssociationID AS [X_Lithology.MineralAndFossilAssociationID], \r\n         ");
            viewString.Append("   T.GasDetectedID AS [X_Lithology.GasDetectedID], \r\n            T.Description A");
            viewString.Append("S [X_Lithology.Description], \r\n            T.Version AS [X_Lithology.Version], \r");
            viewString.Append("\n            T.VersionAntecedentID AS [X_Lithology.VersionAntecedentID], \r\n     ");
            viewString.Append("       T.VersionCertainty AS [X_Lithology.VersionCertainty], \r\n            T.Ver");
            viewString.Append("sionWorkflowInstanceID AS [X_Lithology.VersionWorkflowInstanceID], \r\n           ");
            viewString.Append(" T.VersionUpdatedBy AS [X_Lithology.VersionUpdatedBy], \r\n            T.VersionDe");
            viewString.Append("letedBy AS [X_Lithology.VersionDeletedBy], \r\n            T.VersionOwnerContactID");
            viewString.Append(" AS [X_Lithology.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID A");
            viewString.Append("S [X_Lithology.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Lith");
            viewString.Append("ology.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Litholog");
            viewString.Append("ies AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Lithology", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Location
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView217()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2448);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Location\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.Store.X_Location](T1.[X_Location.LocationID], T1.[X_Location.LocationTypeID]");
            viewString.Append(", T1.[X_Location.DefaultLocationName], T1.[X_Location.LocationCode], T1.[X_Locat");
            viewString.Append("ion.LocationGeography], T1.[X_Location.LatitudeWGS84], T1.[X_Location.LongitudeW");
            viewString.Append("GS84], T1.[X_Location.Elevation], T1.[X_Location.CountryID], T1.[X_Location.Coun");
            viewString.Append("tryStateID], T1.[X_Location.DefaultCulture], T1.[X_Location.OwnerCompanyID], T1.");
            viewString.Append("[X_Location.ResponsibleContactID], T1.[X_Location.Comment], T1.[X_Location.Versi");
            viewString.Append("on], T1.[X_Location.VersionAntecedentID], T1.[X_Location.VersionCertainty], T1.[");
            viewString.Append("X_Location.VersionWorkflowInstanceID], T1.[X_Location.VersionUpdatedBy], T1.[X_L");
            viewString.Append("ocation.VersionDeletedBy], T1.[X_Location.VersionOwnerContactID], T1.[X_Location");
            viewString.Append(".VersionOwnerCompanyID], T1.[X_Location.VersionUpdated])\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.LocationID AS [X_Location.LocationID], \r\n            T.Loca");
            viewString.Append("tionTypeID AS [X_Location.LocationTypeID], \r\n            T.DefaultLocationName A");
            viewString.Append("S [X_Location.DefaultLocationName], \r\n            T.LocationCode AS [X_Location.");
            viewString.Append("LocationCode], \r\n            T.LocationGeography AS [X_Location.LocationGeograph");
            viewString.Append("y], \r\n            T.LatitudeWGS84 AS [X_Location.LatitudeWGS84], \r\n            T");
            viewString.Append(".LongitudeWGS84 AS [X_Location.LongitudeWGS84], \r\n            T.Elevation AS [X_");
            viewString.Append("Location.Elevation], \r\n            T.CountryID AS [X_Location.CountryID], \r\n    ");
            viewString.Append("        T.CountryStateID AS [X_Location.CountryStateID], \r\n            T.Default");
            viewString.Append("Culture AS [X_Location.DefaultCulture], \r\n            T.OwnerCompanyID AS [X_Loc");
            viewString.Append("ation.OwnerCompanyID], \r\n            T.ResponsibleContactID AS [X_Location.Respo");
            viewString.Append("nsibleContactID], \r\n            T.Comment AS [X_Location.Comment], \r\n           ");
            viewString.Append(" T.Version AS [X_Location.Version], \r\n            T.VersionAntecedentID AS [X_Lo");
            viewString.Append("cation.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Location.Ver");
            viewString.Append("sionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Location.Version");
            viewString.Append("WorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Location.VersionUpda");
            viewString.Append("tedBy], \r\n            T.VersionDeletedBy AS [X_Location.VersionDeletedBy], \r\n   ");
            viewString.Append("         T.VersionOwnerContactID AS [X_Location.VersionOwnerContactID], \r\n      ");
            viewString.Append("      T.VersionOwnerCompanyID AS [X_Location.VersionOwnerCompanyID], \r\n         ");
            viewString.Append("   T.VersionUpdated AS [X_Location.VersionUpdated], \r\n            True AS _from0");
            viewString.Append("\r\n        FROM XODBC.Locations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Location", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_LocationAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView218()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_LocationAlias", "\r\n    SELECT VALUE -- Constructing X_LocationAlias\r\n        [XODB.Module.Business" +
                    "Objects.Store.X_LocationAlias](T1.[X_LocationAlias.LocationAliasID], T1.[X_Locat" +
                    "ionAlias.LocationID], T1.[X_LocationAlias.Alias], T1.[X_LocationAlias.Culture], " +
                    "T1.[X_LocationAlias.Priority], T1.[X_LocationAlias.Version], T1.[X_LocationAlias" +
                    ".VersionAntecedentID], T1.[X_LocationAlias.VersionCertainty], T1.[X_LocationAlia" +
                    "s.VersionWorkflowInstanceID], T1.[X_LocationAlias.VersionUpdatedBy], T1.[X_Locat" +
                    "ionAlias.VersionDeletedBy], T1.[X_LocationAlias.VersionOwnerContactID], T1.[X_Lo" +
                    "cationAlias.VersionOwnerCompanyID], T1.[X_LocationAlias.VersionUpdated])\r\n    FR" +
                    "OM (\r\n        SELECT \r\n            T.LocationAliasID AS [X_LocationAlias.Locatio" +
                    "nAliasID], \r\n            T.LocationID AS [X_LocationAlias.LocationID], \r\n       " +
                    "     T.Alias AS [X_LocationAlias.Alias], \r\n            T.Culture AS [X_LocationA" +
                    "lias.Culture], \r\n            T.Priority AS [X_LocationAlias.Priority], \r\n       " +
                    "     T.Version AS [X_LocationAlias.Version], \r\n            T.VersionAntecedentID" +
                    " AS [X_LocationAlias.VersionAntecedentID], \r\n            T.VersionCertainty AS [" +
                    "X_LocationAlias.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS " +
                    "[X_LocationAlias.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS" +
                    " [X_LocationAlias.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Loca" +
                    "tionAlias.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Locatio" +
                    "nAlias.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Locat" +
                    "ionAlias.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_LocationAl" +
                    "ias.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.LocationAl" +
                    "ias AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_LocationData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView219()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_LocationData", "\r\n    SELECT VALUE -- Constructing X_LocationData\r\n        [XODB.Module.BusinessO" +
                    "bjects.Store.X_LocationData](T1.[X_LocationData.LocationDataID], T1.[X_LocationD" +
                    "ata.ParentLocationDataID], T1.[X_LocationData.TableType], T1.[X_LocationData.Ref" +
                    "erenceID], T1.[X_LocationData.LocationID], T1.[X_LocationData.Version], T1.[X_Lo" +
                    "cationData.VersionAntecedentID], T1.[X_LocationData.VersionCertainty], T1.[X_Loc" +
                    "ationData.VersionWorkflowInstanceID], T1.[X_LocationData.VersionUpdatedBy], T1.[" +
                    "X_LocationData.VersionDeletedBy], T1.[X_LocationData.VersionOwnerContactID], T1." +
                    "[X_LocationData.VersionOwnerCompanyID], T1.[X_LocationData.VersionUpdated])\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.LocationDataID AS [X_LocationData.Locati" +
                    "onDataID], \r\n            T.ParentLocationDataID AS [X_LocationData.ParentLocatio" +
                    "nDataID], \r\n            T.TableType AS [X_LocationData.TableType], \r\n           " +
                    " T.ReferenceID AS [X_LocationData.ReferenceID], \r\n            T.LocationID AS [X" +
                    "_LocationData.LocationID], \r\n            T.Version AS [X_LocationData.Version], " +
                    "\r\n            T.VersionAntecedentID AS [X_LocationData.VersionAntecedentID], \r\n " +
                    "           T.VersionCertainty AS [X_LocationData.VersionCertainty], \r\n          " +
                    "  T.VersionWorkflowInstanceID AS [X_LocationData.VersionWorkflowInstanceID], \r\n " +
                    "           T.VersionUpdatedBy AS [X_LocationData.VersionUpdatedBy], \r\n          " +
                    "  T.VersionDeletedBy AS [X_LocationData.VersionDeletedBy], \r\n            T.Versi" +
                    "onOwnerContactID AS [X_LocationData.VersionOwnerContactID], \r\n            T.Vers" +
                    "ionOwnerCompanyID AS [X_LocationData.VersionOwnerCompanyID], \r\n            T.Ver" +
                    "sionUpdated AS [X_LocationData.VersionUpdated], \r\n            True AS _from0\r\n  " +
                    "      FROM XODBC.LocationDatas AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_LocationHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView220()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_LocationHistory", "\r\n    SELECT VALUE -- Constructing X_LocationHistory\r\n        [XODB.Module.Busine" +
                    "ssObjects.Store.X_LocationHistory](T1.[X_LocationHistory.LocationHistoryID], T1." +
                    "[X_LocationHistory.LocationHistory], T1.[X_LocationHistory.LocationTaken], T1.[X" +
                    "_LocationHistory.CorrectedLocationID], T1.[X_LocationHistory.ContactID], T1.[X_L" +
                    "ocationHistory.Version], T1.[X_LocationHistory.VersionAntecedentID], T1.[X_Locat" +
                    "ionHistory.VersionCertainty], T1.[X_LocationHistory.VersionWorkflowInstanceID], " +
                    "T1.[X_LocationHistory.VersionUpdatedBy], T1.[X_LocationHistory.VersionDeletedBy]" +
                    ", T1.[X_LocationHistory.VersionOwnerContactID], T1.[X_LocationHistory.VersionOwn" +
                    "erCompanyID], T1.[X_LocationHistory.VersionUpdated])\r\n    FROM (\r\n        SELECT" +
                    " \r\n            T.LocationHistoryID AS [X_LocationHistory.LocationHistoryID], \r\n " +
                    "           T.LocationHistory AS [X_LocationHistory.LocationHistory], \r\n         " +
                    "   T.LocationTaken AS [X_LocationHistory.LocationTaken], \r\n            T.Correct" +
                    "edLocationID AS [X_LocationHistory.CorrectedLocationID], \r\n            T.Contact" +
                    "ID AS [X_LocationHistory.ContactID], \r\n            T.Version AS [X_LocationHisto" +
                    "ry.Version], \r\n            T.VersionAntecedentID AS [X_LocationHistory.VersionAn" +
                    "tecedentID], \r\n            T.VersionCertainty AS [X_LocationHistory.VersionCerta" +
                    "inty], \r\n            T.VersionWorkflowInstanceID AS [X_LocationHistory.VersionWo" +
                    "rkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_LocationHistory.Versio" +
                    "nUpdatedBy], \r\n            T.VersionDeletedBy AS [X_LocationHistory.VersionDelet" +
                    "edBy], \r\n            T.VersionOwnerContactID AS [X_LocationHistory.VersionOwnerC" +
                    "ontactID], \r\n            T.VersionOwnerCompanyID AS [X_LocationHistory.VersionOw" +
                    "nerCompanyID], \r\n            T.VersionUpdated AS [X_LocationHistory.VersionUpdat" +
                    "ed], \r\n            True AS _from0\r\n        FROM XODBC.LocationTraces AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Mineralogy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView221()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2163);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Mineralogy\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.X_Mineralogy](T1.[X_Mineralogy.MineralogyID], T1.[X_Mineralogy.Heade");
            viewString.Append("rID], T1.[X_Mineralogy.FromDepth], T1.[X_Mineralogy.ToDepth], T1.[X_Mineralogy.M");
            viewString.Append("ineralAbundanceID], T1.[X_Mineralogy.MineralFormID], T1.[X_Mineralogy.MineralTyp");
            viewString.Append("eID], T1.[X_Mineralogy.MineralStyleID], T1.[X_Mineralogy.Logged], T1.[X_Mineralo");
            viewString.Append("gy.LoggedBy], T1.[X_Mineralogy.Comment], T1.[X_Mineralogy.Version], T1.[X_Minera");
            viewString.Append("logy.VersionAntecedentID], T1.[X_Mineralogy.VersionCertainty], T1.[X_Mineralogy.");
            viewString.Append("VersionWorkflowInstanceID], T1.[X_Mineralogy.VersionUpdatedBy], T1.[X_Mineralogy");
            viewString.Append(".VersionDeletedBy], T1.[X_Mineralogy.VersionOwnerContactID], T1.[X_Mineralogy.Ve");
            viewString.Append("rsionOwnerCompanyID], T1.[X_Mineralogy.VersionUpdated])\r\n    FROM (\r\n        SEL");
            viewString.Append("ECT \r\n            T.MineralogyID AS [X_Mineralogy.MineralogyID], \r\n            T");
            viewString.Append(".HeaderID AS [X_Mineralogy.HeaderID], \r\n            T.FromDepth AS [X_Mineralogy");
            viewString.Append(".FromDepth], \r\n            T.ToDepth AS [X_Mineralogy.ToDepth], \r\n            T.");
            viewString.Append("MineralAbundanceID AS [X_Mineralogy.MineralAbundanceID], \r\n            T.Mineral");
            viewString.Append("FormID AS [X_Mineralogy.MineralFormID], \r\n            T.MineralTypeID AS [X_Mine");
            viewString.Append("ralogy.MineralTypeID], \r\n            T.MineralStyleID AS [X_Mineralogy.MineralSt");
            viewString.Append("yleID], \r\n            T.Logged AS [X_Mineralogy.Logged], \r\n            T.LoggedB");
            viewString.Append("y AS [X_Mineralogy.LoggedBy], \r\n            T.Comment AS [X_Mineralogy.Comment],");
            viewString.Append(" \r\n            T.Version AS [X_Mineralogy.Version], \r\n            T.VersionAntec");
            viewString.Append("edentID AS [X_Mineralogy.VersionAntecedentID], \r\n            T.VersionCertainty ");
            viewString.Append("AS [X_Mineralogy.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS");
            viewString.Append(" [X_Mineralogy.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [");
            viewString.Append("X_Mineralogy.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Mineralog");
            viewString.Append("y.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Mineralogy.Vers");
            viewString.Append("ionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Mineralogy.Versi");
            viewString.Append("onOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Mineralogy.VersionUpdate");
            viewString.Append("d], \r\n            True AS _from0\r\n        FROM XODBC.Mineralogies AS T\r\n    ) AS");
            viewString.Append(" T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Mineralogy", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ModelCharacteristic
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView222()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ModelCharacteristic", "\r\n    SELECT VALUE -- Constructing X_ModelCharacteristic\r\n        [XODB.Module.Bu" +
                    "sinessObjects.Store.X_ModelCharacteristic](T1.[X_ModelCharacteristic.ModelCharac" +
                    "teristicID], T1.[X_ModelCharacteristic.ModelID], T1.[X_ModelCharacteristic.Chara" +
                    "cteristicID], T1.[X_ModelCharacteristic.Value], T1.[X_ModelCharacteristic.Versio" +
                    "n], T1.[X_ModelCharacteristic.VersionAntecedentID], T1.[X_ModelCharacteristic.Ve" +
                    "rsionCertainty], T1.[X_ModelCharacteristic.VersionWorkflowInstanceID], T1.[X_Mod" +
                    "elCharacteristic.VersionUpdatedBy], T1.[X_ModelCharacteristic.VersionDeletedBy]," +
                    " T1.[X_ModelCharacteristic.VersionOwnerContactID], T1.[X_ModelCharacteristic.Ver" +
                    "sionOwnerCompanyID], T1.[X_ModelCharacteristic.VersionUpdated])\r\n    FROM (\r\n   " +
                    "     SELECT \r\n            T.ModelCharacteristicID AS [X_ModelCharacteristic.Mode" +
                    "lCharacteristicID], \r\n            T.ModelID AS [X_ModelCharacteristic.ModelID], " +
                    "\r\n            T.CharacteristicID AS [X_ModelCharacteristic.CharacteristicID], \r\n" +
                    "            T.[Value] AS [X_ModelCharacteristic.Value], \r\n            T.Version " +
                    "AS [X_ModelCharacteristic.Version], \r\n            T.VersionAntecedentID AS [X_Mo" +
                    "delCharacteristic.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_M" +
                    "odelCharacteristic.VersionCertainty], \r\n            T.VersionWorkflowInstanceID " +
                    "AS [X_ModelCharacteristic.VersionWorkflowInstanceID], \r\n            T.VersionUpd" +
                    "atedBy AS [X_ModelCharacteristic.VersionUpdatedBy], \r\n            T.VersionDelet" +
                    "edBy AS [X_ModelCharacteristic.VersionDeletedBy], \r\n            T.VersionOwnerCo" +
                    "ntactID AS [X_ModelCharacteristic.VersionOwnerContactID], \r\n            T.Versio" +
                    "nOwnerCompanyID AS [X_ModelCharacteristic.VersionOwnerCompanyID], \r\n            " +
                    "T.VersionUpdated AS [X_ModelCharacteristic.VersionUpdated], \r\n            True A" +
                    "S _from0\r\n        FROM XODBC.ModelCharacteristics AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Opportunity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView223()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3170);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Opportunity\r\n        [XODB.Module.BusinessO");
            viewString.Append("bjects.Store.X_Opportunity](T1.[X_Opportunity.OpportunityID], T1.[X_Opportunity.");
            viewString.Append("OpportunityName], T1.[X_Opportunity.OpportunityContactID], T1.[X_Opportunity.Opp");
            viewString.Append("ortunityCompanyID], T1.[X_Opportunity.StatusWorkTypeID], T1.[X_Opportunity.Regar");
            viewString.Append("dingWorkTypeID], T1.[X_Opportunity.Description], T1.[X_Opportunity.ProposalConta");
            viewString.Append("ctID], T1.[X_Opportunity.ProposalFileDataID], T1.[X_Opportunity.ProjectID], T1.[");
            viewString.Append("X_Opportunity.ExperienceID], T1.[X_Opportunity.OpenedBy], T1.[X_Opportunity.Assi");
            viewString.Append("gnedBy], T1.[X_Opportunity.MaintainedBy], T1.[X_Opportunity.ConvertedBy], T1.[X_");
            viewString.Append("Opportunity.EstimatedConversion], T1.[X_Opportunity.EstimatedDurationHours], T1.");
            viewString.Append("[X_Opportunity.EstimatedRevenue], T1.[X_Opportunity.Probability], T1.[X_Opportun");
            viewString.Append("ity.Version], T1.[X_Opportunity.VersionAntecedentID], T1.[X_Opportunity.VersionC");
            viewString.Append("ertainty], T1.[X_Opportunity.VersionWorkflowInstanceID], T1.[X_Opportunity.Versi");
            viewString.Append("onUpdatedBy], T1.[X_Opportunity.VersionDeletedBy], T1.[X_Opportunity.VersionOwne");
            viewString.Append("rContactID], T1.[X_Opportunity.VersionOwnerCompanyID], T1.[X_Opportunity.Version");
            viewString.Append("Updated])\r\n    FROM (\r\n        SELECT \r\n            T.OpportunityID AS [X_Opport");
            viewString.Append("unity.OpportunityID], \r\n            T.OpportunityName AS [X_Opportunity.Opportun");
            viewString.Append("ityName], \r\n            T.OpportunityContactID AS [X_Opportunity.OpportunityCont");
            viewString.Append("actID], \r\n            T.OpportunityCompanyID AS [X_Opportunity.OpportunityCompan");
            viewString.Append("yID], \r\n            T.StatusWorkTypeID AS [X_Opportunity.StatusWorkTypeID], \r\n  ");
            viewString.Append("          T.RegardingWorkTypeID AS [X_Opportunity.RegardingWorkTypeID], \r\n      ");
            viewString.Append("      T.Description AS [X_Opportunity.Description], \r\n            T.ProposalCont");
            viewString.Append("actID AS [X_Opportunity.ProposalContactID], \r\n            T.ProposalFileDataID A");
            viewString.Append("S [X_Opportunity.ProposalFileDataID], \r\n            T.ProjectID AS [X_Opportunit");
            viewString.Append("y.ProjectID], \r\n            T.ExperienceID AS [X_Opportunity.ExperienceID], \r\n  ");
            viewString.Append("          T.OpenedBy AS [X_Opportunity.OpenedBy], \r\n            T.AssignedBy AS ");
            viewString.Append("[X_Opportunity.AssignedBy], \r\n            T.MaintainedBy AS [X_Opportunity.Maint");
            viewString.Append("ainedBy], \r\n            T.ConvertedBy AS [X_Opportunity.ConvertedBy], \r\n        ");
            viewString.Append("    T.EstimatedConversion AS [X_Opportunity.EstimatedConversion], \r\n            ");
            viewString.Append("T.EstimatedDurationHours AS [X_Opportunity.EstimatedDurationHours], \r\n          ");
            viewString.Append("  T.EstimatedRevenue AS [X_Opportunity.EstimatedRevenue], \r\n            T.Probab");
            viewString.Append("ility AS [X_Opportunity.Probability], \r\n            T.Version AS [X_Opportunity.");
            viewString.Append("Version], \r\n            T.VersionAntecedentID AS [X_Opportunity.VersionAnteceden");
            viewString.Append("tID], \r\n            T.VersionCertainty AS [X_Opportunity.VersionCertainty], \r\n  ");
            viewString.Append("          T.VersionWorkflowInstanceID AS [X_Opportunity.VersionWorkflowInstanceI");
            viewString.Append("D], \r\n            T.VersionUpdatedBy AS [X_Opportunity.VersionUpdatedBy], \r\n    ");
            viewString.Append("        T.VersionDeletedBy AS [X_Opportunity.VersionDeletedBy], \r\n            T.");
            viewString.Append("VersionOwnerContactID AS [X_Opportunity.VersionOwnerContactID], \r\n            T.");
            viewString.Append("VersionOwnerCompanyID AS [X_Opportunity.VersionOwnerCompanyID], \r\n            T.");
            viewString.Append("VersionUpdated AS [X_Opportunity.VersionUpdated], \r\n            True AS _from0\r\n");
            viewString.Append("        FROM XODBC.Opportunities AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Opportunity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Parameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView224()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Parameter", "\r\n    SELECT VALUE -- Constructing X_Parameter\r\n        [XODB.Module.BusinessObje" +
                    "cts.Store.X_Parameter](T1.[X_Parameter.ParameterID], T1.[X_Parameter.ParameterTy" +
                    "pe], T1.[X_Parameter.ParameterName], T1.[X_Parameter.DefaultParameterValue], T1." +
                    "[X_Parameter.DefaultParameterText], T1.[X_Parameter.UnitID], T1.[X_Parameter.For" +
                    "mat], T1.[X_Parameter.Description], T1.[X_Parameter.Locale], T1.[X_Parameter.Ver" +
                    "sion], T1.[X_Parameter.VersionAntecedentID], T1.[X_Parameter.VersionCertainty], " +
                    "T1.[X_Parameter.VersionWorkflowInstanceID], T1.[X_Parameter.VersionUpdatedBy], T" +
                    "1.[X_Parameter.VersionDeletedBy], T1.[X_Parameter.VersionOwnerContactID], T1.[X_" +
                    "Parameter.VersionOwnerCompanyID], T1.[X_Parameter.VersionUpdated])\r\n    FROM (\r\n" +
                    "        SELECT \r\n            T.ParameterID AS [X_Parameter.ParameterID], \r\n     " +
                    "       T.ParameterType AS [X_Parameter.ParameterType], \r\n            T.Parameter" +
                    "Name AS [X_Parameter.ParameterName], \r\n            T.DefaultParameterValue AS [X" +
                    "_Parameter.DefaultParameterValue], \r\n            T.DefaultParameterText AS [X_Pa" +
                    "rameter.DefaultParameterText], \r\n            T.UnitID AS [X_Parameter.UnitID], \r" +
                    "\n            T.Format AS [X_Parameter.Format], \r\n            T.Description AS [X" +
                    "_Parameter.Description], \r\n            T.Locale AS [X_Parameter.Locale], \r\n     " +
                    "       T.Version AS [X_Parameter.Version], \r\n            T.VersionAntecedentID A" +
                    "S [X_Parameter.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Para" +
                    "meter.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Paramet" +
                    "er.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Parameter." +
                    "VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Parameter.VersionDelet" +
                    "edBy], \r\n            T.VersionOwnerContactID AS [X_Parameter.VersionOwnerContact" +
                    "ID], \r\n            T.VersionOwnerCompanyID AS [X_Parameter.VersionOwnerCompanyID" +
                    "], \r\n            T.VersionUpdated AS [X_Parameter.VersionUpdated], \r\n           " +
                    " True AS _from0\r\n        FROM XODBC.Parameters AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ParameterDuplicate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView225()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ParameterDuplicate", "\r\n    SELECT VALUE -- Constructing X_ParameterDuplicate\r\n        [XODB.Module.Bus" +
                    "inessObjects.Store.X_ParameterDuplicate](T1.[X_ParameterDuplicate.ParameterDupli" +
                    "cateID], T1.[X_ParameterDuplicate.Parameter1ID], T1.[X_ParameterDuplicate.Parame" +
                    "ter2ID], T1.[X_ParameterDuplicate.Version], T1.[X_ParameterDuplicate.VersionAnte" +
                    "cedentID], T1.[X_ParameterDuplicate.VersionCertainty], T1.[X_ParameterDuplicate." +
                    "VersionWorkflowInstanceID], T1.[X_ParameterDuplicate.VersionUpdatedBy], T1.[X_Pa" +
                    "rameterDuplicate.VersionDeletedBy], T1.[X_ParameterDuplicate.VersionOwnerContact" +
                    "ID], T1.[X_ParameterDuplicate.VersionOwnerCompanyID], T1.[X_ParameterDuplicate.V" +
                    "ersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.ParameterDuplicateID" +
                    " AS [X_ParameterDuplicate.ParameterDuplicateID], \r\n            T.Parameter1ID AS" +
                    " [X_ParameterDuplicate.Parameter1ID], \r\n            T.Parameter2ID AS [X_Paramet" +
                    "erDuplicate.Parameter2ID], \r\n            T.Version AS [X_ParameterDuplicate.Vers" +
                    "ion], \r\n            T.VersionAntecedentID AS [X_ParameterDuplicate.VersionAntece" +
                    "dentID], \r\n            T.VersionCertainty AS [X_ParameterDuplicate.VersionCertai" +
                    "nty], \r\n            T.VersionWorkflowInstanceID AS [X_ParameterDuplicate.Version" +
                    "WorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_ParameterDuplicate.V" +
                    "ersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_ParameterDuplicate.Vers" +
                    "ionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_ParameterDuplicate.Ve" +
                    "rsionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_ParameterDupli" +
                    "cate.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_ParameterDupli" +
                    "cate.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Parameter" +
                    "Duplicates AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ParameterGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView226()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ParameterGroup", "\r\n    SELECT VALUE -- Constructing X_ParameterGroup\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_ParameterGroup](T1.[X_ParameterGroup.ParameterGroupID], T1.[X_P" +
                    "arameterGroup.ParameterID], T1.[X_ParameterGroup.GroupID], T1.[X_ParameterGroup." +
                    "Version], T1.[X_ParameterGroup.VersionAntecedentID], T1.[X_ParameterGroup.Versio" +
                    "nCertainty], T1.[X_ParameterGroup.VersionWorkflowInstanceID], T1.[X_ParameterGro" +
                    "up.VersionUpdatedBy], T1.[X_ParameterGroup.VersionDeletedBy], T1.[X_ParameterGro" +
                    "up.VersionOwnerContactID], T1.[X_ParameterGroup.VersionOwnerCompanyID], T1.[X_Pa" +
                    "rameterGroup.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.Parame" +
                    "terGroupID AS [X_ParameterGroup.ParameterGroupID], \r\n            T.ParameterID A" +
                    "S [X_ParameterGroup.ParameterID], \r\n            T.GroupID AS [X_ParameterGroup.G" +
                    "roupID], \r\n            T.Version AS [X_ParameterGroup.Version], \r\n            T." +
                    "VersionAntecedentID AS [X_ParameterGroup.VersionAntecedentID], \r\n            T.V" +
                    "ersionCertainty AS [X_ParameterGroup.VersionCertainty], \r\n            T.VersionW" +
                    "orkflowInstanceID AS [X_ParameterGroup.VersionWorkflowInstanceID], \r\n           " +
                    " T.VersionUpdatedBy AS [X_ParameterGroup.VersionUpdatedBy], \r\n            T.Vers" +
                    "ionDeletedBy AS [X_ParameterGroup.VersionDeletedBy], \r\n            T.VersionOwne" +
                    "rContactID AS [X_ParameterGroup.VersionOwnerContactID], \r\n            T.VersionO" +
                    "wnerCompanyID AS [X_ParameterGroup.VersionOwnerCompanyID], \r\n            T.Versi" +
                    "onUpdated AS [X_ParameterGroup.VersionUpdated], \r\n            True AS _from0\r\n  " +
                    "      FROM XODBC.ParameterGroups AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_PartCharacteristic
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView227()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_PartCharacteristic", "\r\n    SELECT VALUE -- Constructing X_PartCharacteristic\r\n        [XODB.Module.Bus" +
                    "inessObjects.Store.X_PartCharacteristic](T1.[X_PartCharacteristic.PartCharacteri" +
                    "sticID], T1.[X_PartCharacteristic.PartID], T1.[X_PartCharacteristic.Characterist" +
                    "icID], T1.[X_PartCharacteristic.Value], T1.[X_PartCharacteristic.Version], T1.[X" +
                    "_PartCharacteristic.VersionAntecedentID], T1.[X_PartCharacteristic.VersionCertai" +
                    "nty], T1.[X_PartCharacteristic.VersionWorkflowInstanceID], T1.[X_PartCharacteris" +
                    "tic.VersionUpdatedBy], T1.[X_PartCharacteristic.VersionDeletedBy], T1.[X_PartCha" +
                    "racteristic.VersionOwnerContactID], T1.[X_PartCharacteristic.VersionOwnerCompany" +
                    "ID], T1.[X_PartCharacteristic.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n   " +
                    "         T.PartCharacteristicID AS [X_PartCharacteristic.PartCharacteristicID], " +
                    "\r\n            T.PartID AS [X_PartCharacteristic.PartID], \r\n            T.Charact" +
                    "eristicID AS [X_PartCharacteristic.CharacteristicID], \r\n            T.[Value] AS" +
                    " [X_PartCharacteristic.Value], \r\n            T.Version AS [X_PartCharacteristic." +
                    "Version], \r\n            T.VersionAntecedentID AS [X_PartCharacteristic.VersionAn" +
                    "tecedentID], \r\n            T.VersionCertainty AS [X_PartCharacteristic.VersionCe" +
                    "rtainty], \r\n            T.VersionWorkflowInstanceID AS [X_PartCharacteristic.Ver" +
                    "sionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_PartCharacterist" +
                    "ic.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_PartCharacteristic." +
                    "VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_PartCharacteristi" +
                    "c.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_PartCharac" +
                    "teristic.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_PartCharac" +
                    "teristic.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.PartC" +
                    "haracteristics AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_PointLoad
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView228()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2601);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_PointLoad\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.Store.X_PointLoad](T1.[X_PointLoad.PointLoadID], T1.[X_PointLoad.HeaderID],");
            viewString.Append(" T1.[X_PointLoad.FromDepth], T1.[X_PointLoad.ToDepth], T1.[X_PointLoad.SampleNum");
            viewString.Append("ber], T1.[X_PointLoad.SampleLength], T1.[X_PointLoad.SampleStateID], T1.[X_Point");
            viewString.Append("Load.SampleTypeID], T1.[X_PointLoad.TestSampleCode], T1.[X_PointLoad.TestSampleD");
            viewString.Append("epth], T1.[X_PointLoad.PointLoadTestTypeID], T1.[X_PointLoad.PlatenSeparation], ");
            viewString.Append("T1.[X_PointLoad.Width], T1.[X_PointLoad.FailureLoad], T1.[X_PointLoad.FailureMod");
            viewString.Append("eID], T1.[X_PointLoad.Comment], T1.[X_PointLoad.Version], T1.[X_PointLoad.Versio");
            viewString.Append("nAntecedentID], T1.[X_PointLoad.VersionCertainty], T1.[X_PointLoad.VersionWorkfl");
            viewString.Append("owInstanceID], T1.[X_PointLoad.VersionUpdatedBy], T1.[X_PointLoad.VersionDeleted");
            viewString.Append("By], T1.[X_PointLoad.VersionOwnerContactID], T1.[X_PointLoad.VersionOwnerCompany");
            viewString.Append("ID], T1.[X_PointLoad.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            ");
            viewString.Append("T.PointLoadID AS [X_PointLoad.PointLoadID], \r\n            T.HeaderID AS [X_Point");
            viewString.Append("Load.HeaderID], \r\n            T.FromDepth AS [X_PointLoad.FromDepth], \r\n        ");
            viewString.Append("    T.ToDepth AS [X_PointLoad.ToDepth], \r\n            T.SampleNumber AS [X_Point");
            viewString.Append("Load.SampleNumber], \r\n            T.SampleLength AS [X_PointLoad.SampleLength], ");
            viewString.Append("\r\n            T.SampleStateID AS [X_PointLoad.SampleStateID], \r\n            T.Sa");
            viewString.Append("mpleTypeID AS [X_PointLoad.SampleTypeID], \r\n            T.TestSampleCode AS [X_P");
            viewString.Append("ointLoad.TestSampleCode], \r\n            T.TestSampleDepth AS [X_PointLoad.TestSa");
            viewString.Append("mpleDepth], \r\n            T.PointLoadTestTypeID AS [X_PointLoad.PointLoadTestTyp");
            viewString.Append("eID], \r\n            T.PlatenSeparation AS [X_PointLoad.PlatenSeparation], \r\n    ");
            viewString.Append("        T.Width AS [X_PointLoad.Width], \r\n            T.FailureLoad AS [X_PointL");
            viewString.Append("oad.FailureLoad], \r\n            T.FailureModeID AS [X_PointLoad.FailureModeID], ");
            viewString.Append("\r\n            T.Comment AS [X_PointLoad.Comment], \r\n            T.Version AS [X_");
            viewString.Append("PointLoad.Version], \r\n            T.VersionAntecedentID AS [X_PointLoad.VersionA");
            viewString.Append("ntecedentID], \r\n            T.VersionCertainty AS [X_PointLoad.VersionCertainty]");
            viewString.Append(", \r\n            T.VersionWorkflowInstanceID AS [X_PointLoad.VersionWorkflowInsta");
            viewString.Append("nceID], \r\n            T.VersionUpdatedBy AS [X_PointLoad.VersionUpdatedBy], \r\n  ");
            viewString.Append("          T.VersionDeletedBy AS [X_PointLoad.VersionDeletedBy], \r\n            T.");
            viewString.Append("VersionOwnerContactID AS [X_PointLoad.VersionOwnerContactID], \r\n            T.Ve");
            viewString.Append("rsionOwnerCompanyID AS [X_PointLoad.VersionOwnerCompanyID], \r\n            T.Vers");
            viewString.Append("ionUpdated AS [X_PointLoad.VersionUpdated], \r\n            True AS _from0\r\n      ");
            viewString.Append("  FROM XODBC.PointLoads AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_PointLoad", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Project
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView229()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Project", "\r\n    SELECT VALUE -- Constructing X_Project\r\n        [XODB.Module.BusinessObject" +
                    "s.Store.X_Project](T1.[X_Project.ProjectID], T1.[X_Project.ParentProjectID], T1." +
                    "[X_Project.TenementID], T1.[X_Project.ProjectName], T1.[X_Project.ProjectCode], " +
                    "T1.[X_Project.ClientCompanyID], T1.[X_Project.Comment], T1.[X_Project.Version], " +
                    "T1.[X_Project.VersionAntecedentID], T1.[X_Project.VersionCertainty], T1.[X_Proje" +
                    "ct.VersionWorkflowInstanceID], T1.[X_Project.VersionUpdatedBy], T1.[X_Project.Ve" +
                    "rsionDeletedBy], T1.[X_Project.VersionOwnerContactID], T1.[X_Project.VersionOwne" +
                    "rCompanyID], T1.[X_Project.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n      " +
                    "      T.ProjectID AS [X_Project.ProjectID], \r\n            T.ParentProjectID AS [" +
                    "X_Project.ParentProjectID], \r\n            T.TenementID AS [X_Project.TenementID]" +
                    ", \r\n            T.ProjectName AS [X_Project.ProjectName], \r\n            T.Projec" +
                    "tCode AS [X_Project.ProjectCode], \r\n            T.ClientCompanyID AS [X_Project." +
                    "ClientCompanyID], \r\n            T.Comment AS [X_Project.Comment], \r\n            " +
                    "T.Version AS [X_Project.Version], \r\n            T.VersionAntecedentID AS [X_Proj" +
                    "ect.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Project.Version" +
                    "Certainty], \r\n            T.VersionWorkflowInstanceID AS [X_Project.VersionWorkf" +
                    "lowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Project.VersionUpdatedBy]" +
                    ", \r\n            T.VersionDeletedBy AS [X_Project.VersionDeletedBy], \r\n          " +
                    "  T.VersionOwnerContactID AS [X_Project.VersionOwnerContactID], \r\n            T." +
                    "VersionOwnerCompanyID AS [X_Project.VersionOwnerCompanyID], \r\n            T.Vers" +
                    "ionUpdated AS [X_Project.VersionUpdated], \r\n            True AS _from0\r\n        " +
                    "FROM XODBC.Projects AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectDeliverable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView230()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4333);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ProjectDeliverable\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.Store.X_ProjectDeliverable](T1.[X_ProjectDeliverable.ProjectDelive");
            viewString.Append("rableID], T1.[X_ProjectDeliverable.ProjectID], T1.[X_ProjectDeliverable.Sequence");
            viewString.Append("], T1.[X_ProjectDeliverable.DeliverableName], T1.[X_ProjectDeliverable.WorkTypeI");
            viewString.Append("D], T1.[X_ProjectDeliverable.MilestoneTaskID], T1.[X_ProjectDeliverable.Descript");
            viewString.Append("ion], T1.[X_ProjectDeliverable.InitiatedBy], T1.[X_ProjectDeliverable.Initiated]");
            viewString.Append(", T1.[X_ProjectDeliverable.ApprovedBy], T1.[X_ProjectDeliverable.Approved], T1.[");
            viewString.Append("X_ProjectDeliverable.EvidenceDescription], T1.[X_ProjectDeliverable.EvidenceFile");
            viewString.Append("DataID], T1.[X_ProjectDeliverable.EvidenceContractID], T1.[X_ProjectDeliverable.");
            viewString.Append("EvidenceContactID], T1.[X_ProjectDeliverable.EvidenceCreated], T1.[X_ProjectDeli");
            viewString.Append("verable.ExpectedProRataUnits], T1.[X_ProjectDeliverable.ExpectedProRataPerUnitID");
            viewString.Append("], T1.[X_ProjectDeliverable.ExpectedProRataValue], T1.[X_ProjectDeliverable.Esti");
            viewString.Append("matedDurationManHours], T1.[X_ProjectDeliverable.EstimatedCost], T1.[X_ProjectDe");
            viewString.Append("liverable.Due], T1.[X_ProjectDeliverable.HourlyPenalties], T1.[X_ProjectDelivera");
            viewString.Append("ble.TotalValue], T1.[X_ProjectDeliverable.Completed], T1.[X_ProjectDeliverable.C");
            viewString.Append("omment], T1.[X_ProjectDeliverable.Version], T1.[X_ProjectDeliverable.VersionAnte");
            viewString.Append("cedentID], T1.[X_ProjectDeliverable.VersionCertainty], T1.[X_ProjectDeliverable.");
            viewString.Append("VersionWorkflowInstanceID], T1.[X_ProjectDeliverable.VersionUpdatedBy], T1.[X_Pr");
            viewString.Append("ojectDeliverable.VersionDeletedBy], T1.[X_ProjectDeliverable.VersionOwnerContact");
            viewString.Append("ID], T1.[X_ProjectDeliverable.VersionOwnerCompanyID], T1.[X_ProjectDeliverable.V");
            viewString.Append("ersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.ProjectDeliverableID");
            viewString.Append(" AS [X_ProjectDeliverable.ProjectDeliverableID], \r\n            T.ProjectID AS [X");
            viewString.Append("_ProjectDeliverable.ProjectID], \r\n            T.Sequence AS [X_ProjectDeliverabl");
            viewString.Append("e.Sequence], \r\n            T.DeliverableName AS [X_ProjectDeliverable.Deliverabl");
            viewString.Append("eName], \r\n            T.WorkTypeID AS [X_ProjectDeliverable.WorkTypeID], \r\n     ");
            viewString.Append("       T.MilestoneTaskID AS [X_ProjectDeliverable.MilestoneTaskID], \r\n          ");
            viewString.Append("  T.Description AS [X_ProjectDeliverable.Description], \r\n            T.Initiated");
            viewString.Append("By AS [X_ProjectDeliverable.InitiatedBy], \r\n            T.Initiated AS [X_Projec");
            viewString.Append("tDeliverable.Initiated], \r\n            T.ApprovedBy AS [X_ProjectDeliverable.App");
            viewString.Append("rovedBy], \r\n            T.Approved AS [X_ProjectDeliverable.Approved], \r\n       ");
            viewString.Append("     T.EvidenceDescription AS [X_ProjectDeliverable.EvidenceDescription], \r\n    ");
            viewString.Append("        T.EvidenceFileDataID AS [X_ProjectDeliverable.EvidenceFileDataID], \r\n   ");
            viewString.Append("         T.EvidenceContractID AS [X_ProjectDeliverable.EvidenceContractID], \r\n  ");
            viewString.Append("          T.EvidenceContactID AS [X_ProjectDeliverable.EvidenceContactID], \r\n   ");
            viewString.Append("         T.EvidenceCreated AS [X_ProjectDeliverable.EvidenceCreated], \r\n        ");
            viewString.Append("    T.ExpectedProRataUnits AS [X_ProjectDeliverable.ExpectedProRataUnits], \r\n   ");
            viewString.Append("         T.ExpectedProRataPerUnitID AS [X_ProjectDeliverable.ExpectedProRataPerU");
            viewString.Append("nitID], \r\n            T.ExpectedProRataValue AS [X_ProjectDeliverable.ExpectedPr");
            viewString.Append("oRataValue], \r\n            T.EstimatedDurationManHours AS [X_ProjectDeliverable.");
            viewString.Append("EstimatedDurationManHours], \r\n            T.EstimatedCost AS [X_ProjectDeliverab");
            viewString.Append("le.EstimatedCost], \r\n            T.Due AS [X_ProjectDeliverable.Due], \r\n        ");
            viewString.Append("    T.HourlyPenalties AS [X_ProjectDeliverable.HourlyPenalties], \r\n            T");
            viewString.Append(".TotalValue AS [X_ProjectDeliverable.TotalValue], \r\n            T.Completed AS [");
            viewString.Append("X_ProjectDeliverable.Completed], \r\n            T.Comment AS [X_ProjectDeliverabl");
            viewString.Append("e.Comment], \r\n            T.Version AS [X_ProjectDeliverable.Version], \r\n       ");
            viewString.Append("     T.VersionAntecedentID AS [X_ProjectDeliverable.VersionAntecedentID], \r\n    ");
            viewString.Append("        T.VersionCertainty AS [X_ProjectDeliverable.VersionCertainty], \r\n       ");
            viewString.Append("     T.VersionWorkflowInstanceID AS [X_ProjectDeliverable.VersionWorkflowInstanc");
            viewString.Append("eID], \r\n            T.VersionUpdatedBy AS [X_ProjectDeliverable.VersionUpdatedBy");
            viewString.Append("], \r\n            T.VersionDeletedBy AS [X_ProjectDeliverable.VersionDeletedBy], ");
            viewString.Append("\r\n            T.VersionOwnerContactID AS [X_ProjectDeliverable.VersionOwnerConta");
            viewString.Append("ctID], \r\n            T.VersionOwnerCompanyID AS [X_ProjectDeliverable.VersionOwn");
            viewString.Append("erCompanyID], \r\n            T.VersionUpdated AS [X_ProjectDeliverable.VersionUpd");
            viewString.Append("ated], \r\n            True AS _from0\r\n        FROM XODBC.ProjectDeliverables AS T");
            viewString.Append("\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectDeliverable", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectPlan
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView231()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectPlan", "\r\n    SELECT VALUE -- Constructing X_ProjectPlan\r\n        [XODB.Module.BusinessOb" +
                    "jects.Store.X_ProjectPlan](T1.[X_ProjectPlan.ProjectPlanID], T1.[X_ProjectPlan.P" +
                    "rojectID], T1.[X_ProjectPlan.ParentProjectPlanID], T1.[X_ProjectPlan.ProjectPlan" +
                    "Name], T1.[X_ProjectPlan.ResponsibleContactID], T1.[X_ProjectPlan.Comment], T1.[" +
                    "X_ProjectPlan.Version], T1.[X_ProjectPlan.VersionAntecedentID], T1.[X_ProjectPla" +
                    "n.VersionCertainty], T1.[X_ProjectPlan.VersionWorkflowInstanceID], T1.[X_Project" +
                    "Plan.VersionUpdatedBy], T1.[X_ProjectPlan.VersionDeletedBy], T1.[X_ProjectPlan.V" +
                    "ersionOwnerContactID], T1.[X_ProjectPlan.VersionOwnerCompanyID], T1.[X_ProjectPl" +
                    "an.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.ProjectPlanID AS" +
                    " [X_ProjectPlan.ProjectPlanID], \r\n            T.ProjectID AS [X_ProjectPlan.Proj" +
                    "ectID], \r\n            T.ParentProjectPlanID AS [X_ProjectPlan.ParentProjectPlanI" +
                    "D], \r\n            T.ProjectPlanName AS [X_ProjectPlan.ProjectPlanName], \r\n      " +
                    "      T.ResponsibleContactID AS [X_ProjectPlan.ResponsibleContactID], \r\n        " +
                    "    T.Comment AS [X_ProjectPlan.Comment], \r\n            T.Version AS [X_ProjectP" +
                    "lan.Version], \r\n            T.VersionAntecedentID AS [X_ProjectPlan.VersionAntec" +
                    "edentID], \r\n            T.VersionCertainty AS [X_ProjectPlan.VersionCertainty], " +
                    "\r\n            T.VersionWorkflowInstanceID AS [X_ProjectPlan.VersionWorkflowInsta" +
                    "nceID], \r\n            T.VersionUpdatedBy AS [X_ProjectPlan.VersionUpdatedBy], \r\n" +
                    "            T.VersionDeletedBy AS [X_ProjectPlan.VersionDeletedBy], \r\n          " +
                    "  T.VersionOwnerContactID AS [X_ProjectPlan.VersionOwnerContactID], \r\n          " +
                    "  T.VersionOwnerCompanyID AS [X_ProjectPlan.VersionOwnerCompanyID], \r\n          " +
                    "  T.VersionUpdated AS [X_ProjectPlan.VersionUpdated], \r\n            True AS _fro" +
                    "m0\r\n        FROM XODBC.ProjectPlans AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTask
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView232()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2510);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ProjectPlanTask\r\n        [XODB.Module.Busin");
            viewString.Append("essObjects.Store.X_ProjectPlanTask](T1.[X_ProjectPlanTask.ProjectPlanTaskID], T1");
            viewString.Append(".[X_ProjectPlanTask.ProjectPlanID], T1.[X_ProjectPlanTask.ParentProjectTaskID], ");
            viewString.Append("T1.[X_ProjectPlanTask.ProjectTaskName], T1.[X_ProjectPlanTask.TaskID], T1.[X_Pro");
            viewString.Append("jectPlanTask.WorkTypeID], T1.[X_ProjectPlanTask.Priority], T1.[X_ProjectPlanTask");
            viewString.Append(".Progress], T1.[X_ProjectPlanTask.StartDate], T1.[X_ProjectPlanTask.StopDate], T");
            viewString.Append("1.[X_ProjectPlanTask.AllocatedManHours], T1.[X_ProjectPlanTask.Comment], T1.[X_P");
            viewString.Append("rojectPlanTask.Version], T1.[X_ProjectPlanTask.VersionAntecedentID], T1.[X_Proje");
            viewString.Append("ctPlanTask.VersionCertainty], T1.[X_ProjectPlanTask.VersionWorkflowInstanceID], ");
            viewString.Append("T1.[X_ProjectPlanTask.VersionUpdatedBy], T1.[X_ProjectPlanTask.VersionDeletedBy]");
            viewString.Append(", T1.[X_ProjectPlanTask.VersionOwnerContactID], T1.[X_ProjectPlanTask.VersionOwn");
            viewString.Append("erCompanyID], T1.[X_ProjectPlanTask.VersionUpdated])\r\n    FROM (\r\n        SELECT");
            viewString.Append(" \r\n            T.ProjectPlanTaskID AS [X_ProjectPlanTask.ProjectPlanTaskID], \r\n ");
            viewString.Append("           T.ProjectPlanID AS [X_ProjectPlanTask.ProjectPlanID], \r\n            T");
            viewString.Append(".ParentProjectTaskID AS [X_ProjectPlanTask.ParentProjectTaskID], \r\n            T");
            viewString.Append(".ProjectTaskName AS [X_ProjectPlanTask.ProjectTaskName], \r\n            T.TaskID ");
            viewString.Append("AS [X_ProjectPlanTask.TaskID], \r\n            T.WorkTypeID AS [X_ProjectPlanTask.");
            viewString.Append("WorkTypeID], \r\n            T.Priority AS [X_ProjectPlanTask.Priority], \r\n       ");
            viewString.Append("     T.Progress AS [X_ProjectPlanTask.Progress], \r\n            T.StartDate AS [X");
            viewString.Append("_ProjectPlanTask.StartDate], \r\n            T.StopDate AS [X_ProjectPlanTask.Stop");
            viewString.Append("Date], \r\n            T.AllocatedManHours AS [X_ProjectPlanTask.AllocatedManHours");
            viewString.Append("], \r\n            T.Comment AS [X_ProjectPlanTask.Comment], \r\n            T.Versi");
            viewString.Append("on AS [X_ProjectPlanTask.Version], \r\n            T.VersionAntecedentID AS [X_Pro");
            viewString.Append("jectPlanTask.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Projec");
            viewString.Append("tPlanTask.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Pro");
            viewString.Append("jectPlanTask.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_");
            viewString.Append("ProjectPlanTask.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Projec");
            viewString.Append("tPlanTask.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Project");
            viewString.Append("PlanTask.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Pro");
            viewString.Append("jectPlanTask.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Projec");
            viewString.Append("tPlanTask.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Proj");
            viewString.Append("ectPlanTasks AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTask", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskComplianceResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView233()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3071);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ProjectPlanTaskComplianceResponse\r\n        ");
            viewString.Append("[XODB.Module.BusinessObjects.Store.X_ProjectPlanTaskComplianceResponse](T1.[X_Pr");
            viewString.Append("ojectPlanTaskComplianceResponse.ProjectPlanTaskComplianceResponseID], T1.[X_Proj");
            viewString.Append("ectPlanTaskComplianceResponse.ProjectPlanTaskID], T1.[X_ProjectPlanTaskComplianc");
            viewString.Append("eResponse.ProjectPlanTaskResponseID], T1.[X_ProjectPlanTaskComplianceResponse.Co");
            viewString.Append("mplianceWorkTypeID], T1.[X_ProjectPlanTaskComplianceResponse.ComplianceFormRespo");
            viewString.Append("nse], T1.[X_ProjectPlanTaskComplianceResponse.CompletedBy], T1.[X_ProjectPlanTas");
            viewString.Append("kComplianceResponse.Completed], T1.[X_ProjectPlanTaskComplianceResponse.Approved");
            viewString.Append("By], T1.[X_ProjectPlanTaskComplianceResponse.Approved], T1.[X_ProjectPlanTaskCom");
            viewString.Append("plianceResponse.Version], T1.[X_ProjectPlanTaskComplianceResponse.VersionAnteced");
            viewString.Append("entID], T1.[X_ProjectPlanTaskComplianceResponse.VersionCertainty], T1.[X_Project");
            viewString.Append("PlanTaskComplianceResponse.VersionWorkflowInstanceID], T1.[X_ProjectPlanTaskComp");
            viewString.Append("lianceResponse.VersionUpdatedBy], T1.[X_ProjectPlanTaskComplianceResponse.Versio");
            viewString.Append("nDeletedBy], T1.[X_ProjectPlanTaskComplianceResponse.VersionOwnerContactID], T1.");
            viewString.Append("[X_ProjectPlanTaskComplianceResponse.VersionOwnerCompanyID], T1.[X_ProjectPlanTa");
            viewString.Append("skComplianceResponse.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            ");
            viewString.Append("T.ProjectPlanTaskComplianceResponseID AS [X_ProjectPlanTaskComplianceResponse.Pr");
            viewString.Append("ojectPlanTaskComplianceResponseID], \r\n            T.ProjectPlanTaskID AS [X_Proj");
            viewString.Append("ectPlanTaskComplianceResponse.ProjectPlanTaskID], \r\n            T.ProjectPlanTas");
            viewString.Append("kResponseID AS [X_ProjectPlanTaskComplianceResponse.ProjectPlanTaskResponseID], ");
            viewString.Append("\r\n            T.ComplianceWorkTypeID AS [X_ProjectPlanTaskComplianceResponse.Com");
            viewString.Append("plianceWorkTypeID], \r\n            T.ComplianceFormResponse AS [X_ProjectPlanTask");
            viewString.Append("ComplianceResponse.ComplianceFormResponse], \r\n            T.CompletedBy AS [X_Pr");
            viewString.Append("ojectPlanTaskComplianceResponse.CompletedBy], \r\n            T.Completed AS [X_Pr");
            viewString.Append("ojectPlanTaskComplianceResponse.Completed], \r\n            T.ApprovedBy AS [X_Pro");
            viewString.Append("jectPlanTaskComplianceResponse.ApprovedBy], \r\n            T.Approved AS [X_Proje");
            viewString.Append("ctPlanTaskComplianceResponse.Approved], \r\n            T.Version AS [X_ProjectPla");
            viewString.Append("nTaskComplianceResponse.Version], \r\n            T.VersionAntecedentID AS [X_Proj");
            viewString.Append("ectPlanTaskComplianceResponse.VersionAntecedentID], \r\n            T.VersionCerta");
            viewString.Append("inty AS [X_ProjectPlanTaskComplianceResponse.VersionCertainty], \r\n            T.");
            viewString.Append("VersionWorkflowInstanceID AS [X_ProjectPlanTaskComplianceResponse.VersionWorkflo");
            viewString.Append("wInstanceID], \r\n            T.VersionUpdatedBy AS [X_ProjectPlanTaskComplianceRe");
            viewString.Append("sponse.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_ProjectPlanTask");
            viewString.Append("ComplianceResponse.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [");
            viewString.Append("X_ProjectPlanTaskComplianceResponse.VersionOwnerContactID], \r\n            T.Vers");
            viewString.Append("ionOwnerCompanyID AS [X_ProjectPlanTaskComplianceResponse.VersionOwnerCompanyID]");
            viewString.Append(", \r\n            T.VersionUpdated AS [X_ProjectPlanTaskComplianceResponse.Version");
            viewString.Append("Updated], \r\n            True AS _from0\r\n        FROM XODBC.ProjectPlanTaskCompli");
            viewString.Append("anceResponses AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskComplianceResponse", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView234()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskData", "\r\n    SELECT VALUE -- Constructing X_ProjectPlanTaskData\r\n        [XODB.Module.Bu" +
                    "sinessObjects.Store.X_ProjectPlanTaskData](T1.[X_ProjectPlanTaskData.ProjectPlan" +
                    "TaskDataID], T1.[X_ProjectPlanTaskData.ParentProjectPlanTaskDataID], T1.[X_Proje" +
                    "ctPlanTaskData.TableType], T1.[X_ProjectPlanTaskData.ReferenceID], T1.[X_Project" +
                    "PlanTaskData.ProjectPlanTaskID], T1.[X_ProjectPlanTaskData.Version], T1.[X_Proje" +
                    "ctPlanTaskData.VersionAntecedentID], T1.[X_ProjectPlanTaskData.VersionCertainty]" +
                    ", T1.[X_ProjectPlanTaskData.VersionWorkflowInstanceID], T1.[X_ProjectPlanTaskDat" +
                    "a.VersionUpdatedBy], T1.[X_ProjectPlanTaskData.VersionDeletedBy], T1.[X_ProjectP" +
                    "lanTaskData.VersionOwnerContactID], T1.[X_ProjectPlanTaskData.VersionOwnerCompan" +
                    "yID], T1.[X_ProjectPlanTaskData.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n " +
                    "           T.ProjectPlanTaskDataID AS [X_ProjectPlanTaskData.ProjectPlanTaskData" +
                    "ID], \r\n            T.ParentProjectPlanTaskDataID AS [X_ProjectPlanTaskData.Paren" +
                    "tProjectPlanTaskDataID], \r\n            T.TableType AS [X_ProjectPlanTaskData.Tab" +
                    "leType], \r\n            T.ReferenceID AS [X_ProjectPlanTaskData.ReferenceID], \r\n " +
                    "           T.ProjectPlanTaskID AS [X_ProjectPlanTaskData.ProjectPlanTaskID], \r\n " +
                    "           T.Version AS [X_ProjectPlanTaskData.Version], \r\n            T.Version" +
                    "AntecedentID AS [X_ProjectPlanTaskData.VersionAntecedentID], \r\n            T.Ver" +
                    "sionCertainty AS [X_ProjectPlanTaskData.VersionCertainty], \r\n            T.Versi" +
                    "onWorkflowInstanceID AS [X_ProjectPlanTaskData.VersionWorkflowInstanceID], \r\n   " +
                    "         T.VersionUpdatedBy AS [X_ProjectPlanTaskData.VersionUpdatedBy], \r\n     " +
                    "       T.VersionDeletedBy AS [X_ProjectPlanTaskData.VersionDeletedBy], \r\n       " +
                    "     T.VersionOwnerContactID AS [X_ProjectPlanTaskData.VersionOwnerContactID], \r" +
                    "\n            T.VersionOwnerCompanyID AS [X_ProjectPlanTaskData.VersionOwnerCompa" +
                    "nyID], \r\n            T.VersionUpdated AS [X_ProjectPlanTaskData.VersionUpdated]," +
                    " \r\n            True AS _from0\r\n        FROM XODBC.ProjectPlanTaskDatas AS T\r\n   " +
                    " ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView235()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3872);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ProjectPlanTaskResponse\r\n        [XODB.Modu");
            viewString.Append("le.BusinessObjects.Store.X_ProjectPlanTaskResponse](T1.[X_ProjectPlanTaskRespons");
            viewString.Append("e.ProjectPlanTaskResponseID], T1.[X_ProjectPlanTaskResponse.ProjectPlanTaskID], ");
            viewString.Append("T1.[X_ProjectPlanTaskResponse.ResponsibleContactID], T1.[X_ProjectPlanTaskRespon");
            viewString.Append("se.ActualWorkTypeID], T1.[X_ProjectPlanTaskResponse.Began], T1.[X_ProjectPlanTas");
            viewString.Append("kResponse.Completed], T1.[X_ProjectPlanTaskResponse.Hours], T1.[X_ProjectPlanTas");
            viewString.Append("kResponse.EstimatedProRataUnits], T1.[X_ProjectPlanTaskResponse.EstimatedProRata");
            viewString.Append("Cost], T1.[X_ProjectPlanTaskResponse.EstimatedValue], T1.[X_ProjectPlanTaskRespo");
            viewString.Append("nse.PerformanceMetricParameterID], T1.[X_ProjectPlanTaskResponse.PerformanceMetr");
            viewString.Append("icQuantity], T1.[X_ProjectPlanTaskResponse.PerformanceMetricContributedPercent],");
            viewString.Append(" T1.[X_ProjectPlanTaskResponse.ApprovedProRataUnits], T1.[X_ProjectPlanTaskRespo");
            viewString.Append("nse.ApprovedProRataCost], T1.[X_ProjectPlanTaskResponse.Approved], T1.[X_Project");
            viewString.Append("PlanTaskResponse.ApprovedBy], T1.[X_ProjectPlanTaskResponse.Comments], T1.[X_Pro");
            viewString.Append("jectPlanTaskResponse.Version], T1.[X_ProjectPlanTaskResponse.VersionAntecedentID");
            viewString.Append("], T1.[X_ProjectPlanTaskResponse.VersionCertainty], T1.[X_ProjectPlanTaskRespons");
            viewString.Append("e.VersionWorkflowInstanceID], T1.[X_ProjectPlanTaskResponse.VersionUpdatedBy], T");
            viewString.Append("1.[X_ProjectPlanTaskResponse.VersionDeletedBy], T1.[X_ProjectPlanTaskResponse.Ve");
            viewString.Append("rsionOwnerContactID], T1.[X_ProjectPlanTaskResponse.VersionOwnerCompanyID], T1.[");
            viewString.Append("X_ProjectPlanTaskResponse.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.ProjectPlanTaskResponseID AS [X_ProjectPlanTaskResponse.ProjectPlanTaskRe");
            viewString.Append("sponseID], \r\n            T.ProjectPlanTaskID AS [X_ProjectPlanTaskResponse.Proje");
            viewString.Append("ctPlanTaskID], \r\n            T.ResponsibleContactID AS [X_ProjectPlanTaskRespons");
            viewString.Append("e.ResponsibleContactID], \r\n            T.ActualWorkTypeID AS [X_ProjectPlanTaskR");
            viewString.Append("esponse.ActualWorkTypeID], \r\n            T.Began AS [X_ProjectPlanTaskResponse.B");
            viewString.Append("egan], \r\n            T.Completed AS [X_ProjectPlanTaskResponse.Completed], \r\n   ");
            viewString.Append("         T.Hours AS [X_ProjectPlanTaskResponse.Hours], \r\n            T.Estimated");
            viewString.Append("ProRataUnits AS [X_ProjectPlanTaskResponse.EstimatedProRataUnits], \r\n           ");
            viewString.Append(" T.EstimatedProRataCost AS [X_ProjectPlanTaskResponse.EstimatedProRataCost], \r\n ");
            viewString.Append("           T.EstimatedValue AS [X_ProjectPlanTaskResponse.EstimatedValue], \r\n   ");
            viewString.Append("         T.PerformanceMetricParameterID AS [X_ProjectPlanTaskResponse.Performanc");
            viewString.Append("eMetricParameterID], \r\n            T.PerformanceMetricQuantity AS [X_ProjectPlan");
            viewString.Append("TaskResponse.PerformanceMetricQuantity], \r\n            T.PerformanceMetricContri");
            viewString.Append("butedPercent AS [X_ProjectPlanTaskResponse.PerformanceMetricContributedPercent],");
            viewString.Append(" \r\n            T.ApprovedProRataUnits AS [X_ProjectPlanTaskResponse.ApprovedProR");
            viewString.Append("ataUnits], \r\n            T.ApprovedProRataCost AS [X_ProjectPlanTaskResponse.App");
            viewString.Append("rovedProRataCost], \r\n            T.Approved AS [X_ProjectPlanTaskResponse.Approv");
            viewString.Append("ed], \r\n            T.ApprovedBy AS [X_ProjectPlanTaskResponse.ApprovedBy], \r\n   ");
            viewString.Append("         T.Comments AS [X_ProjectPlanTaskResponse.Comments], \r\n            T.Ver");
            viewString.Append("sion AS [X_ProjectPlanTaskResponse.Version], \r\n            T.VersionAntecedentID");
            viewString.Append(" AS [X_ProjectPlanTaskResponse.VersionAntecedentID], \r\n            T.VersionCert");
            viewString.Append("ainty AS [X_ProjectPlanTaskResponse.VersionCertainty], \r\n            T.VersionWo");
            viewString.Append("rkflowInstanceID AS [X_ProjectPlanTaskResponse.VersionWorkflowInstanceID], \r\n   ");
            viewString.Append("         T.VersionUpdatedBy AS [X_ProjectPlanTaskResponse.VersionUpdatedBy], \r\n ");
            viewString.Append("           T.VersionDeletedBy AS [X_ProjectPlanTaskResponse.VersionDeletedBy], \r");
            viewString.Append("\n            T.VersionOwnerContactID AS [X_ProjectPlanTaskResponse.VersionOwnerC");
            viewString.Append("ontactID], \r\n            T.VersionOwnerCompanyID AS [X_ProjectPlanTaskResponse.V");
            viewString.Append("ersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_ProjectPlanTaskRespo");
            viewString.Append("nse.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.ProjectPla");
            viewString.Append("nTaskResponses AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskResponse", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskResponseData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView236()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2329);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ProjectPlanTaskResponseData\r\n        [XODB.");
            viewString.Append("Module.BusinessObjects.Store.X_ProjectPlanTaskResponseData](T1.[X_ProjectPlanTas");
            viewString.Append("kResponseData.ProjectPlanTaskResponseDataID], T1.[X_ProjectPlanTaskResponseData.");
            viewString.Append("ParentProjectPlanTaskResponseDataID], T1.[X_ProjectPlanTaskResponseData.TableTyp");
            viewString.Append("e], T1.[X_ProjectPlanTaskResponseData.ReferenceID], T1.[X_ProjectPlanTaskRespons");
            viewString.Append("eData.ProjectPlanTaskResponseID], T1.[X_ProjectPlanTaskResponseData.Version], T1");
            viewString.Append(".[X_ProjectPlanTaskResponseData.VersionAntecedentID], T1.[X_ProjectPlanTaskRespo");
            viewString.Append("nseData.VersionCertainty], T1.[X_ProjectPlanTaskResponseData.VersionWorkflowInst");
            viewString.Append("anceID], T1.[X_ProjectPlanTaskResponseData.VersionUpdatedBy], T1.[X_ProjectPlanT");
            viewString.Append("askResponseData.VersionDeletedBy], T1.[X_ProjectPlanTaskResponseData.VersionOwne");
            viewString.Append("rContactID], T1.[X_ProjectPlanTaskResponseData.VersionOwnerCompanyID], T1.[X_Pro");
            viewString.Append("jectPlanTaskResponseData.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n        ");
            viewString.Append("    T.ProjectPlanTaskResponseDataID AS [X_ProjectPlanTaskResponseData.ProjectPla");
            viewString.Append("nTaskResponseDataID], \r\n            T.ParentProjectPlanTaskResponseDataID AS [X_");
            viewString.Append("ProjectPlanTaskResponseData.ParentProjectPlanTaskResponseDataID], \r\n            ");
            viewString.Append("T.TableType AS [X_ProjectPlanTaskResponseData.TableType], \r\n            T.Refere");
            viewString.Append("nceID AS [X_ProjectPlanTaskResponseData.ReferenceID], \r\n            T.ProjectPla");
            viewString.Append("nTaskResponseID AS [X_ProjectPlanTaskResponseData.ProjectPlanTaskResponseID], \r\n");
            viewString.Append("            T.Version AS [X_ProjectPlanTaskResponseData.Version], \r\n            ");
            viewString.Append("T.VersionAntecedentID AS [X_ProjectPlanTaskResponseData.VersionAntecedentID], \r\n");
            viewString.Append("            T.VersionCertainty AS [X_ProjectPlanTaskResponseData.VersionCertaint");
            viewString.Append("y], \r\n            T.VersionWorkflowInstanceID AS [X_ProjectPlanTaskResponseData.");
            viewString.Append("VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_ProjectPlanTa");
            viewString.Append("skResponseData.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Project");
            viewString.Append("PlanTaskResponseData.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS");
            viewString.Append(" [X_ProjectPlanTaskResponseData.VersionOwnerContactID], \r\n            T.VersionO");
            viewString.Append("wnerCompanyID AS [X_ProjectPlanTaskResponseData.VersionOwnerCompanyID], \r\n      ");
            viewString.Append("      T.VersionUpdated AS [X_ProjectPlanTaskResponseData.VersionUpdated], \r\n    ");
            viewString.Append("        True AS _from0\r\n        FROM XODBC.ProjectPlanTaskResponseDatas AS T\r\n  ");
            viewString.Append("  ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskResponseData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskWorker
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView237()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2065);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ProjectPlanTaskWorker\r\n        [XODB.Module");
            viewString.Append(".BusinessObjects.Store.X_ProjectPlanTaskWorker](T1.[X_ProjectPlanTaskWorker.Proj");
            viewString.Append("ectPlanTaskWorkerID], T1.[X_ProjectPlanTaskWorker.ProjectPlanTaskID], T1.[X_Proj");
            viewString.Append("ectPlanTaskWorker.WorkerID], T1.[X_ProjectPlanTaskWorker.AvailableFromDate], T1.");
            viewString.Append("[X_ProjectPlanTaskWorker.AvailableUntilDate], T1.[X_ProjectPlanTaskWorker.Versio");
            viewString.Append("n], T1.[X_ProjectPlanTaskWorker.VersionAntecedentID], T1.[X_ProjectPlanTaskWorke");
            viewString.Append("r.VersionCertainty], T1.[X_ProjectPlanTaskWorker.VersionWorkflowInstanceID], T1.");
            viewString.Append("[X_ProjectPlanTaskWorker.VersionUpdatedBy], T1.[X_ProjectPlanTaskWorker.VersionD");
            viewString.Append("eletedBy], T1.[X_ProjectPlanTaskWorker.VersionOwnerContactID], T1.[X_ProjectPlan");
            viewString.Append("TaskWorker.VersionOwnerCompanyID], T1.[X_ProjectPlanTaskWorker.VersionUpdated])\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.ProjectPlanTaskWorkerID AS [X_Projec");
            viewString.Append("tPlanTaskWorker.ProjectPlanTaskWorkerID], \r\n            T.ProjectPlanTaskID AS [");
            viewString.Append("X_ProjectPlanTaskWorker.ProjectPlanTaskID], \r\n            T.WorkerID AS [X_Proje");
            viewString.Append("ctPlanTaskWorker.WorkerID], \r\n            T.AvailableFromDate AS [X_ProjectPlanT");
            viewString.Append("askWorker.AvailableFromDate], \r\n            T.AvailableUntilDate AS [X_ProjectPl");
            viewString.Append("anTaskWorker.AvailableUntilDate], \r\n            T.Version AS [X_ProjectPlanTaskW");
            viewString.Append("orker.Version], \r\n            T.VersionAntecedentID AS [X_ProjectPlanTaskWorker.");
            viewString.Append("VersionAntecedentID], \r\n            T.VersionCertainty AS [X_ProjectPlanTaskWork");
            viewString.Append("er.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_ProjectPla");
            viewString.Append("nTaskWorker.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_P");
            viewString.Append("rojectPlanTaskWorker.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_P");
            viewString.Append("rojectPlanTaskWorker.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS");
            viewString.Append(" [X_ProjectPlanTaskWorker.VersionOwnerContactID], \r\n            T.VersionOwnerCo");
            viewString.Append("mpanyID AS [X_ProjectPlanTaskWorker.VersionOwnerCompanyID], \r\n            T.Vers");
            viewString.Append("ionUpdated AS [X_ProjectPlanTaskWorker.VersionUpdated], \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM XODBC.ProjectPlanTaskWorkers AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskWorker", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProspectusProject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView238()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3093);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_ProspectusProject\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.Store.X_ProspectusProject](T1.[X_ProspectusProject.ProspectusProjec");
            viewString.Append("tID], T1.[X_ProspectusProject.ProjectID], T1.[X_ProspectusProject.ProspectusProj");
            viewString.Append("ectName], T1.[X_ProspectusProject.Company], T1.[X_ProspectusProject.CompanyID], ");
            viewString.Append("T1.[X_ProspectusProject.Geologist], T1.[X_ProspectusProject.GeologistContactID],");
            viewString.Append(" T1.[X_ProspectusProject.GeologyCompanyID], T1.[X_ProspectusProject.ListDate], T");
            viewString.Append("1.[X_ProspectusProject.Cost], T1.[X_ProspectusProject.CurrencyID], T1.[X_Prospec");
            viewString.Append("tusProject.Pages], T1.[X_ProspectusProject.CountryID], T1.[X_ProspectusProject.C");
            viewString.Append("ountryStateID], T1.[X_ProspectusProject.Place], T1.[X_ProspectusProject.Tenement");
            viewString.Append("ID], T1.[X_ProspectusProject.ProvinceID], T1.[X_ProspectusProject.Version], T1.[");
            viewString.Append("X_ProspectusProject.VersionAntecedentID], T1.[X_ProspectusProject.VersionCertain");
            viewString.Append("ty], T1.[X_ProspectusProject.VersionWorkflowInstanceID], T1.[X_ProspectusProject");
            viewString.Append(".VersionUpdatedBy], T1.[X_ProspectusProject.VersionDeletedBy], T1.[X_ProspectusP");
            viewString.Append("roject.VersionOwnerContactID], T1.[X_ProspectusProject.VersionOwnerCompanyID], T");
            viewString.Append("1.[X_ProspectusProject.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n          ");
            viewString.Append("  T.ProspectusProjectID AS [X_ProspectusProject.ProspectusProjectID], \r\n        ");
            viewString.Append("    T.ProjectID AS [X_ProspectusProject.ProjectID], \r\n            T.ProspectusPr");
            viewString.Append("ojectName AS [X_ProspectusProject.ProspectusProjectName], \r\n            T.Compan");
            viewString.Append("y AS [X_ProspectusProject.Company], \r\n            T.CompanyID AS [X_ProspectusPr");
            viewString.Append("oject.CompanyID], \r\n            T.Geologist AS [X_ProspectusProject.Geologist], ");
            viewString.Append("\r\n            T.GeologistContactID AS [X_ProspectusProject.GeologistContactID], ");
            viewString.Append("\r\n            T.GeologyCompanyID AS [X_ProspectusProject.GeologyCompanyID], \r\n  ");
            viewString.Append("          T.ListDate AS [X_ProspectusProject.ListDate], \r\n            T.Cost AS ");
            viewString.Append("[X_ProspectusProject.Cost], \r\n            T.CurrencyID AS [X_ProspectusProject.C");
            viewString.Append("urrencyID], \r\n            T.Pages AS [X_ProspectusProject.Pages], \r\n            ");
            viewString.Append("T.CountryID AS [X_ProspectusProject.CountryID], \r\n            T.CountryStateID A");
            viewString.Append("S [X_ProspectusProject.CountryStateID], \r\n            T.Place AS [X_ProspectusPr");
            viewString.Append("oject.Place], \r\n            T.TenementID AS [X_ProspectusProject.TenementID], \r\n");
            viewString.Append("            T.ProvinceID AS [X_ProspectusProject.ProvinceID], \r\n            T.Ve");
            viewString.Append("rsion AS [X_ProspectusProject.Version], \r\n            T.VersionAntecedentID AS [");
            viewString.Append("X_ProspectusProject.VersionAntecedentID], \r\n            T.VersionCertainty AS [X");
            viewString.Append("_ProspectusProject.VersionCertainty], \r\n            T.VersionWorkflowInstanceID ");
            viewString.Append("AS [X_ProspectusProject.VersionWorkflowInstanceID], \r\n            T.VersionUpdat");
            viewString.Append("edBy AS [X_ProspectusProject.VersionUpdatedBy], \r\n            T.VersionDeletedBy");
            viewString.Append(" AS [X_ProspectusProject.VersionDeletedBy], \r\n            T.VersionOwnerContactI");
            viewString.Append("D AS [X_ProspectusProject.VersionOwnerContactID], \r\n            T.VersionOwnerCo");
            viewString.Append("mpanyID AS [X_ProspectusProject.VersionOwnerCompanyID], \r\n            T.VersionU");
            viewString.Append("pdated AS [X_ProspectusProject.VersionUpdated], \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM XODBC.ProspectusProjects AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProspectusProject", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProspectusProjectCommodity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView239()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProspectusProjectCommodity", "\r\n    SELECT VALUE -- Constructing X_ProspectusProjectCommodity\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.Store.X_ProspectusProjectCommodity](T1.[X_ProspectusProject" +
                    "Commodity.ProspectusProjectCommodityID], T1.[X_ProspectusProjectCommodity.Prospe" +
                    "ctusProjectID], T1.[X_ProspectusProjectCommodity.CommodityID], T1.[X_ProspectusP" +
                    "rojectCommodity.Version], T1.[X_ProspectusProjectCommodity.VersionAntecedentID]," +
                    " T1.[X_ProspectusProjectCommodity.VersionCertainty], T1.[X_ProspectusProjectComm" +
                    "odity.VersionWorkflowInstanceID], T1.[X_ProspectusProjectCommodity.VersionUpdate" +
                    "dBy], T1.[X_ProspectusProjectCommodity.VersionDeletedBy], T1.[X_ProspectusProjec" +
                    "tCommodity.VersionOwnerContactID], T1.[X_ProspectusProjectCommodity.VersionOwner" +
                    "CompanyID], T1.[X_ProspectusProjectCommodity.VersionUpdated])\r\n    FROM (\r\n     " +
                    "   SELECT \r\n            T.ProspectusProjectCommodityID AS [X_ProspectusProjectCo" +
                    "mmodity.ProspectusProjectCommodityID], \r\n            T.ProspectusProjectID AS [X" +
                    "_ProspectusProjectCommodity.ProspectusProjectID], \r\n            T.CommodityID AS" +
                    " [X_ProspectusProjectCommodity.CommodityID], \r\n            T.Version AS [X_Prosp" +
                    "ectusProjectCommodity.Version], \r\n            T.VersionAntecedentID AS [X_Prospe" +
                    "ctusProjectCommodity.VersionAntecedentID], \r\n            T.VersionCertainty AS [" +
                    "X_ProspectusProjectCommodity.VersionCertainty], \r\n            T.VersionWorkflowI" +
                    "nstanceID AS [X_ProspectusProjectCommodity.VersionWorkflowInstanceID], \r\n       " +
                    "     T.VersionUpdatedBy AS [X_ProspectusProjectCommodity.VersionUpdatedBy], \r\n  " +
                    "          T.VersionDeletedBy AS [X_ProspectusProjectCommodity.VersionDeletedBy]," +
                    " \r\n            T.VersionOwnerContactID AS [X_ProspectusProjectCommodity.VersionO" +
                    "wnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_ProspectusProjectCom" +
                    "modity.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_ProspectusPr" +
                    "ojectCommodity.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC" +
                    ".ProspectusProjectCommodities AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Province
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView240()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2502);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Province\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.Store.X_Province](T1.[X_Province.ProvinceID], T1.[X_Province.ProvinceTypeID]");
            viewString.Append(", T1.[X_Province.DefaultProvinceName], T1.[X_Province.ProvinceCode], T1.[X_Provi");
            viewString.Append("nce.ProvinceGeography], T1.[X_Province.MarkerLatitudeWGS84], T1.[X_Province.Mark");
            viewString.Append("erLongitudeWGS84], T1.[X_Province.ProvinceGroupID], T1.[X_Province.CountryID], T");
            viewString.Append("1.[X_Province.CountryStateID], T1.[X_Province.DefaultCulture], T1.[X_Province.Ow");
            viewString.Append("nerCompanyID], T1.[X_Province.ResponsibleContactID], T1.[X_Province.Comment], T1");
            viewString.Append(".[X_Province.Version], T1.[X_Province.VersionAntecedentID], T1.[X_Province.Versi");
            viewString.Append("onCertainty], T1.[X_Province.VersionWorkflowInstanceID], T1.[X_Province.VersionU");
            viewString.Append("pdatedBy], T1.[X_Province.VersionDeletedBy], T1.[X_Province.VersionOwnerContactI");
            viewString.Append("D], T1.[X_Province.VersionOwnerCompanyID], T1.[X_Province.VersionUpdated])\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.ProvinceID AS [X_Province.ProvinceID], \r\n");
            viewString.Append("            T.ProvinceTypeID AS [X_Province.ProvinceTypeID], \r\n            T.Def");
            viewString.Append("aultProvinceName AS [X_Province.DefaultProvinceName], \r\n            T.ProvinceCo");
            viewString.Append("de AS [X_Province.ProvinceCode], \r\n            T.ProvinceGeography AS [X_Provinc");
            viewString.Append("e.ProvinceGeography], \r\n            T.MarkerLatitudeWGS84 AS [X_Province.MarkerL");
            viewString.Append("atitudeWGS84], \r\n            T.MarkerLongitudeWGS84 AS [X_Province.MarkerLongitu");
            viewString.Append("deWGS84], \r\n            T.ProvinceGroupID AS [X_Province.ProvinceGroupID], \r\n   ");
            viewString.Append("         T.CountryID AS [X_Province.CountryID], \r\n            T.CountryStateID A");
            viewString.Append("S [X_Province.CountryStateID], \r\n            T.DefaultCulture AS [X_Province.Def");
            viewString.Append("aultCulture], \r\n            T.OwnerCompanyID AS [X_Province.OwnerCompanyID], \r\n ");
            viewString.Append("           T.ResponsibleContactID AS [X_Province.ResponsibleContactID], \r\n      ");
            viewString.Append("      T.Comment AS [X_Province.Comment], \r\n            T.Version AS [X_Province.");
            viewString.Append("Version], \r\n            T.VersionAntecedentID AS [X_Province.VersionAntecedentID");
            viewString.Append("], \r\n            T.VersionCertainty AS [X_Province.VersionCertainty], \r\n        ");
            viewString.Append("    T.VersionWorkflowInstanceID AS [X_Province.VersionWorkflowInstanceID], \r\n   ");
            viewString.Append("         T.VersionUpdatedBy AS [X_Province.VersionUpdatedBy], \r\n            T.Ve");
            viewString.Append("rsionDeletedBy AS [X_Province.VersionDeletedBy], \r\n            T.VersionOwnerCon");
            viewString.Append("tactID AS [X_Province.VersionOwnerContactID], \r\n            T.VersionOwnerCompan");
            viewString.Append("yID AS [X_Province.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_");
            viewString.Append("Province.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.Provi");
            viewString.Append("nces AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Province", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProvinceAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView241()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProvinceAlias", "\r\n    SELECT VALUE -- Constructing X_ProvinceAlias\r\n        [XODB.Module.Business" +
                    "Objects.Store.X_ProvinceAlias](T1.[X_ProvinceAlias.ProvinceAliasID], T1.[X_Provi" +
                    "nceAlias.ProvinceID], T1.[X_ProvinceAlias.Alias], T1.[X_ProvinceAlias.Culture], " +
                    "T1.[X_ProvinceAlias.Priority], T1.[X_ProvinceAlias.Version], T1.[X_ProvinceAlias" +
                    ".VersionAntecedentID], T1.[X_ProvinceAlias.VersionCertainty], T1.[X_ProvinceAlia" +
                    "s.VersionWorkflowInstanceID], T1.[X_ProvinceAlias.VersionUpdatedBy], T1.[X_Provi" +
                    "nceAlias.VersionDeletedBy], T1.[X_ProvinceAlias.VersionOwnerContactID], T1.[X_Pr" +
                    "ovinceAlias.VersionOwnerCompanyID], T1.[X_ProvinceAlias.VersionUpdated])\r\n    FR" +
                    "OM (\r\n        SELECT \r\n            T.ProvinceAliasID AS [X_ProvinceAlias.Provinc" +
                    "eAliasID], \r\n            T.ProvinceID AS [X_ProvinceAlias.ProvinceID], \r\n       " +
                    "     T.Alias AS [X_ProvinceAlias.Alias], \r\n            T.Culture AS [X_ProvinceA" +
                    "lias.Culture], \r\n            T.Priority AS [X_ProvinceAlias.Priority], \r\n       " +
                    "     T.Version AS [X_ProvinceAlias.Version], \r\n            T.VersionAntecedentID" +
                    " AS [X_ProvinceAlias.VersionAntecedentID], \r\n            T.VersionCertainty AS [" +
                    "X_ProvinceAlias.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS " +
                    "[X_ProvinceAlias.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS" +
                    " [X_ProvinceAlias.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Prov" +
                    "inceAlias.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Provinc" +
                    "eAlias.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Provi" +
                    "nceAlias.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_ProvinceAl" +
                    "ias.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.ProvinceAl" +
                    "ias AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProvinceData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView242()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProvinceData", "\r\n    SELECT VALUE -- Constructing X_ProvinceData\r\n        [XODB.Module.BusinessO" +
                    "bjects.Store.X_ProvinceData](T1.[X_ProvinceData.ProvinceDataID], T1.[X_ProvinceD" +
                    "ata.ParentProvinceDataID], T1.[X_ProvinceData.TableType], T1.[X_ProvinceData.Ref" +
                    "erenceID], T1.[X_ProvinceData.ProvinceID], T1.[X_ProvinceData.Version], T1.[X_Pr" +
                    "ovinceData.VersionAntecedentID], T1.[X_ProvinceData.VersionCertainty], T1.[X_Pro" +
                    "vinceData.VersionWorkflowInstanceID], T1.[X_ProvinceData.VersionUpdatedBy], T1.[" +
                    "X_ProvinceData.VersionDeletedBy], T1.[X_ProvinceData.VersionOwnerContactID], T1." +
                    "[X_ProvinceData.VersionOwnerCompanyID], T1.[X_ProvinceData.VersionUpdated])\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.ProvinceDataID AS [X_ProvinceData.Provin" +
                    "ceDataID], \r\n            T.ParentProvinceDataID AS [X_ProvinceData.ParentProvinc" +
                    "eDataID], \r\n            T.TableType AS [X_ProvinceData.TableType], \r\n           " +
                    " T.ReferenceID AS [X_ProvinceData.ReferenceID], \r\n            T.ProvinceID AS [X" +
                    "_ProvinceData.ProvinceID], \r\n            T.Version AS [X_ProvinceData.Version], " +
                    "\r\n            T.VersionAntecedentID AS [X_ProvinceData.VersionAntecedentID], \r\n " +
                    "           T.VersionCertainty AS [X_ProvinceData.VersionCertainty], \r\n          " +
                    "  T.VersionWorkflowInstanceID AS [X_ProvinceData.VersionWorkflowInstanceID], \r\n " +
                    "           T.VersionUpdatedBy AS [X_ProvinceData.VersionUpdatedBy], \r\n          " +
                    "  T.VersionDeletedBy AS [X_ProvinceData.VersionDeletedBy], \r\n            T.Versi" +
                    "onOwnerContactID AS [X_ProvinceData.VersionOwnerContactID], \r\n            T.Vers" +
                    "ionOwnerCompanyID AS [X_ProvinceData.VersionOwnerCompanyID], \r\n            T.Ver" +
                    "sionUpdated AS [X_ProvinceData.VersionUpdated], \r\n            True AS _from0\r\n  " +
                    "      FROM XODBC.ProvinceDatas AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ProvinceRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView243()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ProvinceRelation", "\r\n    SELECT VALUE -- Constructing X_ProvinceRelation\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.X_ProvinceRelation](T1.[X_ProvinceRelation.ProvinceRelationID]," +
                    " T1.[X_ProvinceRelation.OriginalProvinceID], T1.[X_ProvinceRelation.RelatedProvi" +
                    "nceID], T1.[X_ProvinceRelation.RelationTypeID], T1.[X_ProvinceRelation.Related]," +
                    " T1.[X_ProvinceRelation.Version], T1.[X_ProvinceRelation.VersionAntecedentID], T" +
                    "1.[X_ProvinceRelation.VersionCertainty], T1.[X_ProvinceRelation.VersionWorkflowI" +
                    "nstanceID], T1.[X_ProvinceRelation.VersionUpdatedBy], T1.[X_ProvinceRelation.Ver" +
                    "sionDeletedBy], T1.[X_ProvinceRelation.VersionOwnerContactID], T1.[X_ProvinceRel" +
                    "ation.VersionOwnerCompanyID], T1.[X_ProvinceRelation.VersionUpdated])\r\n    FROM " +
                    "(\r\n        SELECT \r\n            T.ProvinceRelationID AS [X_ProvinceRelation.Prov" +
                    "inceRelationID], \r\n            T.OriginalProvinceID AS [X_ProvinceRelation.Origi" +
                    "nalProvinceID], \r\n            T.RelatedProvinceID AS [X_ProvinceRelation.Related" +
                    "ProvinceID], \r\n            T.RelationTypeID AS [X_ProvinceRelation.RelationTypeI" +
                    "D], \r\n            T.Related AS [X_ProvinceRelation.Related], \r\n            T.Ver" +
                    "sion AS [X_ProvinceRelation.Version], \r\n            T.VersionAntecedentID AS [X_" +
                    "ProvinceRelation.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Pr" +
                    "ovinceRelation.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [" +
                    "X_ProvinceRelation.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy " +
                    "AS [X_ProvinceRelation.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X" +
                    "_ProvinceRelation.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X" +
                    "_ProvinceRelation.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID " +
                    "AS [X_ProvinceRelation.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS" +
                    " [X_ProvinceRelation.VersionUpdated], \r\n            True AS _from0\r\n        FROM" +
                    " XODBC.ProvinceRelations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Recovery
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView244()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2159);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Recovery\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.Store.X_Recovery](T1.[X_Recovery.RecoveryID], T1.[X_Recovery.HeaderID], T1.[");
            viewString.Append("X_Recovery.FromDepth], T1.[X_Recovery.ToDepth], T1.[X_Recovery.Advance], T1.[X_R");
            viewString.Append("ecovery.CoreLoss], T1.[X_Recovery.CoreRecovered], T1.[X_Recovery.Solid], T1.[X_R");
            viewString.Append("ecovery.Total], T1.[X_Recovery.Confident], T1.[X_Recovery.DrillSizeID], T1.[X_Re");
            viewString.Append("covery.CoreSize], T1.[X_Recovery.Comment], T1.[X_Recovery.Version], T1.[X_Recove");
            viewString.Append("ry.VersionAntecedentID], T1.[X_Recovery.VersionCertainty], T1.[X_Recovery.Versio");
            viewString.Append("nWorkflowInstanceID], T1.[X_Recovery.VersionUpdatedBy], T1.[X_Recovery.VersionDe");
            viewString.Append("letedBy], T1.[X_Recovery.VersionOwnerContactID], T1.[X_Recovery.VersionOwnerComp");
            viewString.Append("anyID], T1.[X_Recovery.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n          ");
            viewString.Append("  T.RecoveryID AS [X_Recovery.RecoveryID], \r\n            T.HeaderID AS [X_Recove");
            viewString.Append("ry.HeaderID], \r\n            T.FromDepth AS [X_Recovery.FromDepth], \r\n           ");
            viewString.Append(" T.ToDepth AS [X_Recovery.ToDepth], \r\n            T.Advance AS [X_Recovery.Advan");
            viewString.Append("ce], \r\n            T.CoreLoss AS [X_Recovery.CoreLoss], \r\n            T.CoreReco");
            viewString.Append("vered AS [X_Recovery.CoreRecovered], \r\n            T.Solid AS [X_Recovery.Solid]");
            viewString.Append(", \r\n            T.Total AS [X_Recovery.Total], \r\n            T.Confident AS [X_R");
            viewString.Append("ecovery.Confident], \r\n            T.DrillSizeID AS [X_Recovery.DrillSizeID], \r\n ");
            viewString.Append("           T.CoreSize AS [X_Recovery.CoreSize], \r\n            T.Comment AS [X_Re");
            viewString.Append("covery.Comment], \r\n            T.Version AS [X_Recovery.Version], \r\n            ");
            viewString.Append("T.VersionAntecedentID AS [X_Recovery.VersionAntecedentID], \r\n            T.Versi");
            viewString.Append("onCertainty AS [X_Recovery.VersionCertainty], \r\n            T.VersionWorkflowIns");
            viewString.Append("tanceID AS [X_Recovery.VersionWorkflowInstanceID], \r\n            T.VersionUpdate");
            viewString.Append("dBy AS [X_Recovery.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Rec");
            viewString.Append("overy.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Recovery.Ve");
            viewString.Append("rsionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Recovery.Versi");
            viewString.Append("onOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Recovery.VersionUpdated]");
            viewString.Append(", \r\n            True AS _from0\r\n        FROM XODBC.Recoveries AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Recovery", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Sample
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView245()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2148);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Sample\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Store.X_Sample](T1.[X_Sample.SampleID], T1.[X_Sample.HeaderID], T1.[X_Sample.S");
            viewString.Append("ampleCategoryID], T1.[X_Sample.SampleStateID], T1.[X_Sample.SampleTypeID], T1.[X");
            viewString.Append("_Sample.SampleName], T1.[X_Sample.SampleNumber], T1.[X_Sample.SampleTaken], T1.[");
            viewString.Append("X_Sample.FromDepth], T1.[X_Sample.ToDepth], T1.[X_Sample.SampleMassKg], T1.[X_Sa");
            viewString.Append("mple.DryMassKg], T1.[X_Sample.Location], T1.[X_Sample.Version], T1.[X_Sample.Ver");
            viewString.Append("sionAntecedentID], T1.[X_Sample.VersionCertainty], T1.[X_Sample.VersionWorkflowI");
            viewString.Append("nstanceID], T1.[X_Sample.VersionUpdatedBy], T1.[X_Sample.VersionDeletedBy], T1.[");
            viewString.Append("X_Sample.VersionOwnerContactID], T1.[X_Sample.VersionOwnerCompanyID], T1.[X_Samp");
            viewString.Append("le.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.SampleID AS [X_S");
            viewString.Append("ample.SampleID], \r\n            T.HeaderID AS [X_Sample.HeaderID], \r\n            ");
            viewString.Append("T.SampleCategoryID AS [X_Sample.SampleCategoryID], \r\n            T.SampleStateID");
            viewString.Append(" AS [X_Sample.SampleStateID], \r\n            T.SampleTypeID AS [X_Sample.SampleTy");
            viewString.Append("peID], \r\n            T.SampleName AS [X_Sample.SampleName], \r\n            T.Samp");
            viewString.Append("leNumber AS [X_Sample.SampleNumber], \r\n            T.SampleTaken AS [X_Sample.Sa");
            viewString.Append("mpleTaken], \r\n            T.FromDepth AS [X_Sample.FromDepth], \r\n            T.T");
            viewString.Append("oDepth AS [X_Sample.ToDepth], \r\n            T.SampleMassKg AS [X_Sample.SampleMa");
            viewString.Append("ssKg], \r\n            T.DryMassKg AS [X_Sample.DryMassKg], \r\n            T.Locati");
            viewString.Append("on AS [X_Sample.Location], \r\n            T.Version AS [X_Sample.Version], \r\n    ");
            viewString.Append("        T.VersionAntecedentID AS [X_Sample.VersionAntecedentID], \r\n            T");
            viewString.Append(".VersionCertainty AS [X_Sample.VersionCertainty], \r\n            T.VersionWorkflo");
            viewString.Append("wInstanceID AS [X_Sample.VersionWorkflowInstanceID], \r\n            T.VersionUpda");
            viewString.Append("tedBy AS [X_Sample.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Sam");
            viewString.Append("ple.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Sample.Versio");
            viewString.Append("nOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Sample.VersionOwne");
            viewString.Append("rCompanyID], \r\n            T.VersionUpdated AS [X_Sample.VersionUpdated], \r\n    ");
            viewString.Append("        True AS _from0\r\n        FROM XODBC.Samples AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Sample", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_SecurityBlacklist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView246()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3395);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_SecurityBlacklist\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.Store.X_SecurityBlacklist](T1.[X_SecurityBlacklist.SecurityBlacklis");
            viewString.Append("tID], T1.[X_SecurityBlacklist.OwnerApplicationID], T1.[X_SecurityBlacklist.Owner");
            viewString.Append("CompanyID], T1.[X_SecurityBlacklist.OwnerContactID], T1.[X_SecurityBlacklist.Own");
            viewString.Append("erProjectID], T1.[X_SecurityBlacklist.OwnerEntitySystemType], T1.[X_SecurityBlac");
            viewString.Append("klist.OwnerTableType], T1.[X_SecurityBlacklist.OwnerField], T1.[X_SecurityBlackl");
            viewString.Append("ist.OwnerReferenceID], T1.[X_SecurityBlacklist.AccessorApplicationID], T1.[X_Sec");
            viewString.Append("urityBlacklist.AccessorCompanyID], T1.[X_SecurityBlacklist.AccessorProjectID], T");
            viewString.Append("1.[X_SecurityBlacklist.AccessorContactID], T1.[X_SecurityBlacklist.AccessorRoleI");
            viewString.Append("D], T1.[X_SecurityBlacklist.CanCreate], T1.[X_SecurityBlacklist.CanRead], T1.[X_");
            viewString.Append("SecurityBlacklist.CanUpdate], T1.[X_SecurityBlacklist.CanDelete], T1.[X_Security");
            viewString.Append("Blacklist.Version], T1.[X_SecurityBlacklist.VersionAntecedentID], T1.[X_Security");
            viewString.Append("Blacklist.VersionCertainty], T1.[X_SecurityBlacklist.VersionWorkflowInstanceID],");
            viewString.Append(" T1.[X_SecurityBlacklist.VersionUpdatedBy], T1.[X_SecurityBlacklist.VersionDelet");
            viewString.Append("edBy], T1.[X_SecurityBlacklist.VersionOwnerContactID], T1.[X_SecurityBlacklist.V");
            viewString.Append("ersionOwnerCompanyID], T1.[X_SecurityBlacklist.VersionUpdated])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.SecurityBlacklistID AS [X_SecurityBlacklist.Security");
            viewString.Append("BlacklistID], \r\n            T.OwnerApplicationID AS [X_SecurityBlacklist.OwnerAp");
            viewString.Append("plicationID], \r\n            T.OwnerCompanyID AS [X_SecurityBlacklist.OwnerCompan");
            viewString.Append("yID], \r\n            T.OwnerContactID AS [X_SecurityBlacklist.OwnerContactID], \r\n");
            viewString.Append("            T.OwnerProjectID AS [X_SecurityBlacklist.OwnerProjectID], \r\n        ");
            viewString.Append("    T.OwnerEntitySystemType AS [X_SecurityBlacklist.OwnerEntitySystemType], \r\n  ");
            viewString.Append("          T.OwnerTableType AS [X_SecurityBlacklist.OwnerTableType], \r\n          ");
            viewString.Append("  T.OwnerField AS [X_SecurityBlacklist.OwnerField], \r\n            T.OwnerReferen");
            viewString.Append("ceID AS [X_SecurityBlacklist.OwnerReferenceID], \r\n            T.AccessorApplicat");
            viewString.Append("ionID AS [X_SecurityBlacklist.AccessorApplicationID], \r\n            T.AccessorCo");
            viewString.Append("mpanyID AS [X_SecurityBlacklist.AccessorCompanyID], \r\n            T.AccessorProj");
            viewString.Append("ectID AS [X_SecurityBlacklist.AccessorProjectID], \r\n            T.AccessorContac");
            viewString.Append("tID AS [X_SecurityBlacklist.AccessorContactID], \r\n            T.AccessorRoleID A");
            viewString.Append("S [X_SecurityBlacklist.AccessorRoleID], \r\n            T.CanCreate AS [X_Security");
            viewString.Append("Blacklist.CanCreate], \r\n            T.CanRead AS [X_SecurityBlacklist.CanRead], ");
            viewString.Append("\r\n            T.CanUpdate AS [X_SecurityBlacklist.CanUpdate], \r\n            T.Ca");
            viewString.Append("nDelete AS [X_SecurityBlacklist.CanDelete], \r\n            T.Version AS [X_Securi");
            viewString.Append("tyBlacklist.Version], \r\n            T.VersionAntecedentID AS [X_SecurityBlacklis");
            viewString.Append("t.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_SecurityBlacklist");
            viewString.Append(".VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_SecurityBlac");
            viewString.Append("klist.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Securit");
            viewString.Append("yBlacklist.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_SecurityBla");
            viewString.Append("cklist.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_SecurityBl");
            viewString.Append("acklist.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Secu");
            viewString.Append("rityBlacklist.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Secur");
            viewString.Append("ityBlacklist.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.S");
            viewString.Append("ecurityBlacklists AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_SecurityBlacklist", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_SecurityWhitelist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView247()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3395);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_SecurityWhitelist\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.Store.X_SecurityWhitelist](T1.[X_SecurityWhitelist.SecurityWhitelis");
            viewString.Append("tID], T1.[X_SecurityWhitelist.OwnerApplicationID], T1.[X_SecurityWhitelist.Owner");
            viewString.Append("CompanyID], T1.[X_SecurityWhitelist.OwnerContactID], T1.[X_SecurityWhitelist.Own");
            viewString.Append("erProjectID], T1.[X_SecurityWhitelist.OwnerEntitySystemType], T1.[X_SecurityWhit");
            viewString.Append("elist.OwnerTableType], T1.[X_SecurityWhitelist.OwnerField], T1.[X_SecurityWhitel");
            viewString.Append("ist.OwnerReferenceID], T1.[X_SecurityWhitelist.AccessorApplicationID], T1.[X_Sec");
            viewString.Append("urityWhitelist.AccessorCompanyID], T1.[X_SecurityWhitelist.AccessorProjectID], T");
            viewString.Append("1.[X_SecurityWhitelist.AccessorContactID], T1.[X_SecurityWhitelist.AccessorRoleI");
            viewString.Append("D], T1.[X_SecurityWhitelist.CanCreate], T1.[X_SecurityWhitelist.CanRead], T1.[X_");
            viewString.Append("SecurityWhitelist.CanUpdate], T1.[X_SecurityWhitelist.CanDelete], T1.[X_Security");
            viewString.Append("Whitelist.Version], T1.[X_SecurityWhitelist.VersionAntecedentID], T1.[X_Security");
            viewString.Append("Whitelist.VersionCertainty], T1.[X_SecurityWhitelist.VersionWorkflowInstanceID],");
            viewString.Append(" T1.[X_SecurityWhitelist.VersionUpdatedBy], T1.[X_SecurityWhitelist.VersionDelet");
            viewString.Append("edBy], T1.[X_SecurityWhitelist.VersionOwnerContactID], T1.[X_SecurityWhitelist.V");
            viewString.Append("ersionOwnerCompanyID], T1.[X_SecurityWhitelist.VersionUpdated])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.SecurityWhitelistID AS [X_SecurityWhitelist.Security");
            viewString.Append("WhitelistID], \r\n            T.OwnerApplicationID AS [X_SecurityWhitelist.OwnerAp");
            viewString.Append("plicationID], \r\n            T.OwnerCompanyID AS [X_SecurityWhitelist.OwnerCompan");
            viewString.Append("yID], \r\n            T.OwnerContactID AS [X_SecurityWhitelist.OwnerContactID], \r\n");
            viewString.Append("            T.OwnerProjectID AS [X_SecurityWhitelist.OwnerProjectID], \r\n        ");
            viewString.Append("    T.OwnerEntitySystemType AS [X_SecurityWhitelist.OwnerEntitySystemType], \r\n  ");
            viewString.Append("          T.OwnerTableType AS [X_SecurityWhitelist.OwnerTableType], \r\n          ");
            viewString.Append("  T.OwnerField AS [X_SecurityWhitelist.OwnerField], \r\n            T.OwnerReferen");
            viewString.Append("ceID AS [X_SecurityWhitelist.OwnerReferenceID], \r\n            T.AccessorApplicat");
            viewString.Append("ionID AS [X_SecurityWhitelist.AccessorApplicationID], \r\n            T.AccessorCo");
            viewString.Append("mpanyID AS [X_SecurityWhitelist.AccessorCompanyID], \r\n            T.AccessorProj");
            viewString.Append("ectID AS [X_SecurityWhitelist.AccessorProjectID], \r\n            T.AccessorContac");
            viewString.Append("tID AS [X_SecurityWhitelist.AccessorContactID], \r\n            T.AccessorRoleID A");
            viewString.Append("S [X_SecurityWhitelist.AccessorRoleID], \r\n            T.CanCreate AS [X_Security");
            viewString.Append("Whitelist.CanCreate], \r\n            T.CanRead AS [X_SecurityWhitelist.CanRead], ");
            viewString.Append("\r\n            T.CanUpdate AS [X_SecurityWhitelist.CanUpdate], \r\n            T.Ca");
            viewString.Append("nDelete AS [X_SecurityWhitelist.CanDelete], \r\n            T.Version AS [X_Securi");
            viewString.Append("tyWhitelist.Version], \r\n            T.VersionAntecedentID AS [X_SecurityWhitelis");
            viewString.Append("t.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_SecurityWhitelist");
            viewString.Append(".VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_SecurityWhit");
            viewString.Append("elist.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Securit");
            viewString.Append("yWhitelist.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_SecurityWhi");
            viewString.Append("telist.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_SecurityWh");
            viewString.Append("itelist.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Secu");
            viewString.Append("rityWhitelist.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Secur");
            viewString.Append("ityWhitelist.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.S");
            viewString.Append("ecurityWhitelists AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_SecurityWhitelist", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Survey
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView248()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2269);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Survey\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Store.X_Survey](T1.[X_Survey.SurveyID], T1.[X_Survey.HeaderID], T1.[X_Survey.D");
            viewString.Append("epth], T1.[X_Survey.Dip], T1.[X_Survey.MagneticDip], T1.[X_Survey.MagnetAffected");
            viewString.Append("], T1.[X_Survey.OriginalAzimuth], T1.[X_Survey.CorrectedAzimuth], T1.[X_Survey.G");
            viewString.Append("ravity], T1.[X_Survey.InstrumentModelID], T1.[X_Survey.InstrumentAssetID], T1.[X");
            viewString.Append("_Survey.Surveyed], T1.[X_Survey.SurveyContactID], T1.[X_Survey.SurveyCompanyID],");
            viewString.Append(" T1.[X_Survey.Version], T1.[X_Survey.VersionAntecedentID], T1.[X_Survey.VersionC");
            viewString.Append("ertainty], T1.[X_Survey.VersionWorkflowInstanceID], T1.[X_Survey.VersionUpdatedB");
            viewString.Append("y], T1.[X_Survey.VersionDeletedBy], T1.[X_Survey.VersionOwnerContactID], T1.[X_S");
            viewString.Append("urvey.VersionOwnerCompanyID], T1.[X_Survey.VersionUpdated])\r\n    FROM (\r\n       ");
            viewString.Append(" SELECT \r\n            T.SurveyID AS [X_Survey.SurveyID], \r\n            T.HeaderI");
            viewString.Append("D AS [X_Survey.HeaderID], \r\n            T.Depth AS [X_Survey.Depth], \r\n         ");
            viewString.Append("   T.Dip AS [X_Survey.Dip], \r\n            T.MagneticDip AS [X_Survey.MagneticDip");
            viewString.Append("], \r\n            T.MagnetAffected AS [X_Survey.MagnetAffected], \r\n            T.");
            viewString.Append("OriginalAzimuth AS [X_Survey.OriginalAzimuth], \r\n            T.CorrectedAzimuth ");
            viewString.Append("AS [X_Survey.CorrectedAzimuth], \r\n            T.Gravity AS [X_Survey.Gravity], \r");
            viewString.Append("\n            T.InstrumentModelID AS [X_Survey.InstrumentModelID], \r\n            ");
            viewString.Append("T.InstrumentAssetID AS [X_Survey.InstrumentAssetID], \r\n            T.Surveyed AS");
            viewString.Append(" [X_Survey.Surveyed], \r\n            T.SurveyContactID AS [X_Survey.SurveyContact");
            viewString.Append("ID], \r\n            T.SurveyCompanyID AS [X_Survey.SurveyCompanyID], \r\n          ");
            viewString.Append("  T.Version AS [X_Survey.Version], \r\n            T.VersionAntecedentID AS [X_Sur");
            viewString.Append("vey.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Survey.VersionC");
            viewString.Append("ertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Survey.VersionWorkflo");
            viewString.Append("wInstanceID], \r\n            T.VersionUpdatedBy AS [X_Survey.VersionUpdatedBy], \r");
            viewString.Append("\n            T.VersionDeletedBy AS [X_Survey.VersionDeletedBy], \r\n            T.");
            viewString.Append("VersionOwnerContactID AS [X_Survey.VersionOwnerContactID], \r\n            T.Versi");
            viewString.Append("onOwnerCompanyID AS [X_Survey.VersionOwnerCompanyID], \r\n            T.VersionUpd");
            viewString.Append("ated AS [X_Survey.VersionUpdated], \r\n            True AS _from0\r\n        FROM XO");
            viewString.Append("DBC.Surveys AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Survey", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Task
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView249()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2186);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Task\r\n        [XODB.Module.BusinessObjects.");
            viewString.Append("Store.X_Task](T1.[X_Task.TaskID], T1.[X_Task.TaskName], T1.[X_Task.WorkTypeID], ");
            viewString.Append("T1.[X_Task.DefaultPriority], T1.[X_Task.EstimatedDuration], T1.[X_Task.Estimated");
            viewString.Append("DurationUnitID], T1.[X_Task.EstimatedLabourCosts], T1.[X_Task.EstimatedCapitalCo");
            viewString.Append("sts], T1.[X_Task.EstimatedValue], T1.[X_Task.PerformanceMetricParameterID], T1.[");
            viewString.Append("X_Task.PerformanceMetricQuantity], T1.[X_Task.Comment], T1.[X_Task.Version], T1.");
            viewString.Append("[X_Task.VersionAntecedentID], T1.[X_Task.VersionCertainty], T1.[X_Task.VersionWo");
            viewString.Append("rkflowInstanceID], T1.[X_Task.VersionUpdatedBy], T1.[X_Task.VersionDeletedBy], T");
            viewString.Append("1.[X_Task.VersionOwnerContactID], T1.[X_Task.VersionOwnerCompanyID], T1.[X_Task.");
            viewString.Append("VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.TaskID AS [X_Task.T");
            viewString.Append("askID], \r\n            T.TaskName AS [X_Task.TaskName], \r\n            T.WorkTypeI");
            viewString.Append("D AS [X_Task.WorkTypeID], \r\n            T.DefaultPriority AS [X_Task.DefaultPrio");
            viewString.Append("rity], \r\n            T.EstimatedDuration AS [X_Task.EstimatedDuration], \r\n      ");
            viewString.Append("      T.EstimatedDurationUnitID AS [X_Task.EstimatedDurationUnitID], \r\n         ");
            viewString.Append("   T.EstimatedLabourCosts AS [X_Task.EstimatedLabourCosts], \r\n            T.Esti");
            viewString.Append("matedCapitalCosts AS [X_Task.EstimatedCapitalCosts], \r\n            T.EstimatedVa");
            viewString.Append("lue AS [X_Task.EstimatedValue], \r\n            T.PerformanceMetricParameterID AS ");
            viewString.Append("[X_Task.PerformanceMetricParameterID], \r\n            T.PerformanceMetricQuantity");
            viewString.Append(" AS [X_Task.PerformanceMetricQuantity], \r\n            T.Comment AS [X_Task.Comme");
            viewString.Append("nt], \r\n            T.Version AS [X_Task.Version], \r\n            T.VersionAnteced");
            viewString.Append("entID AS [X_Task.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Ta");
            viewString.Append("sk.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Task.Versi");
            viewString.Append("onWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_Task.VersionUpdate");
            viewString.Append("dBy], \r\n            T.VersionDeletedBy AS [X_Task.VersionDeletedBy], \r\n         ");
            viewString.Append("   T.VersionOwnerContactID AS [X_Task.VersionOwnerContactID], \r\n            T.Ve");
            viewString.Append("rsionOwnerCompanyID AS [X_Task.VersionOwnerCompanyID], \r\n            T.VersionUp");
            viewString.Append("dated AS [X_Task.VersionUpdated], \r\n            True AS _from0\r\n        FROM XOD");
            viewString.Append("BC.Tasks AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Task", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_TaskData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView250()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_TaskData", "\r\n    SELECT VALUE -- Constructing X_TaskData\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Store.X_TaskData](T1.[X_TaskData.TaskDataID], T1.[X_TaskData.ParentTaskDataID" +
                    "], T1.[X_TaskData.TableType], T1.[X_TaskData.ReferenceID], T1.[X_TaskData.TaskID" +
                    "], T1.[X_TaskData.Version], T1.[X_TaskData.VersionAntecedentID], T1.[X_TaskData." +
                    "VersionCertainty], T1.[X_TaskData.VersionWorkflowInstanceID], T1.[X_TaskData.Ver" +
                    "sionUpdatedBy], T1.[X_TaskData.VersionDeletedBy], T1.[X_TaskData.VersionOwnerCon" +
                    "tactID], T1.[X_TaskData.VersionOwnerCompanyID], T1.[X_TaskData.VersionUpdated])\r" +
                    "\n    FROM (\r\n        SELECT \r\n            T.TaskDataID AS [X_TaskData.TaskDataID" +
                    "], \r\n            T.ParentTaskDataID AS [X_TaskData.ParentTaskDataID], \r\n        " +
                    "    T.TableType AS [X_TaskData.TableType], \r\n            T.ReferenceID AS [X_Tas" +
                    "kData.ReferenceID], \r\n            T.TaskID AS [X_TaskData.TaskID], \r\n           " +
                    " T.Version AS [X_TaskData.Version], \r\n            T.VersionAntecedentID AS [X_Ta" +
                    "skData.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_TaskData.Ver" +
                    "sionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_TaskData.Version" +
                    "WorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_TaskData.VersionUpda" +
                    "tedBy], \r\n            T.VersionDeletedBy AS [X_TaskData.VersionDeletedBy], \r\n   " +
                    "         T.VersionOwnerContactID AS [X_TaskData.VersionOwnerContactID], \r\n      " +
                    "      T.VersionOwnerCompanyID AS [X_TaskData.VersionOwnerCompanyID], \r\n         " +
                    "   T.VersionUpdated AS [X_TaskData.VersionUpdated], \r\n            True AS _from0" +
                    "\r\n        FROM XODBC.TaskDatas AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_TaskRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView251()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_TaskRelation", "\r\n    SELECT VALUE -- Constructing X_TaskRelation\r\n        [XODB.Module.BusinessO" +
                    "bjects.Store.X_TaskRelation](T1.[X_TaskRelation.TaskRelationID], T1.[X_TaskRelat" +
                    "ion.OriginalTaskID], T1.[X_TaskRelation.RelatedTaskID], T1.[X_TaskRelation.Relat" +
                    "ionTypeID], T1.[X_TaskRelation.Related], T1.[X_TaskRelation.Version], T1.[X_Task" +
                    "Relation.VersionAntecedentID], T1.[X_TaskRelation.VersionCertainty], T1.[X_TaskR" +
                    "elation.VersionWorkflowInstanceID], T1.[X_TaskRelation.VersionUpdatedBy], T1.[X_" +
                    "TaskRelation.VersionDeletedBy], T1.[X_TaskRelation.VersionOwnerContactID], T1.[X" +
                    "_TaskRelation.VersionOwnerCompanyID], T1.[X_TaskRelation.VersionUpdated])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.TaskRelationID AS [X_TaskRelation.TaskRela" +
                    "tionID], \r\n            T.OriginalTaskID AS [X_TaskRelation.OriginalTaskID], \r\n  " +
                    "          T.RelatedTaskID AS [X_TaskRelation.RelatedTaskID], \r\n            T.Rel" +
                    "ationTypeID AS [X_TaskRelation.RelationTypeID], \r\n            T.Related AS [X_Ta" +
                    "skRelation.Related], \r\n            T.Version AS [X_TaskRelation.Version], \r\n    " +
                    "        T.VersionAntecedentID AS [X_TaskRelation.VersionAntecedentID], \r\n       " +
                    "     T.VersionCertainty AS [X_TaskRelation.VersionCertainty], \r\n            T.Ve" +
                    "rsionWorkflowInstanceID AS [X_TaskRelation.VersionWorkflowInstanceID], \r\n       " +
                    "     T.VersionUpdatedBy AS [X_TaskRelation.VersionUpdatedBy], \r\n            T.Ve" +
                    "rsionDeletedBy AS [X_TaskRelation.VersionDeletedBy], \r\n            T.VersionOwne" +
                    "rContactID AS [X_TaskRelation.VersionOwnerContactID], \r\n            T.VersionOwn" +
                    "erCompanyID AS [X_TaskRelation.VersionOwnerCompanyID], \r\n            T.VersionUp" +
                    "dated AS [X_TaskRelation.VersionUpdated], \r\n            True AS _from0\r\n        " +
                    "FROM XODBC.TaskRelations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Tenement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView252()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2107);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_Tenement\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.Store.X_Tenement](T1.[X_Tenement.TenementID], T1.[X_Tenement.TenementName], ");
            viewString.Append("T1.[X_Tenement.TenementNumber], T1.[X_Tenement.TenementDevelopmentPhase], T1.[X_");
            viewString.Append("Tenement.CountryID], T1.[X_Tenement.TenementBoundaryProvinceID], T1.[X_Tenement.");
            viewString.Append("OwnerCompanyID], T1.[X_Tenement.ApprovedByContactID], T1.[X_Tenement.ValidFrom],");
            viewString.Append(" T1.[X_Tenement.Expiry], T1.[X_Tenement.Version], T1.[X_Tenement.VersionAntecede");
            viewString.Append("ntID], T1.[X_Tenement.VersionCertainty], T1.[X_Tenement.VersionWorkflowInstanceI");
            viewString.Append("D], T1.[X_Tenement.VersionUpdatedBy], T1.[X_Tenement.VersionDeletedBy], T1.[X_Te");
            viewString.Append("nement.VersionOwnerContactID], T1.[X_Tenement.VersionOwnerCompanyID], T1.[X_Tene");
            viewString.Append("ment.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.TenementID AS ");
            viewString.Append("[X_Tenement.TenementID], \r\n            T.TenementName AS [X_Tenement.TenementNam");
            viewString.Append("e], \r\n            T.TenementNumber AS [X_Tenement.TenementNumber], \r\n           ");
            viewString.Append(" T.TenementDevelopmentPhase AS [X_Tenement.TenementDevelopmentPhase], \r\n        ");
            viewString.Append("    T.CountryID AS [X_Tenement.CountryID], \r\n            T.TenementBoundaryProvi");
            viewString.Append("nceID AS [X_Tenement.TenementBoundaryProvinceID], \r\n            T.OwnerCompanyID");
            viewString.Append(" AS [X_Tenement.OwnerCompanyID], \r\n            T.ApprovedByContactID AS [X_Tenem");
            viewString.Append("ent.ApprovedByContactID], \r\n            T.ValidFrom AS [X_Tenement.ValidFrom], \r");
            viewString.Append("\n            T.Expiry AS [X_Tenement.Expiry], \r\n            T.Version AS [X_Tene");
            viewString.Append("ment.Version], \r\n            T.VersionAntecedentID AS [X_Tenement.VersionAnteced");
            viewString.Append("entID], \r\n            T.VersionCertainty AS [X_Tenement.VersionCertainty], \r\n   ");
            viewString.Append("         T.VersionWorkflowInstanceID AS [X_Tenement.VersionWorkflowInstanceID], ");
            viewString.Append("\r\n            T.VersionUpdatedBy AS [X_Tenement.VersionUpdatedBy], \r\n           ");
            viewString.Append(" T.VersionDeletedBy AS [X_Tenement.VersionDeletedBy], \r\n            T.VersionOwn");
            viewString.Append("erContactID AS [X_Tenement.VersionOwnerContactID], \r\n            T.VersionOwnerC");
            viewString.Append("ompanyID AS [X_Tenement.VersionOwnerCompanyID], \r\n            T.VersionUpdated A");
            viewString.Append("S [X_Tenement.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.");
            viewString.Append("Tenements AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Tenement", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_TenementCommodity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView253()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_TenementCommodity", "\r\n    SELECT VALUE -- Constructing X_TenementCommodity\r\n        [XODB.Module.Busi" +
                    "nessObjects.Store.X_TenementCommodity](T1.[X_TenementCommodity.TenementCommodity" +
                    "ID], T1.[X_TenementCommodity.TenementID], T1.[X_TenementCommodity.CommodityID], " +
                    "T1.[X_TenementCommodity.Version], T1.[X_TenementCommodity.VersionAntecedentID], " +
                    "T1.[X_TenementCommodity.VersionCertainty], T1.[X_TenementCommodity.VersionWorkfl" +
                    "owInstanceID], T1.[X_TenementCommodity.VersionUpdatedBy], T1.[X_TenementCommodit" +
                    "y.VersionDeletedBy], T1.[X_TenementCommodity.VersionOwnerContactID], T1.[X_Tenem" +
                    "entCommodity.VersionOwnerCompanyID], T1.[X_TenementCommodity.VersionUpdated])\r\n " +
                    "   FROM (\r\n        SELECT \r\n            T.TenementCommodityID AS [X_TenementComm" +
                    "odity.TenementCommodityID], \r\n            T.TenementID AS [X_TenementCommodity.T" +
                    "enementID], \r\n            T.CommodityID AS [X_TenementCommodity.CommodityID], \r\n" +
                    "            T.Version AS [X_TenementCommodity.Version], \r\n            T.VersionA" +
                    "ntecedentID AS [X_TenementCommodity.VersionAntecedentID], \r\n            T.Versio" +
                    "nCertainty AS [X_TenementCommodity.VersionCertainty], \r\n            T.VersionWor" +
                    "kflowInstanceID AS [X_TenementCommodity.VersionWorkflowInstanceID], \r\n          " +
                    "  T.VersionUpdatedBy AS [X_TenementCommodity.VersionUpdatedBy], \r\n            T." +
                    "VersionDeletedBy AS [X_TenementCommodity.VersionDeletedBy], \r\n            T.Vers" +
                    "ionOwnerContactID AS [X_TenementCommodity.VersionOwnerContactID], \r\n            " +
                    "T.VersionOwnerCompanyID AS [X_TenementCommodity.VersionOwnerCompanyID], \r\n      " +
                    "      T.VersionUpdated AS [X_TenementCommodity.VersionUpdated], \r\n            Tr" +
                    "ue AS _from0\r\n        FROM XODBC.TenementCommodities AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_TenementProvince
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView254()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_TenementProvince", "\r\n    SELECT VALUE -- Constructing X_TenementProvince\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.X_TenementProvince](T1.[X_TenementProvince.TenementProvinceID]," +
                    " T1.[X_TenementProvince.TenementID], T1.[X_TenementProvince.ProvinceID], T1.[X_T" +
                    "enementProvince.Version], T1.[X_TenementProvince.VersionAntecedentID], T1.[X_Ten" +
                    "ementProvince.VersionCertainty], T1.[X_TenementProvince.VersionWorkflowInstanceI" +
                    "D], T1.[X_TenementProvince.VersionUpdatedBy], T1.[X_TenementProvince.VersionDele" +
                    "tedBy], T1.[X_TenementProvince.VersionOwnerContactID], T1.[X_TenementProvince.Ve" +
                    "rsionOwnerCompanyID], T1.[X_TenementProvince.VersionUpdated])\r\n    FROM (\r\n     " +
                    "   SELECT \r\n            T.TenementProvinceID AS [X_TenementProvince.TenementProv" +
                    "inceID], \r\n            T.TenementID AS [X_TenementProvince.TenementID], \r\n      " +
                    "      T.ProvinceID AS [X_TenementProvince.ProvinceID], \r\n            T.Version A" +
                    "S [X_TenementProvince.Version], \r\n            T.VersionAntecedentID AS [X_Teneme" +
                    "ntProvince.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Tenement" +
                    "Province.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Tene" +
                    "mentProvince.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_" +
                    "TenementProvince.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Tenem" +
                    "entProvince.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Tenem" +
                    "entProvince.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_" +
                    "TenementProvince.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_Te" +
                    "nementProvince.VersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC" +
                    ".TenementProvinces AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_TenementRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView255()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_TenementRelation", "\r\n    SELECT VALUE -- Constructing X_TenementRelation\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.X_TenementRelation](T1.[X_TenementRelation.TenementRelationID]," +
                    " T1.[X_TenementRelation.TenementID], T1.[X_TenementRelation.ParentTenementID], T" +
                    "1.[X_TenementRelation.Version], T1.[X_TenementRelation.VersionAntecedentID], T1." +
                    "[X_TenementRelation.VersionCertainty], T1.[X_TenementRelation.VersionWorkflowIns" +
                    "tanceID], T1.[X_TenementRelation.VersionUpdatedBy], T1.[X_TenementRelation.Versi" +
                    "onDeletedBy], T1.[X_TenementRelation.VersionOwnerContactID], T1.[X_TenementRelat" +
                    "ion.VersionOwnerCompanyID], T1.[X_TenementRelation.VersionUpdated])\r\n    FROM (\r" +
                    "\n        SELECT \r\n            T.TenementRelationID AS [X_TenementRelation.Teneme" +
                    "ntRelationID], \r\n            T.TenementID AS [X_TenementRelation.TenementID], \r\n" +
                    "            T.ParentTenementID AS [X_TenementRelation.ParentTenementID], \r\n     " +
                    "       T.Version AS [X_TenementRelation.Version], \r\n            T.VersionAnteced" +
                    "entID AS [X_TenementRelation.VersionAntecedentID], \r\n            T.VersionCertai" +
                    "nty AS [X_TenementRelation.VersionCertainty], \r\n            T.VersionWorkflowIns" +
                    "tanceID AS [X_TenementRelation.VersionWorkflowInstanceID], \r\n            T.Versi" +
                    "onUpdatedBy AS [X_TenementRelation.VersionUpdatedBy], \r\n            T.VersionDel" +
                    "etedBy AS [X_TenementRelation.VersionDeletedBy], \r\n            T.VersionOwnerCon" +
                    "tactID AS [X_TenementRelation.VersionOwnerContactID], \r\n            T.VersionOwn" +
                    "erCompanyID AS [X_TenementRelation.VersionOwnerCompanyID], \r\n            T.Versi" +
                    "onUpdated AS [X_TenementRelation.VersionUpdated], \r\n            True AS _from0\r\n" +
                    "        FROM XODBC.TenementRelations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_UsageAudit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView256()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_UsageAudit", "\r\n    SELECT VALUE -- Constructing X_UsageAudit\r\n        [XODB.Module.BusinessObj" +
                    "ects.Store.X_UsageAudit](T1.[X_UsageAudit.UsageAuditID], T1.[X_UsageAudit.UsageI" +
                    "D], T1.[X_UsageAudit.UsageAuditTypeID], T1.[X_UsageAudit.EntitySystemType], T1.[" +
                    "X_UsageAudit.EntityID], T1.[X_UsageAudit.Action], T1.[X_UsageAudit.Audited], T1." +
                    "[X_UsageAudit.ContactID], T1.[X_UsageAudit.Version], T1.[X_UsageAudit.VersionAnt" +
                    "ecedentID], T1.[X_UsageAudit.VersionCertainty], T1.[X_UsageAudit.VersionWorkflow" +
                    "InstanceID], T1.[X_UsageAudit.VersionUpdatedBy], T1.[X_UsageAudit.VersionDeleted" +
                    "By], T1.[X_UsageAudit.VersionOwnerContactID], T1.[X_UsageAudit.VersionOwnerCompa" +
                    "nyID], T1.[X_UsageAudit.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n         " +
                    "   T.UsageAuditID AS [X_UsageAudit.UsageAuditID], \r\n            T.UsageID AS [X_" +
                    "UsageAudit.UsageID], \r\n            T.UsageAuditTypeID AS [X_UsageAudit.UsageAudi" +
                    "tTypeID], \r\n            T.EntitySystemType AS [X_UsageAudit.EntitySystemType], \r" +
                    "\n            T.EntityID AS [X_UsageAudit.EntityID], \r\n            T.Action AS [X" +
                    "_UsageAudit.Action], \r\n            T.Audited AS [X_UsageAudit.Audited], \r\n      " +
                    "      T.ContactID AS [X_UsageAudit.ContactID], \r\n            T.Version AS [X_Usa" +
                    "geAudit.Version], \r\n            T.VersionAntecedentID AS [X_UsageAudit.VersionAn" +
                    "tecedentID], \r\n            T.VersionCertainty AS [X_UsageAudit.VersionCertainty]" +
                    ", \r\n            T.VersionWorkflowInstanceID AS [X_UsageAudit.VersionWorkflowInst" +
                    "anceID], \r\n            T.VersionUpdatedBy AS [X_UsageAudit.VersionUpdatedBy], \r\n" +
                    "            T.VersionDeletedBy AS [X_UsageAudit.VersionDeletedBy], \r\n           " +
                    " T.VersionOwnerContactID AS [X_UsageAudit.VersionOwnerContactID], \r\n            " +
                    "T.VersionOwnerCompanyID AS [X_UsageAudit.VersionOwnerCompanyID], \r\n            T" +
                    ".VersionUpdated AS [X_UsageAudit.VersionUpdated], \r\n            True AS _from0\r\n" +
                    "        FROM XODBC.UsageAuditViews AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_WaterFlow
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView257()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2480);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_WaterFlow\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.Store.X_WaterFlow](T1.[X_WaterFlow.WaterFlowID], T1.[X_WaterFlow.HeaderID],");
            viewString.Append(" T1.[X_WaterFlow.TestDepth], T1.[X_WaterFlow.TestDate], T1.[X_WaterFlow.SampleTy");
            viewString.Append("peID], T1.[X_WaterFlow.SampleNumber], T1.[X_WaterFlow.FlowTestTypeID], T1.[X_Wat");
            viewString.Append("erFlow.FlowHeight], T1.[X_WaterFlow.FlowRate], T1.[X_WaterFlow.Ph], T1.[X_WaterF");
            viewString.Append("low.TotalDissolvedSolids], T1.[X_WaterFlow.ElectricalConductivity], T1.[X_WaterF");
            viewString.Append("low.Temperature], T1.[X_WaterFlow.Pressure], T1.[X_WaterFlow.Comment], T1.[X_Wat");
            viewString.Append("erFlow.Version], T1.[X_WaterFlow.VersionAntecedentID], T1.[X_WaterFlow.VersionCe");
            viewString.Append("rtainty], T1.[X_WaterFlow.VersionWorkflowInstanceID], T1.[X_WaterFlow.VersionUpd");
            viewString.Append("atedBy], T1.[X_WaterFlow.VersionDeletedBy], T1.[X_WaterFlow.VersionOwnerContactI");
            viewString.Append("D], T1.[X_WaterFlow.VersionOwnerCompanyID], T1.[X_WaterFlow.VersionUpdated])\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.WaterFlowID AS [X_WaterFlow.WaterFlowID");
            viewString.Append("], \r\n            T.HeaderID AS [X_WaterFlow.HeaderID], \r\n            T.TestDepth");
            viewString.Append(" AS [X_WaterFlow.TestDepth], \r\n            T.TestDate AS [X_WaterFlow.TestDate],");
            viewString.Append(" \r\n            T.SampleTypeID AS [X_WaterFlow.SampleTypeID], \r\n            T.Sam");
            viewString.Append("pleNumber AS [X_WaterFlow.SampleNumber], \r\n            T.FlowTestTypeID AS [X_Wa");
            viewString.Append("terFlow.FlowTestTypeID], \r\n            T.FlowHeight AS [X_WaterFlow.FlowHeight],");
            viewString.Append(" \r\n            T.FlowRate AS [X_WaterFlow.FlowRate], \r\n            T.Ph AS [X_Wa");
            viewString.Append("terFlow.Ph], \r\n            T.TotalDissolvedSolids AS [X_WaterFlow.TotalDissolved");
            viewString.Append("Solids], \r\n            T.ElectricalConductivity AS [X_WaterFlow.ElectricalConduc");
            viewString.Append("tivity], \r\n            T.Temperature AS [X_WaterFlow.Temperature], \r\n           ");
            viewString.Append(" T.Pressure AS [X_WaterFlow.Pressure], \r\n            T.Comment AS [X_WaterFlow.C");
            viewString.Append("omment], \r\n            T.Version AS [X_WaterFlow.Version], \r\n            T.Versi");
            viewString.Append("onAntecedentID AS [X_WaterFlow.VersionAntecedentID], \r\n            T.VersionCert");
            viewString.Append("ainty AS [X_WaterFlow.VersionCertainty], \r\n            T.VersionWorkflowInstance");
            viewString.Append("ID AS [X_WaterFlow.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy ");
            viewString.Append("AS [X_WaterFlow.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_WaterF");
            viewString.Append("low.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_WaterFlow.Ver");
            viewString.Append("sionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_WaterFlow.Versi");
            viewString.Append("onOwnerCompanyID], \r\n            T.VersionUpdated AS [X_WaterFlow.VersionUpdated");
            viewString.Append("], \r\n            True AS _from0\r\n        FROM XODBC.WaterFlows AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_WaterFlow", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Credits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView258()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Credits", "\r\n    SELECT VALUE -- Constructing Credits\r\n        [XODB.Module.BusinessObjects." +
                    "Credit](T1.Credit_CreditID, T1.Credit_SupplyID, T1.Credit_InvoiceID, T1.Credit_I" +
                    "nvoiceLineID, T1.Credit_IsCreditNote, T1.Credit_IsRefund, T1.Credit_OriginalCred" +
                    "it, T1.Credit_CurrencyID, T1.Credit_CreditAmount, T1.Credit_Version, T1.Credit_V" +
                    "ersionAntecedentID, T1.Credit_VersionCertainty, T1.Credit_VersionWorkflowInstanc" +
                    "eID, T1.Credit_VersionUpdatedBy, T1.Credit_VersionDeletedBy, T1.Credit_VersionOw" +
                    "nerContactID, T1.Credit_VersionOwnerCompanyID, T1.Credit_VersionUpdated)\r\n    FR" +
                    "OM (\r\n        SELECT \r\n            T.CreditID AS Credit_CreditID, \r\n            " +
                    "T.SupplyID AS Credit_SupplyID, \r\n            T.InvoiceID AS Credit_InvoiceID, \r\n" +
                    "            T.InvoiceLineID AS Credit_InvoiceLineID, \r\n            T.IsCreditNot" +
                    "e AS Credit_IsCreditNote, \r\n            T.IsRefund AS Credit_IsRefund, \r\n       " +
                    "     T.OriginalCredit AS Credit_OriginalCredit, \r\n            T.CurrencyID AS Cr" +
                    "edit_CurrencyID, \r\n            T.CreditAmount AS Credit_CreditAmount, \r\n        " +
                    "    T.Version AS Credit_Version, \r\n            T.VersionAntecedentID AS Credit_V" +
                    "ersionAntecedentID, \r\n            T.VersionCertainty AS Credit_VersionCertainty," +
                    " \r\n            T.VersionWorkflowInstanceID AS Credit_VersionWorkflowInstanceID, " +
                    "\r\n            T.VersionUpdatedBy AS Credit_VersionUpdatedBy, \r\n            T.Ver" +
                    "sionDeletedBy AS Credit_VersionDeletedBy, \r\n            T.VersionOwnerContactID " +
                    "AS Credit_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Credit" +
                    "_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Credit_VersionUpdated," +
                    " \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContai" +
                    "ner.E_Credit AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Currencies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView259()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Currencies", "\r\n    SELECT VALUE -- Constructing Currencies\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Currency](T1.Currency_CurrencyID, T1.Currency_CountryID, T1.Currency_Equivale" +
                    "ntMultiplier, T1.Currency_BuyMultiplier, T1.Currency_SellMultiplier, T1.Currency" +
                    "_Version, T1.Currency_VersionAntecedentID, T1.Currency_VersionCertainty, T1.Curr" +
                    "ency_VersionWorkflowInstanceID, T1.Currency_VersionUpdatedBy, T1.Currency_Versio" +
                    "nDeletedBy, T1.Currency_VersionOwnerContactID, T1.Currency_VersionOwnerCompanyID" +
                    ", T1.Currency_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Curren" +
                    "cyID AS Currency_CurrencyID, \r\n            T.CountryID AS Currency_CountryID, \r\n" +
                    "            T.EquivalentMultiplier AS Currency_EquivalentMultiplier, \r\n         " +
                    "   T.BuyMultiplier AS Currency_BuyMultiplier, \r\n            T.SellMultiplier AS " +
                    "Currency_SellMultiplier, \r\n            T.Version AS Currency_Version, \r\n        " +
                    "    T.VersionAntecedentID AS Currency_VersionAntecedentID, \r\n            T.Versi" +
                    "onCertainty AS Currency_VersionCertainty, \r\n            T.VersionWorkflowInstanc" +
                    "eID AS Currency_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS C" +
                    "urrency_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Currency_VersionDe" +
                    "letedBy, \r\n            T.VersionOwnerContactID AS Currency_VersionOwnerContactID" +
                    ", \r\n            T.VersionOwnerCompanyID AS Currency_VersionOwnerCompanyID, \r\n   " +
                    "         T.VersionUpdated AS Currency_VersionUpdated, \r\n            True AS _fro" +
                    "m0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.E_Currency AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryTaxes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView260()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2179);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryTaxes\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.DictionaryTax](T1.DictionaryTax_TaxID, T1.DictionaryTax_TaxName, T1.Dic");
            viewString.Append("tionaryTax_TaxRate, T1.DictionaryTax_TaxRateUnitID, T1.DictionaryTax_CountryID, ");
            viewString.Append("T1.DictionaryTax_CountryStateID, T1.DictionaryTax_ProvinceID, T1.DictionaryTax_A");
            viewString.Append("pplicableFrom, T1.DictionaryTax_ApplicableUntil, T1.DictionaryTax_BracketMinimum");
            viewString.Append(", T1.DictionaryTax_BracketMaximum, T1.DictionaryTax_Version, T1.DictionaryTax_Ve");
            viewString.Append("rsionAntecedentID, T1.DictionaryTax_VersionCertainty, T1.DictionaryTax_VersionWo");
            viewString.Append("rkflowInstanceID, T1.DictionaryTax_VersionUpdatedBy, T1.DictionaryTax_VersionDel");
            viewString.Append("etedBy, T1.DictionaryTax_VersionOwnerContactID, T1.DictionaryTax_VersionOwnerCom");
            viewString.Append("panyID, T1.DictionaryTax_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n         ");
            viewString.Append("   T.TaxID AS DictionaryTax_TaxID, \r\n            T.TaxName AS DictionaryTax_TaxN");
            viewString.Append("ame, \r\n            T.TaxRate AS DictionaryTax_TaxRate, \r\n            T.TaxRateUn");
            viewString.Append("itID AS DictionaryTax_TaxRateUnitID, \r\n            T.CountryID AS DictionaryTax_");
            viewString.Append("CountryID, \r\n            T.CountryStateID AS DictionaryTax_CountryStateID, \r\n   ");
            viewString.Append("         T.ProvinceID AS DictionaryTax_ProvinceID, \r\n            T.ApplicableFro");
            viewString.Append("m AS DictionaryTax_ApplicableFrom, \r\n            T.ApplicableUntil AS Dictionary");
            viewString.Append("Tax_ApplicableUntil, \r\n            T.BracketMinimum AS DictionaryTax_BracketMini");
            viewString.Append("mum, \r\n            T.BracketMaximum AS DictionaryTax_BracketMaximum, \r\n         ");
            viewString.Append("   T.Version AS DictionaryTax_Version, \r\n            T.VersionAntecedentID AS Di");
            viewString.Append("ctionaryTax_VersionAntecedentID, \r\n            T.VersionCertainty AS DictionaryT");
            viewString.Append("ax_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS DictionaryTax_");
            viewString.Append("VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS DictionaryTax_Ver");
            viewString.Append("sionUpdatedBy, \r\n            T.VersionDeletedBy AS DictionaryTax_VersionDeletedB");
            viewString.Append("y, \r\n            T.VersionOwnerContactID AS DictionaryTax_VersionOwnerContactID,");
            viewString.Append(" \r\n            T.VersionOwnerCompanyID AS DictionaryTax_VersionOwnerCompanyID, \r");
            viewString.Append("\n            T.VersionUpdated AS DictionaryTax_VersionUpdated, \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.E_DictionaryTa");
            viewString.Append("x AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryTaxes", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Invoices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView261()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2917);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Invoices\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Invoice](T1.Invoice_InvoiceID, T1.Invoice_Sequence, T1.Invoice_SupplierCompany");
            viewString.Append("ID, T1.Invoice_SupplierCompanyAddressID, T1.Invoice_SupplierAccountID, T1.Invoic");
            viewString.Append("e_SupplierReferenceNumber, T1.Invoice_CustomerCompanyID, T1.Invoice_CustomerComp");
            viewString.Append("anyAddressID, T1.Invoice_CustomerAccountID, T1.Invoice_CustomerReferenceNumber, ");
            viewString.Append("T1.Invoice_FreightTax, T1.Invoice_FreightAmount, T1.Invoice_DiscountIncludesFrei");
            viewString.Append("ght, T1.Invoice_DiscountAllFreight, T1.Invoice_DiscountAmount, T1.Invoice_TaxAmo");
            viewString.Append("unt, T1.Invoice_OriginalTotal, T1.Invoice_CurrencyID, T1.Invoice_Total, T1.Invoi");
            viewString.Append("ce_Dated, T1.Invoice_Communicated, T1.Invoice_Version, T1.Invoice_VersionAnteced");
            viewString.Append("entID, T1.Invoice_VersionCertainty, T1.Invoice_VersionWorkflowInstanceID, T1.Inv");
            viewString.Append("oice_VersionUpdatedBy, T1.Invoice_VersionDeletedBy, T1.Invoice_VersionOwnerConta");
            viewString.Append("ctID, T1.Invoice_VersionOwnerCompanyID, T1.Invoice_VersionUpdated)\r\n    FROM (\r\n");
            viewString.Append("        SELECT \r\n            T.InvoiceID AS Invoice_InvoiceID, \r\n            T.S");
            viewString.Append("equence AS Invoice_Sequence, \r\n            T.SupplierCompanyID AS Invoice_Suppli");
            viewString.Append("erCompanyID, \r\n            T.SupplierCompanyAddressID AS Invoice_SupplierCompany");
            viewString.Append("AddressID, \r\n            T.SupplierAccountID AS Invoice_SupplierAccountID, \r\n   ");
            viewString.Append("         T.SupplierReferenceNumber AS Invoice_SupplierReferenceNumber, \r\n       ");
            viewString.Append("     T.CustomerCompanyID AS Invoice_CustomerCompanyID, \r\n            T.CustomerC");
            viewString.Append("ompanyAddressID AS Invoice_CustomerCompanyAddressID, \r\n            T.CustomerAcc");
            viewString.Append("ountID AS Invoice_CustomerAccountID, \r\n            T.CustomerReferenceNumber AS ");
            viewString.Append("Invoice_CustomerReferenceNumber, \r\n            T.FreightTax AS Invoice_FreightTa");
            viewString.Append("x, \r\n            T.FreightAmount AS Invoice_FreightAmount, \r\n            T.Disco");
            viewString.Append("untIncludesFreight AS Invoice_DiscountIncludesFreight, \r\n            T.DiscountA");
            viewString.Append("llFreight AS Invoice_DiscountAllFreight, \r\n            T.DiscountAmount AS Invoi");
            viewString.Append("ce_DiscountAmount, \r\n            T.TaxAmount AS Invoice_TaxAmount, \r\n           ");
            viewString.Append(" T.OriginalTotal AS Invoice_OriginalTotal, \r\n            T.CurrencyID AS Invoice");
            viewString.Append("_CurrencyID, \r\n            T.Total AS Invoice_Total, \r\n            T.Dated AS In");
            viewString.Append("voice_Dated, \r\n            T.Communicated AS Invoice_Communicated, \r\n           ");
            viewString.Append(" T.Version AS Invoice_Version, \r\n            T.VersionAntecedentID AS Invoice_Ve");
            viewString.Append("rsionAntecedentID, \r\n            T.VersionCertainty AS Invoice_VersionCertainty,");
            viewString.Append(" \r\n            T.VersionWorkflowInstanceID AS Invoice_VersionWorkflowInstanceID,");
            viewString.Append(" \r\n            T.VersionUpdatedBy AS Invoice_VersionUpdatedBy, \r\n            T.V");
            viewString.Append("ersionDeletedBy AS Invoice_VersionDeletedBy, \r\n            T.VersionOwnerContact");
            viewString.Append("ID AS Invoice_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS In");
            viewString.Append("voice_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Invoice_VersionUp");
            viewString.Append("dated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStore");
            viewString.Append("Container.E_Invoice AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Invoices", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.InvoiceLines
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView262()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2134);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InvoiceLines\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.InvoiceLine](T1.InvoiceLine_InvoiceLineID, T1.InvoiceLine_InvoiceID, T1.In");
            viewString.Append("voiceLine_SupplyItemID, T1.InvoiceLine_ReferenceType, T1.InvoiceLine_ReferenceID");
            viewString.Append(", T1.InvoiceLine_Description, T1.InvoiceLine_Quantity, T1.InvoiceLine_TaxID, T1.");
            viewString.Append("InvoiceLine_Tax, T1.InvoiceLine_OriginalSubtotal, T1.InvoiceLine_CurrencyID, T1.");
            viewString.Append("InvoiceLine_Subtotal, T1.InvoiceLine_Version, T1.InvoiceLine_VersionAntecedentID");
            viewString.Append(", T1.InvoiceLine_VersionCertainty, T1.InvoiceLine_VersionWorkflowInstanceID, T1.");
            viewString.Append("InvoiceLine_VersionUpdatedBy, T1.InvoiceLine_VersionDeletedBy, T1.InvoiceLine_Ve");
            viewString.Append("rsionOwnerContactID, T1.InvoiceLine_VersionOwnerCompanyID, T1.InvoiceLine_Versio");
            viewString.Append("nUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.InvoiceLineID AS InvoiceLi");
            viewString.Append("ne_InvoiceLineID, \r\n            T.InvoiceID AS InvoiceLine_InvoiceID, \r\n        ");
            viewString.Append("    T.SupplyItemID AS InvoiceLine_SupplyItemID, \r\n            T.ReferenceType AS");
            viewString.Append(" InvoiceLine_ReferenceType, \r\n            T.ReferenceID AS InvoiceLine_Reference");
            viewString.Append("ID, \r\n            T.Description AS InvoiceLine_Description, \r\n            T.Quan");
            viewString.Append("tity AS InvoiceLine_Quantity, \r\n            T.TaxID AS InvoiceLine_TaxID, \r\n    ");
            viewString.Append("        T.Tax AS InvoiceLine_Tax, \r\n            T.OriginalSubtotal AS InvoiceLin");
            viewString.Append("e_OriginalSubtotal, \r\n            T.CurrencyID AS InvoiceLine_CurrencyID, \r\n    ");
            viewString.Append("        T.Subtotal AS InvoiceLine_Subtotal, \r\n            T.Version AS InvoiceLi");
            viewString.Append("ne_Version, \r\n            T.VersionAntecedentID AS InvoiceLine_VersionAntecedent");
            viewString.Append("ID, \r\n            T.VersionCertainty AS InvoiceLine_VersionCertainty, \r\n        ");
            viewString.Append("    T.VersionWorkflowInstanceID AS InvoiceLine_VersionWorkflowInstanceID, \r\n    ");
            viewString.Append("        T.VersionUpdatedBy AS InvoiceLine_VersionUpdatedBy, \r\n            T.Vers");
            viewString.Append("ionDeletedBy AS InvoiceLine_VersionDeletedBy, \r\n            T.VersionOwnerContac");
            viewString.Append("tID AS InvoiceLine_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID ");
            viewString.Append("AS InvoiceLine_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS InvoiceL");
            viewString.Append("ine_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusines");
            viewString.Append("sObjectsStoreContainer.E_InvoiceLine AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.InvoiceLines", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Journals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView263()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Journals", "\r\n    SELECT VALUE -- Constructing Journals\r\n        [XODB.Module.BusinessObjects" +
                    ".Journal](T1.Journal_JournalID, T1.Journal_ReferenceType, T1.Journal_ReferenceID" +
                    ", T1.Journal_ReferenceDate, T1.Journal_AccountID, T1.Journal_OriginalAmount, T1." +
                    "Journal_CurrencyID, T1.Journal_Amount, T1.Journal_Version, T1.Journal_VersionAnt" +
                    "ecedentID, T1.Journal_VersionCertainty, T1.Journal_VersionWorkflowInstanceID, T1" +
                    ".Journal_VersionUpdatedBy, T1.Journal_VersionDeletedBy, T1.Journal_VersionOwnerC" +
                    "ontactID, T1.Journal_VersionOwnerCompanyID, T1.Journal_VersionUpdated)\r\n    FROM" +
                    " (\r\n        SELECT \r\n            T.JournalID AS Journal_JournalID, \r\n           " +
                    " T.ReferenceType AS Journal_ReferenceType, \r\n            T.ReferenceID AS Journa" +
                    "l_ReferenceID, \r\n            T.ReferenceDate AS Journal_ReferenceDate, \r\n       " +
                    "     T.AccountID AS Journal_AccountID, \r\n            T.OriginalAmount AS Journal" +
                    "_OriginalAmount, \r\n            T.CurrencyID AS Journal_CurrencyID, \r\n           " +
                    " T.Amount AS Journal_Amount, \r\n            T.Version AS Journal_Version, \r\n     " +
                    "       T.VersionAntecedentID AS Journal_VersionAntecedentID, \r\n            T.Ver" +
                    "sionCertainty AS Journal_VersionCertainty, \r\n            T.VersionWorkflowInstan" +
                    "ceID AS Journal_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS J" +
                    "ournal_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Journal_VersionDele" +
                    "tedBy, \r\n            T.VersionOwnerContactID AS Journal_VersionOwnerContactID, \r" +
                    "\n            T.VersionOwnerCompanyID AS Journal_VersionOwnerCompanyID, \r\n       " +
                    "     T.VersionUpdated AS Journal_VersionUpdated, \r\n            True AS _from0\r\n " +
                    "       FROM XODBModuleBusinessObjectsStoreContainer.E_Journal AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Payments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView264()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Payments", "\r\n    SELECT VALUE -- Constructing Payments\r\n        [XODB.Module.BusinessObjects" +
                    ".Payment](T1.Payment_PaymentID, T1.Payment_SupplierAccountID, T1.Payment_Custome" +
                    "rAccountID, T1.Payment_OriginalAmount, T1.Payment_CurrencyID, T1.Payment_Amount," +
                    " T1.Payment_Paid, T1.Payment_Version, T1.Payment_VersionAntecedentID, T1.Payment" +
                    "_VersionCertainty, T1.Payment_VersionWorkflowInstanceID, T1.Payment_VersionUpdat" +
                    "edBy, T1.Payment_VersionDeletedBy, T1.Payment_VersionOwnerContactID, T1.Payment_" +
                    "VersionOwnerCompanyID, T1.Payment_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n" +
                    "            T.PaymentID AS Payment_PaymentID, \r\n            T.SupplierAccountID " +
                    "AS Payment_SupplierAccountID, \r\n            T.CustomerAccountID AS Payment_Custo" +
                    "merAccountID, \r\n            T.OriginalAmount AS Payment_OriginalAmount, \r\n      " +
                    "      T.CurrencyID AS Payment_CurrencyID, \r\n            T.Amount AS Payment_Amou" +
                    "nt, \r\n            T.Paid AS Payment_Paid, \r\n            T.Version AS Payment_Ver" +
                    "sion, \r\n            T.VersionAntecedentID AS Payment_VersionAntecedentID, \r\n    " +
                    "        T.VersionCertainty AS Payment_VersionCertainty, \r\n            T.VersionW" +
                    "orkflowInstanceID AS Payment_VersionWorkflowInstanceID, \r\n            T.VersionU" +
                    "pdatedBy AS Payment_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Paymen" +
                    "t_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Payment_VersionOwne" +
                    "rContactID, \r\n            T.VersionOwnerCompanyID AS Payment_VersionOwnerCompany" +
                    "ID, \r\n            T.VersionUpdated AS Payment_VersionUpdated, \r\n            True" +
                    " AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.E_Payment AS T\r" +
                    "\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.PurchaseOrders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView265()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2653);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PurchaseOrders\r\n        [XODB.Module.Business");
            viewString.Append("Objects.PurchaseOrder](T1.PurchaseOrder_PurchaseOrderID, T1.PurchaseOrder_Purcha");
            viewString.Append("seName, T1.PurchaseOrder_ReferenceCode, T1.PurchaseOrder_ReferenceSystem, T1.Pur");
            viewString.Append("chaseOrder_OriginalSubtotal, T1.PurchaseOrder_CurrencyID, T1.PurchaseOrder_Subto");
            viewString.Append("tal, T1.PurchaseOrder_Ordered, T1.PurchaseOrder_ProjectID, T1.PurchaseOrder_Cust");
            viewString.Append("omerCompanyID, T1.PurchaseOrder_CustomerContactID, T1.PurchaseOrder_CustomerAcco");
            viewString.Append("untID, T1.PurchaseOrder_SupplierCompanyID, T1.PurchaseOrder_SupplierContactID, T");
            viewString.Append("1.PurchaseOrder_SupplierAccountID, T1.PurchaseOrder_Version, T1.PurchaseOrder_Ve");
            viewString.Append("rsionAntecedentID, T1.PurchaseOrder_VersionCertainty, T1.PurchaseOrder_VersionWo");
            viewString.Append("rkflowInstanceID, T1.PurchaseOrder_VersionUpdatedBy, T1.PurchaseOrder_VersionDel");
            viewString.Append("etedBy, T1.PurchaseOrder_VersionOwnerContactID, T1.PurchaseOrder_VersionOwnerCom");
            viewString.Append("panyID, T1.PurchaseOrder_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n         ");
            viewString.Append("   T.PurchaseOrderID AS PurchaseOrder_PurchaseOrderID, \r\n            T.PurchaseN");
            viewString.Append("ame AS PurchaseOrder_PurchaseName, \r\n            T.ReferenceCode AS PurchaseOrde");
            viewString.Append("r_ReferenceCode, \r\n            T.ReferenceSystem AS PurchaseOrder_ReferenceSyste");
            viewString.Append("m, \r\n            T.OriginalSubtotal AS PurchaseOrder_OriginalSubtotal, \r\n       ");
            viewString.Append("     T.CurrencyID AS PurchaseOrder_CurrencyID, \r\n            T.Subtotal AS Purch");
            viewString.Append("aseOrder_Subtotal, \r\n            T.Ordered AS PurchaseOrder_Ordered, \r\n         ");
            viewString.Append("   T.ProjectID AS PurchaseOrder_ProjectID, \r\n            T.CustomerCompanyID AS ");
            viewString.Append("PurchaseOrder_CustomerCompanyID, \r\n            T.CustomerContactID AS PurchaseOr");
            viewString.Append("der_CustomerContactID, \r\n            T.CustomerAccountID AS PurchaseOrder_Custom");
            viewString.Append("erAccountID, \r\n            T.SupplierCompanyID AS PurchaseOrder_SupplierCompanyI");
            viewString.Append("D, \r\n            T.SupplierContactID AS PurchaseOrder_SupplierContactID, \r\n     ");
            viewString.Append("       T.SupplierAccountID AS PurchaseOrder_SupplierAccountID, \r\n            T.V");
            viewString.Append("ersion AS PurchaseOrder_Version, \r\n            T.VersionAntecedentID AS Purchase");
            viewString.Append("Order_VersionAntecedentID, \r\n            T.VersionCertainty AS PurchaseOrder_Ver");
            viewString.Append("sionCertainty, \r\n            T.VersionWorkflowInstanceID AS PurchaseOrder_Versio");
            viewString.Append("nWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS PurchaseOrder_VersionUp");
            viewString.Append("datedBy, \r\n            T.VersionDeletedBy AS PurchaseOrder_VersionDeletedBy, \r\n ");
            viewString.Append("           T.VersionOwnerContactID AS PurchaseOrder_VersionOwnerContactID, \r\n   ");
            viewString.Append("         T.VersionOwnerCompanyID AS PurchaseOrder_VersionOwnerCompanyID, \r\n     ");
            viewString.Append("       T.VersionUpdated AS PurchaseOrder_VersionUpdated, \r\n            True AS _");
            viewString.Append("from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.E_PurchaseOrder AS T");
            viewString.Append("\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.PurchaseOrders", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Supplies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView266()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2822);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Supplies\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Supply](T1.Supply_SupplyID, T1.Supply_ParentSupplyID, T1.Supply_ProjectID, T1.");
            viewString.Append("Supply_CustomerInvoiceID, T1.Supply_SupplierInvoiceID, T1.Supply_Sequence, T1.Su");
            viewString.Append("pply_CustomerPurchaseOrderID, T1.Supply_CustomerApprovedBy, T1.Supply_SupplierPu");
            viewString.Append("rchaseOrderID, T1.Supply_SupplierApprovedBy, T1.Supply_IsDraft, T1.Supply_IsUnap");
            viewString.Append("proved, T1.Supply_IsDenied, T1.Supply_IsSupplied, T1.Supply_IsReorderSent, T1.Su");
            viewString.Append("pply_IsPaid, T1.Supply_IsFinalised, T1.Supply_CurrentProjectDeliverableID, T1.Su");
            viewString.Append("pply_FinalProjectDeliverableID, T1.Supply_DateOrdered, T1.Supply_PurchasingNotes");
            viewString.Append(", T1.Supply_Version, T1.Supply_VersionAntecedentID, T1.Supply_VersionCertainty, ");
            viewString.Append("T1.Supply_VersionWorkflowInstanceID, T1.Supply_VersionUpdatedBy, T1.Supply_Versi");
            viewString.Append("onDeletedBy, T1.Supply_VersionOwnerContactID, T1.Supply_VersionOwnerCompanyID, T");
            viewString.Append("1.Supply_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.SupplyID AS");
            viewString.Append(" Supply_SupplyID, \r\n            T.ParentSupplyID AS Supply_ParentSupplyID, \r\n   ");
            viewString.Append("         T.ProjectID AS Supply_ProjectID, \r\n            T.CustomerInvoiceID AS S");
            viewString.Append("upply_CustomerInvoiceID, \r\n            T.SupplierInvoiceID AS Supply_SupplierInv");
            viewString.Append("oiceID, \r\n            T.Sequence AS Supply_Sequence, \r\n            T.CustomerPur");
            viewString.Append("chaseOrderID AS Supply_CustomerPurchaseOrderID, \r\n            T.CustomerApproved");
            viewString.Append("By AS Supply_CustomerApprovedBy, \r\n            T.SupplierPurchaseOrderID AS Supp");
            viewString.Append("ly_SupplierPurchaseOrderID, \r\n            T.SupplierApprovedBy AS Supply_Supplie");
            viewString.Append("rApprovedBy, \r\n            T.IsDraft AS Supply_IsDraft, \r\n            T.IsUnappr");
            viewString.Append("oved AS Supply_IsUnapproved, \r\n            T.IsDenied AS Supply_IsDenied, \r\n    ");
            viewString.Append("        T.IsSupplied AS Supply_IsSupplied, \r\n            T.IsReorderSent AS Supp");
            viewString.Append("ly_IsReorderSent, \r\n            T.IsPaid AS Supply_IsPaid, \r\n            T.IsFin");
            viewString.Append("alised AS Supply_IsFinalised, \r\n            T.CurrentProjectDeliverableID AS Sup");
            viewString.Append("ply_CurrentProjectDeliverableID, \r\n            T.FinalProjectDeliverableID AS Su");
            viewString.Append("pply_FinalProjectDeliverableID, \r\n            T.DateOrdered AS Supply_DateOrdere");
            viewString.Append("d, \r\n            T.PurchasingNotes AS Supply_PurchasingNotes, \r\n            T.Ve");
            viewString.Append("rsion AS Supply_Version, \r\n            T.VersionAntecedentID AS Supply_VersionAn");
            viewString.Append("tecedentID, \r\n            T.VersionCertainty AS Supply_VersionCertainty, \r\n     ");
            viewString.Append("       T.VersionWorkflowInstanceID AS Supply_VersionWorkflowInstanceID, \r\n      ");
            viewString.Append("      T.VersionUpdatedBy AS Supply_VersionUpdatedBy, \r\n            T.VersionDele");
            viewString.Append("tedBy AS Supply_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Suppl");
            viewString.Append("y_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Supply_Version");
            viewString.Append("OwnerCompanyID, \r\n            T.VersionUpdated AS Supply_VersionUpdated, \r\n     ");
            viewString.Append("       True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.E_Su");
            viewString.Append("pply AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Supplies", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.SupplyItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView267()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3636);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SupplyItems\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.SupplyItem](T1.SupplyItem_SupplyItemID, T1.SupplyItem_SupplyID, T1.SupplyIt");
            viewString.Append("em_ProjectPlanTaskModelID, T1.SupplyItem_ProjectPlanTaskPartID, T1.SupplyItem_Pr");
            viewString.Append("ojectPlanTaskResponseID, T1.SupplyItem_CustomerAccountID, T1.SupplyItem_ModelUni");
            viewString.Append("tID, T1.SupplyItem_LabourUnitID, T1.SupplyItem_PartUnitID, T1.SupplyItem_CostPer");
            viewString.Append("UnitModel, T1.SupplyItem_CostPerUnitLabour, T1.SupplyItem_CostPerUnitPart, T1.Su");
            viewString.Append("pplyItem_QuantityModel, T1.SupplyItem_QuantityLabour, T1.SupplyItem_QuantityPart");
            viewString.Append(", T1.SupplyItem_CostModel, T1.SupplyItem_CostLabour, T1.SupplyItem_CostPart, T1.");
            viewString.Append("SupplyItem_SubtotalModel, T1.SupplyItem_SubtotalLabour, T1.SupplyItem_SubtotalPa");
            viewString.Append("rt, T1.SupplyItem_TaxModel, T1.SupplyItem_TaxLabour, T1.SupplyItem_TaxPart, T1.S");
            viewString.Append("upplyItem_Tax, T1.SupplyItem_OriginalSubtotal, T1.SupplyItem_CurrencyID, T1.Supp");
            viewString.Append("lyItem_Subtotal, T1.SupplyItem_Notes, T1.SupplyItem_Version, T1.SupplyItem_Versi");
            viewString.Append("onAntecedentID, T1.SupplyItem_VersionCertainty, T1.SupplyItem_VersionWorkflowIns");
            viewString.Append("tanceID, T1.SupplyItem_VersionUpdatedBy, T1.SupplyItem_VersionDeletedBy, T1.Supp");
            viewString.Append("lyItem_VersionOwnerContactID, T1.SupplyItem_VersionOwnerCompanyID, T1.SupplyItem");
            viewString.Append("_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.SupplyItemID AS Sup");
            viewString.Append("plyItem_SupplyItemID, \r\n            T.SupplyID AS SupplyItem_SupplyID, \r\n       ");
            viewString.Append("     T.ProjectPlanTaskModelID AS SupplyItem_ProjectPlanTaskModelID, \r\n          ");
            viewString.Append("  T.ProjectPlanTaskPartID AS SupplyItem_ProjectPlanTaskPartID, \r\n            T.P");
            viewString.Append("rojectPlanTaskResponseID AS SupplyItem_ProjectPlanTaskResponseID, \r\n            ");
            viewString.Append("T.CustomerAccountID AS SupplyItem_CustomerAccountID, \r\n            T.ModelUnitID");
            viewString.Append(" AS SupplyItem_ModelUnitID, \r\n            T.LabourUnitID AS SupplyItem_LabourUni");
            viewString.Append("tID, \r\n            T.PartUnitID AS SupplyItem_PartUnitID, \r\n            T.CostPe");
            viewString.Append("rUnitModel AS SupplyItem_CostPerUnitModel, \r\n            T.CostPerUnitLabour AS ");
            viewString.Append("SupplyItem_CostPerUnitLabour, \r\n            T.CostPerUnitPart AS SupplyItem_Cost");
            viewString.Append("PerUnitPart, \r\n            T.QuantityModel AS SupplyItem_QuantityModel, \r\n      ");
            viewString.Append("      T.QuantityLabour AS SupplyItem_QuantityLabour, \r\n            T.QuantityPar");
            viewString.Append("t AS SupplyItem_QuantityPart, \r\n            T.CostModel AS SupplyItem_CostModel,");
            viewString.Append(" \r\n            T.CostLabour AS SupplyItem_CostLabour, \r\n            T.CostPart A");
            viewString.Append("S SupplyItem_CostPart, \r\n            T.SubtotalModel AS SupplyItem_SubtotalModel");
            viewString.Append(", \r\n            T.SubtotalLabour AS SupplyItem_SubtotalLabour, \r\n            T.S");
            viewString.Append("ubtotalPart AS SupplyItem_SubtotalPart, \r\n            T.TaxModel AS SupplyItem_T");
            viewString.Append("axModel, \r\n            T.TaxLabour AS SupplyItem_TaxLabour, \r\n            T.TaxP");
            viewString.Append("art AS SupplyItem_TaxPart, \r\n            T.Tax AS SupplyItem_Tax, \r\n            ");
            viewString.Append("T.OriginalSubtotal AS SupplyItem_OriginalSubtotal, \r\n            T.CurrencyID AS");
            viewString.Append(" SupplyItem_CurrencyID, \r\n            T.Subtotal AS SupplyItem_Subtotal, \r\n     ");
            viewString.Append("       T.Notes AS SupplyItem_Notes, \r\n            T.Version AS SupplyItem_Versio");
            viewString.Append("n, \r\n            T.VersionAntecedentID AS SupplyItem_VersionAntecedentID, \r\n    ");
            viewString.Append("        T.VersionCertainty AS SupplyItem_VersionCertainty, \r\n            T.Versi");
            viewString.Append("onWorkflowInstanceID AS SupplyItem_VersionWorkflowInstanceID, \r\n            T.Ve");
            viewString.Append("rsionUpdatedBy AS SupplyItem_VersionUpdatedBy, \r\n            T.VersionDeletedBy ");
            viewString.Append("AS SupplyItem_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS SupplyI");
            viewString.Append("tem_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS SupplyItem_V");
            viewString.Append("ersionOwnerCompanyID, \r\n            T.VersionUpdated AS SupplyItem_VersionUpdate");
            viewString.Append("d, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreCont");
            viewString.Append("ainer.E_SupplyItem AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SupplyItems", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.SupplyItemTaxes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView268()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SupplyItemTaxes", "\r\n    SELECT VALUE -- Constructing SupplyItemTaxes\r\n        [XODB.Module.Business" +
                    "Objects.SupplyItemTax](T1.SupplyItemTax_SupplyItemTaxID, T1.SupplyItemTax_Supply" +
                    "ItemID, T1.SupplyItemTax_TaxID, T1.SupplyItemTax_Tax, T1.SupplyItemTax_Version, " +
                    "T1.SupplyItemTax_VersionAntecedentID, T1.SupplyItemTax_VersionCertainty, T1.Supp" +
                    "lyItemTax_VersionWorkflowInstanceID, T1.SupplyItemTax_VersionUpdatedBy, T1.Suppl" +
                    "yItemTax_VersionDeletedBy, T1.SupplyItemTax_VersionOwnerContactID, T1.SupplyItem" +
                    "Tax_VersionOwnerCompanyID, T1.SupplyItemTax_VersionUpdated)\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.SupplyItemTaxID AS SupplyItemTax_SupplyItemTaxID, \r\n    " +
                    "        T.SupplyItemID AS SupplyItemTax_SupplyItemID, \r\n            T.TaxID AS S" +
                    "upplyItemTax_TaxID, \r\n            T.Tax AS SupplyItemTax_Tax, \r\n            T.Ve" +
                    "rsion AS SupplyItemTax_Version, \r\n            T.VersionAntecedentID AS SupplyIte" +
                    "mTax_VersionAntecedentID, \r\n            T.VersionCertainty AS SupplyItemTax_Vers" +
                    "ionCertainty, \r\n            T.VersionWorkflowInstanceID AS SupplyItemTax_Version" +
                    "WorkflowInstanceID, \r\n            T.VersionUpdatedBy AS SupplyItemTax_VersionUpd" +
                    "atedBy, \r\n            T.VersionDeletedBy AS SupplyItemTax_VersionDeletedBy, \r\n  " +
                    "          T.VersionOwnerContactID AS SupplyItemTax_VersionOwnerContactID, \r\n    " +
                    "        T.VersionOwnerCompanyID AS SupplyItemTax_VersionOwnerCompanyID, \r\n      " +
                    "      T.VersionUpdated AS SupplyItemTax_VersionUpdated, \r\n            True AS _f" +
                    "rom0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.E_SupplyItemTax AS T\r" +
                    "\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Accounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView269()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Accounts", "\r\n    SELECT VALUE -- Constructing Accounts\r\n        [XODB.Module.BusinessObjects" +
                    ".Account](T1.Account_AccountID, T1.Account_ParentAccountID, T1.Account_AcountCod" +
                    "e, T1.Account_AccountName, T1.Account_PrimaryCompanyID, T1.Account_DefaultLocati" +
                    "onID, T1.Account_Description, T1.Account_Version, T1.Account_VersionAntecedentID" +
                    ", T1.Account_VersionCertainty, T1.Account_VersionWorkflowInstanceID, T1.Account_" +
                    "VersionUpdatedBy, T1.Account_VersionDeletedBy, T1.Account_VersionOwnerContactID," +
                    " T1.Account_VersionOwnerCompanyID, T1.Account_VersionUpdated)\r\n    FROM (\r\n     " +
                    "   SELECT \r\n            T.AccountID AS Account_AccountID, \r\n            T.Parent" +
                    "AccountID AS Account_ParentAccountID, \r\n            T.AcountCode AS Account_Acou" +
                    "ntCode, \r\n            T.AccountName AS Account_AccountName, \r\n            T.Prim" +
                    "aryCompanyID AS Account_PrimaryCompanyID, \r\n            T.DefaultLocationID AS A" +
                    "ccount_DefaultLocationID, \r\n            T.Description AS Account_Description, \r\n" +
                    "            T.Version AS Account_Version, \r\n            T.VersionAntecedentID AS" +
                    " Account_VersionAntecedentID, \r\n            T.VersionCertainty AS Account_Versio" +
                    "nCertainty, \r\n            T.VersionWorkflowInstanceID AS Account_VersionWorkflow" +
                    "InstanceID, \r\n            T.VersionUpdatedBy AS Account_VersionUpdatedBy, \r\n    " +
                    "        T.VersionDeletedBy AS Account_VersionDeletedBy, \r\n            T.VersionO" +
                    "wnerContactID AS Account_VersionOwnerContactID, \r\n            T.VersionOwnerComp" +
                    "anyID AS Account_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Accoun" +
                    "t_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessO" +
                    "bjectsStoreContainer.Q_Account AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.AccountDiscounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView270()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2238);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AccountDiscounts\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.AccountDiscount](T1.AccountDiscount_AccountProductDiscountID, T1.Accou");
            viewString.Append("ntDiscount_SourceAccountID, T1.AccountDiscount_ClientCompanyID, T1.AccountDiscou");
            viewString.Append("nt_ProviderExperienceID, T1.AccountDiscount_DeviceTypeID, T1.AccountDiscount_Lev");
            viewString.Append("elUnitID, T1.AccountDiscount_LevelQuantity, T1.AccountDiscount_Rate, T1.AccountD");
            viewString.Append("iscount_ValidFrom, T1.AccountDiscount_ValidUntil, T1.AccountDiscount_Version, T1");
            viewString.Append(".AccountDiscount_VersionAntecedentID, T1.AccountDiscount_VersionCertainty, T1.Ac");
            viewString.Append("countDiscount_VersionWorkflowInstanceID, T1.AccountDiscount_VersionUpdatedBy, T1");
            viewString.Append(".AccountDiscount_VersionDeletedBy, T1.AccountDiscount_VersionOwnerContactID, T1.");
            viewString.Append("AccountDiscount_VersionOwnerCompanyID, T1.AccountDiscount_VersionUpdated)\r\n    F");
            viewString.Append("ROM (\r\n        SELECT \r\n            T.AccountProductDiscountID AS AccountDiscoun");
            viewString.Append("t_AccountProductDiscountID, \r\n            T.SourceAccountID AS AccountDiscount_S");
            viewString.Append("ourceAccountID, \r\n            T.ClientCompanyID AS AccountDiscount_ClientCompany");
            viewString.Append("ID, \r\n            T.ProviderExperienceID AS AccountDiscount_ProviderExperienceID");
            viewString.Append(", \r\n            T.DeviceTypeID AS AccountDiscount_DeviceTypeID, \r\n            T.");
            viewString.Append("LevelUnitID AS AccountDiscount_LevelUnitID, \r\n            T.LevelQuantity AS Acc");
            viewString.Append("ountDiscount_LevelQuantity, \r\n            T.Rate AS AccountDiscount_Rate, \r\n    ");
            viewString.Append("        T.ValidFrom AS AccountDiscount_ValidFrom, \r\n            T.ValidUntil AS ");
            viewString.Append("AccountDiscount_ValidUntil, \r\n            T.Version AS AccountDiscount_Version, ");
            viewString.Append("\r\n            T.VersionAntecedentID AS AccountDiscount_VersionAntecedentID, \r\n  ");
            viewString.Append("          T.VersionCertainty AS AccountDiscount_VersionCertainty, \r\n            ");
            viewString.Append("T.VersionWorkflowInstanceID AS AccountDiscount_VersionWorkflowInstanceID, \r\n    ");
            viewString.Append("        T.VersionUpdatedBy AS AccountDiscount_VersionUpdatedBy, \r\n            T.");
            viewString.Append("VersionDeletedBy AS AccountDiscount_VersionDeletedBy, \r\n            T.VersionOwn");
            viewString.Append("erContactID AS AccountDiscount_VersionOwnerContactID, \r\n            T.VersionOwn");
            viewString.Append("erCompanyID AS AccountDiscount_VersionOwnerCompanyID, \r\n            T.VersionUpd");
            viewString.Append("ated AS AccountDiscount_VersionUpdated, \r\n            True AS _from0\r\n        FR");
            viewString.Append("OM XODBModuleBusinessObjectsStoreContainer.Q_AccountDiscount AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AccountDiscounts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Assets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView271()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2197);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Assets\r\n        [XODB.Module.BusinessObjects.");
            viewString.Append("Asset](T1.Asset_AssetID, T1.Asset_ParentAssetID, T1.Asset_AssetName, T1.Asset_Co");
            viewString.Append("st, T1.Asset_Purchased, T1.Asset_PurchaseOrderID, T1.Asset_ExpenseNotToExceedLif");
            viewString.Append("eTimeCost, T1.Asset_OwnerAccountID, T1.Asset_BorrowerAccountID, T1.Asset_Mainten");
            viewString.Append("anceAccountID, T1.Asset_ModelID, T1.Asset_LocationID, T1.Asset_AssetStatusID, T1");
            viewString.Append(".Asset_ExperienceID, T1.Asset_Description, T1.Asset_Version, T1.Asset_VersionAnt");
            viewString.Append("ecedentID, T1.Asset_VersionCertainty, T1.Asset_VersionWorkflowInstanceID, T1.Ass");
            viewString.Append("et_VersionUpdatedBy, T1.Asset_VersionDeletedBy, T1.Asset_VersionOwnerContactID, ");
            viewString.Append("T1.Asset_VersionOwnerCompanyID, T1.Asset_VersionUpdated)\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.AssetID AS Asset_AssetID, \r\n            T.ParentAssetID AS ");
            viewString.Append("Asset_ParentAssetID, \r\n            T.AssetName AS Asset_AssetName, \r\n           ");
            viewString.Append(" T.Cost AS Asset_Cost, \r\n            T.Purchased AS Asset_Purchased, \r\n         ");
            viewString.Append("   T.PurchaseOrderID AS Asset_PurchaseOrderID, \r\n            T.ExpenseNotToExcee");
            viewString.Append("dLifeTimeCost AS Asset_ExpenseNotToExceedLifeTimeCost, \r\n            T.OwnerAcco");
            viewString.Append("untID AS Asset_OwnerAccountID, \r\n            T.BorrowerAccountID AS Asset_Borrow");
            viewString.Append("erAccountID, \r\n            T.MaintenanceAccountID AS Asset_MaintenanceAccountID,");
            viewString.Append(" \r\n            T.ModelID AS Asset_ModelID, \r\n            T.LocationID AS Asset_L");
            viewString.Append("ocationID, \r\n            T.AssetStatusID AS Asset_AssetStatusID, \r\n            T");
            viewString.Append(".ExperienceID AS Asset_ExperienceID, \r\n            T.Description AS Asset_Descri");
            viewString.Append("ption, \r\n            T.Version AS Asset_Version, \r\n            T.VersionAntecede");
            viewString.Append("ntID AS Asset_VersionAntecedentID, \r\n            T.VersionCertainty AS Asset_Ver");
            viewString.Append("sionCertainty, \r\n            T.VersionWorkflowInstanceID AS Asset_VersionWorkflo");
            viewString.Append("wInstanceID, \r\n            T.VersionUpdatedBy AS Asset_VersionUpdatedBy, \r\n     ");
            viewString.Append("       T.VersionDeletedBy AS Asset_VersionDeletedBy, \r\n            T.VersionOwne");
            viewString.Append("rContactID AS Asset_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID");
            viewString.Append(" AS Asset_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Asset_Version");
            viewString.Append("Updated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsSto");
            viewString.Append("reContainer.Q_Asset AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Assets", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.AssetAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView272()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssetAlias", "\r\n    SELECT VALUE -- Constructing AssetAlias\r\n        [XODB.Module.BusinessObjec" +
                    "ts.AssetAlias](T1.AssetAlias_AssetAliasID, T1.AssetAlias_AssetID, T1.AssetAlias_" +
                    "AssetAliasName, T1.AssetAlias_FullDescription, T1.AssetAlias_Thumbnail, T1.Asset" +
                    "Alias_OriginalFileDataID, T1.AssetAlias_Version, T1.AssetAlias_VersionAntecedent" +
                    "ID, T1.AssetAlias_VersionCertainty, T1.AssetAlias_VersionWorkflowInstanceID, T1." +
                    "AssetAlias_VersionUpdatedBy, T1.AssetAlias_VersionDeletedBy, T1.AssetAlias_Versi" +
                    "onOwnerContactID, T1.AssetAlias_VersionOwnerCompanyID, T1.AssetAlias_VersionUpda" +
                    "ted)\r\n    FROM (\r\n        SELECT \r\n            T.AssetAliasID AS AssetAlias_Asse" +
                    "tAliasID, \r\n            T.AssetID AS AssetAlias_AssetID, \r\n            T.AssetAl" +
                    "iasName AS AssetAlias_AssetAliasName, \r\n            T.FullDescription AS AssetAl" +
                    "ias_FullDescription, \r\n            T.Thumbnail AS AssetAlias_Thumbnail, \r\n      " +
                    "      T.OriginalFileDataID AS AssetAlias_OriginalFileDataID, \r\n            T.Ver" +
                    "sion AS AssetAlias_Version, \r\n            T.VersionAntecedentID AS AssetAlias_Ve" +
                    "rsionAntecedentID, \r\n            T.VersionCertainty AS AssetAlias_VersionCertain" +
                    "ty, \r\n            T.VersionWorkflowInstanceID AS AssetAlias_VersionWorkflowInsta" +
                    "nceID, \r\n            T.VersionUpdatedBy AS AssetAlias_VersionUpdatedBy, \r\n      " +
                    "      T.VersionDeletedBy AS AssetAlias_VersionDeletedBy, \r\n            T.Version" +
                    "OwnerContactID AS AssetAlias_VersionOwnerContactID, \r\n            T.VersionOwner" +
                    "CompanyID AS AssetAlias_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS" +
                    " AssetAlias_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModul" +
                    "eBusinessObjectsStoreContainer.Q_AssetAlias AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.AssetMaintenances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView273()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssetMaintenances", "\r\n    SELECT VALUE -- Constructing AssetMaintenances\r\n        [XODB.Module.Busine" +
                    "ssObjects.AssetMaintenance](T1.AssetMaintenance_AssetMaintenanceID, T1.AssetMain" +
                    "tenance_AssetID, T1.AssetMaintenance_ModelProcedureID, T1.AssetMaintenance_Targe" +
                    "tNextDueDate, T1.AssetMaintenance_Version, T1.AssetMaintenance_VersionAntecedent" +
                    "ID, T1.AssetMaintenance_VersionCertainty, T1.AssetMaintenance_VersionWorkflowIns" +
                    "tanceID, T1.AssetMaintenance_VersionUpdatedBy, T1.AssetMaintenance_VersionDelete" +
                    "dBy, T1.AssetMaintenance_VersionOwnerContactID, T1.AssetMaintenance_VersionOwner" +
                    "CompanyID, T1.AssetMaintenance_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n   " +
                    "         T.AssetMaintenanceID AS AssetMaintenance_AssetMaintenanceID, \r\n        " +
                    "    T.AssetID AS AssetMaintenance_AssetID, \r\n            T.ModelProcedureID AS A" +
                    "ssetMaintenance_ModelProcedureID, \r\n            T.TargetNextDueDate AS AssetMain" +
                    "tenance_TargetNextDueDate, \r\n            T.Version AS AssetMaintenance_Version, " +
                    "\r\n            T.VersionAntecedentID AS AssetMaintenance_VersionAntecedentID, \r\n " +
                    "           T.VersionCertainty AS AssetMaintenance_VersionCertainty, \r\n          " +
                    "  T.VersionWorkflowInstanceID AS AssetMaintenance_VersionWorkflowInstanceID, \r\n " +
                    "           T.VersionUpdatedBy AS AssetMaintenance_VersionUpdatedBy, \r\n          " +
                    "  T.VersionDeletedBy AS AssetMaintenance_VersionDeletedBy, \r\n            T.Versi" +
                    "onOwnerContactID AS AssetMaintenance_VersionOwnerContactID, \r\n            T.Vers" +
                    "ionOwnerCompanyID AS AssetMaintenance_VersionOwnerCompanyID, \r\n            T.Ver" +
                    "sionUpdated AS AssetMaintenance_VersionUpdated, \r\n            True AS _from0\r\n  " +
                    "      FROM XODBModuleBusinessObjectsStoreContainer.Q_AssetMaintenance AS T\r\n    " +
                    ") AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.AssetWarranties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView274()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssetWarranties", "\r\n    SELECT VALUE -- Constructing AssetWarranties\r\n        [XODB.Module.Business" +
                    "Objects.AssetWarranty](T1.AssetWarranty_AssetyWarrantyID, T1.AssetWarranty_Asset" +
                    "ID, T1.AssetWarranty_ModelWarrantyID, T1.AssetWarranty_StartDate, T1.AssetWarran" +
                    "ty_EndDate, T1.AssetWarranty_Frequency, T1.AssetWarranty_FrequencyUnitID, T1.Ass" +
                    "etWarranty_WarrantyTypeID, T1.AssetWarranty_Version, T1.AssetWarranty_VersionAnt" +
                    "ecedentID, T1.AssetWarranty_VersionCertainty, T1.AssetWarranty_VersionWorkflowIn" +
                    "stanceID, T1.AssetWarranty_VersionUpdatedBy, T1.AssetWarranty_VersionDeletedBy, " +
                    "T1.AssetWarranty_VersionOwnerContactID, T1.AssetWarranty_VersionOwnerCompanyID, " +
                    "T1.AssetWarranty_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Ass" +
                    "etyWarrantyID AS AssetWarranty_AssetyWarrantyID, \r\n            T.AssetID AS Asse" +
                    "tWarranty_AssetID, \r\n            T.ModelWarrantyID AS AssetWarranty_ModelWarrant" +
                    "yID, \r\n            T.StartDate AS AssetWarranty_StartDate, \r\n            T.EndDa" +
                    "te AS AssetWarranty_EndDate, \r\n            T.Frequency AS AssetWarranty_Frequenc" +
                    "y, \r\n            T.FrequencyUnitID AS AssetWarranty_FrequencyUnitID, \r\n         " +
                    "   T.WarrantyTypeID AS AssetWarranty_WarrantyTypeID, \r\n            T.Version AS " +
                    "AssetWarranty_Version, \r\n            T.VersionAntecedentID AS AssetWarranty_Vers" +
                    "ionAntecedentID, \r\n            T.VersionCertainty AS AssetWarranty_VersionCertai" +
                    "nty, \r\n            T.VersionWorkflowInstanceID AS AssetWarranty_VersionWorkflowI" +
                    "nstanceID, \r\n            T.VersionUpdatedBy AS AssetWarranty_VersionUpdatedBy, \r" +
                    "\n            T.VersionDeletedBy AS AssetWarranty_VersionDeletedBy, \r\n           " +
                    " T.VersionOwnerContactID AS AssetWarranty_VersionOwnerContactID, \r\n            T" +
                    ".VersionOwnerCompanyID AS AssetWarranty_VersionOwnerCompanyID, \r\n            T.V" +
                    "ersionUpdated AS AssetWarranty_VersionUpdated, \r\n            True AS _from0\r\n   " +
                    "     FROM XODBModuleBusinessObjectsStoreContainer.Q_AssetWarranty AS T\r\n    ) AS" +
                    " T1");
        }
        
        /// <Summary>
        /// return view for XODBC.CompanyAccounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView275()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.CompanyAccounts", "\r\n    SELECT VALUE -- Constructing CompanyAccounts\r\n        [XODB.Module.Business" +
                    "Objects.CompanyAccount](T1.CompanyAccount_CompanyAccountID, T1.CompanyAccount_Co" +
                    "mpanyID, T1.CompanyAccount_AccountID, T1.CompanyAccount_Version, T1.CompanyAccou" +
                    "nt_VersionAntecedentID, T1.CompanyAccount_VersionCertainty, T1.CompanyAccount_Ve" +
                    "rsionWorkflowInstanceID, T1.CompanyAccount_VersionUpdatedBy, T1.CompanyAccount_V" +
                    "ersionDeletedBy, T1.CompanyAccount_VersionOwnerContactID, T1.CompanyAccount_Vers" +
                    "ionOwnerCompanyID, T1.CompanyAccount_VersionUpdated)\r\n    FROM (\r\n        SELECT" +
                    " \r\n            T.CompanyAccountID AS CompanyAccount_CompanyAccountID, \r\n        " +
                    "    T.CompanyID AS CompanyAccount_CompanyID, \r\n            T.AccountID AS Compan" +
                    "yAccount_AccountID, \r\n            T.Version AS CompanyAccount_Version, \r\n       " +
                    "     T.VersionAntecedentID AS CompanyAccount_VersionAntecedentID, \r\n            " +
                    "T.VersionCertainty AS CompanyAccount_VersionCertainty, \r\n            T.VersionWo" +
                    "rkflowInstanceID AS CompanyAccount_VersionWorkflowInstanceID, \r\n            T.Ve" +
                    "rsionUpdatedBy AS CompanyAccount_VersionUpdatedBy, \r\n            T.VersionDelete" +
                    "dBy AS CompanyAccount_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS" +
                    " CompanyAccount_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS " +
                    "CompanyAccount_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS CompanyA" +
                    "ccount_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusi" +
                    "nessObjectsStoreContainer.Q_CompanyAccount AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ContractAssets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView276()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ContractAssets", "\r\n    SELECT VALUE -- Constructing ContractAssets\r\n        [XODB.Module.BusinessO" +
                    "bjects.ContractAsset](T1.ContractAsset_ContractAssetID, T1.ContractAsset_Contrac" +
                    "tID, T1.ContractAsset_AssetID, T1.ContractAsset_OverrideCoverageStart, T1.Contra" +
                    "ctAsset_OverrideCoverageEnd, T1.ContractAsset_Version, T1.ContractAsset_VersionA" +
                    "ntecedentID, T1.ContractAsset_VersionCertainty, T1.ContractAsset_VersionWorkflow" +
                    "InstanceID, T1.ContractAsset_VersionUpdatedBy, T1.ContractAsset_VersionDeletedBy" +
                    ", T1.ContractAsset_VersionOwnerContactID, T1.ContractAsset_VersionOwnerCompanyID" +
                    ", T1.ContractAsset_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.C" +
                    "ontractAssetID AS ContractAsset_ContractAssetID, \r\n            T.ContractID AS C" +
                    "ontractAsset_ContractID, \r\n            T.AssetID AS ContractAsset_AssetID, \r\n   " +
                    "         T.OverrideCoverageStart AS ContractAsset_OverrideCoverageStart, \r\n     " +
                    "       T.OverrideCoverageEnd AS ContractAsset_OverrideCoverageEnd, \r\n           " +
                    " T.Version AS ContractAsset_Version, \r\n            T.VersionAntecedentID AS Cont" +
                    "ractAsset_VersionAntecedentID, \r\n            T.VersionCertainty AS ContractAsset" +
                    "_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS ContractAsset_Ve" +
                    "rsionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS ContractAsset_Versi" +
                    "onUpdatedBy, \r\n            T.VersionDeletedBy AS ContractAsset_VersionDeletedBy," +
                    " \r\n            T.VersionOwnerContactID AS ContractAsset_VersionOwnerContactID, \r" +
                    "\n            T.VersionOwnerCompanyID AS ContractAsset_VersionOwnerCompanyID, \r\n " +
                    "           T.VersionUpdated AS ContractAsset_VersionUpdated, \r\n            True " +
                    "AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_ContractAsset " +
                    "AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DeliveryAdvices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView277()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3040);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DeliveryAdvices\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.DeliveryAdvice](T1.DeliveryAdvice_DeliveryAdviceID, T1.DeliveryAdvice_D");
            viewString.Append("eliveryAdviceName, T1.DeliveryAdvice_Sequence, T1.DeliveryAdvice_ShippingCompany");
            viewString.Append("ID, T1.DeliveryAdvice_FreightCharge, T1.DeliveryAdvice_FreightTax, T1.DeliveryAd");
            viewString.Append("vice_ConsignmentNote, T1.DeliveryAdvice_AccessoriesSent, T1.DeliveryAdvice_Deliv");
            viewString.Append("eryAdviceNotes, T1.DeliveryAdvice_IsEditable, T1.DeliveryAdvice_SourceCompanyAdd");
            viewString.Append("ressID, T1.DeliveryAdvice_DestinationCompanyAddressID, T1.DeliveryAdvice_Deliver");
            viewString.Append("yAdviceReasonID, T1.DeliveryAdvice_DeliveryAdviceReasonNote, T1.DeliveryAdvice_B");
            viewString.Append("illingAccountID, T1.DeliveryAdvice_ProjectDeliverableID, T1.DeliveryAdvice_Proje");
            viewString.Append("ctID, T1.DeliveryAdvice_Version, T1.DeliveryAdvice_VersionAntecedentID, T1.Deliv");
            viewString.Append("eryAdvice_VersionCertainty, T1.DeliveryAdvice_VersionWorkflowInstanceID, T1.Deli");
            viewString.Append("veryAdvice_VersionUpdatedBy, T1.DeliveryAdvice_VersionDeletedBy, T1.DeliveryAdvi");
            viewString.Append("ce_VersionOwnerContactID, T1.DeliveryAdvice_VersionOwnerCompanyID, T1.DeliveryAd");
            viewString.Append("vice_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.DeliveryAdviceI");
            viewString.Append("D AS DeliveryAdvice_DeliveryAdviceID, \r\n            T.DeliveryAdviceName AS Deli");
            viewString.Append("veryAdvice_DeliveryAdviceName, \r\n            T.Sequence AS DeliveryAdvice_Sequen");
            viewString.Append("ce, \r\n            T.ShippingCompanyID AS DeliveryAdvice_ShippingCompanyID, \r\n   ");
            viewString.Append("         T.FreightCharge AS DeliveryAdvice_FreightCharge, \r\n            T.Freigh");
            viewString.Append("tTax AS DeliveryAdvice_FreightTax, \r\n            T.ConsignmentNote AS DeliveryAd");
            viewString.Append("vice_ConsignmentNote, \r\n            T.AccessoriesSent AS DeliveryAdvice_Accessor");
            viewString.Append("iesSent, \r\n            T.DeliveryAdviceNotes AS DeliveryAdvice_DeliveryAdviceNot");
            viewString.Append("es, \r\n            T.IsEditable AS DeliveryAdvice_IsEditable, \r\n            T.Sou");
            viewString.Append("rceCompanyAddressID AS DeliveryAdvice_SourceCompanyAddressID, \r\n            T.De");
            viewString.Append("stinationCompanyAddressID AS DeliveryAdvice_DestinationCompanyAddressID, \r\n     ");
            viewString.Append("       T.DeliveryAdviceReasonID AS DeliveryAdvice_DeliveryAdviceReasonID, \r\n    ");
            viewString.Append("        T.DeliveryAdviceReasonNote AS DeliveryAdvice_DeliveryAdviceReasonNote, \r");
            viewString.Append("\n            T.BillingAccountID AS DeliveryAdvice_BillingAccountID, \r\n          ");
            viewString.Append("  T.ProjectDeliverableID AS DeliveryAdvice_ProjectDeliverableID, \r\n            T");
            viewString.Append(".ProjectID AS DeliveryAdvice_ProjectID, \r\n            T.Version AS DeliveryAdvic");
            viewString.Append("e_Version, \r\n            T.VersionAntecedentID AS DeliveryAdvice_VersionAntecede");
            viewString.Append("ntID, \r\n            T.VersionCertainty AS DeliveryAdvice_VersionCertainty, \r\n   ");
            viewString.Append("         T.VersionWorkflowInstanceID AS DeliveryAdvice_VersionWorkflowInstanceID");
            viewString.Append(", \r\n            T.VersionUpdatedBy AS DeliveryAdvice_VersionUpdatedBy, \r\n       ");
            viewString.Append("     T.VersionDeletedBy AS DeliveryAdvice_VersionDeletedBy, \r\n            T.Vers");
            viewString.Append("ionOwnerContactID AS DeliveryAdvice_VersionOwnerContactID, \r\n            T.Versi");
            viewString.Append("onOwnerCompanyID AS DeliveryAdvice_VersionOwnerCompanyID, \r\n            T.Versio");
            viewString.Append("nUpdated AS DeliveryAdvice_VersionUpdated, \r\n            True AS _from0\r\n       ");
            viewString.Append(" FROM XODBModuleBusinessObjectsStoreContainer.Q_DeliveryAdvice AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DeliveryAdvices", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DeliveryAdviceItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView278()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2415);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DeliveryAdviceItems\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.DeliveryAdviceItem](T1.DeliveryAdviceItem_DeliveryAdviceItemID, T1.");
            viewString.Append("DeliveryAdviceItem_DeliveryAdviceID, T1.DeliveryAdviceItem_AssetID, T1.DeliveryA");
            viewString.Append("dviceItem_ItemDescription, T1.DeliveryAdviceItem_PartID, T1.DeliveryAdviceItem_Q");
            viewString.Append("uantitySent, T1.DeliveryAdviceItem_QuantityReceived, T1.DeliveryAdviceItem_Retur");
            viewString.Append("nReferenceNumber, T1.DeliveryAdviceItem_ItemInstruction, T1.DeliveryAdviceItem_D");
            viewString.Append("econtaminationStatusID, T1.DeliveryAdviceItem_Version, T1.DeliveryAdviceItem_Ver");
            viewString.Append("sionAntecedentID, T1.DeliveryAdviceItem_VersionCertainty, T1.DeliveryAdviceItem_");
            viewString.Append("VersionWorkflowInstanceID, T1.DeliveryAdviceItem_VersionUpdatedBy, T1.DeliveryAd");
            viewString.Append("viceItem_VersionDeletedBy, T1.DeliveryAdviceItem_VersionOwnerContactID, T1.Deliv");
            viewString.Append("eryAdviceItem_VersionOwnerCompanyID, T1.DeliveryAdviceItem_VersionUpdated)\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.DeliveryAdviceItemID AS DeliveryAdviceIte");
            viewString.Append("m_DeliveryAdviceItemID, \r\n            T.DeliveryAdviceID AS DeliveryAdviceItem_D");
            viewString.Append("eliveryAdviceID, \r\n            T.AssetID AS DeliveryAdviceItem_AssetID, \r\n      ");
            viewString.Append("      T.ItemDescription AS DeliveryAdviceItem_ItemDescription, \r\n            T.P");
            viewString.Append("artID AS DeliveryAdviceItem_PartID, \r\n            T.QuantitySent AS DeliveryAdvi");
            viewString.Append("ceItem_QuantitySent, \r\n            T.QuantityReceived AS DeliveryAdviceItem_Quan");
            viewString.Append("tityReceived, \r\n            T.ReturnReferenceNumber AS DeliveryAdviceItem_Return");
            viewString.Append("ReferenceNumber, \r\n            T.ItemInstruction AS DeliveryAdviceItem_ItemInstr");
            viewString.Append("uction, \r\n            T.DecontaminationStatusID AS DeliveryAdviceItem_Decontamin");
            viewString.Append("ationStatusID, \r\n            T.Version AS DeliveryAdviceItem_Version, \r\n        ");
            viewString.Append("    T.VersionAntecedentID AS DeliveryAdviceItem_VersionAntecedentID, \r\n         ");
            viewString.Append("   T.VersionCertainty AS DeliveryAdviceItem_VersionCertainty, \r\n            T.Ve");
            viewString.Append("rsionWorkflowInstanceID AS DeliveryAdviceItem_VersionWorkflowInstanceID, \r\n     ");
            viewString.Append("       T.VersionUpdatedBy AS DeliveryAdviceItem_VersionUpdatedBy, \r\n            ");
            viewString.Append("T.VersionDeletedBy AS DeliveryAdviceItem_VersionDeletedBy, \r\n            T.Versi");
            viewString.Append("onOwnerContactID AS DeliveryAdviceItem_VersionOwnerContactID, \r\n            T.Ve");
            viewString.Append("rsionOwnerCompanyID AS DeliveryAdviceItem_VersionOwnerCompanyID, \r\n            T");
            viewString.Append(".VersionUpdated AS DeliveryAdviceItem_VersionUpdated, \r\n            True AS _fro");
            viewString.Append("m0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_DeliveryAdviceItem AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DeliveryAdviceItems", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DicitonaryAssetStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView279()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DicitonaryAssetStatus", "\r\n    SELECT VALUE -- Constructing DicitonaryAssetStatus\r\n        [XODB.Module.Bu" +
                    "sinessObjects.DicitonaryAssetStatus](T1.DicitonaryAssetStatus_AssetStatusID, T1." +
                    "DicitonaryAssetStatus_StandardAssetStatusName, T1.DicitonaryAssetStatus_CustomAs" +
                    "setStatusName, T1.DicitonaryAssetStatus_Description, T1.DicitonaryAssetStatus_Ve" +
                    "rsion, T1.DicitonaryAssetStatus_VersionAntecedentID, T1.DicitonaryAssetStatus_Ve" +
                    "rsionCertainty, T1.DicitonaryAssetStatus_VersionWorkflowInstanceID, T1.Dicitonar" +
                    "yAssetStatus_VersionUpdatedBy, T1.DicitonaryAssetStatus_VersionDeletedBy, T1.Dic" +
                    "itonaryAssetStatus_VersionOwnerContactID, T1.DicitonaryAssetStatus_VersionOwnerC" +
                    "ompanyID, T1.DicitonaryAssetStatus_VersionUpdated)\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.AssetStatusID AS DicitonaryAssetStatus_AssetStatusID, \r\n         " +
                    "   T.StandardAssetStatusName AS DicitonaryAssetStatus_StandardAssetStatusName, \r" +
                    "\n            T.CustomAssetStatusName AS DicitonaryAssetStatus_CustomAssetStatusN" +
                    "ame, \r\n            T.Description AS DicitonaryAssetStatus_Description, \r\n       " +
                    "     T.Version AS DicitonaryAssetStatus_Version, \r\n            T.VersionAntecede" +
                    "ntID AS DicitonaryAssetStatus_VersionAntecedentID, \r\n            T.VersionCertai" +
                    "nty AS DicitonaryAssetStatus_VersionCertainty, \r\n            T.VersionWorkflowIn" +
                    "stanceID AS DicitonaryAssetStatus_VersionWorkflowInstanceID, \r\n            T.Ver" +
                    "sionUpdatedBy AS DicitonaryAssetStatus_VersionUpdatedBy, \r\n            T.Version" +
                    "DeletedBy AS DicitonaryAssetStatus_VersionDeletedBy, \r\n            T.VersionOwne" +
                    "rContactID AS DicitonaryAssetStatus_VersionOwnerContactID, \r\n            T.Versi" +
                    "onOwnerCompanyID AS DicitonaryAssetStatus_VersionOwnerCompanyID, \r\n            T" +
                    ".VersionUpdated AS DicitonaryAssetStatus_VersionUpdated, \r\n            True AS _" +
                    "from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_DicitonaryAssetSta" +
                    "tus AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDecontaminationStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView280()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDecontaminationStatus", @"
    SELECT VALUE -- Constructing DictionaryDecontaminationStatus
        [XODB.Module.BusinessObjects.DictionaryDecontaminationStatus](T1.DictionaryDecontaminationStatus_DecontaminationStatusID, T1.DictionaryDecontaminationStatus_StandardDecontaminationStatusName, T1.DictionaryDecontaminationStatus_CustomDecontaminationStatusName, T1.DictionaryDecontaminationStatus_IsSafeForHandling, T1.DictionaryDecontaminationStatus_Description)
    FROM (
        SELECT 
            T.DecontaminationStatusID AS DictionaryDecontaminationStatus_DecontaminationStatusID, 
            T.StandardDecontaminationStatusName AS DictionaryDecontaminationStatus_StandardDecontaminationStatusName, 
            T.CustomDecontaminationStatusName AS DictionaryDecontaminationStatus_CustomDecontaminationStatusName, 
            T.IsSafeForHandling AS DictionaryDecontaminationStatus_IsSafeForHandling, 
            T.Description AS DictionaryDecontaminationStatus_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDecontaminationStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDeliveryAdviceReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView281()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDeliveryAdviceReasons", @"
    SELECT VALUE -- Constructing DictionaryDeliveryAdviceReasons
        [XODB.Module.BusinessObjects.DictionaryDeliveryAdviceReason](T1.DictionaryDeliveryAdviceReason_DeliveryAdviceReasonID, T1.DictionaryDeliveryAdviceReason_StandardDeliveryAdviceReasonName, T1.DictionaryDeliveryAdviceReason_CustomDeliveryAdviceReasonName, T1.DictionaryDeliveryAdviceReason_Description)
    FROM (
        SELECT 
            T.DeliveryAdviceReasonID AS DictionaryDeliveryAdviceReason_DeliveryAdviceReasonID, 
            T.StandardDeliveryAdviceReasonName AS DictionaryDeliveryAdviceReason_StandardDeliveryAdviceReasonName, 
            T.CustomDeliveryAdviceReasonName AS DictionaryDeliveryAdviceReason_CustomDeliveryAdviceReasonName, 
            T.Description AS DictionaryDeliveryAdviceReason_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDeliveryAdviceReason AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDeviceTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView282()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDeviceTypes", @"
    SELECT VALUE -- Constructing DictionaryDeviceTypes
        [XODB.Module.BusinessObjects.DictionaryDeviceType](T1.DictionaryDeviceType_DeviceTypeID, T1.DictionaryDeviceType_ParentDeviceTypeID, T1.DictionaryDeviceType_StandardDeviceTypeName, T1.DictionaryDeviceType_EcriDeviceTypeName, T1.DictionaryDeviceType_CustomDeviceTypeName, T1.DictionaryDeviceType_PrimaryWorkTypeID, T1.DictionaryDeviceType_IsAttributable, T1.DictionaryDeviceType_IsDevice, T1.DictionaryDeviceType_IsPart, T1.DictionaryDeviceType_Description)
    FROM (
        SELECT 
            T.DeviceTypeID AS DictionaryDeviceType_DeviceTypeID, 
            T.ParentDeviceTypeID AS DictionaryDeviceType_ParentDeviceTypeID, 
            T.StandardDeviceTypeName AS DictionaryDeviceType_StandardDeviceTypeName, 
            T.EcriDeviceTypeName AS DictionaryDeviceType_EcriDeviceTypeName, 
            T.CustomDeviceTypeName AS DictionaryDeviceType_CustomDeviceTypeName, 
            T.PrimaryWorkTypeID AS DictionaryDeviceType_PrimaryWorkTypeID, 
            T.IsAttributable AS DictionaryDeviceType_IsAttributable, 
            T.IsDevice AS DictionaryDeviceType_IsDevice, 
            T.IsPart AS DictionaryDeviceType_IsPart, 
            T.Description AS DictionaryDeviceType_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryDeviceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryEventTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView283()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryEventTypes", @"
    SELECT VALUE -- Constructing DictionaryEventTypes
        [XODB.Module.BusinessObjects.DictionaryEventType](T1.DictionaryEventType_EventTypeID, T1.DictionaryEventType_StandardEventTypeName, T1.DictionaryEventType_CustomEventTypeName, T1.DictionaryEventType_Description)
    FROM (
        SELECT 
            T.EventTypeID AS DictionaryEventType_EventTypeID, 
            T.StandardEventTypeName AS DictionaryEventType_StandardEventTypeName, 
            T.CustomEventTypeName AS DictionaryEventType_CustomEventTypeName, 
            T.Description AS DictionaryEventType_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryEventType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView284()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2047);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryParts\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.DictionaryPart](T1.DictionaryPart_PartID, T1.DictionaryPart_ParentPartI");
            viewString.Append("D, T1.DictionaryPart_StandardPartName, T1.DictionaryPart_EcriPartName, T1.Dictio");
            viewString.Append("naryPart_CustomPartName, T1.DictionaryPart_CompanyID, T1.DictionaryPart_Original");
            viewString.Append("ManufacturerName, T1.DictionaryPart_PartStatusID, T1.DictionaryPart_DeviceTypeID");
            viewString.Append(", T1.DictionaryPart_ManufacturedFrom, T1.DictionaryPart_ManufacturedUntil, T1.Di");
            viewString.Append("ctionaryPart_SupportedUntil, T1.DictionaryPart_EstimatedLifetimeUnitID, T1.Dicti");
            viewString.Append("onaryPart_EstimatedLifetime, T1.DictionaryPart_Description, T1.DictionaryPart_Fu");
            viewString.Append("llDescription, T1.DictionaryPart_Thumbnail, T1.DictionaryPart_OriginalFileDataID");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.PartID AS DictionaryPart_PartID, \r");
            viewString.Append("\n            T.ParentPartID AS DictionaryPart_ParentPartID, \r\n            T.Stan");
            viewString.Append("dardPartName AS DictionaryPart_StandardPartName, \r\n            T.EcriPartName AS");
            viewString.Append(" DictionaryPart_EcriPartName, \r\n            T.CustomPartName AS DictionaryPart_C");
            viewString.Append("ustomPartName, \r\n            T.CompanyID AS DictionaryPart_CompanyID, \r\n        ");
            viewString.Append("    T.OriginalManufacturerName AS DictionaryPart_OriginalManufacturerName, \r\n   ");
            viewString.Append("         T.PartStatusID AS DictionaryPart_PartStatusID, \r\n            T.DeviceTy");
            viewString.Append("peID AS DictionaryPart_DeviceTypeID, \r\n            T.ManufacturedFrom AS Diction");
            viewString.Append("aryPart_ManufacturedFrom, \r\n            T.ManufacturedUntil AS DictionaryPart_Ma");
            viewString.Append("nufacturedUntil, \r\n            T.SupportedUntil AS DictionaryPart_SupportedUntil");
            viewString.Append(", \r\n            T.EstimatedLifetimeUnitID AS DictionaryPart_EstimatedLifetimeUni");
            viewString.Append("tID, \r\n            T.EstimatedLifetime AS DictionaryPart_EstimatedLifetime, \r\n  ");
            viewString.Append("          T.Description AS DictionaryPart_Description, \r\n            T.FullDescr");
            viewString.Append("iption AS DictionaryPart_FullDescription, \r\n            T.Thumbnail AS Dictionar");
            viewString.Append("yPart_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryPart_OriginalFi");
            viewString.Append("leDataID, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsSt");
            viewString.Append("oreContainer.Q_DictionaryPart AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryParts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPartCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView285()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPartCategories", @"
    SELECT VALUE -- Constructing DictionaryPartCategories
        [XODB.Module.BusinessObjects.DictionaryPartCategory](T1.DictionaryPartCategory_PartCategoryID, T1.DictionaryPartCategory_PartID, T1.DictionaryPartCategory_CategoryDeviceTypeID)
    FROM (
        SELECT 
            T.PartCategoryID AS DictionaryPartCategory_PartCategoryID, 
            T.PartID AS DictionaryPartCategory_PartID, 
            T.CategoryDeviceTypeID AS DictionaryPartCategory_CategoryDeviceTypeID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPartKits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView286()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPartKits", @"
    SELECT VALUE -- Constructing DictionaryPartKits
        [XODB.Module.BusinessObjects.DictionaryPartKit](T1.DictionaryPartKit_PartKitID, T1.DictionaryPartKit_StandardPartKitName, T1.DictionaryPartKit_CustomPartKitName, T1.DictionaryPartKit_Description)
    FROM (
        SELECT 
            T.PartKitID AS DictionaryPartKit_PartKitID, 
            T.StandardPartKitName AS DictionaryPartKit_StandardPartKitName, 
            T.CustomPartKitName AS DictionaryPartKit_CustomPartKitName, 
            T.Description AS DictionaryPartKit_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartKit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPartKitItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView287()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPartKitItems", @"
    SELECT VALUE -- Constructing DictionaryPartKitItems
        [XODB.Module.BusinessObjects.DictionaryPartKitItem](T1.DictionaryPartKitItem_PartKitItemID, T1.DictionaryPartKitItem_PartKitID, T1.DictionaryPartKitItem_PartID, T1.DictionaryPartKitItem_UnitID, T1.DictionaryPartKitItem_Quantity)
    FROM (
        SELECT 
            T.PartKitItemID AS DictionaryPartKitItem_PartKitItemID, 
            T.PartKitID AS DictionaryPartKitItem_PartKitID, 
            T.PartID AS DictionaryPartKitItem_PartID, 
            T.UnitID AS DictionaryPartKitItem_UnitID, 
            T.Quantity AS DictionaryPartKitItem_Quantity, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryPartKitItem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryProcedures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView288()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2903);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryProcedures\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.DictionaryProcedure](T1.DictionaryProcedure_ProcedureID, T1.Dictio");
            viewString.Append("naryProcedure_StandardProcedureName, T1.DictionaryProcedure_CustomProcedureName,");
            viewString.Append(" T1.DictionaryProcedure_Description, T1.DictionaryProcedure_TaskID, T1.Dictionar");
            viewString.Append("yProcedure_ModelID, T1.DictionaryProcedure_PartID, T1.DictionaryProcedure_Sequen");
            viewString.Append("ce, T1.DictionaryProcedure_ValidFrom, T1.DictionaryProcedure_ValidUntil, T1.Dict");
            viewString.Append("ionaryProcedure_FileDataID, T1.DictionaryProcedure_CountryID, T1.DictionaryProce");
            viewString.Append("dure_CountryStateID, T1.DictionaryProcedure_Place, T1.DictionaryProcedure_Locati");
            viewString.Append("onID, T1.DictionaryProcedure_ProvinceID, T1.DictionaryProcedure_Version, T1.Dict");
            viewString.Append("ionaryProcedure_VersionAntecedentID, T1.DictionaryProcedure_VersionCertainty, T1");
            viewString.Append(".DictionaryProcedure_VersionWorkflowInstanceID, T1.DictionaryProcedure_VersionUp");
            viewString.Append("datedBy, T1.DictionaryProcedure_VersionDeletedBy, T1.DictionaryProcedure_Version");
            viewString.Append("OwnerContactID, T1.DictionaryProcedure_VersionOwnerCompanyID, T1.DictionaryProce");
            viewString.Append("dure_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ProcedureID AS ");
            viewString.Append("DictionaryProcedure_ProcedureID, \r\n            T.StandardProcedureName AS Dictio");
            viewString.Append("naryProcedure_StandardProcedureName, \r\n            T.CustomProcedureName AS Dict");
            viewString.Append("ionaryProcedure_CustomProcedureName, \r\n            T.Description AS DictionaryPr");
            viewString.Append("ocedure_Description, \r\n            T.TaskID AS DictionaryProcedure_TaskID, \r\n   ");
            viewString.Append("         T.ModelID AS DictionaryProcedure_ModelID, \r\n            T.PartID AS Dic");
            viewString.Append("tionaryProcedure_PartID, \r\n            T.Sequence AS DictionaryProcedure_Sequenc");
            viewString.Append("e, \r\n            T.ValidFrom AS DictionaryProcedure_ValidFrom, \r\n            T.V");
            viewString.Append("alidUntil AS DictionaryProcedure_ValidUntil, \r\n            T.FileDataID AS Dicti");
            viewString.Append("onaryProcedure_FileDataID, \r\n            T.CountryID AS DictionaryProcedure_Coun");
            viewString.Append("tryID, \r\n            T.CountryStateID AS DictionaryProcedure_CountryStateID, \r\n ");
            viewString.Append("           T.Place AS DictionaryProcedure_Place, \r\n            T.LocationID AS D");
            viewString.Append("ictionaryProcedure_LocationID, \r\n            T.ProvinceID AS DictionaryProcedure");
            viewString.Append("_ProvinceID, \r\n            T.Version AS DictionaryProcedure_Version, \r\n         ");
            viewString.Append("   T.VersionAntecedentID AS DictionaryProcedure_VersionAntecedentID, \r\n         ");
            viewString.Append("   T.VersionCertainty AS DictionaryProcedure_VersionCertainty, \r\n            T.V");
            viewString.Append("ersionWorkflowInstanceID AS DictionaryProcedure_VersionWorkflowInstanceID, \r\n   ");
            viewString.Append("         T.VersionUpdatedBy AS DictionaryProcedure_VersionUpdatedBy, \r\n         ");
            viewString.Append("   T.VersionDeletedBy AS DictionaryProcedure_VersionDeletedBy, \r\n            T.V");
            viewString.Append("ersionOwnerContactID AS DictionaryProcedure_VersionOwnerContactID, \r\n           ");
            viewString.Append(" T.VersionOwnerCompanyID AS DictionaryProcedure_VersionOwnerCompanyID, \r\n       ");
            viewString.Append("     T.VersionUpdated AS DictionaryProcedure_VersionUpdated, \r\n            True ");
            viewString.Append("AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryProc");
            viewString.Append("edure AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryProcedures", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryWarrantyTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView289()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryWarrantyTypes", @"
    SELECT VALUE -- Constructing DictionaryWarrantyTypes
        [XODB.Module.BusinessObjects.DictionaryWarrantyType](T1.DictionaryWarrantyType_WarrantyTypeID, T1.DictionaryWarrantyType_StandardWarrantyTypeName, T1.DictionaryWarrantyType_CustomWarrantyTypeName, T1.DictionaryWarrantyType_Description)
    FROM (
        SELECT 
            T.WarrantyTypeID AS DictionaryWarrantyType_WarrantyTypeID, 
            T.StandardWarrantyTypeName AS DictionaryWarrantyType_StandardWarrantyTypeName, 
            T.CustomWarrantyTypeName AS DictionaryWarrantyType_CustomWarrantyTypeName, 
            T.Description AS DictionaryWarrantyType_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_DictionaryWarrantyType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView290()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelParts", @"
    SELECT VALUE -- Constructing ModelParts
        [XODB.Module.BusinessObjects.ModelPart](T1.ModelPart_ModelPartID, T1.ModelPart_ModelID, T1.ModelPart_PartID, T1.ModelPart_Version, T1.ModelPart_VersionAntecedentID, T1.ModelPart_VersionCertainty, T1.ModelPart_VersionWorkflowInstanceID, T1.ModelPart_VersionUpdatedBy, T1.ModelPart_VersionDeletedBy, T1.ModelPart_VersionOwnerContactID, T1.ModelPart_VersionOwnerCompanyID, T1.ModelPart_VersionUpdated)
    FROM (
        SELECT 
            T.ModelPartID AS ModelPart_ModelPartID, 
            T.ModelID AS ModelPart_ModelID, 
            T.PartID AS ModelPart_PartID, 
            T.Version AS ModelPart_Version, 
            T.VersionAntecedentID AS ModelPart_VersionAntecedentID, 
            T.VersionCertainty AS ModelPart_VersionCertainty, 
            T.VersionWorkflowInstanceID AS ModelPart_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS ModelPart_VersionUpdatedBy, 
            T.VersionDeletedBy AS ModelPart_VersionDeletedBy, 
            T.VersionOwnerContactID AS ModelPart_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS ModelPart_VersionOwnerCompanyID, 
            T.VersionUpdated AS ModelPart_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_ModelPart AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelPartKits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView291()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelPartKits", @"
    SELECT VALUE -- Constructing ModelPartKits
        [XODB.Module.BusinessObjects.ModelPartKit](T1.ModelPartKit_ModelPartKitID, T1.ModelPartKit_ModelPartID, T1.ModelPartKit_PartKitID, T1.ModelPartKit_Version, T1.ModelPartKit_VersionAntecedentID, T1.ModelPartKit_VersionCertainty, T1.ModelPartKit_VersionWorkflowInstanceID, T1.ModelPartKit_VersionUpdatedBy, T1.ModelPartKit_VersionDeletedBy, T1.ModelPartKit_VersionOwnerContactID, T1.ModelPartKit_VersionOwnerCompanyID, T1.ModelPartKit_VersionUpdated)
    FROM (
        SELECT 
            T.ModelPartKitID AS ModelPartKit_ModelPartKitID, 
            T.ModelPartID AS ModelPartKit_ModelPartID, 
            T.PartKitID AS ModelPartKit_PartKitID, 
            T.Version AS ModelPartKit_Version, 
            T.VersionAntecedentID AS ModelPartKit_VersionAntecedentID, 
            T.VersionCertainty AS ModelPartKit_VersionCertainty, 
            T.VersionWorkflowInstanceID AS ModelPartKit_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS ModelPartKit_VersionUpdatedBy, 
            T.VersionDeletedBy AS ModelPartKit_VersionDeletedBy, 
            T.VersionOwnerContactID AS ModelPartKit_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS ModelPartKit_VersionOwnerCompanyID, 
            T.VersionUpdated AS ModelPartKit_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_ModelPartKit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelProcedures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView292()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelProcedures", "\r\n    SELECT VALUE -- Constructing ModelProcedures\r\n        [XODB.Module.Business" +
                    "Objects.ModelProcedure](T1.ModelProcedure_ModelProcedureID, T1.ModelProcedure_Mo" +
                    "delID, T1.ModelProcedure_ProcedureID, T1.ModelProcedure_Sequence, T1.ModelProced" +
                    "ure_Frequency, T1.ModelProcedure_FrequencyUnitID, T1.ModelProcedure_RiskFactor, " +
                    "T1.ModelProcedure_Version, T1.ModelProcedure_VersionAntecedentID, T1.ModelProced" +
                    "ure_VersionCertainty, T1.ModelProcedure_VersionWorkflowInstanceID, T1.ModelProce" +
                    "dure_VersionUpdatedBy, T1.ModelProcedure_VersionDeletedBy, T1.ModelProcedure_Ver" +
                    "sionOwnerContactID, T1.ModelProcedure_VersionOwnerCompanyID, T1.ModelProcedure_V" +
                    "ersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ModelProcedureID AS M" +
                    "odelProcedure_ModelProcedureID, \r\n            T.ModelID AS ModelProcedure_ModelI" +
                    "D, \r\n            T.ProcedureID AS ModelProcedure_ProcedureID, \r\n            T.Se" +
                    "quence AS ModelProcedure_Sequence, \r\n            T.Frequency AS ModelProcedure_F" +
                    "requency, \r\n            T.FrequencyUnitID AS ModelProcedure_FrequencyUnitID, \r\n " +
                    "           T.RiskFactor AS ModelProcedure_RiskFactor, \r\n            T.Version AS" +
                    " ModelProcedure_Version, \r\n            T.VersionAntecedentID AS ModelProcedure_V" +
                    "ersionAntecedentID, \r\n            T.VersionCertainty AS ModelProcedure_VersionCe" +
                    "rtainty, \r\n            T.VersionWorkflowInstanceID AS ModelProcedure_VersionWork" +
                    "flowInstanceID, \r\n            T.VersionUpdatedBy AS ModelProcedure_VersionUpdate" +
                    "dBy, \r\n            T.VersionDeletedBy AS ModelProcedure_VersionDeletedBy, \r\n    " +
                    "        T.VersionOwnerContactID AS ModelProcedure_VersionOwnerContactID, \r\n     " +
                    "       T.VersionOwnerCompanyID AS ModelProcedure_VersionOwnerCompanyID, \r\n      " +
                    "      T.VersionUpdated AS ModelProcedure_VersionUpdated, \r\n            True AS _" +
                    "from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedure AS " +
                    "T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelProcedureTasks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView293()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2332);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ModelProcedureTasks\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.ModelProcedureTask](T1.ModelProcedureTask_ModelProcedureTaskID, T1.");
            viewString.Append("ModelProcedureTask_ModelProcedureID, T1.ModelProcedureTask_TaskID, T1.ModelProce");
            viewString.Append("dureTask_Sequence, T1.ModelProcedureTask_FileDataID, T1.ModelProcedureTask_State");
            viewString.Append("dRevisionNumber, T1.ModelProcedureTask_StatedRevisionPublishDate, T1.ModelProced");
            viewString.Append("ureTask_EstimatedDuration, T1.ModelProcedureTask_EstimatedDurationUnitID, T1.Mod");
            viewString.Append("elProcedureTask_Version, T1.ModelProcedureTask_VersionAntecedentID, T1.ModelProc");
            viewString.Append("edureTask_VersionCertainty, T1.ModelProcedureTask_VersionWorkflowInstanceID, T1.");
            viewString.Append("ModelProcedureTask_VersionUpdatedBy, T1.ModelProcedureTask_VersionDeletedBy, T1.");
            viewString.Append("ModelProcedureTask_VersionOwnerContactID, T1.ModelProcedureTask_VersionOwnerComp");
            viewString.Append("anyID, T1.ModelProcedureTask_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n     ");
            viewString.Append("       T.ModelProcedureTaskID AS ModelProcedureTask_ModelProcedureTaskID, \r\n    ");
            viewString.Append("        T.ModelProcedureID AS ModelProcedureTask_ModelProcedureID, \r\n           ");
            viewString.Append(" T.TaskID AS ModelProcedureTask_TaskID, \r\n            T.Sequence AS ModelProcedu");
            viewString.Append("reTask_Sequence, \r\n            T.FileDataID AS ModelProcedureTask_FileDataID, \r\n");
            viewString.Append("            T.StatedRevisionNumber AS ModelProcedureTask_StatedRevisionNumber, \r");
            viewString.Append("\n            T.StatedRevisionPublishDate AS ModelProcedureTask_StatedRevisionPub");
            viewString.Append("lishDate, \r\n            T.EstimatedDuration AS ModelProcedureTask_EstimatedDurat");
            viewString.Append("ion, \r\n            T.EstimatedDurationUnitID AS ModelProcedureTask_EstimatedDura");
            viewString.Append("tionUnitID, \r\n            T.Version AS ModelProcedureTask_Version, \r\n           ");
            viewString.Append(" T.VersionAntecedentID AS ModelProcedureTask_VersionAntecedentID, \r\n            ");
            viewString.Append("T.VersionCertainty AS ModelProcedureTask_VersionCertainty, \r\n            T.Versi");
            viewString.Append("onWorkflowInstanceID AS ModelProcedureTask_VersionWorkflowInstanceID, \r\n        ");
            viewString.Append("    T.VersionUpdatedBy AS ModelProcedureTask_VersionUpdatedBy, \r\n            T.V");
            viewString.Append("ersionDeletedBy AS ModelProcedureTask_VersionDeletedBy, \r\n            T.VersionO");
            viewString.Append("wnerContactID AS ModelProcedureTask_VersionOwnerContactID, \r\n            T.Versi");
            viewString.Append("onOwnerCompanyID AS ModelProcedureTask_VersionOwnerCompanyID, \r\n            T.Ve");
            viewString.Append("rsionUpdated AS ModelProcedureTask_VersionUpdated, \r\n            True AS _from0\r");
            viewString.Append("\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_ModelProcedureTask AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelProcedureTasks", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ModelProcedureTaskParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView294()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelProcedureTaskParts", "\r\n    SELECT VALUE -- Constructing ModelProcedureTaskParts\r\n        [XODB.Module." +
                    "BusinessObjects.ModelProcedureTaskPart](T1.ModelProcedureTaskPart_ModelProcedure" +
                    "TaskPartID, T1.ModelProcedureTaskPart_ModelProcedureTaskID, T1.ModelProcedureTas" +
                    "kPart_PartID, T1.ModelProcedureTaskPart_PartQuantity, T1.ModelProcedureTaskPart_" +
                    "Version, T1.ModelProcedureTaskPart_VersionAntecedentID, T1.ModelProcedureTaskPar" +
                    "t_VersionCertainty, T1.ModelProcedureTaskPart_VersionWorkflowInstanceID, T1.Mode" +
                    "lProcedureTaskPart_VersionUpdatedBy, T1.ModelProcedureTaskPart_VersionDeletedBy," +
                    " T1.ModelProcedureTaskPart_VersionOwnerContactID, T1.ModelProcedureTaskPart_Vers" +
                    "ionOwnerCompanyID, T1.ModelProcedureTaskPart_VersionUpdated)\r\n    FROM (\r\n      " +
                    "  SELECT \r\n            T.ModelProcedureTaskPartID AS ModelProcedureTaskPart_Mode" +
                    "lProcedureTaskPartID, \r\n            T.ModelProcedureTaskID AS ModelProcedureTask" +
                    "Part_ModelProcedureTaskID, \r\n            T.PartID AS ModelProcedureTaskPart_Part" +
                    "ID, \r\n            T.PartQuantity AS ModelProcedureTaskPart_PartQuantity, \r\n     " +
                    "       T.Version AS ModelProcedureTaskPart_Version, \r\n            T.VersionAntec" +
                    "edentID AS ModelProcedureTaskPart_VersionAntecedentID, \r\n            T.VersionCe" +
                    "rtainty AS ModelProcedureTaskPart_VersionCertainty, \r\n            T.VersionWorkf" +
                    "lowInstanceID AS ModelProcedureTaskPart_VersionWorkflowInstanceID, \r\n           " +
                    " T.VersionUpdatedBy AS ModelProcedureTaskPart_VersionUpdatedBy, \r\n            T." +
                    "VersionDeletedBy AS ModelProcedureTaskPart_VersionDeletedBy, \r\n            T.Ver" +
                    "sionOwnerContactID AS ModelProcedureTaskPart_VersionOwnerContactID, \r\n          " +
                    "  T.VersionOwnerCompanyID AS ModelProcedureTaskPart_VersionOwnerCompanyID, \r\n   " +
                    "         T.VersionUpdated AS ModelProcedureTaskPart_VersionUpdated, \r\n          " +
                    "  True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_ModelPr" +
                    "ocedureTaskPart AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelScheduleCycles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView295()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelScheduleCycles", "\r\n    SELECT VALUE -- Constructing ModelScheduleCycles\r\n        [XODB.Module.Busi" +
                    "nessObjects.ModelScheduleCycle](T1.ModelScheduleCycle_ModelScheduleCycleID, T1.M" +
                    "odelScheduleCycle_ModelID, T1.ModelScheduleCycle_ModelProcedureID, T1.ModelSched" +
                    "uleCycle_Sequence, T1.ModelScheduleCycle_ScheduleFrequencyUnitID, T1.ModelSchedu" +
                    "leCycle_ScheduleFrequency, T1.ModelScheduleCycle_Version, T1.ModelScheduleCycle_" +
                    "VersionAntecedentID, T1.ModelScheduleCycle_VersionCertainty, T1.ModelScheduleCyc" +
                    "le_VersionWorkflowInstanceID, T1.ModelScheduleCycle_VersionUpdatedBy, T1.ModelSc" +
                    "heduleCycle_VersionDeletedBy, T1.ModelScheduleCycle_VersionOwnerContactID, T1.Mo" +
                    "delScheduleCycle_VersionOwnerCompanyID, T1.ModelScheduleCycle_VersionUpdated)\r\n " +
                    "   FROM (\r\n        SELECT \r\n            T.ModelScheduleCycleID AS ModelScheduleC" +
                    "ycle_ModelScheduleCycleID, \r\n            T.ModelID AS ModelScheduleCycle_ModelID" +
                    ", \r\n            T.ModelProcedureID AS ModelScheduleCycle_ModelProcedureID, \r\n   " +
                    "         T.Sequence AS ModelScheduleCycle_Sequence, \r\n            T.ScheduleFreq" +
                    "uencyUnitID AS ModelScheduleCycle_ScheduleFrequencyUnitID, \r\n            T.Sched" +
                    "uleFrequency AS ModelScheduleCycle_ScheduleFrequency, \r\n            T.Version AS" +
                    " ModelScheduleCycle_Version, \r\n            T.VersionAntecedentID AS ModelSchedul" +
                    "eCycle_VersionAntecedentID, \r\n            T.VersionCertainty AS ModelScheduleCyc" +
                    "le_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS ModelScheduleC" +
                    "ycle_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS ModelSchedul" +
                    "eCycle_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS ModelScheduleCycle_" +
                    "VersionDeletedBy, \r\n            T.VersionOwnerContactID AS ModelScheduleCycle_Ve" +
                    "rsionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS ModelScheduleCycle" +
                    "_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ModelScheduleCycle_Ver" +
                    "sionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObject" +
                    "sStoreContainer.Q_ModelScheduleCycle AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelWarranties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView296()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelWarranties", "\r\n    SELECT VALUE -- Constructing ModelWarranties\r\n        [XODB.Module.Business" +
                    "Objects.ModelWarranty](T1.ModelWarranty_ModelWarrantyID, T1.ModelWarranty_ModelI" +
                    "D, T1.ModelWarranty_WarrantyTypeID, T1.ModelWarranty_WarrantyPeriodUnitID, T1.Mo" +
                    "delWarranty_WarrantyPeriod, T1.ModelWarranty_WarrantyExpires, T1.ModelWarranty_W" +
                    "arrantyRenewal, T1.ModelWarranty_SupplierContractID, T1.ModelWarranty_Version, T" +
                    "1.ModelWarranty_VersionAntecedentID, T1.ModelWarranty_VersionCertainty, T1.Model" +
                    "Warranty_VersionWorkflowInstanceID, T1.ModelWarranty_VersionUpdatedBy, T1.ModelW" +
                    "arranty_VersionDeletedBy, T1.ModelWarranty_VersionOwnerContactID, T1.ModelWarran" +
                    "ty_VersionOwnerCompanyID, T1.ModelWarranty_VersionUpdated)\r\n    FROM (\r\n        " +
                    "SELECT \r\n            T.ModelWarrantyID AS ModelWarranty_ModelWarrantyID, \r\n     " +
                    "       T.ModelID AS ModelWarranty_ModelID, \r\n            T.WarrantyTypeID AS Mod" +
                    "elWarranty_WarrantyTypeID, \r\n            T.WarrantyPeriodUnitID AS ModelWarranty" +
                    "_WarrantyPeriodUnitID, \r\n            T.WarrantyPeriod AS ModelWarranty_WarrantyP" +
                    "eriod, \r\n            T.WarrantyExpires AS ModelWarranty_WarrantyExpires, \r\n     " +
                    "       T.WarrantyRenewal AS ModelWarranty_WarrantyRenewal, \r\n            T.Suppl" +
                    "ierContractID AS ModelWarranty_SupplierContractID, \r\n            T.Version AS Mo" +
                    "delWarranty_Version, \r\n            T.VersionAntecedentID AS ModelWarranty_Versio" +
                    "nAntecedentID, \r\n            T.VersionCertainty AS ModelWarranty_VersionCertaint" +
                    "y, \r\n            T.VersionWorkflowInstanceID AS ModelWarranty_VersionWorkflowIns" +
                    "tanceID, \r\n            T.VersionUpdatedBy AS ModelWarranty_VersionUpdatedBy, \r\n " +
                    "           T.VersionDeletedBy AS ModelWarranty_VersionDeletedBy, \r\n            T" +
                    ".VersionOwnerContactID AS ModelWarranty_VersionOwnerContactID, \r\n            T.V" +
                    "ersionOwnerCompanyID AS ModelWarranty_VersionOwnerCompanyID, \r\n            T.Ver" +
                    "sionUpdated AS ModelWarranty_VersionUpdated, \r\n            True AS _from0\r\n     " +
                    "   FROM XODBModuleBusinessObjectsStoreContainer.Q_ModelWarranty AS T\r\n    ) AS T" +
                    "1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTaskModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView297()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2662);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectPlanTaskModels\r\n        [XODB.Module.B");
            viewString.Append("usinessObjects.ProjectPlanTaskModel](T1.ProjectPlanTaskModel_ProjectPlanTaskMode");
            viewString.Append("lID, T1.ProjectPlanTaskModel_ProjectPlanTaskID, T1.ProjectPlanTaskModel_ModelID,");
            viewString.Append(" T1.ProjectPlanTaskModel_WarehouseModelID, T1.ProjectPlanTaskModel_SupplierModel");
            viewString.Append("ID, T1.ProjectPlanTaskModel_QuantityUnitID, T1.ProjectPlanTaskModel_QuantityOrde");
            viewString.Append("red, T1.ProjectPlanTaskModel_QuantityDespatched, T1.ProjectPlanTaskModel_Quantit");
            viewString.Append("yReceived, T1.ProjectPlanTaskModel_QuantityUsed, T1.ProjectPlanTaskModel_Used, T");
            viewString.Append("1.ProjectPlanTaskModel_Note, T1.ProjectPlanTaskModel_Version, T1.ProjectPlanTask");
            viewString.Append("Model_VersionAntecedentID, T1.ProjectPlanTaskModel_VersionCertainty, T1.ProjectP");
            viewString.Append("lanTaskModel_VersionWorkflowInstanceID, T1.ProjectPlanTaskModel_VersionUpdatedBy");
            viewString.Append(", T1.ProjectPlanTaskModel_VersionDeletedBy, T1.ProjectPlanTaskModel_VersionOwner");
            viewString.Append("ContactID, T1.ProjectPlanTaskModel_VersionOwnerCompanyID, T1.ProjectPlanTaskMode");
            viewString.Append("l_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectPlanTaskMod");
            viewString.Append("elID AS ProjectPlanTaskModel_ProjectPlanTaskModelID, \r\n            T.ProjectPlan");
            viewString.Append("TaskID AS ProjectPlanTaskModel_ProjectPlanTaskID, \r\n            T.ModelID AS Pro");
            viewString.Append("jectPlanTaskModel_ModelID, \r\n            T.WarehouseModelID AS ProjectPlanTaskMo");
            viewString.Append("del_WarehouseModelID, \r\n            T.SupplierModelID AS ProjectPlanTaskModel_Su");
            viewString.Append("pplierModelID, \r\n            T.QuantityUnitID AS ProjectPlanTaskModel_QuantityUn");
            viewString.Append("itID, \r\n            T.QuantityOrdered AS ProjectPlanTaskModel_QuantityOrdered, \r");
            viewString.Append("\n            T.QuantityDespatched AS ProjectPlanTaskModel_QuantityDespatched, \r\n");
            viewString.Append("            T.QuantityReceived AS ProjectPlanTaskModel_QuantityReceived, \r\n     ");
            viewString.Append("       T.QuantityUsed AS ProjectPlanTaskModel_QuantityUsed, \r\n            T.Used");
            viewString.Append(" AS ProjectPlanTaskModel_Used, \r\n            T.Note AS ProjectPlanTaskModel_Note");
            viewString.Append(", \r\n            T.Version AS ProjectPlanTaskModel_Version, \r\n            T.Versi");
            viewString.Append("onAntecedentID AS ProjectPlanTaskModel_VersionAntecedentID, \r\n            T.Vers");
            viewString.Append("ionCertainty AS ProjectPlanTaskModel_VersionCertainty, \r\n            T.VersionWo");
            viewString.Append("rkflowInstanceID AS ProjectPlanTaskModel_VersionWorkflowInstanceID, \r\n          ");
            viewString.Append("  T.VersionUpdatedBy AS ProjectPlanTaskModel_VersionUpdatedBy, \r\n            T.V");
            viewString.Append("ersionDeletedBy AS ProjectPlanTaskModel_VersionDeletedBy, \r\n            T.Versio");
            viewString.Append("nOwnerContactID AS ProjectPlanTaskModel_VersionOwnerContactID, \r\n            T.V");
            viewString.Append("ersionOwnerCompanyID AS ProjectPlanTaskModel_VersionOwnerCompanyID, \r\n          ");
            viewString.Append("  T.VersionUpdated AS ProjectPlanTaskModel_VersionUpdated, \r\n            True AS");
            viewString.Append(" _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_ProjectPlanTaskM");
            viewString.Append("odel AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTaskModels", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTaskParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView298()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2605);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectPlanTaskParts\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.ProjectPlanTaskPart](T1.ProjectPlanTaskPart_ProjectPlanTaskPartID,");
            viewString.Append(" T1.ProjectPlanTaskPart_ProjectPlanTaskID, T1.ProjectPlanTaskPart_PartID, T1.Pro");
            viewString.Append("jectPlanTaskPart_WarehousePartID, T1.ProjectPlanTaskPart_SupplierPartID, T1.Proj");
            viewString.Append("ectPlanTaskPart_QuantityUnitID, T1.ProjectPlanTaskPart_QuantityOrdered, T1.Proje");
            viewString.Append("ctPlanTaskPart_QuantityDespatched, T1.ProjectPlanTaskPart_QuantityReceived, T1.P");
            viewString.Append("rojectPlanTaskPart_QuantityUsed, T1.ProjectPlanTaskPart_Used, T1.ProjectPlanTask");
            viewString.Append("Part_Note, T1.ProjectPlanTaskPart_Version, T1.ProjectPlanTaskPart_VersionAnteced");
            viewString.Append("entID, T1.ProjectPlanTaskPart_VersionCertainty, T1.ProjectPlanTaskPart_VersionWo");
            viewString.Append("rkflowInstanceID, T1.ProjectPlanTaskPart_VersionUpdatedBy, T1.ProjectPlanTaskPar");
            viewString.Append("t_VersionDeletedBy, T1.ProjectPlanTaskPart_VersionOwnerContactID, T1.ProjectPlan");
            viewString.Append("TaskPart_VersionOwnerCompanyID, T1.ProjectPlanTaskPart_VersionUpdated)\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.ProjectPlanTaskPartID AS ProjectPlanTaskPart_");
            viewString.Append("ProjectPlanTaskPartID, \r\n            T.ProjectPlanTaskID AS ProjectPlanTaskPart_");
            viewString.Append("ProjectPlanTaskID, \r\n            T.PartID AS ProjectPlanTaskPart_PartID, \r\n     ");
            viewString.Append("       T.WarehousePartID AS ProjectPlanTaskPart_WarehousePartID, \r\n            T");
            viewString.Append(".SupplierPartID AS ProjectPlanTaskPart_SupplierPartID, \r\n            T.QuantityU");
            viewString.Append("nitID AS ProjectPlanTaskPart_QuantityUnitID, \r\n            T.QuantityOrdered AS ");
            viewString.Append("ProjectPlanTaskPart_QuantityOrdered, \r\n            T.QuantityDespatched AS Proje");
            viewString.Append("ctPlanTaskPart_QuantityDespatched, \r\n            T.QuantityReceived AS ProjectPl");
            viewString.Append("anTaskPart_QuantityReceived, \r\n            T.QuantityUsed AS ProjectPlanTaskPart");
            viewString.Append("_QuantityUsed, \r\n            T.Used AS ProjectPlanTaskPart_Used, \r\n            T");
            viewString.Append(".Note AS ProjectPlanTaskPart_Note, \r\n            T.Version AS ProjectPlanTaskPar");
            viewString.Append("t_Version, \r\n            T.VersionAntecedentID AS ProjectPlanTaskPart_VersionAnt");
            viewString.Append("ecedentID, \r\n            T.VersionCertainty AS ProjectPlanTaskPart_VersionCertai");
            viewString.Append("nty, \r\n            T.VersionWorkflowInstanceID AS ProjectPlanTaskPart_VersionWor");
            viewString.Append("kflowInstanceID, \r\n            T.VersionUpdatedBy AS ProjectPlanTaskPart_Version");
            viewString.Append("UpdatedBy, \r\n            T.VersionDeletedBy AS ProjectPlanTaskPart_VersionDelete");
            viewString.Append("dBy, \r\n            T.VersionOwnerContactID AS ProjectPlanTaskPart_VersionOwnerCo");
            viewString.Append("ntactID, \r\n            T.VersionOwnerCompanyID AS ProjectPlanTaskPart_VersionOwn");
            viewString.Append("erCompanyID, \r\n            T.VersionUpdated AS ProjectPlanTaskPart_VersionUpdate");
            viewString.Append("d, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreCont");
            viewString.Append("ainer.Q_ProjectPlanTaskPart AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTaskParts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Recalls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView299()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Recalls", "\r\n    SELECT VALUE -- Constructing Recalls\r\n        [XODB.Module.BusinessObjects." +
                    "Recall](T1.Recall_RecallID, T1.Recall_GlobalRecallCode, T1.Recall_GlobalRecallOr" +
                    "igin, T1.Recall_ProjectID, T1.Recall_Issued, T1.Recall_IssuedBy, T1.Recall_Recei" +
                    "ved, T1.Recall_ReceivedBy, T1.Recall_Actioned, T1.Recall_ActionedBy, T1.Recall_R" +
                    "esponsibleContactID, T1.Recall_Description, T1.Recall_Version, T1.Recall_Version" +
                    "AntecedentID, T1.Recall_VersionCertainty, T1.Recall_VersionWorkflowInstanceID, T" +
                    "1.Recall_VersionUpdatedBy, T1.Recall_VersionDeletedBy, T1.Recall_VersionOwnerCon" +
                    "tactID, T1.Recall_VersionOwnerCompanyID, T1.Recall_VersionUpdated)\r\n    FROM (\r\n" +
                    "        SELECT \r\n            T.RecallID AS Recall_RecallID, \r\n            T.Glob" +
                    "alRecallCode AS Recall_GlobalRecallCode, \r\n            T.GlobalRecallOrigin AS R" +
                    "ecall_GlobalRecallOrigin, \r\n            T.ProjectID AS Recall_ProjectID, \r\n     " +
                    "       T.Issued AS Recall_Issued, \r\n            T.IssuedBy AS Recall_IssuedBy, \r" +
                    "\n            T.Received AS Recall_Received, \r\n            T.ReceivedBy AS Recall" +
                    "_ReceivedBy, \r\n            T.Actioned AS Recall_Actioned, \r\n            T.Action" +
                    "edBy AS Recall_ActionedBy, \r\n            T.ResponsibleContactID AS Recall_Respon" +
                    "sibleContactID, \r\n            T.Description AS Recall_Description, \r\n           " +
                    " T.Version AS Recall_Version, \r\n            T.VersionAntecedentID AS Recall_Vers" +
                    "ionAntecedentID, \r\n            T.VersionCertainty AS Recall_VersionCertainty, \r\n" +
                    "            T.VersionWorkflowInstanceID AS Recall_VersionWorkflowInstanceID, \r\n " +
                    "           T.VersionUpdatedBy AS Recall_VersionUpdatedBy, \r\n            T.Versio" +
                    "nDeletedBy AS Recall_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS " +
                    "Recall_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Recall_Ve" +
                    "rsionOwnerCompanyID, \r\n            T.VersionUpdated AS Recall_VersionUpdated, \r\n" +
                    "            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer" +
                    ".Q_Recall AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.RecallModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView300()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.RecallModels", @"
    SELECT VALUE -- Constructing RecallModels
        [XODB.Module.BusinessObjects.RecallModel](T1.RecallModel_RecallModelID, T1.RecallModel_RecallID, T1.RecallModel_ModelID, T1.RecallModel_Description, T1.RecallModel_Version, T1.RecallModel_VersionAntecedentID, T1.RecallModel_VersionCertainty, T1.RecallModel_VersionWorkflowInstanceID, T1.RecallModel_VersionUpdatedBy, T1.RecallModel_VersionDeletedBy, T1.RecallModel_VersionOwnerContactID, T1.RecallModel_VersionOwnerCompanyID, T1.RecallModel_VersionUpdated)
    FROM (
        SELECT 
            T.RecallModelID AS RecallModel_RecallModelID, 
            T.RecallID AS RecallModel_RecallID, 
            T.ModelID AS RecallModel_ModelID, 
            T.Description AS RecallModel_Description, 
            T.Version AS RecallModel_Version, 
            T.VersionAntecedentID AS RecallModel_VersionAntecedentID, 
            T.VersionCertainty AS RecallModel_VersionCertainty, 
            T.VersionWorkflowInstanceID AS RecallModel_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS RecallModel_VersionUpdatedBy, 
            T.VersionDeletedBy AS RecallModel_VersionDeletedBy, 
            T.VersionOwnerContactID AS RecallModel_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS RecallModel_VersionOwnerCompanyID, 
            T.VersionUpdated AS RecallModel_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.Q_RecallModel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.RecallModelAssets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView301()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.RecallModelAssets", "\r\n    SELECT VALUE -- Constructing RecallModelAssets\r\n        [XODB.Module.Busine" +
                    "ssObjects.RecallModelAsset](T1.RecallModelAsset_RecallModelAssetID, T1.RecallMod" +
                    "elAsset_RecallModelID, T1.RecallModelAsset_AssetID, T1.RecallModelAsset_ProjectP" +
                    "lanID, T1.RecallModelAsset_Version, T1.RecallModelAsset_VersionAntecedentID, T1." +
                    "RecallModelAsset_VersionCertainty, T1.RecallModelAsset_VersionWorkflowInstanceID" +
                    ", T1.RecallModelAsset_VersionUpdatedBy, T1.RecallModelAsset_VersionDeletedBy, T1" +
                    ".RecallModelAsset_VersionOwnerContactID, T1.RecallModelAsset_VersionOwnerCompany" +
                    "ID, T1.RecallModelAsset_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.RecallModelAssetID AS RecallModelAsset_RecallModelAssetID, \r\n            T.R" +
                    "ecallModelID AS RecallModelAsset_RecallModelID, \r\n            T.AssetID AS Recal" +
                    "lModelAsset_AssetID, \r\n            T.ProjectPlanID AS RecallModelAsset_ProjectPl" +
                    "anID, \r\n            T.Version AS RecallModelAsset_Version, \r\n            T.Versi" +
                    "onAntecedentID AS RecallModelAsset_VersionAntecedentID, \r\n            T.VersionC" +
                    "ertainty AS RecallModelAsset_VersionCertainty, \r\n            T.VersionWorkflowIn" +
                    "stanceID AS RecallModelAsset_VersionWorkflowInstanceID, \r\n            T.VersionU" +
                    "pdatedBy AS RecallModelAsset_VersionUpdatedBy, \r\n            T.VersionDeletedBy " +
                    "AS RecallModelAsset_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS R" +
                    "ecallModelAsset_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS " +
                    "RecallModelAsset_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Recall" +
                    "ModelAsset_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModule" +
                    "BusinessObjectsStoreContainer.Q_RecallModelAsset AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.SupplierModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView302()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2544);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SupplierModels\r\n        [XODB.Module.Business");
            viewString.Append("Objects.SupplierModel](T1.SupplierModel_SupplierModelID, T1.SupplierModel_Suppli");
            viewString.Append("erID, T1.SupplierModel_ModelID, T1.SupplierModel_Seqeunce, T1.SupplierModel_Supp");
            viewString.Append("lierContractID, T1.SupplierModel_IsOEM, T1.SupplierModel_OrderQuantityMinimum, T");
            viewString.Append("1.SupplierModel_PricePerUnit, T1.SupplierModel_PriceUnitID, T1.SupplierModel_Sup");
            viewString.Append("plierModelNumber, T1.SupplierModel_SupplierModelDescription, T1.SupplierModel_Su");
            viewString.Append("pplierFileDataID, T1.SupplierModel_LeadTimeUnitID, T1.SupplierModel_LeadTime, T1");
            viewString.Append(".SupplierModel_Version, T1.SupplierModel_VersionAntecedentID, T1.SupplierModel_V");
            viewString.Append("ersionCertainty, T1.SupplierModel_VersionWorkflowInstanceID, T1.SupplierModel_Ve");
            viewString.Append("rsionUpdatedBy, T1.SupplierModel_VersionDeletedBy, T1.SupplierModel_VersionOwner");
            viewString.Append("ContactID, T1.SupplierModel_VersionOwnerCompanyID, T1.SupplierModel_VersionUpdat");
            viewString.Append("ed)\r\n    FROM (\r\n        SELECT \r\n            T.SupplierModelID AS SupplierModel");
            viewString.Append("_SupplierModelID, \r\n            T.SupplierID AS SupplierModel_SupplierID, \r\n    ");
            viewString.Append("        T.ModelID AS SupplierModel_ModelID, \r\n            T.Seqeunce AS Supplier");
            viewString.Append("Model_Seqeunce, \r\n            T.SupplierContractID AS SupplierModel_SupplierCont");
            viewString.Append("ractID, \r\n            T.IsOEM AS SupplierModel_IsOEM, \r\n            T.OrderQuant");
            viewString.Append("ityMinimum AS SupplierModel_OrderQuantityMinimum, \r\n            T.PricePerUnit A");
            viewString.Append("S SupplierModel_PricePerUnit, \r\n            T.PriceUnitID AS SupplierModel_Price");
            viewString.Append("UnitID, \r\n            T.SupplierModelNumber AS SupplierModel_SupplierModelNumber");
            viewString.Append(", \r\n            T.SupplierModelDescription AS SupplierModel_SupplierModelDescrip");
            viewString.Append("tion, \r\n            T.SupplierFileDataID AS SupplierModel_SupplierFileDataID, \r\n");
            viewString.Append("            T.LeadTimeUnitID AS SupplierModel_LeadTimeUnitID, \r\n            T.Le");
            viewString.Append("adTime AS SupplierModel_LeadTime, \r\n            T.Version AS SupplierModel_Versi");
            viewString.Append("on, \r\n            T.VersionAntecedentID AS SupplierModel_VersionAntecedentID, \r\n");
            viewString.Append("            T.VersionCertainty AS SupplierModel_VersionCertainty, \r\n            ");
            viewString.Append("T.VersionWorkflowInstanceID AS SupplierModel_VersionWorkflowInstanceID, \r\n      ");
            viewString.Append("      T.VersionUpdatedBy AS SupplierModel_VersionUpdatedBy, \r\n            T.Vers");
            viewString.Append("ionDeletedBy AS SupplierModel_VersionDeletedBy, \r\n            T.VersionOwnerCont");
            viewString.Append("actID AS SupplierModel_VersionOwnerContactID, \r\n            T.VersionOwnerCompan");
            viewString.Append("yID AS SupplierModel_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Su");
            viewString.Append("pplierModel_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModul");
            viewString.Append("eBusinessObjectsStoreContainer.Q_SupplierModel AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SupplierModels", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.SupplierParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView303()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2483);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SupplierParts\r\n        [XODB.Module.BusinessO");
            viewString.Append("bjects.SupplierPart](T1.SupplierPart_SupplierPartID, T1.SupplierPart_SupplierID,");
            viewString.Append(" T1.SupplierPart_PartID, T1.SupplierPart_Seqeunce, T1.SupplierPart_SupplierContr");
            viewString.Append("actID, T1.SupplierPart_IsOEM, T1.SupplierPart_OrderQuantityMinimum, T1.SupplierP");
            viewString.Append("art_PricePerUnit, T1.SupplierPart_PriceUnitID, T1.SupplierPart_SupplierPartNumbe");
            viewString.Append("r, T1.SupplierPart_SupplierPartDescription, T1.SupplierPart_SupplierFileDataID, ");
            viewString.Append("T1.SupplierPart_LeadTimeUnitID, T1.SupplierPart_LeadTime, T1.SupplierPart_Versio");
            viewString.Append("n, T1.SupplierPart_VersionAntecedentID, T1.SupplierPart_VersionCertainty, T1.Sup");
            viewString.Append("plierPart_VersionWorkflowInstanceID, T1.SupplierPart_VersionUpdatedBy, T1.Suppli");
            viewString.Append("erPart_VersionDeletedBy, T1.SupplierPart_VersionOwnerContactID, T1.SupplierPart_");
            viewString.Append("VersionOwnerCompanyID, T1.SupplierPart_VersionUpdated)\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.SupplierPartID AS SupplierPart_SupplierPartID, \r\n            ");
            viewString.Append("T.SupplierID AS SupplierPart_SupplierID, \r\n            T.PartID AS SupplierPart_");
            viewString.Append("PartID, \r\n            T.Seqeunce AS SupplierPart_Seqeunce, \r\n            T.Suppl");
            viewString.Append("ierContractID AS SupplierPart_SupplierContractID, \r\n            T.IsOEM AS Suppl");
            viewString.Append("ierPart_IsOEM, \r\n            T.OrderQuantityMinimum AS SupplierPart_OrderQuantit");
            viewString.Append("yMinimum, \r\n            T.PricePerUnit AS SupplierPart_PricePerUnit, \r\n         ");
            viewString.Append("   T.PriceUnitID AS SupplierPart_PriceUnitID, \r\n            T.SupplierPartNumber");
            viewString.Append(" AS SupplierPart_SupplierPartNumber, \r\n            T.SupplierPartDescription AS ");
            viewString.Append("SupplierPart_SupplierPartDescription, \r\n            T.SupplierFileDataID AS Supp");
            viewString.Append("lierPart_SupplierFileDataID, \r\n            T.LeadTimeUnitID AS SupplierPart_Lead");
            viewString.Append("TimeUnitID, \r\n            T.LeadTime AS SupplierPart_LeadTime, \r\n            T.V");
            viewString.Append("ersion AS SupplierPart_Version, \r\n            T.VersionAntecedentID AS SupplierP");
            viewString.Append("art_VersionAntecedentID, \r\n            T.VersionCertainty AS SupplierPart_Versio");
            viewString.Append("nCertainty, \r\n            T.VersionWorkflowInstanceID AS SupplierPart_VersionWor");
            viewString.Append("kflowInstanceID, \r\n            T.VersionUpdatedBy AS SupplierPart_VersionUpdated");
            viewString.Append("By, \r\n            T.VersionDeletedBy AS SupplierPart_VersionDeletedBy, \r\n       ");
            viewString.Append("     T.VersionOwnerContactID AS SupplierPart_VersionOwnerContactID, \r\n          ");
            viewString.Append("  T.VersionOwnerCompanyID AS SupplierPart_VersionOwnerCompanyID, \r\n            T");
            viewString.Append(".VersionUpdated AS SupplierPart_VersionUpdated, \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM XODBModuleBusinessObjectsStoreContainer.Q_SupplierPart AS T\r\n    ) AS");
            viewString.Append(" T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SupplierParts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Warehouses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView304()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Warehouses", "\r\n    SELECT VALUE -- Constructing Warehouses\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Warehouse](T1.Warehouse_WarehouseID, T1.Warehouse_WarehouseName, T1.Warehouse" +
                    "_CompanyID, T1.Warehouse_PrimaryLocationID, T1.Warehouse_Description, T1.Warehou" +
                    "se_Version, T1.Warehouse_VersionAntecedentID, T1.Warehouse_VersionCertainty, T1." +
                    "Warehouse_VersionWorkflowInstanceID, T1.Warehouse_VersionUpdatedBy, T1.Warehouse" +
                    "_VersionDeletedBy, T1.Warehouse_VersionOwnerContactID, T1.Warehouse_VersionOwner" +
                    "CompanyID, T1.Warehouse_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.WarehouseID AS Warehouse_WarehouseID, \r\n            T.WarehouseName AS Wareh" +
                    "ouse_WarehouseName, \r\n            T.CompanyID AS Warehouse_CompanyID, \r\n        " +
                    "    T.PrimaryLocationID AS Warehouse_PrimaryLocationID, \r\n            T.Descript" +
                    "ion AS Warehouse_Description, \r\n            T.Version AS Warehouse_Version, \r\n  " +
                    "          T.VersionAntecedentID AS Warehouse_VersionAntecedentID, \r\n            " +
                    "T.VersionCertainty AS Warehouse_VersionCertainty, \r\n            T.VersionWorkflo" +
                    "wInstanceID AS Warehouse_VersionWorkflowInstanceID, \r\n            T.VersionUpdat" +
                    "edBy AS Warehouse_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Warehous" +
                    "e_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Warehouse_VersionOw" +
                    "nerContactID, \r\n            T.VersionOwnerCompanyID AS Warehouse_VersionOwnerCom" +
                    "panyID, \r\n            T.VersionUpdated AS Warehouse_VersionUpdated, \r\n          " +
                    "  True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_Warehou" +
                    "se AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WarehouseModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView305()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WarehouseModels", "\r\n    SELECT VALUE -- Constructing WarehouseModels\r\n        [XODB.Module.Business" +
                    "Objects.WarehouseModel](T1.WarehouseModel_WarehouseModelID, T1.WarehouseModel_Mo" +
                    "delID, T1.WarehouseModel_WarehouseID, T1.WarehouseModel_IssueCost, T1.WarehouseM" +
                    "odel_QuantityOnOrder, T1.WarehouseModel_QuantityInStock, T1.WarehouseModel_Quant" +
                    "ityOnHold, T1.WarehouseModel_QuantityReOrderLevel, T1.WarehouseModel_Version, T1" +
                    ".WarehouseModel_VersionAntecedentID, T1.WarehouseModel_VersionCertainty, T1.Ware" +
                    "houseModel_VersionWorkflowInstanceID, T1.WarehouseModel_VersionUpdatedBy, T1.War" +
                    "ehouseModel_VersionDeletedBy, T1.WarehouseModel_VersionOwnerContactID, T1.Wareho" +
                    "useModel_VersionOwnerCompanyID, T1.WarehouseModel_VersionUpdated)\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.WarehouseModelID AS WarehouseModel_WarehouseModelI" +
                    "D, \r\n            T.ModelID AS WarehouseModel_ModelID, \r\n            T.WarehouseI" +
                    "D AS WarehouseModel_WarehouseID, \r\n            T.IssueCost AS WarehouseModel_Iss" +
                    "ueCost, \r\n            T.QuantityOnOrder AS WarehouseModel_QuantityOnOrder, \r\n   " +
                    "         T.QuantityInStock AS WarehouseModel_QuantityInStock, \r\n            T.Qu" +
                    "antityOnHold AS WarehouseModel_QuantityOnHold, \r\n            T.QuantityReOrderLe" +
                    "vel AS WarehouseModel_QuantityReOrderLevel, \r\n            T.Version AS Warehouse" +
                    "Model_Version, \r\n            T.VersionAntecedentID AS WarehouseModel_VersionAnte" +
                    "cedentID, \r\n            T.VersionCertainty AS WarehouseModel_VersionCertainty, \r" +
                    "\n            T.VersionWorkflowInstanceID AS WarehouseModel_VersionWorkflowInstan" +
                    "ceID, \r\n            T.VersionUpdatedBy AS WarehouseModel_VersionUpdatedBy, \r\n   " +
                    "         T.VersionDeletedBy AS WarehouseModel_VersionDeletedBy, \r\n            T." +
                    "VersionOwnerContactID AS WarehouseModel_VersionOwnerContactID, \r\n            T.V" +
                    "ersionOwnerCompanyID AS WarehouseModel_VersionOwnerCompanyID, \r\n            T.Ve" +
                    "rsionUpdated AS WarehouseModel_VersionUpdated, \r\n            True AS _from0\r\n   " +
                    "     FROM XODBModuleBusinessObjectsStoreContainer.Q_WarehouseModel AS T\r\n    ) A" +
                    "S T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WarehouseModelSuppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView306()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2204);
            viewString.Append("\r\n    SELECT VALUE -- Constructing WarehouseModelSuppliers\r\n        [XODB.Module");
            viewString.Append(".BusinessObjects.WarehouseModelSupplier](T1.WarehouseModelSupplier_WarehouseMode");
            viewString.Append("lSupplierID, T1.WarehouseModelSupplier_WarehouseModelID, T1.WarehouseModelSuppli");
            viewString.Append("er_SupplierModelID, T1.WarehouseModelSupplier_QuantityUnitID, T1.WarehouseModelS");
            viewString.Append("upplier_QuantityOrdered, T1.WarehouseModelSupplier_Ordered, T1.WarehouseModelSup");
            viewString.Append("plier_Received, T1.WarehouseModelSupplier_Version, T1.WarehouseModelSupplier_Ver");
            viewString.Append("sionAntecedentID, T1.WarehouseModelSupplier_VersionCertainty, T1.WarehouseModelS");
            viewString.Append("upplier_VersionWorkflowInstanceID, T1.WarehouseModelSupplier_VersionUpdatedBy, T");
            viewString.Append("1.WarehouseModelSupplier_VersionDeletedBy, T1.WarehouseModelSupplier_VersionOwne");
            viewString.Append("rContactID, T1.WarehouseModelSupplier_VersionOwnerCompanyID, T1.WarehouseModelSu");
            viewString.Append("pplier_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.WarehouseMode");
            viewString.Append("lSupplierID AS WarehouseModelSupplier_WarehouseModelSupplierID, \r\n            T.");
            viewString.Append("WarehouseModelID AS WarehouseModelSupplier_WarehouseModelID, \r\n            T.Sup");
            viewString.Append("plierModelID AS WarehouseModelSupplier_SupplierModelID, \r\n            T.Quantity");
            viewString.Append("UnitID AS WarehouseModelSupplier_QuantityUnitID, \r\n            T.QuantityOrdered");
            viewString.Append(" AS WarehouseModelSupplier_QuantityOrdered, \r\n            T.Ordered AS Warehouse");
            viewString.Append("ModelSupplier_Ordered, \r\n            T.Received AS WarehouseModelSupplier_Receiv");
            viewString.Append("ed, \r\n            T.Version AS WarehouseModelSupplier_Version, \r\n            T.V");
            viewString.Append("ersionAntecedentID AS WarehouseModelSupplier_VersionAntecedentID, \r\n            ");
            viewString.Append("T.VersionCertainty AS WarehouseModelSupplier_VersionCertainty, \r\n            T.V");
            viewString.Append("ersionWorkflowInstanceID AS WarehouseModelSupplier_VersionWorkflowInstanceID, \r\n");
            viewString.Append("            T.VersionUpdatedBy AS WarehouseModelSupplier_VersionUpdatedBy, \r\n   ");
            viewString.Append("         T.VersionDeletedBy AS WarehouseModelSupplier_VersionDeletedBy, \r\n      ");
            viewString.Append("      T.VersionOwnerContactID AS WarehouseModelSupplier_VersionOwnerContactID, \r");
            viewString.Append("\n            T.VersionOwnerCompanyID AS WarehouseModelSupplier_VersionOwnerCompa");
            viewString.Append("nyID, \r\n            T.VersionUpdated AS WarehouseModelSupplier_VersionUpdated, \r");
            viewString.Append("\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContaine");
            viewString.Append("r.Q_WarehouseModelSupplier AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WarehouseModelSuppliers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.WarehouseParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView307()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WarehouseParts", "\r\n    SELECT VALUE -- Constructing WarehouseParts\r\n        [XODB.Module.BusinessO" +
                    "bjects.WarehousePart](T1.WarehousePart_WarehousePartID, T1.WarehousePart_PartID," +
                    " T1.WarehousePart_WarehouseID, T1.WarehousePart_IssueCost, T1.WarehousePart_Quan" +
                    "tityOnOrder, T1.WarehousePart_QuantityInStock, T1.WarehousePart_QuantityOnHold, " +
                    "T1.WarehousePart_QuantityReOrderLevel, T1.WarehousePart_Version, T1.WarehousePar" +
                    "t_VersionAntecedentID, T1.WarehousePart_VersionCertainty, T1.WarehousePart_Versi" +
                    "onWorkflowInstanceID, T1.WarehousePart_VersionUpdatedBy, T1.WarehousePart_Versio" +
                    "nDeletedBy, T1.WarehousePart_VersionOwnerContactID, T1.WarehousePart_VersionOwne" +
                    "rCompanyID, T1.WarehousePart_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.WarehousePartID AS WarehousePart_WarehousePartID, \r\n            T.PartI" +
                    "D AS WarehousePart_PartID, \r\n            T.WarehouseID AS WarehousePart_Warehous" +
                    "eID, \r\n            T.IssueCost AS WarehousePart_IssueCost, \r\n            T.Quant" +
                    "ityOnOrder AS WarehousePart_QuantityOnOrder, \r\n            T.QuantityInStock AS " +
                    "WarehousePart_QuantityInStock, \r\n            T.QuantityOnHold AS WarehousePart_Q" +
                    "uantityOnHold, \r\n            T.QuantityReOrderLevel AS WarehousePart_QuantityReO" +
                    "rderLevel, \r\n            T.Version AS WarehousePart_Version, \r\n            T.Ver" +
                    "sionAntecedentID AS WarehousePart_VersionAntecedentID, \r\n            T.VersionCe" +
                    "rtainty AS WarehousePart_VersionCertainty, \r\n            T.VersionWorkflowInstan" +
                    "ceID AS WarehousePart_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedB" +
                    "y AS WarehousePart_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Warehou" +
                    "sePart_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS WarehousePart_" +
                    "VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS WarehousePart_Ve" +
                    "rsionOwnerCompanyID, \r\n            T.VersionUpdated AS WarehousePart_VersionUpda" +
                    "ted, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreCo" +
                    "ntainer.Q_WarehousePart AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WarehousePartSuppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView308()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2160);
            viewString.Append("\r\n    SELECT VALUE -- Constructing WarehousePartSuppliers\r\n        [XODB.Module.");
            viewString.Append("BusinessObjects.WarehousePartSupplier](T1.WarehousePartSupplier_WarehousePartSup");
            viewString.Append("plierID, T1.WarehousePartSupplier_WarehousePartID, T1.WarehousePartSupplier_Supp");
            viewString.Append("lierPartID, T1.WarehousePartSupplier_QuantityUnitID, T1.WarehousePartSupplier_Qu");
            viewString.Append("antityOrdered, T1.WarehousePartSupplier_Ordered, T1.WarehousePartSupplier_Receiv");
            viewString.Append("ed, T1.WarehousePartSupplier_Version, T1.WarehousePartSupplier_VersionAntecedent");
            viewString.Append("ID, T1.WarehousePartSupplier_VersionCertainty, T1.WarehousePartSupplier_VersionW");
            viewString.Append("orkflowInstanceID, T1.WarehousePartSupplier_VersionUpdatedBy, T1.WarehousePartSu");
            viewString.Append("pplier_VersionDeletedBy, T1.WarehousePartSupplier_VersionOwnerContactID, T1.Ware");
            viewString.Append("housePartSupplier_VersionOwnerCompanyID, T1.WarehousePartSupplier_VersionUpdated");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.WarehousePartSupplierID AS Warehou");
            viewString.Append("sePartSupplier_WarehousePartSupplierID, \r\n            T.WarehousePartID AS Wareh");
            viewString.Append("ousePartSupplier_WarehousePartID, \r\n            T.SupplierPartID AS WarehousePar");
            viewString.Append("tSupplier_SupplierPartID, \r\n            T.QuantityUnitID AS WarehousePartSupplie");
            viewString.Append("r_QuantityUnitID, \r\n            T.QuantityOrdered AS WarehousePartSupplier_Quant");
            viewString.Append("ityOrdered, \r\n            T.Ordered AS WarehousePartSupplier_Ordered, \r\n        ");
            viewString.Append("    T.Received AS WarehousePartSupplier_Received, \r\n            T.Version AS War");
            viewString.Append("ehousePartSupplier_Version, \r\n            T.VersionAntecedentID AS WarehousePart");
            viewString.Append("Supplier_VersionAntecedentID, \r\n            T.VersionCertainty AS WarehousePartS");
            viewString.Append("upplier_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Warehouse");
            viewString.Append("PartSupplier_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Ware");
            viewString.Append("housePartSupplier_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Warehous");
            viewString.Append("ePartSupplier_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Warehou");
            viewString.Append("sePartSupplier_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS W");
            viewString.Append("arehousePartSupplier_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Wa");
            viewString.Append("rehousePartSupplier_VersionUpdated, \r\n            True AS _from0\r\n        FROM X");
            viewString.Append("ODBModuleBusinessObjectsStoreContainer.Q_WarehousePartSupplier AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WarehousePartSuppliers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.WorkflowSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView309()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WorkflowSchedules", "\r\n    SELECT VALUE -- Constructing WorkflowSchedules\r\n        [XODB.Module.Busine" +
                    "ssObjects.WorkflowSchedule](T1.WorkflowSchedule_WorkflowScheduleID, T1.WorkflowS" +
                    "chedule_EventTypeID, T1.WorkflowSchedule_TableType, T1.WorkflowSchedule_Referenc" +
                    "eID, T1.WorkflowSchedule_WorkerID, T1.WorkflowSchedule_WorkflowInstanceID, T1.Wo" +
                    "rkflowSchedule_Version, T1.WorkflowSchedule_VersionAntecedentID, T1.WorkflowSche" +
                    "dule_VersionCertainty, T1.WorkflowSchedule_VersionWorkflowInstanceID, T1.Workflo" +
                    "wSchedule_VersionUpdatedBy, T1.WorkflowSchedule_VersionDeletedBy, T1.WorkflowSch" +
                    "edule_VersionOwnerContactID, T1.WorkflowSchedule_VersionOwnerCompanyID, T1.Workf" +
                    "lowSchedule_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Workflow" +
                    "ScheduleID AS WorkflowSchedule_WorkflowScheduleID, \r\n            T.EventTypeID A" +
                    "S WorkflowSchedule_EventTypeID, \r\n            T.TableType AS WorkflowSchedule_Ta" +
                    "bleType, \r\n            T.ReferenceID AS WorkflowSchedule_ReferenceID, \r\n        " +
                    "    T.WorkerID AS WorkflowSchedule_WorkerID, \r\n            T.WorkflowInstanceID " +
                    "AS WorkflowSchedule_WorkflowInstanceID, \r\n            T.Version AS WorkflowSched" +
                    "ule_Version, \r\n            T.VersionAntecedentID AS WorkflowSchedule_VersionAnte" +
                    "cedentID, \r\n            T.VersionCertainty AS WorkflowSchedule_VersionCertainty," +
                    " \r\n            T.VersionWorkflowInstanceID AS WorkflowSchedule_VersionWorkflowIn" +
                    "stanceID, \r\n            T.VersionUpdatedBy AS WorkflowSchedule_VersionUpdatedBy," +
                    " \r\n            T.VersionDeletedBy AS WorkflowSchedule_VersionDeletedBy, \r\n      " +
                    "      T.VersionOwnerContactID AS WorkflowSchedule_VersionOwnerContactID, \r\n     " +
                    "       T.VersionOwnerCompanyID AS WorkflowSchedule_VersionOwnerCompanyID, \r\n    " +
                    "        T.VersionUpdated AS WorkflowSchedule_VersionUpdated, \r\n            True " +
                    "AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.Q_WorkflowSchedu" +
                    "le AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Addresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView310()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Addresses", "\r\n    SELECT VALUE -- Constructing Addresses\r\n        [XODB.Module.BusinessObject" +
                    "s.Address](T1.Address_AddressID, T1.Address_AddressName, T1.Address_Street, T1.A" +
                    "ddress_City, T1.Address_State, T1.Address_Postcode, T1.Address_IsHQ, T1.Address_" +
                    "IsPostBox, T1.Address_Priority, T1.Address_Phone, T1.Address_Fax, T1.Address_Ema" +
                    "il, T1.Address_Mobile, T1.Address_LocationID, T1.Address_Version, T1.Address_Ver" +
                    "sionAntecedentID, T1.Address_VersionCertainty, T1.Address_VersionWorkflowInstanc" +
                    "eID, T1.Address_VersionUpdatedBy, T1.Address_VersionDeletedBy, T1.Address_Versio" +
                    "nOwnerContactID, T1.Address_VersionOwnerCompanyID, T1.Address_VersionUpdated)\r\n " +
                    "   FROM (\r\n        SELECT \r\n            T.AddressID AS Address_AddressID, \r\n    " +
                    "        T.AddressName AS Address_AddressName, \r\n            T.Street AS Address_" +
                    "Street, \r\n            T.City AS Address_City, \r\n            T.State AS Address_S" +
                    "tate, \r\n            T.Postcode AS Address_Postcode, \r\n            T.IsHQ AS Addr" +
                    "ess_IsHQ, \r\n            T.IsPostBox AS Address_IsPostBox, \r\n            T.Priori" +
                    "ty AS Address_Priority, \r\n            T.Phone AS Address_Phone, \r\n            T." +
                    "Fax AS Address_Fax, \r\n            T.Email AS Address_Email, \r\n            T.Mobi" +
                    "le AS Address_Mobile, \r\n            T.LocationID AS Address_LocationID, \r\n      " +
                    "      T.Version AS Address_Version, \r\n            T.VersionAntecedentID AS Addre" +
                    "ss_VersionAntecedentID, \r\n            T.VersionCertainty AS Address_VersionCerta" +
                    "inty, \r\n            T.VersionWorkflowInstanceID AS Address_VersionWorkflowInstan" +
                    "ceID, \r\n            T.VersionUpdatedBy AS Address_VersionUpdatedBy, \r\n          " +
                    "  T.VersionDeletedBy AS Address_VersionDeletedBy, \r\n            T.VersionOwnerCo" +
                    "ntactID AS Address_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID " +
                    "AS Address_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Address_Vers" +
                    "ionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjects" +
                    "StoreContainer.X_Address AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.AssayGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView311()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2070);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AssayGroups\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.AssayGroup](T1.AssayGroup_AssayGroupID, T1.AssayGroup_ProjectID, T1.AssayGr");
            viewString.Append("oup_AssayGroupName, T1.AssayGroup_LabCompanyID, T1.AssayGroup_Submitted, T1.Assa");
            viewString.Append("yGroup_SubmittedContactID, T1.AssayGroup_Received, T1.AssayGroup_ReceivedContact");
            viewString.Append("ID, T1.AssayGroup_Entered, T1.AssayGroup_EnteredContactID, T1.AssayGroup_Comment");
            viewString.Append(", T1.AssayGroup_Version, T1.AssayGroup_VersionAntecedentID, T1.AssayGroup_Versio");
            viewString.Append("nCertainty, T1.AssayGroup_VersionWorkflowInstanceID, T1.AssayGroup_VersionUpdate");
            viewString.Append("dBy, T1.AssayGroup_VersionDeletedBy, T1.AssayGroup_VersionOwnerContactID, T1.Ass");
            viewString.Append("ayGroup_VersionOwnerCompanyID, T1.AssayGroup_VersionUpdated)\r\n    FROM (\r\n      ");
            viewString.Append("  SELECT \r\n            T.AssayGroupID AS AssayGroup_AssayGroupID, \r\n            ");
            viewString.Append("T.ProjectID AS AssayGroup_ProjectID, \r\n            T.AssayGroupName AS AssayGrou");
            viewString.Append("p_AssayGroupName, \r\n            T.LabCompanyID AS AssayGroup_LabCompanyID, \r\n   ");
            viewString.Append("         T.Submitted AS AssayGroup_Submitted, \r\n            T.SubmittedContactID");
            viewString.Append(" AS AssayGroup_SubmittedContactID, \r\n            T.Received AS AssayGroup_Receiv");
            viewString.Append("ed, \r\n            T.ReceivedContactID AS AssayGroup_ReceivedContactID, \r\n       ");
            viewString.Append("     T.Entered AS AssayGroup_Entered, \r\n            T.EnteredContactID AS AssayG");
            viewString.Append("roup_EnteredContactID, \r\n            T.Comment AS AssayGroup_Comment, \r\n        ");
            viewString.Append("    T.Version AS AssayGroup_Version, \r\n            T.VersionAntecedentID AS Assa");
            viewString.Append("yGroup_VersionAntecedentID, \r\n            T.VersionCertainty AS AssayGroup_Versi");
            viewString.Append("onCertainty, \r\n            T.VersionWorkflowInstanceID AS AssayGroup_VersionWork");
            viewString.Append("flowInstanceID, \r\n            T.VersionUpdatedBy AS AssayGroup_VersionUpdatedBy,");
            viewString.Append(" \r\n            T.VersionDeletedBy AS AssayGroup_VersionDeletedBy, \r\n            ");
            viewString.Append("T.VersionOwnerContactID AS AssayGroup_VersionOwnerContactID, \r\n            T.Ver");
            viewString.Append("sionOwnerCompanyID AS AssayGroup_VersionOwnerCompanyID, \r\n            T.VersionU");
            viewString.Append("pdated AS AssayGroup_VersionUpdated, \r\n            True AS _from0\r\n        FROM ");
            viewString.Append("XODBModuleBusinessObjectsStoreContainer.X_AssayGroup AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssayGroups", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.AssayGroupStandardTestResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView312()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3200);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AssayGroupStandardTestResults\r\n        [XODB.");
            viewString.Append("Module.BusinessObjects.AssayGroupStandardTestResult](T1.AssayGroupStandardTestRe");
            viewString.Append("sult_AssayGroupStandardTestResultID, T1.AssayGroupStandardTestResult_AssayGroupT");
            viewString.Append("estSampleID, T1.AssayGroupStandardTestResult_AssayGroupTestID, T1.AssayGroupStan");
            viewString.Append("dardTestResult_AssayStandardID, T1.AssayGroupStandardTestResult_SampleCategoryID");
            viewString.Append(", T1.AssayGroupStandardTestResult_SampleStateID, T1.AssayGroupStandardTestResult");
            viewString.Append("_SampleTypeID, T1.AssayGroupStandardTestResult_LabResultText, T1.AssayGroupStand");
            viewString.Append("ardTestResult_LabResult, T1.AssayGroupStandardTestResult_LabSampleNumber, T1.Ass");
            viewString.Append("ayGroupStandardTestResult_LabBatchNumber, T1.AssayGroupStandardTestResult_Sample");
            viewString.Append("d, T1.AssayGroupStandardTestResult_SampledBy, T1.AssayGroupStandardTestResult_Ve");
            viewString.Append("rsion, T1.AssayGroupStandardTestResult_VersionAntecedentID, T1.AssayGroupStandar");
            viewString.Append("dTestResult_VersionCertainty, T1.AssayGroupStandardTestResult_VersionWorkflowIns");
            viewString.Append("tanceID, T1.AssayGroupStandardTestResult_VersionUpdatedBy, T1.AssayGroupStandard");
            viewString.Append("TestResult_VersionDeletedBy, T1.AssayGroupStandardTestResult_VersionOwnerContact");
            viewString.Append("ID, T1.AssayGroupStandardTestResult_VersionOwnerCompanyID, T1.AssayGroupStandard");
            viewString.Append("TestResult_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.AssayGrou");
            viewString.Append("pStandardTestResultID AS AssayGroupStandardTestResult_AssayGroupStandardTestResu");
            viewString.Append("ltID, \r\n            T.AssayGroupTestSampleID AS AssayGroupStandardTestResult_Ass");
            viewString.Append("ayGroupTestSampleID, \r\n            T.AssayGroupTestID AS AssayGroupStandardTestR");
            viewString.Append("esult_AssayGroupTestID, \r\n            T.AssayStandardID AS AssayGroupStandardTes");
            viewString.Append("tResult_AssayStandardID, \r\n            T.SampleCategoryID AS AssayGroupStandardT");
            viewString.Append("estResult_SampleCategoryID, \r\n            T.SampleStateID AS AssayGroupStandardT");
            viewString.Append("estResult_SampleStateID, \r\n            T.SampleTypeID AS AssayGroupStandardTestR");
            viewString.Append("esult_SampleTypeID, \r\n            T.LabResultText AS AssayGroupStandardTestResul");
            viewString.Append("t_LabResultText, \r\n            T.LabResult AS AssayGroupStandardTestResult_LabRe");
            viewString.Append("sult, \r\n            T.LabSampleNumber AS AssayGroupStandardTestResult_LabSampleN");
            viewString.Append("umber, \r\n            T.LabBatchNumber AS AssayGroupStandardTestResult_LabBatchNu");
            viewString.Append("mber, \r\n            T.Sampled AS AssayGroupStandardTestResult_Sampled, \r\n       ");
            viewString.Append("     T.SampledBy AS AssayGroupStandardTestResult_SampledBy, \r\n            T.Vers");
            viewString.Append("ion AS AssayGroupStandardTestResult_Version, \r\n            T.VersionAntecedentID");
            viewString.Append(" AS AssayGroupStandardTestResult_VersionAntecedentID, \r\n            T.VersionCer");
            viewString.Append("tainty AS AssayGroupStandardTestResult_VersionCertainty, \r\n            T.Version");
            viewString.Append("WorkflowInstanceID AS AssayGroupStandardTestResult_VersionWorkflowInstanceID, \r\n");
            viewString.Append("            T.VersionUpdatedBy AS AssayGroupStandardTestResult_VersionUpdatedBy,");
            viewString.Append(" \r\n            T.VersionDeletedBy AS AssayGroupStandardTestResult_VersionDeleted");
            viewString.Append("By, \r\n            T.VersionOwnerContactID AS AssayGroupStandardTestResult_Versio");
            viewString.Append("nOwnerContactID, \r\n            T.VersionOwnerCompanyID AS AssayGroupStandardTest");
            viewString.Append("Result_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS AssayGroupStanda");
            viewString.Append("rdTestResult_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModu");
            viewString.Append("leBusinessObjectsStoreContainer.X_AssayGroupStandardTestResult AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssayGroupStandardTestResults", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.AssayGroupTests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView313()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssayGroupTests", "\r\n    SELECT VALUE -- Constructing AssayGroupTests\r\n        [XODB.Module.Business" +
                    "Objects.AssayGroupTest](T1.AssayGroupTest_AssayGroupTestID, T1.AssayGroupTest_As" +
                    "sayGroupID, T1.AssayGroupTest_AssayTypeName, T1.AssayGroupTest_AssayTestName, T1" +
                    ".AssayGroupTest_ParameterID, T1.AssayGroupTest_AssayTestPriority, T1.AssayGroupT" +
                    "est_AssayMethodID, T1.AssayGroupTest_AssayTypeID, T1.AssayGroupTest_Version, T1." +
                    "AssayGroupTest_VersionAntecedentID, T1.AssayGroupTest_VersionCertainty, T1.Assay" +
                    "GroupTest_VersionWorkflowInstanceID, T1.AssayGroupTest_VersionUpdatedBy, T1.Assa" +
                    "yGroupTest_VersionDeletedBy, T1.AssayGroupTest_VersionOwnerContactID, T1.AssayGr" +
                    "oupTest_VersionOwnerCompanyID, T1.AssayGroupTest_VersionUpdated)\r\n    FROM (\r\n  " +
                    "      SELECT \r\n            T.AssayGroupTestID AS AssayGroupTest_AssayGroupTestID" +
                    ", \r\n            T.AssayGroupID AS AssayGroupTest_AssayGroupID, \r\n            T.A" +
                    "ssayTypeName AS AssayGroupTest_AssayTypeName, \r\n            T.AssayTestName AS A" +
                    "ssayGroupTest_AssayTestName, \r\n            T.ParameterID AS AssayGroupTest_Param" +
                    "eterID, \r\n            T.AssayTestPriority AS AssayGroupTest_AssayTestPriority, \r" +
                    "\n            T.AssayMethodID AS AssayGroupTest_AssayMethodID, \r\n            T.As" +
                    "sayTypeID AS AssayGroupTest_AssayTypeID, \r\n            T.Version AS AssayGroupTe" +
                    "st_Version, \r\n            T.VersionAntecedentID AS AssayGroupTest_VersionAnteced" +
                    "entID, \r\n            T.VersionCertainty AS AssayGroupTest_VersionCertainty, \r\n  " +
                    "          T.VersionWorkflowInstanceID AS AssayGroupTest_VersionWorkflowInstanceI" +
                    "D, \r\n            T.VersionUpdatedBy AS AssayGroupTest_VersionUpdatedBy, \r\n      " +
                    "      T.VersionDeletedBy AS AssayGroupTest_VersionDeletedBy, \r\n            T.Ver" +
                    "sionOwnerContactID AS AssayGroupTest_VersionOwnerContactID, \r\n            T.Vers" +
                    "ionOwnerCompanyID AS AssayGroupTest_VersionOwnerCompanyID, \r\n            T.Versi" +
                    "onUpdated AS AssayGroupTest_VersionUpdated, \r\n            True AS _from0\r\n      " +
                    "  FROM XODBModuleBusinessObjectsStoreContainer.X_AssayGroupTest AS T\r\n    ) AS T" +
                    "1");
        }
        
        /// <Summary>
        /// return view for XODBC.AssayGroupTestResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView314()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2314);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AssayGroupTestResults\r\n        [XODB.Module.B");
            viewString.Append("usinessObjects.AssayGroupTestResult](T1.AssayGroupTestResult_AssayGroupTestResul");
            viewString.Append("tID, T1.AssayGroupTestResult_SampleID, T1.AssayGroupTestResult_AssayGroupTestID,");
            viewString.Append(" T1.AssayGroupTestResult_LabResultText, T1.AssayGroupTestResult_LabResult, T1.As");
            viewString.Append("sayGroupTestResult_LabSampleNumber, T1.AssayGroupTestResult_LabBatchNumber, T1.A");
            viewString.Append("ssayGroupTestResult_Sampled, T1.AssayGroupTestResult_SampledBy, T1.AssayGroupTes");
            viewString.Append("tResult_Version, T1.AssayGroupTestResult_VersionAntecedentID, T1.AssayGroupTestR");
            viewString.Append("esult_VersionCertainty, T1.AssayGroupTestResult_VersionWorkflowInstanceID, T1.As");
            viewString.Append("sayGroupTestResult_VersionUpdatedBy, T1.AssayGroupTestResult_VersionDeletedBy, T");
            viewString.Append("1.AssayGroupTestResult_VersionOwnerContactID, T1.AssayGroupTestResult_VersionOwn");
            viewString.Append("erCompanyID, T1.AssayGroupTestResult_VersionUpdated)\r\n    FROM (\r\n        SELECT");
            viewString.Append(" \r\n            T.AssayGroupTestResultID AS AssayGroupTestResult_AssayGroupTestRe");
            viewString.Append("sultID, \r\n            T.SampleID AS AssayGroupTestResult_SampleID, \r\n           ");
            viewString.Append(" T.AssayGroupTestID AS AssayGroupTestResult_AssayGroupTestID, \r\n            T.La");
            viewString.Append("bResultText AS AssayGroupTestResult_LabResultText, \r\n            T.LabResult AS ");
            viewString.Append("AssayGroupTestResult_LabResult, \r\n            T.LabSampleNumber AS AssayGroupTes");
            viewString.Append("tResult_LabSampleNumber, \r\n            T.LabBatchNumber AS AssayGroupTestResult_");
            viewString.Append("LabBatchNumber, \r\n            T.Sampled AS AssayGroupTestResult_Sampled, \r\n     ");
            viewString.Append("       T.SampledBy AS AssayGroupTestResult_SampledBy, \r\n            T.Version AS");
            viewString.Append(" AssayGroupTestResult_Version, \r\n            T.VersionAntecedentID AS AssayGroup");
            viewString.Append("TestResult_VersionAntecedentID, \r\n            T.VersionCertainty AS AssayGroupTe");
            viewString.Append("stResult_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS AssayGro");
            viewString.Append("upTestResult_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Assa");
            viewString.Append("yGroupTestResult_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS AssayGrou");
            viewString.Append("pTestResult_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS AssayGrou");
            viewString.Append("pTestResult_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Assa");
            viewString.Append("yGroupTestResult_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS AssayG");
            viewString.Append("roupTestResult_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBMo");
            viewString.Append("duleBusinessObjectsStoreContainer.X_AssayGroupTestResult AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssayGroupTestResults", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.AssayGroupTestResultComments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView315()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssayGroupTestResultComments", "\r\n    SELECT VALUE -- Constructing AssayGroupTestResultComments\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.AssayGroupTestResultComment](T1.AssayGroupTestResultComment" +
                    "_AssayGroupTestResultCommentID, T1.AssayGroupTestResultComment_AssayGroupTestRes" +
                    "ultID, T1.AssayGroupTestResultComment_Comment, T1.AssayGroupTestResultComment_Ve" +
                    "rsion, T1.AssayGroupTestResultComment_VersionAntecedentID, T1.AssayGroupTestResu" +
                    "ltComment_VersionCertainty, T1.AssayGroupTestResultComment_VersionWorkflowInstan" +
                    "ceID, T1.AssayGroupTestResultComment_VersionUpdatedBy, T1.AssayGroupTestResultCo" +
                    "mment_VersionDeletedBy, T1.AssayGroupTestResultComment_VersionOwnerContactID, T1" +
                    ".AssayGroupTestResultComment_VersionOwnerCompanyID, T1.AssayGroupTestResultComme" +
                    "nt_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.AssayGroupTestRes" +
                    "ultCommentID AS AssayGroupTestResultComment_AssayGroupTestResultCommentID, \r\n   " +
                    "         T.AssayGroupTestResultID AS AssayGroupTestResultComment_AssayGroupTestR" +
                    "esultID, \r\n            T.Comment AS AssayGroupTestResultComment_Comment, \r\n     " +
                    "       T.Version AS AssayGroupTestResultComment_Version, \r\n            T.Version" +
                    "AntecedentID AS AssayGroupTestResultComment_VersionAntecedentID, \r\n            T" +
                    ".VersionCertainty AS AssayGroupTestResultComment_VersionCertainty, \r\n           " +
                    " T.VersionWorkflowInstanceID AS AssayGroupTestResultComment_VersionWorkflowInsta" +
                    "nceID, \r\n            T.VersionUpdatedBy AS AssayGroupTestResultComment_VersionUp" +
                    "datedBy, \r\n            T.VersionDeletedBy AS AssayGroupTestResultComment_Version" +
                    "DeletedBy, \r\n            T.VersionOwnerContactID AS AssayGroupTestResultComment_" +
                    "VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS AssayGroupTestRe" +
                    "sultComment_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS AssayGroupT" +
                    "estResultComment_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODB" +
                    "ModuleBusinessObjectsStoreContainer.X_AssayGroupTestResultComment AS T\r\n    ) AS" +
                    " T1");
        }
        
        /// <Summary>
        /// return view for XODBC.AssayGroupTestResultDuplicates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView316()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2599);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AssayGroupTestResultDuplicates\r\n        [XODB");
            viewString.Append(".Module.BusinessObjects.AssayGroupTestResultDuplicate](T1.AssayGroupTestResultDu");
            viewString.Append("plicate_AssayGroupTestResultDuplicateID, T1.AssayGroupTestResultDuplicate_AssayG");
            viewString.Append("roupTestResultID, T1.AssayGroupTestResultDuplicate_LabResultText, T1.AssayGroupT");
            viewString.Append("estResultDuplicate_LabResult, T1.AssayGroupTestResultDuplicate_LabSampleNumber, ");
            viewString.Append("T1.AssayGroupTestResultDuplicate_LabBatchNumber, T1.AssayGroupTestResultDuplicat");
            viewString.Append("e_Sampled, T1.AssayGroupTestResultDuplicate_SampledBy, T1.AssayGroupTestResultDu");
            viewString.Append("plicate_Version, T1.AssayGroupTestResultDuplicate_VersionAntecedentID, T1.AssayG");
            viewString.Append("roupTestResultDuplicate_VersionCertainty, T1.AssayGroupTestResultDuplicate_Versi");
            viewString.Append("onWorkflowInstanceID, T1.AssayGroupTestResultDuplicate_VersionUpdatedBy, T1.Assa");
            viewString.Append("yGroupTestResultDuplicate_VersionDeletedBy, T1.AssayGroupTestResultDuplicate_Ver");
            viewString.Append("sionOwnerContactID, T1.AssayGroupTestResultDuplicate_VersionOwnerCompanyID, T1.A");
            viewString.Append("ssayGroupTestResultDuplicate_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n     ");
            viewString.Append("       T.AssayGroupTestResultDuplicateID AS AssayGroupTestResultDuplicate_AssayG");
            viewString.Append("roupTestResultDuplicateID, \r\n            T.AssayGroupTestResultID AS AssayGroupT");
            viewString.Append("estResultDuplicate_AssayGroupTestResultID, \r\n            T.LabResultText AS Assa");
            viewString.Append("yGroupTestResultDuplicate_LabResultText, \r\n            T.LabResult AS AssayGroup");
            viewString.Append("TestResultDuplicate_LabResult, \r\n            T.LabSampleNumber AS AssayGroupTest");
            viewString.Append("ResultDuplicate_LabSampleNumber, \r\n            T.LabBatchNumber AS AssayGroupTes");
            viewString.Append("tResultDuplicate_LabBatchNumber, \r\n            T.Sampled AS AssayGroupTestResult");
            viewString.Append("Duplicate_Sampled, \r\n            T.SampledBy AS AssayGroupTestResultDuplicate_Sa");
            viewString.Append("mpledBy, \r\n            T.Version AS AssayGroupTestResultDuplicate_Version, \r\n   ");
            viewString.Append("         T.VersionAntecedentID AS AssayGroupTestResultDuplicate_VersionAnteceden");
            viewString.Append("tID, \r\n            T.VersionCertainty AS AssayGroupTestResultDuplicate_VersionCe");
            viewString.Append("rtainty, \r\n            T.VersionWorkflowInstanceID AS AssayGroupTestResultDuplic");
            viewString.Append("ate_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS AssayGroupTes");
            viewString.Append("tResultDuplicate_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS AssayGrou");
            viewString.Append("pTestResultDuplicate_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS ");
            viewString.Append("AssayGroupTestResultDuplicate_VersionOwnerContactID, \r\n            T.VersionOwne");
            viewString.Append("rCompanyID AS AssayGroupTestResultDuplicate_VersionOwnerCompanyID, \r\n           ");
            viewString.Append(" T.VersionUpdated AS AssayGroupTestResultDuplicate_VersionUpdated, \r\n           ");
            viewString.Append(" True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_AssayGro");
            viewString.Append("upTestResultDuplicate AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.AssayGroupTestResultDuplicates", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.BlockModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView317()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4120);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BlockModels\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.BlockModel](T1.BlockModel_BlockModelID, T1.BlockModel_ProjectID, T1.BlockMo");
            viewString.Append("del_Alias, T1.BlockModel_OriginX, T1.BlockModel_OriginY, T1.BlockModel_OriginZ, ");
            viewString.Append("T1.BlockModel_IsIJKCalculated, T1.BlockModel_OriginI, T1.BlockModel_OriginJ, T1.");
            viewString.Append("BlockModel_OriginK, T1.BlockModel_MaximumI, T1.BlockModel_MaximumJ, T1.BlockMode");
            viewString.Append("l_MaximumK, T1.BlockModel_MinimumI, T1.BlockModel_MinimumJ, T1.BlockModel_Minimu");
            viewString.Append("mK, T1.BlockModel_DimensionEasting, T1.BlockModel_DimensionNorthing, T1.BlockMod");
            viewString.Append("el_DimensionElevation, T1.BlockModel_IsOriginNorthPositive, T1.BlockModel_IsOrig");
            viewString.Append("inEastPositive, T1.BlockModel_IsOriginElevationUpwardsPositive, T1.BlockModel_Cu");
            viewString.Append("beCentroid0OriginOffsetX, T1.BlockModel_CubeCentroid0OriginOffsetY, T1.BlockMode");
            viewString.Append("l_CubeCentroid0OriginOffsetZ, T1.BlockModel_UnitIJK, T1.BlockModel_DefaultISize,");
            viewString.Append(" T1.BlockModel_DefaultJSize, T1.BlockModel_DefaultKSize, T1.BlockModel_AuthorCon");
            viewString.Append("tactID, T1.BlockModel_ResponsibleContactID, T1.BlockModel_ApproverContactID, T1.");
            viewString.Append("BlockModel_ExternalReviewerContactID, T1.BlockModel_Version, T1.BlockModel_Versi");
            viewString.Append("onAntecedentID, T1.BlockModel_VersionCertainty, T1.BlockModel_VersionWorkflowIns");
            viewString.Append("tanceID, T1.BlockModel_VersionUpdatedBy, T1.BlockModel_VersionDeletedBy, T1.Bloc");
            viewString.Append("kModel_VersionOwnerContactID, T1.BlockModel_VersionOwnerCompanyID, T1.BlockModel");
            viewString.Append("_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.BlockModelID AS Blo");
            viewString.Append("ckModel_BlockModelID, \r\n            T.ProjectID AS BlockModel_ProjectID, \r\n     ");
            viewString.Append("       T.Alias AS BlockModel_Alias, \r\n            T.OriginX AS BlockModel_Origin");
            viewString.Append("X, \r\n            T.OriginY AS BlockModel_OriginY, \r\n            T.OriginZ AS Blo");
            viewString.Append("ckModel_OriginZ, \r\n            T.IsIJKCalculated AS BlockModel_IsIJKCalculated, ");
            viewString.Append("\r\n            T.OriginI AS BlockModel_OriginI, \r\n            T.OriginJ AS BlockM");
            viewString.Append("odel_OriginJ, \r\n            T.OriginK AS BlockModel_OriginK, \r\n            T.Max");
            viewString.Append("imumI AS BlockModel_MaximumI, \r\n            T.MaximumJ AS BlockModel_MaximumJ, \r");
            viewString.Append("\n            T.MaximumK AS BlockModel_MaximumK, \r\n            T.MinimumI AS Bloc");
            viewString.Append("kModel_MinimumI, \r\n            T.MinimumJ AS BlockModel_MinimumJ, \r\n            ");
            viewString.Append("T.MinimumK AS BlockModel_MinimumK, \r\n            T.DimensionEasting AS BlockMode");
            viewString.Append("l_DimensionEasting, \r\n            T.DimensionNorthing AS BlockModel_DimensionNor");
            viewString.Append("thing, \r\n            T.DimensionElevation AS BlockModel_DimensionElevation, \r\n  ");
            viewString.Append("          T.IsOriginNorthPositive AS BlockModel_IsOriginNorthPositive, \r\n       ");
            viewString.Append("     T.IsOriginEastPositive AS BlockModel_IsOriginEastPositive, \r\n            T.");
            viewString.Append("IsOriginElevationUpwardsPositive AS BlockModel_IsOriginElevationUpwardsPositive,");
            viewString.Append(" \r\n            T.CubeCentroid0OriginOffsetX AS BlockModel_CubeCentroid0OriginOff");
            viewString.Append("setX, \r\n            T.CubeCentroid0OriginOffsetY AS BlockModel_CubeCentroid0Orig");
            viewString.Append("inOffsetY, \r\n            T.CubeCentroid0OriginOffsetZ AS BlockModel_CubeCentroid");
            viewString.Append("0OriginOffsetZ, \r\n            T.UnitIJK AS BlockModel_UnitIJK, \r\n            T.D");
            viewString.Append("efaultISize AS BlockModel_DefaultISize, \r\n            T.DefaultJSize AS BlockMod");
            viewString.Append("el_DefaultJSize, \r\n            T.DefaultKSize AS BlockModel_DefaultKSize, \r\n    ");
            viewString.Append("        T.AuthorContactID AS BlockModel_AuthorContactID, \r\n            T.Respons");
            viewString.Append("ibleContactID AS BlockModel_ResponsibleContactID, \r\n            T.ApproverContac");
            viewString.Append("tID AS BlockModel_ApproverContactID, \r\n            T.ExternalReviewerContactID A");
            viewString.Append("S BlockModel_ExternalReviewerContactID, \r\n            T.Version AS BlockModel_Ve");
            viewString.Append("rsion, \r\n            T.VersionAntecedentID AS BlockModel_VersionAntecedentID, \r\n");
            viewString.Append("            T.VersionCertainty AS BlockModel_VersionCertainty, \r\n            T.V");
            viewString.Append("ersionWorkflowInstanceID AS BlockModel_VersionWorkflowInstanceID, \r\n            ");
            viewString.Append("T.VersionUpdatedBy AS BlockModel_VersionUpdatedBy, \r\n            T.VersionDelete");
            viewString.Append("dBy AS BlockModel_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Blo");
            viewString.Append("ckModel_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS BlockMod");
            viewString.Append("el_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS BlockModel_VersionUp");
            viewString.Append("dated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStore");
            viewString.Append("Container.X_BlockModel AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.BlockModels", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.BlockModelBlocks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView318()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(6664);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BlockModelBlocks\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.BlockModelBlock](T1.BlockModelBlock_BlockModelBlockID, T1.BlockModelBl");
            viewString.Append("ock_BlockModelID, T1.BlockModelBlock_Domain, T1.BlockModelBlock_I, T1.BlockModel");
            viewString.Append("Block_J, T1.BlockModelBlock_K, T1.BlockModelBlock_CentroidX, T1.BlockModelBlock_");
            viewString.Append("CentroidY, T1.BlockModelBlock_CentroidZ, T1.BlockModelBlock_LengthX, T1.BlockMod");
            viewString.Append("elBlock_LengthY, T1.BlockModelBlock_LengthZ, T1.BlockModelBlock_MinimumSamples, ");
            viewString.Append("T1.BlockModelBlock_MaximumSamples, T1.BlockModelBlock_EstimationTechnique, T1.Bl");
            viewString.Append("ockModelBlock_KrigingEfficiency, T1.BlockModelBlock_KrigingError, T1.BlockModelB");
            viewString.Append("lock_KrigingVariance, T1.BlockModelBlock_SlopeOfRegression, T1.BlockModelBlock_D");
            viewString.Append("ensity, T1.BlockModelBlock_ResourceCategory, T1.BlockModelBlock_Numeric1, T1.Blo");
            viewString.Append("ckModelBlock_Numeric2, T1.BlockModelBlock_Numeric3, T1.BlockModelBlock_Numeric4,");
            viewString.Append(" T1.BlockModelBlock_Numeric5, T1.BlockModelBlock_Numeric6, T1.BlockModelBlock_Nu");
            viewString.Append("meric7, T1.BlockModelBlock_Numeric8, T1.BlockModelBlock_Numeric9, T1.BlockModelB");
            viewString.Append("lock_Numeric10, T1.BlockModelBlock_Numeric11, T1.BlockModelBlock_Numeric12, T1.B");
            viewString.Append("lockModelBlock_Numeric13, T1.BlockModelBlock_Numeric14, T1.BlockModelBlock_Numer");
            viewString.Append("ic15, T1.BlockModelBlock_Numeric16, T1.BlockModelBlock_Numeric17, T1.BlockModelB");
            viewString.Append("lock_Numeric18, T1.BlockModelBlock_Numeric19, T1.BlockModelBlock_Numeric20, T1.B");
            viewString.Append("lockModelBlock_Numeric21, T1.BlockModelBlock_Numeric22, T1.BlockModelBlock_Numer");
            viewString.Append("ic23, T1.BlockModelBlock_Numeric24, T1.BlockModelBlock_Numeric25, T1.BlockModelB");
            viewString.Append("lock_Numeric26, T1.BlockModelBlock_Numeric27, T1.BlockModelBlock_Numeric28, T1.B");
            viewString.Append("lockModelBlock_Numeric29, T1.BlockModelBlock_Numeric30, T1.BlockModelBlock_Numer");
            viewString.Append("ic31, T1.BlockModelBlock_String1, T1.BlockModelBlock_String2, T1.BlockModelBlock");
            viewString.Append("_String3, T1.BlockModelBlock_String4, T1.BlockModelBlock_String5, T1.BlockModelB");
            viewString.Append("lock_String6, T1.BlockModelBlock_String7, T1.BlockModelBlock_String8, T1.BlockMo");
            viewString.Append("delBlock_String9, T1.BlockModelBlock_String10, T1.BlockModelBlock_String11, T1.B");
            viewString.Append("lockModelBlock_Version, T1.BlockModelBlock_VersionAntecedentID, T1.BlockModelBlo");
            viewString.Append("ck_VersionCertainty, T1.BlockModelBlock_VersionWorkflowInstanceID, T1.BlockModel");
            viewString.Append("Block_VersionUpdatedBy, T1.BlockModelBlock_VersionDeletedBy, T1.BlockModelBlock_");
            viewString.Append("VersionOwnerContactID, T1.BlockModelBlock_VersionOwnerCompanyID, T1.BlockModelBl");
            viewString.Append("ock_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.BlockModelBlockI");
            viewString.Append("D AS BlockModelBlock_BlockModelBlockID, \r\n            T.BlockModelID AS BlockMod");
            viewString.Append("elBlock_BlockModelID, \r\n            T.Domain AS BlockModelBlock_Domain, \r\n      ");
            viewString.Append("      T.I AS BlockModelBlock_I, \r\n            T.J AS BlockModelBlock_J, \r\n      ");
            viewString.Append("      T.K AS BlockModelBlock_K, \r\n            T.CentroidX AS BlockModelBlock_Cen");
            viewString.Append("troidX, \r\n            T.CentroidY AS BlockModelBlock_CentroidY, \r\n            T.");
            viewString.Append("CentroidZ AS BlockModelBlock_CentroidZ, \r\n            T.LengthX AS BlockModelBlo");
            viewString.Append("ck_LengthX, \r\n            T.LengthY AS BlockModelBlock_LengthY, \r\n            T.");
            viewString.Append("LengthZ AS BlockModelBlock_LengthZ, \r\n            T.MinimumSamples AS BlockModel");
            viewString.Append("Block_MinimumSamples, \r\n            T.MaximumSamples AS BlockModelBlock_MaximumS");
            viewString.Append("amples, \r\n            T.EstimationTechnique AS BlockModelBlock_EstimationTechniq");
            viewString.Append("ue, \r\n            T.KrigingEfficiency AS BlockModelBlock_KrigingEfficiency, \r\n  ");
            viewString.Append("          T.KrigingError AS BlockModelBlock_KrigingError, \r\n            T.Krigin");
            viewString.Append("gVariance AS BlockModelBlock_KrigingVariance, \r\n            T.SlopeOfRegression ");
            viewString.Append("AS BlockModelBlock_SlopeOfRegression, \r\n            T.Density AS BlockModelBlock");
            viewString.Append("_Density, \r\n            T.ResourceCategory AS BlockModelBlock_ResourceCategory, ");
            viewString.Append("\r\n            T.Numeric1 AS BlockModelBlock_Numeric1, \r\n            T.Numeric2 A");
            viewString.Append("S BlockModelBlock_Numeric2, \r\n            T.Numeric3 AS BlockModelBlock_Numeric3");
            viewString.Append(", \r\n            T.Numeric4 AS BlockModelBlock_Numeric4, \r\n            T.Numeric5");
            viewString.Append(" AS BlockModelBlock_Numeric5, \r\n            T.Numeric6 AS BlockModelBlock_Numeri");
            viewString.Append("c6, \r\n            T.Numeric7 AS BlockModelBlock_Numeric7, \r\n            T.Numeri");
            viewString.Append("c8 AS BlockModelBlock_Numeric8, \r\n            T.Numeric9 AS BlockModelBlock_Nume");
            viewString.Append("ric9, \r\n            T.Numeric10 AS BlockModelBlock_Numeric10, \r\n            T.Nu");
            viewString.Append("meric11 AS BlockModelBlock_Numeric11, \r\n            T.Numeric12 AS BlockModelBlo");
            viewString.Append("ck_Numeric12, \r\n            T.Numeric13 AS BlockModelBlock_Numeric13, \r\n        ");
            viewString.Append("    T.Numeric14 AS BlockModelBlock_Numeric14, \r\n            T.Numeric15 AS Block");
            viewString.Append("ModelBlock_Numeric15, \r\n            T.Numeric16 AS BlockModelBlock_Numeric16, \r\n");
            viewString.Append("            T.Numeric17 AS BlockModelBlock_Numeric17, \r\n            T.Numeric18 ");
            viewString.Append("AS BlockModelBlock_Numeric18, \r\n            T.Numeric19 AS BlockModelBlock_Numer");
            viewString.Append("ic19, \r\n            T.Numeric20 AS BlockModelBlock_Numeric20, \r\n            T.Nu");
            viewString.Append("meric21 AS BlockModelBlock_Numeric21, \r\n            T.Numeric22 AS BlockModelBlo");
            viewString.Append("ck_Numeric22, \r\n            T.Numeric23 AS BlockModelBlock_Numeric23, \r\n        ");
            viewString.Append("    T.Numeric24 AS BlockModelBlock_Numeric24, \r\n            T.Numeric25 AS Block");
            viewString.Append("ModelBlock_Numeric25, \r\n            T.Numeric26 AS BlockModelBlock_Numeric26, \r\n");
            viewString.Append("            T.Numeric27 AS BlockModelBlock_Numeric27, \r\n            T.Numeric28 ");
            viewString.Append("AS BlockModelBlock_Numeric28, \r\n            T.Numeric29 AS BlockModelBlock_Numer");
            viewString.Append("ic29, \r\n            T.Numeric30 AS BlockModelBlock_Numeric30, \r\n            T.Nu");
            viewString.Append("meric31 AS BlockModelBlock_Numeric31, \r\n            T.String1 AS BlockModelBlock");
            viewString.Append("_String1, \r\n            T.String2 AS BlockModelBlock_String2, \r\n            T.St");
            viewString.Append("ring3 AS BlockModelBlock_String3, \r\n            T.String4 AS BlockModelBlock_Str");
            viewString.Append("ing4, \r\n            T.String5 AS BlockModelBlock_String5, \r\n            T.String");
            viewString.Append("6 AS BlockModelBlock_String6, \r\n            T.String7 AS BlockModelBlock_String7");
            viewString.Append(", \r\n            T.String8 AS BlockModelBlock_String8, \r\n            T.String9 AS");
            viewString.Append(" BlockModelBlock_String9, \r\n            T.String10 AS BlockModelBlock_String10, ");
            viewString.Append("\r\n            T.String11 AS BlockModelBlock_String11, \r\n            T.Version AS");
            viewString.Append(" BlockModelBlock_Version, \r\n            T.VersionAntecedentID AS BlockModelBlock");
            viewString.Append("_VersionAntecedentID, \r\n            T.VersionCertainty AS BlockModelBlock_Versio");
            viewString.Append("nCertainty, \r\n            T.VersionWorkflowInstanceID AS BlockModelBlock_Version");
            viewString.Append("WorkflowInstanceID, \r\n            T.VersionUpdatedBy AS BlockModelBlock_VersionU");
            viewString.Append("pdatedBy, \r\n            T.VersionDeletedBy AS BlockModelBlock_VersionDeletedBy, ");
            viewString.Append("\r\n            T.VersionOwnerContactID AS BlockModelBlock_VersionOwnerContactID, ");
            viewString.Append("\r\n            T.VersionOwnerCompanyID AS BlockModelBlock_VersionOwnerCompanyID, ");
            viewString.Append("\r\n            T.VersionUpdated AS BlockModelBlock_VersionUpdated, \r\n            ");
            viewString.Append("True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_BlockMode");
            viewString.Append("lBlock AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.BlockModelBlocks", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.BlockModelBlockDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView319()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2059);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BlockModelBlockDatas\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.BlockModelBlockData](T1.BlockModelBlockData_BlockModelBlockDataID,");
            viewString.Append(" T1.BlockModelBlockData_BlockModelID, T1.BlockModelBlockData_BlockModelBlockID, ");
            viewString.Append("T1.BlockModelBlockData_ParameterID, T1.BlockModelBlockData_BlockModelBlockDataTe");
            viewString.Append("xt, T1.BlockModelBlockData_BlockModelBlockDataValue, T1.BlockModelBlockData_Vers");
            viewString.Append("ion, T1.BlockModelBlockData_VersionAntecedentID, T1.BlockModelBlockData_VersionC");
            viewString.Append("ertainty, T1.BlockModelBlockData_VersionWorkflowInstanceID, T1.BlockModelBlockDa");
            viewString.Append("ta_VersionUpdatedBy, T1.BlockModelBlockData_VersionDeletedBy, T1.BlockModelBlock");
            viewString.Append("Data_VersionOwnerContactID, T1.BlockModelBlockData_VersionOwnerCompanyID, T1.Blo");
            viewString.Append("ckModelBlockData_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Blo");
            viewString.Append("ckModelBlockDataID AS BlockModelBlockData_BlockModelBlockDataID, \r\n            T");
            viewString.Append(".BlockModelID AS BlockModelBlockData_BlockModelID, \r\n            T.BlockModelBlo");
            viewString.Append("ckID AS BlockModelBlockData_BlockModelBlockID, \r\n            T.ParameterID AS Bl");
            viewString.Append("ockModelBlockData_ParameterID, \r\n            T.BlockModelBlockDataText AS BlockM");
            viewString.Append("odelBlockData_BlockModelBlockDataText, \r\n            T.BlockModelBlockDataValue ");
            viewString.Append("AS BlockModelBlockData_BlockModelBlockDataValue, \r\n            T.Version AS Bloc");
            viewString.Append("kModelBlockData_Version, \r\n            T.VersionAntecedentID AS BlockModelBlockD");
            viewString.Append("ata_VersionAntecedentID, \r\n            T.VersionCertainty AS BlockModelBlockData");
            viewString.Append("_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS BlockModelBlockD");
            viewString.Append("ata_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS BlockModelBlo");
            viewString.Append("ckData_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS BlockModelBlockData");
            viewString.Append("_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS BlockModelBlockData_");
            viewString.Append("VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS BlockModelBlockD");
            viewString.Append("ata_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS BlockModelBlockData");
            viewString.Append("_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessOb");
            viewString.Append("jectsStoreContainer.X_BlockModelBlockData AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.BlockModelBlockDatas", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.BlockModelMetadatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView320()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.BlockModelMetadatas", "\r\n    SELECT VALUE -- Constructing BlockModelMetadatas\r\n        [XODB.Module.Busi" +
                    "nessObjects.BlockModelMetadata](T1.BlockModelMetadata_BlockModelMetadataID, T1.B" +
                    "lockModelMetadata_BlockModelID, T1.BlockModelMetadata_ParameterID, T1.BlockModel" +
                    "Metadata_IsColumnData, T1.BlockModelMetadata_BlockModelMetadataText, T1.BlockMod" +
                    "elMetadata_BlockModelMetadataValue, T1.BlockModelMetadata_Version, T1.BlockModel" +
                    "Metadata_VersionAntecedentID, T1.BlockModelMetadata_VersionCertainty, T1.BlockMo" +
                    "delMetadata_VersionWorkflowInstanceID, T1.BlockModelMetadata_VersionUpdatedBy, T" +
                    "1.BlockModelMetadata_VersionDeletedBy, T1.BlockModelMetadata_VersionOwnerContact" +
                    "ID, T1.BlockModelMetadata_VersionOwnerCompanyID, T1.BlockModelMetadata_VersionUp" +
                    "dated)\r\n    FROM (\r\n        SELECT \r\n            T.BlockModelMetadataID AS Block" +
                    "ModelMetadata_BlockModelMetadataID, \r\n            T.BlockModelID AS BlockModelMe" +
                    "tadata_BlockModelID, \r\n            T.ParameterID AS BlockModelMetadata_Parameter" +
                    "ID, \r\n            T.IsColumnData AS BlockModelMetadata_IsColumnData, \r\n         " +
                    "   T.BlockModelMetadataText AS BlockModelMetadata_BlockModelMetadataText, \r\n    " +
                    "        T.BlockModelMetadataValue AS BlockModelMetadata_BlockModelMetadataValue," +
                    " \r\n            T.Version AS BlockModelMetadata_Version, \r\n            T.VersionA" +
                    "ntecedentID AS BlockModelMetadata_VersionAntecedentID, \r\n            T.VersionCe" +
                    "rtainty AS BlockModelMetadata_VersionCertainty, \r\n            T.VersionWorkflowI" +
                    "nstanceID AS BlockModelMetadata_VersionWorkflowInstanceID, \r\n            T.Versi" +
                    "onUpdatedBy AS BlockModelMetadata_VersionUpdatedBy, \r\n            T.VersionDelet" +
                    "edBy AS BlockModelMetadata_VersionDeletedBy, \r\n            T.VersionOwnerContact" +
                    "ID AS BlockModelMetadata_VersionOwnerContactID, \r\n            T.VersionOwnerComp" +
                    "anyID AS BlockModelMetadata_VersionOwnerCompanyID, \r\n            T.VersionUpdate" +
                    "d AS BlockModelMetadata_VersionUpdated, \r\n            True AS _from0\r\n        FR" +
                    "OM XODBModuleBusinessObjectsStoreContainer.X_BlockModelMetadata AS T\r\n    ) AS T" +
                    "1");
        }
        
        /// <Summary>
        /// return view for XODBC.Casings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView321()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2085);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Casings\r\n        [XODB.Module.BusinessObjects");
            viewString.Append(".Casing](T1.Casing_CasingID, T1.Casing_HeaderID, T1.Casing_FromDepth, T1.Casing_");
            viewString.Append("ToDepth, T1.Casing_CasingTypeID, T1.Casing_CasingSize, T1.Casing_CasingSizeUnit,");
            viewString.Append(" T1.Casing_CasingInsideData, T1.Casing_CasingInsideDataUnit, T1.Casing_CasingOut");
            viewString.Append("sideData, T1.Casing_CasingOutsideDataUnit, T1.Casing_LengthRecovered, T1.Casing_");
            viewString.Append("Comment, T1.Casing_Version, T1.Casing_VersionAntecedentID, T1.Casing_VersionCert");
            viewString.Append("ainty, T1.Casing_VersionWorkflowInstanceID, T1.Casing_VersionUpdatedBy, T1.Casin");
            viewString.Append("g_VersionDeletedBy, T1.Casing_VersionOwnerContactID, T1.Casing_VersionOwnerCompa");
            viewString.Append("nyID, T1.Casing_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Casi");
            viewString.Append("ngID AS Casing_CasingID, \r\n            T.HeaderID AS Casing_HeaderID, \r\n        ");
            viewString.Append("    T.FromDepth AS Casing_FromDepth, \r\n            T.ToDepth AS Casing_ToDepth, ");
            viewString.Append("\r\n            T.CasingTypeID AS Casing_CasingTypeID, \r\n            T.CasingSize ");
            viewString.Append("AS Casing_CasingSize, \r\n            T.CasingSizeUnit AS Casing_CasingSizeUnit, \r");
            viewString.Append("\n            T.CasingInsideData AS Casing_CasingInsideData, \r\n            T.Casi");
            viewString.Append("ngInsideDataUnit AS Casing_CasingInsideDataUnit, \r\n            T.CasingOutsideDa");
            viewString.Append("ta AS Casing_CasingOutsideData, \r\n            T.CasingOutsideDataUnit AS Casing_");
            viewString.Append("CasingOutsideDataUnit, \r\n            T.LengthRecovered AS Casing_LengthRecovered");
            viewString.Append(", \r\n            T.Comment AS Casing_Comment, \r\n            T.Version AS Casing_V");
            viewString.Append("ersion, \r\n            T.VersionAntecedentID AS Casing_VersionAntecedentID, \r\n   ");
            viewString.Append("         T.VersionCertainty AS Casing_VersionCertainty, \r\n            T.VersionW");
            viewString.Append("orkflowInstanceID AS Casing_VersionWorkflowInstanceID, \r\n            T.VersionUp");
            viewString.Append("datedBy AS Casing_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Casing_V");
            viewString.Append("ersionDeletedBy, \r\n            T.VersionOwnerContactID AS Casing_VersionOwnerCon");
            viewString.Append("tactID, \r\n            T.VersionOwnerCompanyID AS Casing_VersionOwnerCompanyID, \r");
            viewString.Append("\n            T.VersionUpdated AS Casing_VersionUpdated, \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Casing AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Casings", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Cementings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView322()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Cementings", "\r\n    SELECT VALUE -- Constructing Cementings\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Cementing](T1.Cementing_CementingID, T1.Cementing_HeaderID, T1.Cementing_From" +
                    "Depth, T1.Cementing_ToDepth, T1.Cementing_CementingDate, T1.Cementing_Volume, T1" +
                    ".Cementing_Comment, T1.Cementing_Version, T1.Cementing_VersionAntecedentID, T1.C" +
                    "ementing_VersionCertainty, T1.Cementing_VersionWorkflowInstanceID, T1.Cementing_" +
                    "VersionUpdatedBy, T1.Cementing_VersionDeletedBy, T1.Cementing_VersionOwnerContac" +
                    "tID, T1.Cementing_VersionOwnerCompanyID, T1.Cementing_VersionUpdated)\r\n    FROM " +
                    "(\r\n        SELECT \r\n            T.CementingID AS Cementing_CementingID, \r\n      " +
                    "      T.HeaderID AS Cementing_HeaderID, \r\n            T.FromDepth AS Cementing_F" +
                    "romDepth, \r\n            T.ToDepth AS Cementing_ToDepth, \r\n            T.Cementin" +
                    "gDate AS Cementing_CementingDate, \r\n            T.Volume AS Cementing_Volume, \r\n" +
                    "            T.Comment AS Cementing_Comment, \r\n            T.Version AS Cementing" +
                    "_Version, \r\n            T.VersionAntecedentID AS Cementing_VersionAntecedentID, " +
                    "\r\n            T.VersionCertainty AS Cementing_VersionCertainty, \r\n            T." +
                    "VersionWorkflowInstanceID AS Cementing_VersionWorkflowInstanceID, \r\n            " +
                    "T.VersionUpdatedBy AS Cementing_VersionUpdatedBy, \r\n            T.VersionDeleted" +
                    "By AS Cementing_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Cemen" +
                    "ting_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Cementing_V" +
                    "ersionOwnerCompanyID, \r\n            T.VersionUpdated AS Cementing_VersionUpdated" +
                    ", \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreConta" +
                    "iner.X_Cementing AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Companies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView323()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Companies", @"
    SELECT VALUE -- Constructing Companies
        [XODB.Module.BusinessObjects.Company](T1.Company_CompanyID, T1.Company_CompanyName, T1.Company_CountryID, T1.Company_PrimaryContactID, T1.Company_Comment, T1.Company_Version, T1.Company_VersionAntecedentID, T1.Company_VersionCertainty, T1.Company_VersionWorkflowInstanceID, T1.Company_VersionUpdatedBy, T1.Company_VersionDeletedBy, T1.Company_VersionOwnerContactID, T1.Company_VersionOwnerCompanyID, T1.Company_VersionUpdated)
    FROM (
        SELECT 
            T.CompanyID AS Company_CompanyID, 
            T.CompanyName AS Company_CompanyName, 
            T.CountryID AS Company_CountryID, 
            T.PrimaryContactID AS Company_PrimaryContactID, 
            T.Comment AS Company_Comment, 
            T.Version AS Company_Version, 
            T.VersionAntecedentID AS Company_VersionAntecedentID, 
            T.VersionCertainty AS Company_VersionCertainty, 
            T.VersionWorkflowInstanceID AS Company_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS Company_VersionUpdatedBy, 
            T.VersionDeletedBy AS Company_VersionDeletedBy, 
            T.VersionOwnerContactID AS Company_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS Company_VersionOwnerCompanyID, 
            T.VersionUpdated AS Company_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.CompanyAddresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView324()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.CompanyAddresses", "\r\n    SELECT VALUE -- Constructing CompanyAddresses\r\n        [XODB.Module.Busines" +
                    "sObjects.CompanyAddress](T1.CompanyAddress_CompanyAddressID, T1.CompanyAddress_C" +
                    "ompanyID, T1.CompanyAddress_AddressID, T1.CompanyAddress_Version, T1.CompanyAddr" +
                    "ess_VersionAntecedentID, T1.CompanyAddress_VersionCertainty, T1.CompanyAddress_V" +
                    "ersionWorkflowInstanceID, T1.CompanyAddress_VersionUpdatedBy, T1.CompanyAddress_" +
                    "VersionDeletedBy, T1.CompanyAddress_VersionOwnerContactID, T1.CompanyAddress_Ver" +
                    "sionOwnerCompanyID, T1.CompanyAddress_VersionUpdated)\r\n    FROM (\r\n        SELEC" +
                    "T \r\n            T.CompanyAddressID AS CompanyAddress_CompanyAddressID, \r\n       " +
                    "     T.CompanyID AS CompanyAddress_CompanyID, \r\n            T.AddressID AS Compa" +
                    "nyAddress_AddressID, \r\n            T.Version AS CompanyAddress_Version, \r\n      " +
                    "      T.VersionAntecedentID AS CompanyAddress_VersionAntecedentID, \r\n           " +
                    " T.VersionCertainty AS CompanyAddress_VersionCertainty, \r\n            T.VersionW" +
                    "orkflowInstanceID AS CompanyAddress_VersionWorkflowInstanceID, \r\n            T.V" +
                    "ersionUpdatedBy AS CompanyAddress_VersionUpdatedBy, \r\n            T.VersionDelet" +
                    "edBy AS CompanyAddress_VersionDeletedBy, \r\n            T.VersionOwnerContactID A" +
                    "S CompanyAddress_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS" +
                    " CompanyAddress_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Company" +
                    "Address_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBus" +
                    "inessObjectsStoreContainer.X_CompanyAddress AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.CompanyRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView325()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.CompanyRelations", "\r\n    SELECT VALUE -- Constructing CompanyRelations\r\n        [XODB.Module.Busines" +
                    "sObjects.CompanyRelation](T1.CompanyRelation_CompanyRelationID, T1.CompanyRelati" +
                    "on_CompanyID, T1.CompanyRelation_ParentCompanyID, T1.CompanyRelation_IsChildVisi" +
                    "ble, T1.CompanyRelation_IsParentVisible, T1.CompanyRelation_Version, T1.CompanyR" +
                    "elation_VersionAntecedentID, T1.CompanyRelation_VersionCertainty, T1.CompanyRela" +
                    "tion_VersionWorkflowInstanceID, T1.CompanyRelation_VersionUpdatedBy, T1.CompanyR" +
                    "elation_VersionDeletedBy, T1.CompanyRelation_VersionOwnerContactID, T1.CompanyRe" +
                    "lation_VersionOwnerCompanyID, T1.CompanyRelation_VersionUpdated)\r\n    FROM (\r\n  " +
                    "      SELECT \r\n            T.CompanyRelationID AS CompanyRelation_CompanyRelatio" +
                    "nID, \r\n            T.CompanyID AS CompanyRelation_CompanyID, \r\n            T.Par" +
                    "entCompanyID AS CompanyRelation_ParentCompanyID, \r\n            T.IsChildVisible " +
                    "AS CompanyRelation_IsChildVisible, \r\n            T.IsParentVisible AS CompanyRel" +
                    "ation_IsParentVisible, \r\n            T.Version AS CompanyRelation_Version, \r\n   " +
                    "         T.VersionAntecedentID AS CompanyRelation_VersionAntecedentID, \r\n       " +
                    "     T.VersionCertainty AS CompanyRelation_VersionCertainty, \r\n            T.Ver" +
                    "sionWorkflowInstanceID AS CompanyRelation_VersionWorkflowInstanceID, \r\n         " +
                    "   T.VersionUpdatedBy AS CompanyRelation_VersionUpdatedBy, \r\n            T.Versi" +
                    "onDeletedBy AS CompanyRelation_VersionDeletedBy, \r\n            T.VersionOwnerCon" +
                    "tactID AS CompanyRelation_VersionOwnerContactID, \r\n            T.VersionOwnerCom" +
                    "panyID AS CompanyRelation_VersionOwnerCompanyID, \r\n            T.VersionUpdated " +
                    "AS CompanyRelation_VersionUpdated, \r\n            True AS _from0\r\n        FROM XO" +
                    "DBModuleBusinessObjectsStoreContainer.X_CompanyRelation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Compliances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView326()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2079);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Compliances\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.Compliance](T1.Compliance_ComplianceID, T1.Compliance_ComplianceName, T1.Co");
            viewString.Append("mpliance_ComplianceVersion, T1.Compliance_CountryID, T1.Compliance_ProvinceID, T");
            viewString.Append("1.Compliance_ValidFrom, T1.Compliance_Expiry, T1.Compliance_AuthorityCompanyID, ");
            viewString.Append("T1.Compliance_MaintainedBy, T1.Compliance_Description, T1.Compliance_ComplianceF");
            viewString.Append("orm, T1.Compliance_Version, T1.Compliance_VersionAntecedentID, T1.Compliance_Ver");
            viewString.Append("sionCertainty, T1.Compliance_VersionWorkflowInstanceID, T1.Compliance_VersionUpd");
            viewString.Append("atedBy, T1.Compliance_VersionDeletedBy, T1.Compliance_VersionOwnerContactID, T1.");
            viewString.Append("Compliance_VersionOwnerCompanyID, T1.Compliance_VersionUpdated)\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.ComplianceID AS Compliance_ComplianceID, \r\n         ");
            viewString.Append("   T.ComplianceName AS Compliance_ComplianceName, \r\n            T.ComplianceVers");
            viewString.Append("ion AS Compliance_ComplianceVersion, \r\n            T.CountryID AS Compliance_Cou");
            viewString.Append("ntryID, \r\n            T.ProvinceID AS Compliance_ProvinceID, \r\n            T.Val");
            viewString.Append("idFrom AS Compliance_ValidFrom, \r\n            T.Expiry AS Compliance_Expiry, \r\n ");
            viewString.Append("           T.AuthorityCompanyID AS Compliance_AuthorityCompanyID, \r\n            ");
            viewString.Append("T.MaintainedBy AS Compliance_MaintainedBy, \r\n            T.Description AS Compli");
            viewString.Append("ance_Description, \r\n            T.ComplianceForm AS Compliance_ComplianceForm, \r");
            viewString.Append("\n            T.Version AS Compliance_Version, \r\n            T.VersionAntecedentI");
            viewString.Append("D AS Compliance_VersionAntecedentID, \r\n            T.VersionCertainty AS Complia");
            viewString.Append("nce_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Compliance_Ve");
            viewString.Append("rsionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Compliance_VersionU");
            viewString.Append("pdatedBy, \r\n            T.VersionDeletedBy AS Compliance_VersionDeletedBy, \r\n   ");
            viewString.Append("         T.VersionOwnerContactID AS Compliance_VersionOwnerContactID, \r\n        ");
            viewString.Append("    T.VersionOwnerCompanyID AS Compliance_VersionOwnerCompanyID, \r\n            T");
            viewString.Append(".VersionUpdated AS Compliance_VersionUpdated, \r\n            True AS _from0\r\n    ");
            viewString.Append("    FROM XODBModuleBusinessObjectsStoreContainer.X_Compliance AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Compliances", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ComplianceTasks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView327()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ComplianceTasks", "\r\n    SELECT VALUE -- Constructing ComplianceTasks\r\n        [XODB.Module.Business" +
                    "Objects.ComplianceTask](T1.ComplianceTask_ComplianceTaskID, T1.ComplianceTask_Co" +
                    "mplianceID, T1.ComplianceTask_TaskID, T1.ComplianceTask_ExecutePrior, T1.Complia" +
                    "nceTask_Version, T1.ComplianceTask_VersionAntecedentID, T1.ComplianceTask_Versio" +
                    "nCertainty, T1.ComplianceTask_VersionWorkflowInstanceID, T1.ComplianceTask_Versi" +
                    "onUpdatedBy, T1.ComplianceTask_VersionDeletedBy, T1.ComplianceTask_VersionOwnerC" +
                    "ontactID, T1.ComplianceTask_VersionOwnerCompanyID, T1.ComplianceTask_VersionUpda" +
                    "ted)\r\n    FROM (\r\n        SELECT \r\n            T.ComplianceTaskID AS ComplianceT" +
                    "ask_ComplianceTaskID, \r\n            T.ComplianceID AS ComplianceTask_ComplianceI" +
                    "D, \r\n            T.TaskID AS ComplianceTask_TaskID, \r\n            T.ExecutePrior" +
                    " AS ComplianceTask_ExecutePrior, \r\n            T.Version AS ComplianceTask_Versi" +
                    "on, \r\n            T.VersionAntecedentID AS ComplianceTask_VersionAntecedentID, \r" +
                    "\n            T.VersionCertainty AS ComplianceTask_VersionCertainty, \r\n          " +
                    "  T.VersionWorkflowInstanceID AS ComplianceTask_VersionWorkflowInstanceID, \r\n   " +
                    "         T.VersionUpdatedBy AS ComplianceTask_VersionUpdatedBy, \r\n            T." +
                    "VersionDeletedBy AS ComplianceTask_VersionDeletedBy, \r\n            T.VersionOwne" +
                    "rContactID AS ComplianceTask_VersionOwnerContactID, \r\n            T.VersionOwner" +
                    "CompanyID AS ComplianceTask_VersionOwnerCompanyID, \r\n            T.VersionUpdate" +
                    "d AS ComplianceTask_VersionUpdated, \r\n            True AS _from0\r\n        FROM X" +
                    "ODBModuleBusinessObjectsStoreContainer.X_ComplianceTask AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ComplianceWorkTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView328()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ComplianceWorkTypes", "\r\n    SELECT VALUE -- Constructing ComplianceWorkTypes\r\n        [XODB.Module.Busi" +
                    "nessObjects.ComplianceWorkType](T1.ComplianceWorkType_ComplianceWorkTypeID, T1.C" +
                    "omplianceWorkType_ComplianceID, T1.ComplianceWorkType_WorkTypeID, T1.ComplianceW" +
                    "orkType_Version, T1.ComplianceWorkType_VersionAntecedentID, T1.ComplianceWorkTyp" +
                    "e_VersionCertainty, T1.ComplianceWorkType_VersionWorkflowInstanceID, T1.Complian" +
                    "ceWorkType_VersionUpdatedBy, T1.ComplianceWorkType_VersionDeletedBy, T1.Complian" +
                    "ceWorkType_VersionOwnerContactID, T1.ComplianceWorkType_VersionOwnerCompanyID, T" +
                    "1.ComplianceWorkType_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".ComplianceWorkTypeID AS ComplianceWorkType_ComplianceWorkTypeID, \r\n            " +
                    "T.ComplianceID AS ComplianceWorkType_ComplianceID, \r\n            T.WorkTypeID AS" +
                    " ComplianceWorkType_WorkTypeID, \r\n            T.Version AS ComplianceWorkType_Ve" +
                    "rsion, \r\n            T.VersionAntecedentID AS ComplianceWorkType_VersionAntecede" +
                    "ntID, \r\n            T.VersionCertainty AS ComplianceWorkType_VersionCertainty, \r" +
                    "\n            T.VersionWorkflowInstanceID AS ComplianceWorkType_VersionWorkflowIn" +
                    "stanceID, \r\n            T.VersionUpdatedBy AS ComplianceWorkType_VersionUpdatedB" +
                    "y, \r\n            T.VersionDeletedBy AS ComplianceWorkType_VersionDeletedBy, \r\n  " +
                    "          T.VersionOwnerContactID AS ComplianceWorkType_VersionOwnerContactID, \r" +
                    "\n            T.VersionOwnerCompanyID AS ComplianceWorkType_VersionOwnerCompanyID" +
                    ", \r\n            T.VersionUpdated AS ComplianceWorkType_VersionUpdated, \r\n       " +
                    "     True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Comp" +
                    "lianceWorkType AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Contacts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView329()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2326);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Contacts\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.Contact](T1.Contact_ContactID, T1.Contact_ContactName, T1.Contact_Title, T1.Co");
            viewString.Append("ntact_Surname, T1.Contact_Firstname, T1.Contact_Username, T1.Contact_Hash, T1.Co");
            viewString.Append("ntact_DefaultEmail, T1.Contact_MiddleNames, T1.Contact_Initials, T1.Contact_DOB,");
            viewString.Append(" T1.Contact_BirthCountryID, T1.Contact_BirthCity, T1.Contact_AspNetUserID, T1.Co");
            viewString.Append("ntact_XafUserID, T1.Contact_OAuthID, T1.Contact_Photo, T1.Contact_ShortBiography");
            viewString.Append(", T1.Contact_Version, T1.Contact_VersionAntecedentID, T1.Contact_VersionCertaint");
            viewString.Append("y, T1.Contact_VersionWorkflowInstanceID, T1.Contact_VersionUpdatedBy, T1.Contact");
            viewString.Append("_VersionDeletedBy, T1.Contact_VersionOwnerContactID, T1.Contact_VersionOwnerComp");
            viewString.Append("anyID, T1.Contact_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Co");
            viewString.Append("ntactID AS Contact_ContactID, \r\n            T.ContactName AS Contact_ContactName");
            viewString.Append(", \r\n            T.Title AS Contact_Title, \r\n            T.Surname AS Contact_Sur");
            viewString.Append("name, \r\n            T.Firstname AS Contact_Firstname, \r\n            T.Username A");
            viewString.Append("S Contact_Username, \r\n            T.Hash AS Contact_Hash, \r\n            T.Defaul");
            viewString.Append("tEmail AS Contact_DefaultEmail, \r\n            T.MiddleNames AS Contact_MiddleNam");
            viewString.Append("es, \r\n            T.Initials AS Contact_Initials, \r\n            T.DOB AS Contact");
            viewString.Append("_DOB, \r\n            T.BirthCountryID AS Contact_BirthCountryID, \r\n            T.");
            viewString.Append("BirthCity AS Contact_BirthCity, \r\n            T.AspNetUserID AS Contact_AspNetUs");
            viewString.Append("erID, \r\n            T.XafUserID AS Contact_XafUserID, \r\n            T.OAuthID AS");
            viewString.Append(" Contact_OAuthID, \r\n            T.Photo AS Contact_Photo, \r\n            T.ShortB");
            viewString.Append("iography AS Contact_ShortBiography, \r\n            T.Version AS Contact_Version, ");
            viewString.Append("\r\n            T.VersionAntecedentID AS Contact_VersionAntecedentID, \r\n          ");
            viewString.Append("  T.VersionCertainty AS Contact_VersionCertainty, \r\n            T.VersionWorkflo");
            viewString.Append("wInstanceID AS Contact_VersionWorkflowInstanceID, \r\n            T.VersionUpdated");
            viewString.Append("By AS Contact_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Contact_Vers");
            viewString.Append("ionDeletedBy, \r\n            T.VersionOwnerContactID AS Contact_VersionOwnerConta");
            viewString.Append("ctID, \r\n            T.VersionOwnerCompanyID AS Contact_VersionOwnerCompanyID, \r\n");
            viewString.Append("            T.VersionUpdated AS Contact_VersionUpdated, \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Contact AS T\r\n    )");
            viewString.Append(" AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Contacts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ContactAddresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView330()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ContactAddresses", "\r\n    SELECT VALUE -- Constructing ContactAddresses\r\n        [XODB.Module.Busines" +
                    "sObjects.ContactAddress](T1.ContactAddress_ContactAddressID, T1.ContactAddress_C" +
                    "ontactID, T1.ContactAddress_AddressID, T1.ContactAddress_Version, T1.ContactAddr" +
                    "ess_VersionAntecedentID, T1.ContactAddress_VersionCertainty, T1.ContactAddress_V" +
                    "ersionWorkflowInstanceID, T1.ContactAddress_VersionUpdatedBy, T1.ContactAddress_" +
                    "VersionDeletedBy, T1.ContactAddress_VersionOwnerContactID, T1.ContactAddress_Ver" +
                    "sionOwnerCompanyID, T1.ContactAddress_VersionUpdated)\r\n    FROM (\r\n        SELEC" +
                    "T \r\n            T.ContactAddressID AS ContactAddress_ContactAddressID, \r\n       " +
                    "     T.ContactID AS ContactAddress_ContactID, \r\n            T.AddressID AS Conta" +
                    "ctAddress_AddressID, \r\n            T.Version AS ContactAddress_Version, \r\n      " +
                    "      T.VersionAntecedentID AS ContactAddress_VersionAntecedentID, \r\n           " +
                    " T.VersionCertainty AS ContactAddress_VersionCertainty, \r\n            T.VersionW" +
                    "orkflowInstanceID AS ContactAddress_VersionWorkflowInstanceID, \r\n            T.V" +
                    "ersionUpdatedBy AS ContactAddress_VersionUpdatedBy, \r\n            T.VersionDelet" +
                    "edBy AS ContactAddress_VersionDeletedBy, \r\n            T.VersionOwnerContactID A" +
                    "S ContactAddress_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS" +
                    " ContactAddress_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Contact" +
                    "Address_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBus" +
                    "inessObjectsStoreContainer.X_ContactAddress AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Contracts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView331()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3207);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Contracts\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Contract](T1.Contract_ContractID, T1.Contract_ParentContractID, T1.Contract_C");
            viewString.Append("ontractName, T1.Contract_Description, T1.Contract_ProjectID, T1.Contract_LastDel");
            viewString.Append("iverableID, T1.Contract_ObligeeID, T1.Contract_ObligeeCompanyID, T1.Contract_Obl");
            viewString.Append("igorID, T1.Contract_ObligorCompanyID, T1.Contract_AssigneeID, T1.Contract_Assign");
            viewString.Append("eeCompanyID, T1.Contract_SolicitorID, T1.Contract_SolicitorCompanyID, T1.Contrac");
            viewString.Append("t_Risk, T1.Contract_RiskStarts, T1.Contract_RiskEnds, T1.Contract_RiskCriticalit");
            viewString.Append("y, T1.Contract_RiskLikelihood, T1.Contract_Value, T1.Contract_Tax, T1.Contract_S");
            viewString.Append("tarted, T1.Contract_Ended, T1.Contract_Completed, T1.Contract_Comment, T1.Contra");
            viewString.Append("ct_FileDataID, T1.Contract_RespondWithinHours, T1.Contract_Version, T1.Contract_");
            viewString.Append("VersionAntecedentID, T1.Contract_VersionCertainty, T1.Contract_VersionWorkflowIn");
            viewString.Append("stanceID, T1.Contract_VersionUpdatedBy, T1.Contract_VersionDeletedBy, T1.Contrac");
            viewString.Append("t_VersionOwnerContactID, T1.Contract_VersionOwnerCompanyID, T1.Contract_VersionU");
            viewString.Append("pdated)\r\n    FROM (\r\n        SELECT \r\n            T.ContractID AS Contract_Contr");
            viewString.Append("actID, \r\n            T.ParentContractID AS Contract_ParentContractID, \r\n        ");
            viewString.Append("    T.ContractName AS Contract_ContractName, \r\n            T.Description AS Cont");
            viewString.Append("ract_Description, \r\n            T.ProjectID AS Contract_ProjectID, \r\n           ");
            viewString.Append(" T.LastDeliverableID AS Contract_LastDeliverableID, \r\n            T.ObligeeID AS");
            viewString.Append(" Contract_ObligeeID, \r\n            T.ObligeeCompanyID AS Contract_ObligeeCompany");
            viewString.Append("ID, \r\n            T.ObligorID AS Contract_ObligorID, \r\n            T.ObligorComp");
            viewString.Append("anyID AS Contract_ObligorCompanyID, \r\n            T.AssigneeID AS Contract_Assig");
            viewString.Append("neeID, \r\n            T.AssigneeCompanyID AS Contract_AssigneeCompanyID, \r\n      ");
            viewString.Append("      T.SolicitorID AS Contract_SolicitorID, \r\n            T.SolicitorCompanyID ");
            viewString.Append("AS Contract_SolicitorCompanyID, \r\n            T.Risk AS Contract_Risk, \r\n       ");
            viewString.Append("     T.RiskStarts AS Contract_RiskStarts, \r\n            T.RiskEnds AS Contract_R");
            viewString.Append("iskEnds, \r\n            T.RiskCriticality AS Contract_RiskCriticality, \r\n        ");
            viewString.Append("    T.RiskLikelihood AS Contract_RiskLikelihood, \r\n            T.[Value] AS Cont");
            viewString.Append("ract_Value, \r\n            T.Tax AS Contract_Tax, \r\n            T.Started AS Cont");
            viewString.Append("ract_Started, \r\n            T.Ended AS Contract_Ended, \r\n            T.Completed");
            viewString.Append(" AS Contract_Completed, \r\n            T.Comment AS Contract_Comment, \r\n         ");
            viewString.Append("   T.FileDataID AS Contract_FileDataID, \r\n            T.RespondWithinHours AS Co");
            viewString.Append("ntract_RespondWithinHours, \r\n            T.Version AS Contract_Version, \r\n      ");
            viewString.Append("      T.VersionAntecedentID AS Contract_VersionAntecedentID, \r\n            T.Ver");
            viewString.Append("sionCertainty AS Contract_VersionCertainty, \r\n            T.VersionWorkflowInsta");
            viewString.Append("nceID AS Contract_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS");
            viewString.Append(" Contract_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Contract_Version");
            viewString.Append("DeletedBy, \r\n            T.VersionOwnerContactID AS Contract_VersionOwnerContact");
            viewString.Append("ID, \r\n            T.VersionOwnerCompanyID AS Contract_VersionOwnerCompanyID, \r\n ");
            viewString.Append("           T.VersionUpdated AS Contract_VersionUpdated, \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Contract AS T\r\n    ");
            viewString.Append(") AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Contracts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ContractConditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView332()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2464);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ContractConditions\r\n        [XODB.Module.Busi");
            viewString.Append("nessObjects.ContractCondition](T1.ContractCondition_ContractConditionID, T1.Cont");
            viewString.Append("ractCondition_ContractID, T1.ContractCondition_ContractConditionTypeID, T1.Contr");
            viewString.Append("actCondition_IsIncluded, T1.ContractCondition_IsExluded, T1.ContractCondition_Un");
            viewString.Append("itID, T1.ContractCondition_Maximum, T1.ContractCondition_Minimum, T1.ContractCon");
            viewString.Append("dition_EstimatedValueUpfront, T1.ContractCondition_EstimatedValueOngoingUnitID, ");
            viewString.Append("T1.ContractCondition_EstimatedValueOngoing, T1.ContractCondition_Version, T1.Con");
            viewString.Append("tractCondition_VersionAntecedentID, T1.ContractCondition_VersionCertainty, T1.Co");
            viewString.Append("ntractCondition_VersionWorkflowInstanceID, T1.ContractCondition_VersionUpdatedBy");
            viewString.Append(", T1.ContractCondition_VersionDeletedBy, T1.ContractCondition_VersionOwnerContac");
            viewString.Append("tID, T1.ContractCondition_VersionOwnerCompanyID, T1.ContractCondition_VersionUpd");
            viewString.Append("ated)\r\n    FROM (\r\n        SELECT \r\n            T.ContractConditionID AS Contrac");
            viewString.Append("tCondition_ContractConditionID, \r\n            T.ContractID AS ContractCondition_");
            viewString.Append("ContractID, \r\n            T.ContractConditionTypeID AS ContractCondition_Contrac");
            viewString.Append("tConditionTypeID, \r\n            T.IsIncluded AS ContractCondition_IsIncluded, \r\n");
            viewString.Append("            T.IsExluded AS ContractCondition_IsExluded, \r\n            T.UnitID A");
            viewString.Append("S ContractCondition_UnitID, \r\n            T.Maximum AS ContractCondition_Maximum");
            viewString.Append(", \r\n            T.Minimum AS ContractCondition_Minimum, \r\n            T.Estimate");
            viewString.Append("dValueUpfront AS ContractCondition_EstimatedValueUpfront, \r\n            T.Estima");
            viewString.Append("tedValueOngoingUnitID AS ContractCondition_EstimatedValueOngoingUnitID, \r\n      ");
            viewString.Append("      T.EstimatedValueOngoing AS ContractCondition_EstimatedValueOngoing, \r\n    ");
            viewString.Append("        T.Version AS ContractCondition_Version, \r\n            T.VersionAnteceden");
            viewString.Append("tID AS ContractCondition_VersionAntecedentID, \r\n            T.VersionCertainty A");
            viewString.Append("S ContractCondition_VersionCertainty, \r\n            T.VersionWorkflowInstanceID ");
            viewString.Append("AS ContractCondition_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy");
            viewString.Append(" AS ContractCondition_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Cont");
            viewString.Append("ractCondition_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Contrac");
            viewString.Append("tCondition_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Contr");
            viewString.Append("actCondition_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ContractCo");
            viewString.Append("ndition_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBus");
            viewString.Append("inessObjectsStoreContainer.X_ContractCondition AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ContractConditions", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ContractConditionModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView333()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ContractConditionModels", "\r\n    SELECT VALUE -- Constructing ContractConditionModels\r\n        [XODB.Module." +
                    "BusinessObjects.ContractConditionModel](T1.ContractConditionModel_ContractCondit" +
                    "ionModelID, T1.ContractConditionModel_ContractConditionID, T1.ContractConditionM" +
                    "odel_ModelID, T1.ContractConditionModel_Version, T1.ContractConditionModel_Versi" +
                    "onAntecedentID, T1.ContractConditionModel_VersionCertainty, T1.ContractCondition" +
                    "Model_VersionWorkflowInstanceID, T1.ContractConditionModel_VersionUpdatedBy, T1." +
                    "ContractConditionModel_VersionDeletedBy, T1.ContractConditionModel_VersionOwnerC" +
                    "ontactID, T1.ContractConditionModel_VersionOwnerCompanyID, T1.ContractConditionM" +
                    "odel_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ContractConditi" +
                    "onModelID AS ContractConditionModel_ContractConditionModelID, \r\n            T.Co" +
                    "ntractConditionID AS ContractConditionModel_ContractConditionID, \r\n            T" +
                    ".ModelID AS ContractConditionModel_ModelID, \r\n            T.Version AS ContractC" +
                    "onditionModel_Version, \r\n            T.VersionAntecedentID AS ContractConditionM" +
                    "odel_VersionAntecedentID, \r\n            T.VersionCertainty AS ContractConditionM" +
                    "odel_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS ContractCond" +
                    "itionModel_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Contra" +
                    "ctConditionModel_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS ContractC" +
                    "onditionModel_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Contrac" +
                    "tConditionModel_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS " +
                    "ContractConditionModel_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS " +
                    "ContractConditionModel_VersionUpdated, \r\n            True AS _from0\r\n        FRO" +
                    "M XODBModuleBusinessObjectsStoreContainer.X_ContractConditionModel AS T\r\n    ) A" +
                    "S T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ContractConditionParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView334()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ContractConditionParts", "\r\n    SELECT VALUE -- Constructing ContractConditionParts\r\n        [XODB.Module.B" +
                    "usinessObjects.ContractConditionPart](T1.ContractConditionPart_ContractCondition" +
                    "PartID, T1.ContractConditionPart_ContractConditionID, T1.ContractConditionPart_P" +
                    "artID, T1.ContractConditionPart_Version, T1.ContractConditionPart_VersionAnteced" +
                    "entID, T1.ContractConditionPart_VersionCertainty, T1.ContractConditionPart_Versi" +
                    "onWorkflowInstanceID, T1.ContractConditionPart_VersionUpdatedBy, T1.ContractCond" +
                    "itionPart_VersionDeletedBy, T1.ContractConditionPart_VersionOwnerContactID, T1.C" +
                    "ontractConditionPart_VersionOwnerCompanyID, T1.ContractConditionPart_VersionUpda" +
                    "ted)\r\n    FROM (\r\n        SELECT \r\n            T.ContractConditionPartID AS Cont" +
                    "ractConditionPart_ContractConditionPartID, \r\n            T.ContractConditionID A" +
                    "S ContractConditionPart_ContractConditionID, \r\n            T.PartID AS ContractC" +
                    "onditionPart_PartID, \r\n            T.Version AS ContractConditionPart_Version, \r" +
                    "\n            T.VersionAntecedentID AS ContractConditionPart_VersionAntecedentID," +
                    " \r\n            T.VersionCertainty AS ContractConditionPart_VersionCertainty, \r\n " +
                    "           T.VersionWorkflowInstanceID AS ContractConditionPart_VersionWorkflowI" +
                    "nstanceID, \r\n            T.VersionUpdatedBy AS ContractConditionPart_VersionUpda" +
                    "tedBy, \r\n            T.VersionDeletedBy AS ContractConditionPart_VersionDeletedB" +
                    "y, \r\n            T.VersionOwnerContactID AS ContractConditionPart_VersionOwnerCo" +
                    "ntactID, \r\n            T.VersionOwnerCompanyID AS ContractConditionPart_VersionO" +
                    "wnerCompanyID, \r\n            T.VersionUpdated AS ContractConditionPart_VersionUp" +
                    "dated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStore" +
                    "Container.X_ContractConditionPart AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.CostEstimateModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView335()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2623);
            viewString.Append("\r\n    SELECT VALUE -- Constructing CostEstimateModels\r\n        [XODB.Module.Busi");
            viewString.Append("nessObjects.CostEstimateModel](T1.CostEstimateModel_CostEstimateModelID, T1.Cost");
            viewString.Append("EstimateModel_ParentCostEstimateModelID, T1.CostEstimateModel_ContractID, T1.Cos");
            viewString.Append("tEstimateModel_ModelID, T1.CostEstimateModel_CostTypeID, T1.CostEstimateModel_Pr");
            viewString.Append("oRataUnitID, T1.CostEstimateModel_ProRataUnits, T1.CostEstimateModel_ProRataCost");
            viewString.Append(", T1.CostEstimateModel_IsAccruableWithParentCost, T1.CostEstimateModel_AccruedQu");
            viewString.Append("antumSIUnitID, T1.CostEstimateModel_Accrued, T1.CostEstimateModel_Source, T1.Cos");
            viewString.Append("tEstimateModel_Note, T1.CostEstimateModel_Version, T1.CostEstimateModel_VersionA");
            viewString.Append("ntecedentID, T1.CostEstimateModel_VersionCertainty, T1.CostEstimateModel_Version");
            viewString.Append("WorkflowInstanceID, T1.CostEstimateModel_VersionUpdatedBy, T1.CostEstimateModel_");
            viewString.Append("VersionDeletedBy, T1.CostEstimateModel_VersionOwnerContactID, T1.CostEstimateMod");
            viewString.Append("el_VersionOwnerCompanyID, T1.CostEstimateModel_VersionUpdated)\r\n    FROM (\r\n    ");
            viewString.Append("    SELECT \r\n            T.CostEstimateModelID AS CostEstimateModel_CostEstimate");
            viewString.Append("ModelID, \r\n            T.ParentCostEstimateModelID AS CostEstimateModel_ParentCo");
            viewString.Append("stEstimateModelID, \r\n            T.ContractID AS CostEstimateModel_ContractID, \r");
            viewString.Append("\n            T.ModelID AS CostEstimateModel_ModelID, \r\n            T.CostTypeID ");
            viewString.Append("AS CostEstimateModel_CostTypeID, \r\n            T.ProRataUnitID AS CostEstimateMo");
            viewString.Append("del_ProRataUnitID, \r\n            T.ProRataUnits AS CostEstimateModel_ProRataUnit");
            viewString.Append("s, \r\n            T.ProRataCost AS CostEstimateModel_ProRataCost, \r\n            T");
            viewString.Append(".IsAccruableWithParentCost AS CostEstimateModel_IsAccruableWithParentCost, \r\n   ");
            viewString.Append("         T.AccruedQuantumSIUnitID AS CostEstimateModel_AccruedQuantumSIUnitID, \r");
            viewString.Append("\n            T.Accrued AS CostEstimateModel_Accrued, \r\n            T.Source AS C");
            viewString.Append("ostEstimateModel_Source, \r\n            T.Note AS CostEstimateModel_Note, \r\n     ");
            viewString.Append("       T.Version AS CostEstimateModel_Version, \r\n            T.VersionAntecedent");
            viewString.Append("ID AS CostEstimateModel_VersionAntecedentID, \r\n            T.VersionCertainty AS");
            viewString.Append(" CostEstimateModel_VersionCertainty, \r\n            T.VersionWorkflowInstanceID A");
            viewString.Append("S CostEstimateModel_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy ");
            viewString.Append("AS CostEstimateModel_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS CostE");
            viewString.Append("stimateModel_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS CostEsti");
            viewString.Append("mateModel_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS CostEs");
            viewString.Append("timateModel_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS CostEstimat");
            viewString.Append("eModel_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusi");
            viewString.Append("nessObjectsStoreContainer.X_CostEstimateModel AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.CostEstimateModels", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Defects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView336()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3936);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Defects\r\n        [XODB.Module.BusinessObjects");
            viewString.Append(".Defect](T1.Defect_DefectID, T1.Defect_HeaderID, T1.Defect_FromDepth, T1.Defect_");
            viewString.Append("ToDepth, T1.Defect_WeatheringID, T1.Defect_RockMassUnitTypeID, T1.Defect_Alterat");
            viewString.Append("ionID, T1.Defect_EstimatedStrengthID, T1.Defect_BedSpacingID, T1.Defect_BedDip, ");
            viewString.Append("T1.Defect_MoistureSensitivityID, T1.Defect_PlasticityID, T1.Defect_DefectDepth, ");
            viewString.Append("T1.Defect_DefectLength, T1.Defect_NumberOfDefects, T1.Defect_DefectsSpacing, T1.");
            viewString.Append("Defect_DefectTypeID, T1.Defect_DefectCompletenessID, T1.Defect_DefectContinuityI");
            viewString.Append("D, T1.Defect_DefectDip, T1.Defect_MinimumDipBrokenZone, T1.Defect_MaximumDipBrok");
            viewString.Append("enZone, T1.Defect_DipOrientation, T1.Defect_DipOrientationMethodID, T1.Defect_Sh");
            viewString.Append("apeID, T1.Defect_RoughnessID, T1.Defect_JointRoughnessCoefficient, T1.Defect_Per");
            viewString.Append("pendicularWidth, T1.Defect_PrimaryInfillTypeID, T1.Defect_SecondaryInfillTypeID,");
            viewString.Append(" T1.Defect_InfillModeID, T1.Defect_InfillEstimatedStrengthID, T1.Defect_InfillPl");
            viewString.Append("asticityID, T1.Defect_Comment, T1.Defect_Version, T1.Defect_VersionAntecedentID,");
            viewString.Append(" T1.Defect_VersionCertainty, T1.Defect_VersionWorkflowInstanceID, T1.Defect_Vers");
            viewString.Append("ionUpdatedBy, T1.Defect_VersionDeletedBy, T1.Defect_VersionOwnerContactID, T1.De");
            viewString.Append("fect_VersionOwnerCompanyID, T1.Defect_VersionUpdated)\r\n    FROM (\r\n        SELEC");
            viewString.Append("T \r\n            T.DefectID AS Defect_DefectID, \r\n            T.HeaderID AS Defec");
            viewString.Append("t_HeaderID, \r\n            T.FromDepth AS Defect_FromDepth, \r\n            T.ToDep");
            viewString.Append("th AS Defect_ToDepth, \r\n            T.WeatheringID AS Defect_WeatheringID, \r\n   ");
            viewString.Append("         T.RockMassUnitTypeID AS Defect_RockMassUnitTypeID, \r\n            T.Alte");
            viewString.Append("rationID AS Defect_AlterationID, \r\n            T.EstimatedStrengthID AS Defect_E");
            viewString.Append("stimatedStrengthID, \r\n            T.BedSpacingID AS Defect_BedSpacingID, \r\n     ");
            viewString.Append("       T.BedDip AS Defect_BedDip, \r\n            T.MoistureSensitivityID AS Defec");
            viewString.Append("t_MoistureSensitivityID, \r\n            T.PlasticityID AS Defect_PlasticityID, \r\n");
            viewString.Append("            T.DefectDepth AS Defect_DefectDepth, \r\n            T.DefectLength AS");
            viewString.Append(" Defect_DefectLength, \r\n            T.NumberOfDefects AS Defect_NumberOfDefects,");
            viewString.Append(" \r\n            T.DefectsSpacing AS Defect_DefectsSpacing, \r\n            T.Defect");
            viewString.Append("TypeID AS Defect_DefectTypeID, \r\n            T.DefectCompletenessID AS Defect_De");
            viewString.Append("fectCompletenessID, \r\n            T.DefectContinuityID AS Defect_DefectContinuit");
            viewString.Append("yID, \r\n            T.DefectDip AS Defect_DefectDip, \r\n            T.MinimumDipBr");
            viewString.Append("okenZone AS Defect_MinimumDipBrokenZone, \r\n            T.MaximumDipBrokenZone AS");
            viewString.Append(" Defect_MaximumDipBrokenZone, \r\n            T.DipOrientation AS Defect_DipOrient");
            viewString.Append("ation, \r\n            T.DipOrientationMethodID AS Defect_DipOrientationMethodID, ");
            viewString.Append("\r\n            T.ShapeID AS Defect_ShapeID, \r\n            T.RoughnessID AS Defect");
            viewString.Append("_RoughnessID, \r\n            T.JointRoughnessCoefficient AS Defect_JointRoughness");
            viewString.Append("Coefficient, \r\n            T.PerpendicularWidth AS Defect_PerpendicularWidth, \r\n");
            viewString.Append("            T.PrimaryInfillTypeID AS Defect_PrimaryInfillTypeID, \r\n            T");
            viewString.Append(".SecondaryInfillTypeID AS Defect_SecondaryInfillTypeID, \r\n            T.InfillMo");
            viewString.Append("deID AS Defect_InfillModeID, \r\n            T.InfillEstimatedStrengthID AS Defect");
            viewString.Append("_InfillEstimatedStrengthID, \r\n            T.InfillPlasticityID AS Defect_InfillP");
            viewString.Append("lasticityID, \r\n            T.Comment AS Defect_Comment, \r\n            T.Version ");
            viewString.Append("AS Defect_Version, \r\n            T.VersionAntecedentID AS Defect_VersionAntecede");
            viewString.Append("ntID, \r\n            T.VersionCertainty AS Defect_VersionCertainty, \r\n           ");
            viewString.Append(" T.VersionWorkflowInstanceID AS Defect_VersionWorkflowInstanceID, \r\n            ");
            viewString.Append("T.VersionUpdatedBy AS Defect_VersionUpdatedBy, \r\n            T.VersionDeletedBy ");
            viewString.Append("AS Defect_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Defect_Vers");
            viewString.Append("ionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Defect_VersionOwnerC");
            viewString.Append("ompanyID, \r\n            T.VersionUpdated AS Defect_VersionUpdated, \r\n           ");
            viewString.Append(" True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Defect A");
            viewString.Append("S T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Defects", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Desurveys
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView337()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Desurveys", @"
    SELECT VALUE -- Constructing Desurveys
        [XODB.Module.BusinessObjects.Desurvey](T1.Desurvey_DesurveyID, T1.Desurvey_SurveyID, T1.Desurvey_DesurveyAlgorithmTypeID, T1.Desurvey_Version, T1.Desurvey_VersionAntecedentID, T1.Desurvey_VersionCertainty, T1.Desurvey_VersionWorkflowInstanceID, T1.Desurvey_VersionUpdatedBy, T1.Desurvey_VersionDeletedBy, T1.Desurvey_VersionOwnerContactID, T1.Desurvey_VersionOwnerCompanyID, T1.Desurvey_VersionUpdated)
    FROM (
        SELECT 
            T.DesurveyID AS Desurvey_DesurveyID, 
            T.SurveyID AS Desurvey_SurveyID, 
            T.DesurveyAlgorithmTypeID AS Desurvey_DesurveyAlgorithmTypeID, 
            T.Version AS Desurvey_Version, 
            T.VersionAntecedentID AS Desurvey_VersionAntecedentID, 
            T.VersionCertainty AS Desurvey_VersionCertainty, 
            T.VersionWorkflowInstanceID AS Desurvey_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS Desurvey_VersionUpdatedBy, 
            T.VersionDeletedBy AS Desurvey_VersionDeletedBy, 
            T.VersionOwnerContactID AS Desurvey_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS Desurvey_VersionOwnerCompanyID, 
            T.VersionUpdated AS Desurvey_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_Desurvey AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryAdjectives
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView338()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryAdjectives", @"
    SELECT VALUE -- Constructing DictionaryAdjectives
        [XODB.Module.BusinessObjects.DictionaryAdjective](T1.DictionaryAdjective_AdjectiveID, T1.DictionaryAdjective_StandardAdjectiveName, T1.DictionaryAdjective_CoalAdjectiveName, T1.DictionaryAdjective_GoldAdjectiveName, T1.DictionaryAdjective_CustomAdjectiveName, T1.DictionaryAdjective_Description, T1.DictionaryAdjective_FullDescription, T1.DictionaryAdjective_Thumbnail, T1.DictionaryAdjective_OriginalFileDataID)
    FROM (
        SELECT 
            T.AdjectiveID AS DictionaryAdjective_AdjectiveID, 
            T.StandardAdjectiveName AS DictionaryAdjective_StandardAdjectiveName, 
            T.CoalAdjectiveName AS DictionaryAdjective_CoalAdjectiveName, 
            T.GoldAdjectiveName AS DictionaryAdjective_GoldAdjectiveName, 
            T.CustomAdjectiveName AS DictionaryAdjective_CustomAdjectiveName, 
            T.Description AS DictionaryAdjective_Description, 
            T.FullDescription AS DictionaryAdjective_FullDescription, 
            T.Thumbnail AS DictionaryAdjective_Thumbnail, 
            T.OriginalFileDataID AS DictionaryAdjective_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryAdjective AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryAlterations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView339()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryAlterations", @"
    SELECT VALUE -- Constructing DictionaryAlterations
        [XODB.Module.BusinessObjects.DictionaryAlteration](T1.DictionaryAlteration_AlterationID, T1.DictionaryAlteration_StandardAlterationName, T1.DictionaryAlteration_CoalAlterationName, T1.DictionaryAlteration_GoldAlterationName, T1.DictionaryAlteration_CustomAlterationName, T1.DictionaryAlteration_Description, T1.DictionaryAlteration_FullDescription, T1.DictionaryAlteration_Thumbnail, T1.DictionaryAlteration_OriginalFileDataID)
    FROM (
        SELECT 
            T.AlterationID AS DictionaryAlteration_AlterationID, 
            T.StandardAlterationName AS DictionaryAlteration_StandardAlterationName, 
            T.CoalAlterationName AS DictionaryAlteration_CoalAlterationName, 
            T.GoldAlterationName AS DictionaryAlteration_GoldAlterationName, 
            T.CustomAlterationName AS DictionaryAlteration_CustomAlterationName, 
            T.Description AS DictionaryAlteration_Description, 
            T.FullDescription AS DictionaryAlteration_FullDescription, 
            T.Thumbnail AS DictionaryAlteration_Thumbnail, 
            T.OriginalFileDataID AS DictionaryAlteration_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryAlteration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryAssayMethods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView340()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryAssayMethods", @"
    SELECT VALUE -- Constructing DictionaryAssayMethods
        [XODB.Module.BusinessObjects.DictionaryAssayMethod](T1.DictionaryAssayMethod_AssayMethodID, T1.DictionaryAssayMethod_StandardAssayMethodName, T1.DictionaryAssayMethod_CoalAssayMethodName, T1.DictionaryAssayMethod_GoldAssayMethodName, T1.DictionaryAssayMethod_CustomAssayMethodName, T1.DictionaryAssayMethod_Description, T1.DictionaryAssayMethod_FullDescription, T1.DictionaryAssayMethod_Thumbnail, T1.DictionaryAssayMethod_OriginalFileDataID)
    FROM (
        SELECT 
            T.AssayMethodID AS DictionaryAssayMethod_AssayMethodID, 
            T.StandardAssayMethodName AS DictionaryAssayMethod_StandardAssayMethodName, 
            T.CoalAssayMethodName AS DictionaryAssayMethod_CoalAssayMethodName, 
            T.GoldAssayMethodName AS DictionaryAssayMethod_GoldAssayMethodName, 
            T.CustomAssayMethodName AS DictionaryAssayMethod_CustomAssayMethodName, 
            T.Description AS DictionaryAssayMethod_Description, 
            T.FullDescription AS DictionaryAssayMethod_FullDescription, 
            T.Thumbnail AS DictionaryAssayMethod_Thumbnail, 
            T.OriginalFileDataID AS DictionaryAssayMethod_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryAssayStandards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView341()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryAssayStandards", @"
    SELECT VALUE -- Constructing DictionaryAssayStandards
        [XODB.Module.BusinessObjects.DictionaryAssayStandard](T1.DictionaryAssayStandard_AssayStandardID, T1.DictionaryAssayStandard_StandardAssayStandardName, T1.DictionaryAssayStandard_CoalAssayStandardName, T1.DictionaryAssayStandard_GoldAssayStandardName, T1.DictionaryAssayStandard_CustomAssayStandardName, T1.DictionaryAssayStandard_Description, T1.DictionaryAssayStandard_FullDescription, T1.DictionaryAssayStandard_Thumbnail, T1.DictionaryAssayStandard_OriginalFileDataID)
    FROM (
        SELECT 
            T.AssayStandardID AS DictionaryAssayStandard_AssayStandardID, 
            T.StandardAssayStandardName AS DictionaryAssayStandard_StandardAssayStandardName, 
            T.CoalAssayStandardName AS DictionaryAssayStandard_CoalAssayStandardName, 
            T.GoldAssayStandardName AS DictionaryAssayStandard_GoldAssayStandardName, 
            T.CustomAssayStandardName AS DictionaryAssayStandard_CustomAssayStandardName, 
            T.Description AS DictionaryAssayStandard_Description, 
            T.FullDescription AS DictionaryAssayStandard_FullDescription, 
            T.Thumbnail AS DictionaryAssayStandard_Thumbnail, 
            T.OriginalFileDataID AS DictionaryAssayStandard_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayStandard AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryAssayTests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView342()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryAssayTests", @"
    SELECT VALUE -- Constructing DictionaryAssayTests
        [XODB.Module.BusinessObjects.DictionaryAssayTest](T1.DictionaryAssayTest_AssayTestID, T1.DictionaryAssayTest_StandardAssayTestName, T1.DictionaryAssayTest_CoalAssayTestName, T1.DictionaryAssayTest_GoldAssayTestName, T1.DictionaryAssayTest_CustomAssayTestName, T1.DictionaryAssayTest_Description, T1.DictionaryAssayTest_FullDescription, T1.DictionaryAssayTest_Thumbnail, T1.DictionaryAssayTest_OriginalFileDataID)
    FROM (
        SELECT 
            T.AssayTestID AS DictionaryAssayTest_AssayTestID, 
            T.StandardAssayTestName AS DictionaryAssayTest_StandardAssayTestName, 
            T.CoalAssayTestName AS DictionaryAssayTest_CoalAssayTestName, 
            T.GoldAssayTestName AS DictionaryAssayTest_GoldAssayTestName, 
            T.CustomAssayTestName AS DictionaryAssayTest_CustomAssayTestName, 
            T.Description AS DictionaryAssayTest_Description, 
            T.FullDescription AS DictionaryAssayTest_FullDescription, 
            T.Thumbnail AS DictionaryAssayTest_Thumbnail, 
            T.OriginalFileDataID AS DictionaryAssayTest_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayTest AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryAssayTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView343()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryAssayTypes", @"
    SELECT VALUE -- Constructing DictionaryAssayTypes
        [XODB.Module.BusinessObjects.DictionaryAssayType](T1.DictionaryAssayType_AssayTypeID, T1.DictionaryAssayType_StandardAssayTypeName, T1.DictionaryAssayType_CoalAssayTypeName, T1.DictionaryAssayType_GoldAssayTypeName, T1.DictionaryAssayType_CustomAssayTypeName, T1.DictionaryAssayType_Description, T1.DictionaryAssayType_FullDescription, T1.DictionaryAssayType_Thumbnail, T1.DictionaryAssayType_OriginalFileDataID)
    FROM (
        SELECT 
            T.AssayTypeID AS DictionaryAssayType_AssayTypeID, 
            T.StandardAssayTypeName AS DictionaryAssayType_StandardAssayTypeName, 
            T.CoalAssayTypeName AS DictionaryAssayType_CoalAssayTypeName, 
            T.GoldAssayTypeName AS DictionaryAssayType_GoldAssayTypeName, 
            T.CustomAssayTypeName AS DictionaryAssayType_CustomAssayTypeName, 
            T.Description AS DictionaryAssayType_Description, 
            T.FullDescription AS DictionaryAssayType_FullDescription, 
            T.Thumbnail AS DictionaryAssayType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryAssayType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryAssayType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryBasalContacts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView344()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryBasalContacts", @"
    SELECT VALUE -- Constructing DictionaryBasalContacts
        [XODB.Module.BusinessObjects.DictionaryBasalContact](T1.DictionaryBasalContact_BasalContactID, T1.DictionaryBasalContact_StandardBasalContactName, T1.DictionaryBasalContact_CoalBasalContactName, T1.DictionaryBasalContact_GoldBasalContactName, T1.DictionaryBasalContact_CustomBasalContactName, T1.DictionaryBasalContact_Description, T1.DictionaryBasalContact_FullDescription, T1.DictionaryBasalContact_Thumbnail, T1.DictionaryBasalContact_OriginalFileDataID)
    FROM (
        SELECT 
            T.BasalContactID AS DictionaryBasalContact_BasalContactID, 
            T.StandardBasalContactName AS DictionaryBasalContact_StandardBasalContactName, 
            T.CoalBasalContactName AS DictionaryBasalContact_CoalBasalContactName, 
            T.GoldBasalContactName AS DictionaryBasalContact_GoldBasalContactName, 
            T.CustomBasalContactName AS DictionaryBasalContact_CustomBasalContactName, 
            T.Description AS DictionaryBasalContact_Description, 
            T.FullDescription AS DictionaryBasalContact_FullDescription, 
            T.Thumbnail AS DictionaryBasalContact_Thumbnail, 
            T.OriginalFileDataID AS DictionaryBasalContact_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryBasalContact AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryBedSpacings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView345()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryBedSpacings", @"
    SELECT VALUE -- Constructing DictionaryBedSpacings
        [XODB.Module.BusinessObjects.DictionaryBedSpacing](T1.DictionaryBedSpacing_BedSpacingID, T1.DictionaryBedSpacing_StandardBedSpacingName, T1.DictionaryBedSpacing_CoalBedSpacingName, T1.DictionaryBedSpacing_GoldBedSpacingName, T1.DictionaryBedSpacing_CustomBedSpacingName, T1.DictionaryBedSpacing_Description, T1.DictionaryBedSpacing_FullDescription, T1.DictionaryBedSpacing_Thumbnail, T1.DictionaryBedSpacing_OriginalFileDataID)
    FROM (
        SELECT 
            T.BedSpacingID AS DictionaryBedSpacing_BedSpacingID, 
            T.StandardBedSpacingName AS DictionaryBedSpacing_StandardBedSpacingName, 
            T.CoalBedSpacingName AS DictionaryBedSpacing_CoalBedSpacingName, 
            T.GoldBedSpacingName AS DictionaryBedSpacing_GoldBedSpacingName, 
            T.CustomBedSpacingName AS DictionaryBedSpacing_CustomBedSpacingName, 
            T.Description AS DictionaryBedSpacing_Description, 
            T.FullDescription AS DictionaryBedSpacing_FullDescription, 
            T.Thumbnail AS DictionaryBedSpacing_Thumbnail, 
            T.OriginalFileDataID AS DictionaryBedSpacing_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryBedSpacing AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryCharacteristics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView346()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryCharacteristics", @"
    SELECT VALUE -- Constructing DictionaryCharacteristics
        [XODB.Module.BusinessObjects.DictionaryCharacteristic](T1.DictionaryCharacteristic_CharacteristicID, T1.DictionaryCharacteristic_StandardCharacteristicName, T1.DictionaryCharacteristic_CustomCharacteristicName, T1.DictionaryCharacteristic_UnitID, T1.DictionaryCharacteristic_CharacteristicTypeID, T1.DictionaryCharacteristic_Description, T1.DictionaryCharacteristic_FullDescription, T1.DictionaryCharacteristic_Thumbnail, T1.DictionaryCharacteristic_OriginalFileDataID)
    FROM (
        SELECT 
            T.CharacteristicID AS DictionaryCharacteristic_CharacteristicID, 
            T.StandardCharacteristicName AS DictionaryCharacteristic_StandardCharacteristicName, 
            T.CustomCharacteristicName AS DictionaryCharacteristic_CustomCharacteristicName, 
            T.UnitID AS DictionaryCharacteristic_UnitID, 
            T.CharacteristicTypeID AS DictionaryCharacteristic_CharacteristicTypeID, 
            T.Description AS DictionaryCharacteristic_Description, 
            T.FullDescription AS DictionaryCharacteristic_FullDescription, 
            T.Thumbnail AS DictionaryCharacteristic_Thumbnail, 
            T.OriginalFileDataID AS DictionaryCharacteristic_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryCharacteristic AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryCharacteristicTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView347()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryCharacteristicTypes", @"
    SELECT VALUE -- Constructing DictionaryCharacteristicTypes
        [XODB.Module.BusinessObjects.DictionaryCharacteristicType](T1.DictionaryCharacteristicType_CharacteristicTypeID, T1.DictionaryCharacteristicType_StandardCharacteristicTypeName, T1.DictionaryCharacteristicType_CustomCharacteristicTypeName, T1.DictionaryCharacteristicType_Description, T1.DictionaryCharacteristicType_FullDescription, T1.DictionaryCharacteristicType_Thumbnail, T1.DictionaryCharacteristicType_OriginalFileDataID)
    FROM (
        SELECT 
            T.CharacteristicTypeID AS DictionaryCharacteristicType_CharacteristicTypeID, 
            T.StandardCharacteristicTypeName AS DictionaryCharacteristicType_StandardCharacteristicTypeName, 
            T.CustomCharacteristicTypeName AS DictionaryCharacteristicType_CustomCharacteristicTypeName, 
            T.Description AS DictionaryCharacteristicType_Description, 
            T.FullDescription AS DictionaryCharacteristicType_FullDescription, 
            T.Thumbnail AS DictionaryCharacteristicType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryCharacteristicType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryCharacteristicType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryColours
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView348()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryColours", @"
    SELECT VALUE -- Constructing DictionaryColours
        [XODB.Module.BusinessObjects.DictionaryColour](T1.DictionaryColour_ColourID, T1.DictionaryColour_StandardColourName, T1.DictionaryColour_CoalColourName, T1.DictionaryColour_GoldColourName, T1.DictionaryColour_CustomColourName, T1.DictionaryColour_Description, T1.DictionaryColour_FullDescription, T1.DictionaryColour_Thumbnail, T1.DictionaryColour_OriginalFileDataID)
    FROM (
        SELECT 
            T.ColourID AS DictionaryColour_ColourID, 
            T.StandardColourName AS DictionaryColour_StandardColourName, 
            T.CoalColourName AS DictionaryColour_CoalColourName, 
            T.GoldColourName AS DictionaryColour_GoldColourName, 
            T.CustomColourName AS DictionaryColour_CustomColourName, 
            T.Description AS DictionaryColour_Description, 
            T.FullDescription AS DictionaryColour_FullDescription, 
            T.Thumbnail AS DictionaryColour_Thumbnail, 
            T.OriginalFileDataID AS DictionaryColour_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryColour AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryCommodities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView349()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryCommodities", @"
    SELECT VALUE -- Constructing DictionaryCommodities
        [XODB.Module.BusinessObjects.DictionaryCommodity](T1.DictionaryCommodity_CommodityID, T1.DictionaryCommodity_StandardCommodityName, T1.DictionaryCommodity_CoalCommodityName, T1.DictionaryCommodity_GoldCommodityName, T1.DictionaryCommodity_CustomCommodityName, T1.DictionaryCommodity_Description, T1.DictionaryCommodity_FullDescription, T1.DictionaryCommodity_Thumbnail, T1.DictionaryCommodity_OriginalFileDataID)
    FROM (
        SELECT 
            T.CommodityID AS DictionaryCommodity_CommodityID, 
            T.StandardCommodityName AS DictionaryCommodity_StandardCommodityName, 
            T.CoalCommodityName AS DictionaryCommodity_CoalCommodityName, 
            T.GoldCommodityName AS DictionaryCommodity_GoldCommodityName, 
            T.CustomCommodityName AS DictionaryCommodity_CustomCommodityName, 
            T.Description AS DictionaryCommodity_Description, 
            T.FullDescription AS DictionaryCommodity_FullDescription, 
            T.Thumbnail AS DictionaryCommodity_Thumbnail, 
            T.OriginalFileDataID AS DictionaryCommodity_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryCommodity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryContractConditionTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView350()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryContractConditionTypes", @"
    SELECT VALUE -- Constructing DictionaryContractConditionTypes
        [XODB.Module.BusinessObjects.DictionaryContractConditionType](T1.DictionaryContractConditionType_ContractConditionTypeID, T1.DictionaryContractConditionType_StandardContractConditionTypeName, T1.DictionaryContractConditionType_CustomContractConditionTypeName, T1.DictionaryContractConditionType_Description, T1.DictionaryContractConditionType_FullDescription, T1.DictionaryContractConditionType_Thumbnail, T1.DictionaryContractConditionType_OriginalFileDataID)
    FROM (
        SELECT 
            T.ContractConditionTypeID AS DictionaryContractConditionType_ContractConditionTypeID, 
            T.StandardContractConditionTypeName AS DictionaryContractConditionType_StandardContractConditionTypeName, 
            T.CustomContractConditionTypeName AS DictionaryContractConditionType_CustomContractConditionTypeName, 
            T.Description AS DictionaryContractConditionType_Description, 
            T.FullDescription AS DictionaryContractConditionType_FullDescription, 
            T.Thumbnail AS DictionaryContractConditionType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryContractConditionType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryContractConditionType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryCoreStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView351()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryCoreStates", @"
    SELECT VALUE -- Constructing DictionaryCoreStates
        [XODB.Module.BusinessObjects.DictionaryCoreState](T1.DictionaryCoreState_CoreStateID, T1.DictionaryCoreState_StandardCoreStateName, T1.DictionaryCoreState_CoalCoreStateName, T1.DictionaryCoreState_GoldCoreStateName, T1.DictionaryCoreState_CustomCoreStateName, T1.DictionaryCoreState_Description, T1.DictionaryCoreState_FullDescription, T1.DictionaryCoreState_Thumbnail, T1.DictionaryCoreState_OriginalFileDataID)
    FROM (
        SELECT 
            T.CoreStateID AS DictionaryCoreState_CoreStateID, 
            T.StandardCoreStateName AS DictionaryCoreState_StandardCoreStateName, 
            T.CoalCoreStateName AS DictionaryCoreState_CoalCoreStateName, 
            T.GoldCoreStateName AS DictionaryCoreState_GoldCoreStateName, 
            T.CustomCoreStateName AS DictionaryCoreState_CustomCoreStateName, 
            T.Description AS DictionaryCoreState_Description, 
            T.FullDescription AS DictionaryCoreState_FullDescription, 
            T.Thumbnail AS DictionaryCoreState_Thumbnail, 
            T.OriginalFileDataID AS DictionaryCoreState_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryCoreState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryCostTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView352()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryCostTypes", @"
    SELECT VALUE -- Constructing DictionaryCostTypes
        [XODB.Module.BusinessObjects.DictionaryCostType](T1.DictionaryCostType_CostTypeID, T1.DictionaryCostType_StandardCostTypeName, T1.DictionaryCostType_CustomCostTypeName, T1.DictionaryCostType_Description, T1.DictionaryCostType_FullDescription, T1.DictionaryCostType_Thumbnail, T1.DictionaryCostType_OriginalFileDataID)
    FROM (
        SELECT 
            T.CostTypeID AS DictionaryCostType_CostTypeID, 
            T.StandardCostTypeName AS DictionaryCostType_StandardCostTypeName, 
            T.CustomCostTypeName AS DictionaryCostType_CustomCostTypeName, 
            T.Description AS DictionaryCostType_Description, 
            T.FullDescription AS DictionaryCostType_FullDescription, 
            T.Thumbnail AS DictionaryCostType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryCostType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryCostType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryCountries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView353()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryCountries", @"
    SELECT VALUE -- Constructing DictionaryCountries
        [XODB.Module.BusinessObjects.DictionaryCountry](T1.DictionaryCountry_CountryID, T1.DictionaryCountry_StandardCountryName, T1.DictionaryCountry_CoalCountryName, T1.DictionaryCountry_GoldCountryName, T1.DictionaryCountry_CustomCountryName, T1.DictionaryCountry_CurrencyCode, T1.DictionaryCountry_CurrencyFormat, T1.DictionaryCountry_Description, T1.DictionaryCountry_FullDescription, T1.DictionaryCountry_Thumbnail, T1.DictionaryCountry_OriginalFileDataID)
    FROM (
        SELECT 
            T.CountryID AS DictionaryCountry_CountryID, 
            T.StandardCountryName AS DictionaryCountry_StandardCountryName, 
            T.CoalCountryName AS DictionaryCountry_CoalCountryName, 
            T.GoldCountryName AS DictionaryCountry_GoldCountryName, 
            T.CustomCountryName AS DictionaryCountry_CustomCountryName, 
            T.CurrencyCode AS DictionaryCountry_CurrencyCode, 
            T.CurrencyFormat AS DictionaryCountry_CurrencyFormat, 
            T.Description AS DictionaryCountry_Description, 
            T.FullDescription AS DictionaryCountry_FullDescription, 
            T.Thumbnail AS DictionaryCountry_Thumbnail, 
            T.OriginalFileDataID AS DictionaryCountry_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryCountry AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryCountryStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView354()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryCountryStates", @"
    SELECT VALUE -- Constructing DictionaryCountryStates
        [XODB.Module.BusinessObjects.DictionaryCountryState](T1.DictionaryCountryState_CountryStateID, T1.DictionaryCountryState_CountryID, T1.DictionaryCountryState_StandardCountryStateName, T1.DictionaryCountryState_CoalCountryStateName, T1.DictionaryCountryState_GoldCountryStateName, T1.DictionaryCountryState_CustomCountryStateName, T1.DictionaryCountryState_Description, T1.DictionaryCountryState_FullDescription, T1.DictionaryCountryState_Thumbnail, T1.DictionaryCountryState_OriginalFileDataID)
    FROM (
        SELECT 
            T.CountryStateID AS DictionaryCountryState_CountryStateID, 
            T.CountryID AS DictionaryCountryState_CountryID, 
            T.StandardCountryStateName AS DictionaryCountryState_StandardCountryStateName, 
            T.CoalCountryStateName AS DictionaryCountryState_CoalCountryStateName, 
            T.GoldCountryStateName AS DictionaryCountryState_GoldCountryStateName, 
            T.CustomCountryStateName AS DictionaryCountryState_CustomCountryStateName, 
            T.Description AS DictionaryCountryState_Description, 
            T.FullDescription AS DictionaryCountryState_FullDescription, 
            T.Thumbnail AS DictionaryCountryState_Thumbnail, 
            T.OriginalFileDataID AS DictionaryCountryState_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryCountryState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDataStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView355()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDataStatus", @"
    SELECT VALUE -- Constructing DictionaryDataStatus
        [XODB.Module.BusinessObjects.DictionaryDataStatus](T1.DictionaryDataStatus_DataStatusID, T1.DictionaryDataStatus_StandardDataStatusName, T1.DictionaryDataStatus_CoalDataStatusName, T1.DictionaryDataStatus_GoldDataStatusName, T1.DictionaryDataStatus_CustomDataStatusName, T1.DictionaryDataStatus_Description, T1.DictionaryDataStatus_FullDescription, T1.DictionaryDataStatus_Thumbnail, T1.DictionaryDataStatus_OriginalFileDataID)
    FROM (
        SELECT 
            T.DataStatusID AS DictionaryDataStatus_DataStatusID, 
            T.StandardDataStatusName AS DictionaryDataStatus_StandardDataStatusName, 
            T.CoalDataStatusName AS DictionaryDataStatus_CoalDataStatusName, 
            T.GoldDataStatusName AS DictionaryDataStatus_GoldDataStatusName, 
            T.CustomDataStatusName AS DictionaryDataStatus_CustomDataStatusName, 
            T.Description AS DictionaryDataStatus_Description, 
            T.FullDescription AS DictionaryDataStatus_FullDescription, 
            T.Thumbnail AS DictionaryDataStatus_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDataStatus_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDataStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDefectCompletenesses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView356()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDefectCompletenesses", "\r\n    SELECT VALUE -- Constructing DictionaryDefectCompletenesses\r\n        [XODB." +
                    "Module.BusinessObjects.DictionaryDefectCompleteness](T1.DictionaryDefectComplete" +
                    "ness_DefectCompletenessID, T1.DictionaryDefectCompleteness_StandardDefectComplet" +
                    "enessName, T1.DictionaryDefectCompleteness_CoalDefectCompletenessName, T1.Dictio" +
                    "naryDefectCompleteness_GoldDefectCompletenessName, T1.DictionaryDefectCompletene" +
                    "ss_CustomDefectCompletenessName, T1.DictionaryDefectCompleteness_Description, T1" +
                    ".DictionaryDefectCompleteness_FullDescription, T1.DictionaryDefectCompleteness_T" +
                    "humbnail, T1.DictionaryDefectCompleteness_OriginalFileDataID)\r\n    FROM (\r\n     " +
                    "   SELECT \r\n            T.DefectCompletenessID AS DictionaryDefectCompleteness_D" +
                    "efectCompletenessID, \r\n            T.StandardDefectCompletenessName AS Dictionar" +
                    "yDefectCompleteness_StandardDefectCompletenessName, \r\n            T.CoalDefectCo" +
                    "mpletenessName AS DictionaryDefectCompleteness_CoalDefectCompletenessName, \r\n   " +
                    "         T.GoldDefectCompletenessName AS DictionaryDefectCompleteness_GoldDefect" +
                    "CompletenessName, \r\n            T.CustomDefectCompletenessName AS DictionaryDefe" +
                    "ctCompleteness_CustomDefectCompletenessName, \r\n            T.Description AS Dict" +
                    "ionaryDefectCompleteness_Description, \r\n            T.FullDescription AS Diction" +
                    "aryDefectCompleteness_FullDescription, \r\n            T.Thumbnail AS DictionaryDe" +
                    "fectCompleteness_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryDefe" +
                    "ctCompleteness_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XO" +
                    "DBModuleBusinessObjectsStoreContainer.X_DictionaryDefectCompleteness AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDefectContinuities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView357()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDefectContinuities", "\r\n    SELECT VALUE -- Constructing DictionaryDefectContinuities\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.DictionaryDefectContinuity](T1.DictionaryDefectContinuity_D" +
                    "efectContinuityID, T1.DictionaryDefectContinuity_StandardDefectContinuityName, T" +
                    "1.DictionaryDefectContinuity_CoalDefectContinuityName, T1.DictionaryDefectContin" +
                    "uity_GoldDefectContinuityName, T1.DictionaryDefectContinuity_CustomDefectContinu" +
                    "ityName, T1.DictionaryDefectContinuity_Description, T1.DictionaryDefectContinuit" +
                    "y_FullDescription, T1.DictionaryDefectContinuity_Thumbnail, T1.DictionaryDefectC" +
                    "ontinuity_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.Defect" +
                    "ContinuityID AS DictionaryDefectContinuity_DefectContinuityID, \r\n            T.S" +
                    "tandardDefectContinuityName AS DictionaryDefectContinuity_StandardDefectContinui" +
                    "tyName, \r\n            T.CoalDefectContinuityName AS DictionaryDefectContinuity_C" +
                    "oalDefectContinuityName, \r\n            T.GoldDefectContinuityName AS DictionaryD" +
                    "efectContinuity_GoldDefectContinuityName, \r\n            T.CustomDefectContinuity" +
                    "Name AS DictionaryDefectContinuity_CustomDefectContinuityName, \r\n            T.D" +
                    "escription AS DictionaryDefectContinuity_Description, \r\n            T.FullDescri" +
                    "ption AS DictionaryDefectContinuity_FullDescription, \r\n            T.Thumbnail A" +
                    "S DictionaryDefectContinuity_Thumbnail, \r\n            T.OriginalFileDataID AS Di" +
                    "ctionaryDefectContinuity_OriginalFileDataID, \r\n            True AS _from0\r\n     " +
                    "   FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectContinuity AS " +
                    "T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDefectSpacings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView358()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDefectSpacings", @"
    SELECT VALUE -- Constructing DictionaryDefectSpacings
        [XODB.Module.BusinessObjects.DictionaryDefectSpacing](T1.DictionaryDefectSpacing_DefectSpacingID, T1.DictionaryDefectSpacing_StandardDefectSpacingName, T1.DictionaryDefectSpacing_CoalDefectSpacingName, T1.DictionaryDefectSpacing_GoldDefectSpacingName, T1.DictionaryDefectSpacing_CustomDefectSpacingName, T1.DictionaryDefectSpacing_Description, T1.DictionaryDefectSpacing_FullDescription, T1.DictionaryDefectSpacing_Thumbnail, T1.DictionaryDefectSpacing_OriginalFileDataID)
    FROM (
        SELECT 
            T.DefectSpacingID AS DictionaryDefectSpacing_DefectSpacingID, 
            T.StandardDefectSpacingName AS DictionaryDefectSpacing_StandardDefectSpacingName, 
            T.CoalDefectSpacingName AS DictionaryDefectSpacing_CoalDefectSpacingName, 
            T.GoldDefectSpacingName AS DictionaryDefectSpacing_GoldDefectSpacingName, 
            T.CustomDefectSpacingName AS DictionaryDefectSpacing_CustomDefectSpacingName, 
            T.Description AS DictionaryDefectSpacing_Description, 
            T.FullDescription AS DictionaryDefectSpacing_FullDescription, 
            T.Thumbnail AS DictionaryDefectSpacing_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDefectSpacing_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectSpacing AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDefectTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView359()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDefectTypes", @"
    SELECT VALUE -- Constructing DictionaryDefectTypes
        [XODB.Module.BusinessObjects.DictionaryDefectType](T1.DictionaryDefectType_DefectTypeID, T1.DictionaryDefectType_StandardDefectTypeName, T1.DictionaryDefectType_CoalDefectTypeName, T1.DictionaryDefectType_GoldDefectTypeName, T1.DictionaryDefectType_CustomDefectTypeName, T1.DictionaryDefectType_Description, T1.DictionaryDefectType_FullDescription, T1.DictionaryDefectType_Thumbnail, T1.DictionaryDefectType_OriginalFileDataID)
    FROM (
        SELECT 
            T.DefectTypeID AS DictionaryDefectType_DefectTypeID, 
            T.StandardDefectTypeName AS DictionaryDefectType_StandardDefectTypeName, 
            T.CoalDefectTypeName AS DictionaryDefectType_CoalDefectTypeName, 
            T.GoldDefectTypeName AS DictionaryDefectType_GoldDefectTypeName, 
            T.CustomDefectTypeName AS DictionaryDefectType_CustomDefectTypeName, 
            T.Description AS DictionaryDefectType_Description, 
            T.FullDescription AS DictionaryDefectType_FullDescription, 
            T.Thumbnail AS DictionaryDefectType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDefectType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDefectType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDesurveyAlgorithmTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView360()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDesurveyAlgorithmTypes", "\r\n    SELECT VALUE -- Constructing DictionaryDesurveyAlgorithmTypes\r\n        [XOD" +
                    "B.Module.BusinessObjects.DictionaryDesurveyAlgorithmType](T1.DictionaryDesurveyA" +
                    "lgorithmType_DesurveyAlgorithmTypeID, T1.DictionaryDesurveyAlgorithmType_Standar" +
                    "dDesurveyAlgorithmTypeName, T1.DictionaryDesurveyAlgorithmType_CoalDesurveyAlgor" +
                    "ithmTypeName, T1.DictionaryDesurveyAlgorithmType_GoldDesurveyAlgorithmTypeName, " +
                    "T1.DictionaryDesurveyAlgorithmType_CustomDesurveyAlgorithmTypeName, T1.Dictionar" +
                    "yDesurveyAlgorithmType_Description, T1.DictionaryDesurveyAlgorithmType_FullDescr" +
                    "iption, T1.DictionaryDesurveyAlgorithmType_Thumbnail, T1.DictionaryDesurveyAlgor" +
                    "ithmType_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.Desurve" +
                    "yAlgorithmTypeID AS DictionaryDesurveyAlgorithmType_DesurveyAlgorithmTypeID, \r\n " +
                    "           T.StandardDesurveyAlgorithmTypeName AS DictionaryDesurveyAlgorithmTyp" +
                    "e_StandardDesurveyAlgorithmTypeName, \r\n            T.CoalDesurveyAlgorithmTypeNa" +
                    "me AS DictionaryDesurveyAlgorithmType_CoalDesurveyAlgorithmTypeName, \r\n         " +
                    "   T.GoldDesurveyAlgorithmTypeName AS DictionaryDesurveyAlgorithmType_GoldDesurv" +
                    "eyAlgorithmTypeName, \r\n            T.CustomDesurveyAlgorithmTypeName AS Dictiona" +
                    "ryDesurveyAlgorithmType_CustomDesurveyAlgorithmTypeName, \r\n            T.Descrip" +
                    "tion AS DictionaryDesurveyAlgorithmType_Description, \r\n            T.FullDescrip" +
                    "tion AS DictionaryDesurveyAlgorithmType_FullDescription, \r\n            T.Thumbna" +
                    "il AS DictionaryDesurveyAlgorithmType_Thumbnail, \r\n            T.OriginalFileDat" +
                    "aID AS DictionaryDesurveyAlgorithmType_OriginalFileDataID, \r\n            True AS" +
                    " _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDesurv" +
                    "eyAlgorithmType AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDimensions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView361()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDimensions", @"
    SELECT VALUE -- Constructing DictionaryDimensions
        [XODB.Module.BusinessObjects.DictionaryDimension](T1.DictionaryDimension_DimensionID, T1.DictionaryDimension_StandardDimensionName, T1.DictionaryDimension_CoalDimensionName, T1.DictionaryDimension_GoldDimensionName, T1.DictionaryDimension_CustomDimensionName, T1.DictionaryDimension_Description, T1.DictionaryDimension_FullDescription, T1.DictionaryDimension_Thumbnail, T1.DictionaryDimension_OriginalFileDataID)
    FROM (
        SELECT 
            T.DimensionID AS DictionaryDimension_DimensionID, 
            T.StandardDimensionName AS DictionaryDimension_StandardDimensionName, 
            T.CoalDimensionName AS DictionaryDimension_CoalDimensionName, 
            T.GoldDimensionName AS DictionaryDimension_GoldDimensionName, 
            T.CustomDimensionName AS DictionaryDimension_CustomDimensionName, 
            T.Description AS DictionaryDimension_Description, 
            T.FullDescription AS DictionaryDimension_FullDescription, 
            T.Thumbnail AS DictionaryDimension_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDimension_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDimension AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDipOrientationMethods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView362()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDipOrientationMethods", "\r\n    SELECT VALUE -- Constructing DictionaryDipOrientationMethods\r\n        [XODB" +
                    ".Module.BusinessObjects.DictionaryDipOrientationMethod](T1.DictionaryDipOrientat" +
                    "ionMethod_DipOrientationMethodID, T1.DictionaryDipOrientationMethod_StandardDipO" +
                    "rientationMethodName, T1.DictionaryDipOrientationMethod_CoalDipOrientationMethod" +
                    "Name, T1.DictionaryDipOrientationMethod_GoldDipOrientationMethodName, T1.Diction" +
                    "aryDipOrientationMethod_CustomDipOrientationMethodName, T1.DictionaryDipOrientat" +
                    "ionMethod_Description, T1.DictionaryDipOrientationMethod_FullDescription, T1.Dic" +
                    "tionaryDipOrientationMethod_Thumbnail, T1.DictionaryDipOrientationMethod_Origina" +
                    "lFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.DipOrientationMethodID " +
                    "AS DictionaryDipOrientationMethod_DipOrientationMethodID, \r\n            T.Standa" +
                    "rdDipOrientationMethodName AS DictionaryDipOrientationMethod_StandardDipOrientat" +
                    "ionMethodName, \r\n            T.CoalDipOrientationMethodName AS DictionaryDipOrie" +
                    "ntationMethod_CoalDipOrientationMethodName, \r\n            T.GoldDipOrientationMe" +
                    "thodName AS DictionaryDipOrientationMethod_GoldDipOrientationMethodName, \r\n     " +
                    "       T.CustomDipOrientationMethodName AS DictionaryDipOrientationMethod_Custom" +
                    "DipOrientationMethodName, \r\n            T.Description AS DictionaryDipOrientatio" +
                    "nMethod_Description, \r\n            T.FullDescription AS DictionaryDipOrientation" +
                    "Method_FullDescription, \r\n            T.Thumbnail AS DictionaryDipOrientationMet" +
                    "hod_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryDipOrientationMet" +
                    "hod_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XODBModuleBus" +
                    "inessObjectsStoreContainer.X_DictionaryDipOrientationMethod AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDomains
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView363()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDomains", @"
    SELECT VALUE -- Constructing DictionaryDomains
        [XODB.Module.BusinessObjects.DictionaryDomain](T1.DictionaryDomain_DomainID, T1.DictionaryDomain_StandardDomainName, T1.DictionaryDomain_Description, T1.DictionaryDomain_FullDescription, T1.DictionaryDomain_Thumbnail, T1.DictionaryDomain_OriginalFileDataID)
    FROM (
        SELECT 
            T.DomainID AS DictionaryDomain_DomainID, 
            T.StandardDomainName AS DictionaryDomain_StandardDomainName, 
            T.Description AS DictionaryDomain_Description, 
            T.FullDescription AS DictionaryDomain_FullDescription, 
            T.Thumbnail AS DictionaryDomain_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDomain_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDomain AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDomainAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView364()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDomainAlias", @"
    SELECT VALUE -- Constructing DictionaryDomainAlias
        [XODB.Module.BusinessObjects.DictionaryDomainAlias](T1.DictionaryDomainAlias_DomainAliasID, T1.DictionaryDomainAlias_DomainID, T1.DictionaryDomainAlias_CustomDomainName, T1.DictionaryDomainAlias_FullDescription, T1.DictionaryDomainAlias_Thumbnail, T1.DictionaryDomainAlias_OriginalFileDataID)
    FROM (
        SELECT 
            T.DomainAliasID AS DictionaryDomainAlias_DomainAliasID, 
            T.DomainID AS DictionaryDomainAlias_DomainID, 
            T.CustomDomainName AS DictionaryDomainAlias_CustomDomainName, 
            T.FullDescription AS DictionaryDomainAlias_FullDescription, 
            T.Thumbnail AS DictionaryDomainAlias_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDomainAlias_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDomainAlias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDrillBitTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView365()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDrillBitTypes", @"
    SELECT VALUE -- Constructing DictionaryDrillBitTypes
        [XODB.Module.BusinessObjects.DictionaryDrillBitType](T1.DictionaryDrillBitType_DrillBitTypeID, T1.DictionaryDrillBitType_StandardDrillBitTypeName, T1.DictionaryDrillBitType_CoalDrillBitTypeName, T1.DictionaryDrillBitType_GoldDrillBitTypeName, T1.DictionaryDrillBitType_CustomDrillBitTypeName, T1.DictionaryDrillBitType_Description, T1.DictionaryDrillBitType_FullDescription, T1.DictionaryDrillBitType_Thumbnail, T1.DictionaryDrillBitType_OriginalFileDataID)
    FROM (
        SELECT 
            T.DrillBitTypeID AS DictionaryDrillBitType_DrillBitTypeID, 
            T.StandardDrillBitTypeName AS DictionaryDrillBitType_StandardDrillBitTypeName, 
            T.CoalDrillBitTypeName AS DictionaryDrillBitType_CoalDrillBitTypeName, 
            T.GoldDrillBitTypeName AS DictionaryDrillBitType_GoldDrillBitTypeName, 
            T.CustomDrillBitTypeName AS DictionaryDrillBitType_CustomDrillBitTypeName, 
            T.Description AS DictionaryDrillBitType_Description, 
            T.FullDescription AS DictionaryDrillBitType_FullDescription, 
            T.Thumbnail AS DictionaryDrillBitType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDrillBitType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillBitType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDrillCasingTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView366()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDrillCasingTypes", @"
    SELECT VALUE -- Constructing DictionaryDrillCasingTypes
        [XODB.Module.BusinessObjects.DictionaryDrillCasingType](T1.DictionaryDrillCasingType_DrillCasingTypeID, T1.DictionaryDrillCasingType_StandardDrillCasingTypeName, T1.DictionaryDrillCasingType_CoalDrillCasingTypeName, T1.DictionaryDrillCasingType_GoldDrillCasingTypeName, T1.DictionaryDrillCasingType_CustomDrillCasingTypeName, T1.DictionaryDrillCasingType_Description, T1.DictionaryDrillCasingType_FullDescription, T1.DictionaryDrillCasingType_Thumbnail, T1.DictionaryDrillCasingType_OriginalFileDataID)
    FROM (
        SELECT 
            T.DrillCasingTypeID AS DictionaryDrillCasingType_DrillCasingTypeID, 
            T.StandardDrillCasingTypeName AS DictionaryDrillCasingType_StandardDrillCasingTypeName, 
            T.CoalDrillCasingTypeName AS DictionaryDrillCasingType_CoalDrillCasingTypeName, 
            T.GoldDrillCasingTypeName AS DictionaryDrillCasingType_GoldDrillCasingTypeName, 
            T.CustomDrillCasingTypeName AS DictionaryDrillCasingType_CustomDrillCasingTypeName, 
            T.Description AS DictionaryDrillCasingType_Description, 
            T.FullDescription AS DictionaryDrillCasingType_FullDescription, 
            T.Thumbnail AS DictionaryDrillCasingType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDrillCasingType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillCasingType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDrillFluids
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView367()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDrillFluids", @"
    SELECT VALUE -- Constructing DictionaryDrillFluids
        [XODB.Module.BusinessObjects.DictionaryDrillFluid](T1.DictionaryDrillFluid_DrillFluidID, T1.DictionaryDrillFluid_StandardDrillFluidName, T1.DictionaryDrillFluid_CoalDrillFluidName, T1.DictionaryDrillFluid_GoldDrillFluidName, T1.DictionaryDrillFluid_CustomDrillFluidName, T1.DictionaryDrillFluid_Description, T1.DictionaryDrillFluid_FullDescription, T1.DictionaryDrillFluid_Thumbnail, T1.DictionaryDrillFluid_OriginalFileDataID)
    FROM (
        SELECT 
            T.DrillFluidID AS DictionaryDrillFluid_DrillFluidID, 
            T.StandardDrillFluidName AS DictionaryDrillFluid_StandardDrillFluidName, 
            T.CoalDrillFluidName AS DictionaryDrillFluid_CoalDrillFluidName, 
            T.GoldDrillFluidName AS DictionaryDrillFluid_GoldDrillFluidName, 
            T.CustomDrillFluidName AS DictionaryDrillFluid_CustomDrillFluidName, 
            T.Description AS DictionaryDrillFluid_Description, 
            T.FullDescription AS DictionaryDrillFluid_FullDescription, 
            T.Thumbnail AS DictionaryDrillFluid_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDrillFluid_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillFluid AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDrillRigTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView368()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDrillRigTypes", @"
    SELECT VALUE -- Constructing DictionaryDrillRigTypes
        [XODB.Module.BusinessObjects.DictionaryDrillRigType](T1.DictionaryDrillRigType_DrillRigTypeID, T1.DictionaryDrillRigType_StandardDrillRigTypeName, T1.DictionaryDrillRigType_CoalDrillRigTypeName, T1.DictionaryDrillRigType_GoldDrillRigTypeName, T1.DictionaryDrillRigType_CustomDrillRigTypeName, T1.DictionaryDrillRigType_Description, T1.DictionaryDrillRigType_FullDescription, T1.DictionaryDrillRigType_Thumbnail, T1.DictionaryDrillRigType_OriginalFileDataID)
    FROM (
        SELECT 
            T.DrillRigTypeID AS DictionaryDrillRigType_DrillRigTypeID, 
            T.StandardDrillRigTypeName AS DictionaryDrillRigType_StandardDrillRigTypeName, 
            T.CoalDrillRigTypeName AS DictionaryDrillRigType_CoalDrillRigTypeName, 
            T.GoldDrillRigTypeName AS DictionaryDrillRigType_GoldDrillRigTypeName, 
            T.CustomDrillRigTypeName AS DictionaryDrillRigType_CustomDrillRigTypeName, 
            T.Description AS DictionaryDrillRigType_Description, 
            T.FullDescription AS DictionaryDrillRigType_FullDescription, 
            T.Thumbnail AS DictionaryDrillRigType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDrillRigType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillRigType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryDrillSizes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView369()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryDrillSizes", @"
    SELECT VALUE -- Constructing DictionaryDrillSizes
        [XODB.Module.BusinessObjects.DictionaryDrillSize](T1.DictionaryDrillSize_DrillSizeID, T1.DictionaryDrillSize_StandardDrillSizeName, T1.DictionaryDrillSize_CoalDrillSizeName, T1.DictionaryDrillSize_GoldDrillSizeName, T1.DictionaryDrillSize_CustomDrillSizeName, T1.DictionaryDrillSize_Description, T1.DictionaryDrillSize_FullDescription, T1.DictionaryDrillSize_Thumbnail, T1.DictionaryDrillSize_OriginalFileDataID)
    FROM (
        SELECT 
            T.DrillSizeID AS DictionaryDrillSize_DrillSizeID, 
            T.StandardDrillSizeName AS DictionaryDrillSize_StandardDrillSizeName, 
            T.CoalDrillSizeName AS DictionaryDrillSize_CoalDrillSizeName, 
            T.GoldDrillSizeName AS DictionaryDrillSize_GoldDrillSizeName, 
            T.CustomDrillSizeName AS DictionaryDrillSize_CustomDrillSizeName, 
            T.Description AS DictionaryDrillSize_Description, 
            T.FullDescription AS DictionaryDrillSize_FullDescription, 
            T.Thumbnail AS DictionaryDrillSize_Thumbnail, 
            T.OriginalFileDataID AS DictionaryDrillSize_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryDrillSize AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryEstimatedStrengths
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView370()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryEstimatedStrengths", "\r\n    SELECT VALUE -- Constructing DictionaryEstimatedStrengths\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.DictionaryEstimatedStrength](T1.DictionaryEstimatedStrength" +
                    "_EstimatedStrengthID, T1.DictionaryEstimatedStrength_StandardEstimatedStrengthNa" +
                    "me, T1.DictionaryEstimatedStrength_CoalEstimatedStrengthName, T1.DictionaryEstim" +
                    "atedStrength_GoldEstimatedStrengthName, T1.DictionaryEstimatedStrength_CustomEst" +
                    "imatedStrengthName, T1.DictionaryEstimatedStrength_Description, T1.DictionaryEst" +
                    "imatedStrength_FullDescription, T1.DictionaryEstimatedStrength_Thumbnail, T1.Dic" +
                    "tionaryEstimatedStrength_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.EstimatedStrengthID AS DictionaryEstimatedStrength_EstimatedStrengthID," +
                    " \r\n            T.StandardEstimatedStrengthName AS DictionaryEstimatedStrength_St" +
                    "andardEstimatedStrengthName, \r\n            T.CoalEstimatedStrengthName AS Dictio" +
                    "naryEstimatedStrength_CoalEstimatedStrengthName, \r\n            T.GoldEstimatedSt" +
                    "rengthName AS DictionaryEstimatedStrength_GoldEstimatedStrengthName, \r\n         " +
                    "   T.CustomEstimatedStrengthName AS DictionaryEstimatedStrength_CustomEstimatedS" +
                    "trengthName, \r\n            T.Description AS DictionaryEstimatedStrength_Descript" +
                    "ion, \r\n            T.FullDescription AS DictionaryEstimatedStrength_FullDescript" +
                    "ion, \r\n            T.Thumbnail AS DictionaryEstimatedStrength_Thumbnail, \r\n     " +
                    "       T.OriginalFileDataID AS DictionaryEstimatedStrength_OriginalFileDataID, \r" +
                    "\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContaine" +
                    "r.X_DictionaryEstimatedStrength AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryFailureModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView371()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryFailureModes", @"
    SELECT VALUE -- Constructing DictionaryFailureModes
        [XODB.Module.BusinessObjects.DictionaryFailureMode](T1.DictionaryFailureMode_FailureModeID, T1.DictionaryFailureMode_StandardFailureModeName, T1.DictionaryFailureMode_CoalFailureModeName, T1.DictionaryFailureMode_GoldFailureModeName, T1.DictionaryFailureMode_CustomFailureModeName, T1.DictionaryFailureMode_Description, T1.DictionaryFailureMode_FullDescription, T1.DictionaryFailureMode_Thumbnail, T1.DictionaryFailureMode_OriginalFileDataID)
    FROM (
        SELECT 
            T.FailureModeID AS DictionaryFailureMode_FailureModeID, 
            T.StandardFailureModeName AS DictionaryFailureMode_StandardFailureModeName, 
            T.CoalFailureModeName AS DictionaryFailureMode_CoalFailureModeName, 
            T.GoldFailureModeName AS DictionaryFailureMode_GoldFailureModeName, 
            T.CustomFailureModeName AS DictionaryFailureMode_CustomFailureModeName, 
            T.Description AS DictionaryFailureMode_Description, 
            T.FullDescription AS DictionaryFailureMode_FullDescription, 
            T.Thumbnail AS DictionaryFailureMode_Thumbnail, 
            T.OriginalFileDataID AS DictionaryFailureMode_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryFailureMode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryFileTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView372()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2275);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryFileTypes\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.DictionaryFileType](T1.DictionaryFileType_FileTypeID, T1.Dictionary");
            viewString.Append("FileType_ParentFileTypeID, T1.DictionaryFileType_CompanyID, T1.DictionaryFileTyp");
            viewString.Append("e_StandardFileTypeName, T1.DictionaryFileType_CustomFileTypeName, T1.DictionaryF");
            viewString.Append("ileType_Description, T1.DictionaryFileType_FullDescription, T1.DictionaryFileTyp");
            viewString.Append("e_Thumbnail, T1.DictionaryFileType_OriginalFileDataID, T1.DictionaryFileType_Ver");
            viewString.Append("sion, T1.DictionaryFileType_VersionAntecedentID, T1.DictionaryFileType_VersionCe");
            viewString.Append("rtainty, T1.DictionaryFileType_VersionWorkflowInstanceID, T1.DictionaryFileType_");
            viewString.Append("VersionUpdatedBy, T1.DictionaryFileType_VersionDeletedBy, T1.DictionaryFileType_");
            viewString.Append("VersionOwnerContactID, T1.DictionaryFileType_VersionOwnerCompanyID, T1.Dictionar");
            viewString.Append("yFileType_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.FileTypeID");
            viewString.Append(" AS DictionaryFileType_FileTypeID, \r\n            T.ParentFileTypeID AS Dictionar");
            viewString.Append("yFileType_ParentFileTypeID, \r\n            T.CompanyID AS DictionaryFileType_Comp");
            viewString.Append("anyID, \r\n            T.StandardFileTypeName AS DictionaryFileType_StandardFileTy");
            viewString.Append("peName, \r\n            T.CustomFileTypeName AS DictionaryFileType_CustomFileTypeN");
            viewString.Append("ame, \r\n            T.Description AS DictionaryFileType_Description, \r\n          ");
            viewString.Append("  T.FullDescription AS DictionaryFileType_FullDescription, \r\n            T.Thumb");
            viewString.Append("nail AS DictionaryFileType_Thumbnail, \r\n            T.OriginalFileDataID AS Dict");
            viewString.Append("ionaryFileType_OriginalFileDataID, \r\n            T.Version AS DictionaryFileType");
            viewString.Append("_Version, \r\n            T.VersionAntecedentID AS DictionaryFileType_VersionAntec");
            viewString.Append("edentID, \r\n            T.VersionCertainty AS DictionaryFileType_VersionCertainty");
            viewString.Append(", \r\n            T.VersionWorkflowInstanceID AS DictionaryFileType_VersionWorkflo");
            viewString.Append("wInstanceID, \r\n            T.VersionUpdatedBy AS DictionaryFileType_VersionUpdat");
            viewString.Append("edBy, \r\n            T.VersionDeletedBy AS DictionaryFileType_VersionDeletedBy, \r");
            viewString.Append("\n            T.VersionOwnerContactID AS DictionaryFileType_VersionOwnerContactID");
            viewString.Append(", \r\n            T.VersionOwnerCompanyID AS DictionaryFileType_VersionOwnerCompan");
            viewString.Append("yID, \r\n            T.VersionUpdated AS DictionaryFileType_VersionUpdated, \r\n    ");
            viewString.Append("        True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_D");
            viewString.Append("ictionaryFileType AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryFileTypes", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryFlowTestTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView373()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryFlowTestTypes", @"
    SELECT VALUE -- Constructing DictionaryFlowTestTypes
        [XODB.Module.BusinessObjects.DictionaryFlowTestType](T1.DictionaryFlowTestType_FlowTestTypeID, T1.DictionaryFlowTestType_StandardFlowTestTypeName, T1.DictionaryFlowTestType_CoalFlowTestTypeName, T1.DictionaryFlowTestType_GoldFlowTestTypeName, T1.DictionaryFlowTestType_CustomFlowTestTypeName, T1.DictionaryFlowTestType_Description, T1.DictionaryFlowTestType_FullDescription, T1.DictionaryFlowTestType_Thumbnail, T1.DictionaryFlowTestType_OriginalFileDataID)
    FROM (
        SELECT 
            T.FlowTestTypeID AS DictionaryFlowTestType_FlowTestTypeID, 
            T.StandardFlowTestTypeName AS DictionaryFlowTestType_StandardFlowTestTypeName, 
            T.CoalFlowTestTypeName AS DictionaryFlowTestType_CoalFlowTestTypeName, 
            T.GoldFlowTestTypeName AS DictionaryFlowTestType_GoldFlowTestTypeName, 
            T.CustomFlowTestTypeName AS DictionaryFlowTestType_CustomFlowTestTypeName, 
            T.Description AS DictionaryFlowTestType_Description, 
            T.FullDescription AS DictionaryFlowTestType_FullDescription, 
            T.Thumbnail AS DictionaryFlowTestType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryFlowTestType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryFlowTestType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryGasDetecteds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView374()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryGasDetecteds", @"
    SELECT VALUE -- Constructing DictionaryGasDetecteds
        [XODB.Module.BusinessObjects.DictionaryGasDetected](T1.DictionaryGasDetected_GasDetectedID, T1.DictionaryGasDetected_StandardGasDetectedName, T1.DictionaryGasDetected_CoalGasDetectedName, T1.DictionaryGasDetected_GoldGasDetectedName, T1.DictionaryGasDetected_CustomGasDetectedName, T1.DictionaryGasDetected_Description, T1.DictionaryGasDetected_FullDescription, T1.DictionaryGasDetected_Thumbnail, T1.DictionaryGasDetected_OriginalFileDataID)
    FROM (
        SELECT 
            T.GasDetectedID AS DictionaryGasDetected_GasDetectedID, 
            T.StandardGasDetectedName AS DictionaryGasDetected_StandardGasDetectedName, 
            T.CoalGasDetectedName AS DictionaryGasDetected_CoalGasDetectedName, 
            T.GoldGasDetectedName AS DictionaryGasDetected_GoldGasDetectedName, 
            T.CustomGasDetectedName AS DictionaryGasDetected_CustomGasDetectedName, 
            T.Description AS DictionaryGasDetected_Description, 
            T.FullDescription AS DictionaryGasDetected_FullDescription, 
            T.Thumbnail AS DictionaryGasDetected_Thumbnail, 
            T.OriginalFileDataID AS DictionaryGasDetected_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryGasDetected AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryGeodeticDatums
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView375()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryGeodeticDatums", @"
    SELECT VALUE -- Constructing DictionaryGeodeticDatums
        [XODB.Module.BusinessObjects.DictionaryGeodeticDatum](T1.DictionaryGeodeticDatum_GeodeticDatumID, T1.DictionaryGeodeticDatum_StandardGeodeticDatumName, T1.DictionaryGeodeticDatum_CoalGeodeticDatumName, T1.DictionaryGeodeticDatum_GoldGeodeticDatumName, T1.DictionaryGeodeticDatum_CustomGeodeticDatumName, T1.DictionaryGeodeticDatum_Description, T1.DictionaryGeodeticDatum_FullDescription, T1.DictionaryGeodeticDatum_Thumbnail, T1.DictionaryGeodeticDatum_OriginalFileDataID)
    FROM (
        SELECT 
            T.GeodeticDatumID AS DictionaryGeodeticDatum_GeodeticDatumID, 
            T.StandardGeodeticDatumName AS DictionaryGeodeticDatum_StandardGeodeticDatumName, 
            T.CoalGeodeticDatumName AS DictionaryGeodeticDatum_CoalGeodeticDatumName, 
            T.GoldGeodeticDatumName AS DictionaryGeodeticDatum_GoldGeodeticDatumName, 
            T.CustomGeodeticDatumName AS DictionaryGeodeticDatum_CustomGeodeticDatumName, 
            T.Description AS DictionaryGeodeticDatum_Description, 
            T.FullDescription AS DictionaryGeodeticDatum_FullDescription, 
            T.Thumbnail AS DictionaryGeodeticDatum_Thumbnail, 
            T.OriginalFileDataID AS DictionaryGeodeticDatum_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryGeodeticDatum AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryGeophysicalLogTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView376()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryGeophysicalLogTypes", "\r\n    SELECT VALUE -- Constructing DictionaryGeophysicalLogTypes\r\n        [XODB.M" +
                    "odule.BusinessObjects.DictionaryGeophysicalLogType](T1.DictionaryGeophysicalLogT" +
                    "ype_GeophysicalLogTypeID, T1.DictionaryGeophysicalLogType_StandardGeophysicalLog" +
                    "TypeName, T1.DictionaryGeophysicalLogType_CoalGeophysicalLogTypeName, T1.Diction" +
                    "aryGeophysicalLogType_GoldGeophysicalLogTypeName, T1.DictionaryGeophysicalLogTyp" +
                    "e_CustomGeophysicalLogTypeName, T1.DictionaryGeophysicalLogType_Description, T1." +
                    "DictionaryGeophysicalLogType_FullDescription, T1.DictionaryGeophysicalLogType_Th" +
                    "umbnail, T1.DictionaryGeophysicalLogType_OriginalFileDataID)\r\n    FROM (\r\n      " +
                    "  SELECT \r\n            T.GeophysicalLogTypeID AS DictionaryGeophysicalLogType_Ge" +
                    "ophysicalLogTypeID, \r\n            T.StandardGeophysicalLogTypeName AS Dictionary" +
                    "GeophysicalLogType_StandardGeophysicalLogTypeName, \r\n            T.CoalGeophysic" +
                    "alLogTypeName AS DictionaryGeophysicalLogType_CoalGeophysicalLogTypeName, \r\n    " +
                    "        T.GoldGeophysicalLogTypeName AS DictionaryGeophysicalLogType_GoldGeophys" +
                    "icalLogTypeName, \r\n            T.CustomGeophysicalLogTypeName AS DictionaryGeoph" +
                    "ysicalLogType_CustomGeophysicalLogTypeName, \r\n            T.Description AS Dicti" +
                    "onaryGeophysicalLogType_Description, \r\n            T.FullDescription AS Dictiona" +
                    "ryGeophysicalLogType_FullDescription, \r\n            T.Thumbnail AS DictionaryGeo" +
                    "physicalLogType_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryGeoph" +
                    "ysicalLogType_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XOD" +
                    "BModuleBusinessObjectsStoreContainer.X_DictionaryGeophysicalLogType AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView377()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryGroups", @"
    SELECT VALUE -- Constructing DictionaryGroups
        [XODB.Module.BusinessObjects.DictionaryGroup](T1.DictionaryGroup_GroupID, T1.DictionaryGroup_StandardGroupName, T1.DictionaryGroup_CoalGroupName, T1.DictionaryGroup_GoldGroupName, T1.DictionaryGroup_CustomGroupName, T1.DictionaryGroup_Description, T1.DictionaryGroup_FullDescription, T1.DictionaryGroup_Thumbnail, T1.DictionaryGroup_OriginalFileDataID)
    FROM (
        SELECT 
            T.GroupID AS DictionaryGroup_GroupID, 
            T.StandardGroupName AS DictionaryGroup_StandardGroupName, 
            T.CoalGroupName AS DictionaryGroup_CoalGroupName, 
            T.GoldGroupName AS DictionaryGroup_GoldGroupName, 
            T.CustomGroupName AS DictionaryGroup_CustomGroupName, 
            T.Description AS DictionaryGroup_Description, 
            T.FullDescription AS DictionaryGroup_FullDescription, 
            T.Thumbnail AS DictionaryGroup_Thumbnail, 
            T.OriginalFileDataID AS DictionaryGroup_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryGroupMemberships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView378()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryGroupMemberships", @"
    SELECT VALUE -- Constructing DictionaryGroupMemberships
        [XODB.Module.BusinessObjects.DictionaryGroupMembership](T1.DictionaryGroupMembership_GroupMembershipID, T1.DictionaryGroupMembership_ParentGroupID, T1.DictionaryGroupMembership_ChildGroupID, T1.DictionaryGroupMembership_FullDescription, T1.DictionaryGroupMembership_Thumbnail, T1.DictionaryGroupMembership_OriginalFileDataID)
    FROM (
        SELECT 
            T.GroupMembershipID AS DictionaryGroupMembership_GroupMembershipID, 
            T.ParentGroupID AS DictionaryGroupMembership_ParentGroupID, 
            T.ChildGroupID AS DictionaryGroupMembership_ChildGroupID, 
            T.FullDescription AS DictionaryGroupMembership_FullDescription, 
            T.Thumbnail AS DictionaryGroupMembership_Thumbnail, 
            T.OriginalFileDataID AS DictionaryGroupMembership_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryGroupMembership AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryHeightDatums
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView379()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryHeightDatums", @"
    SELECT VALUE -- Constructing DictionaryHeightDatums
        [XODB.Module.BusinessObjects.DictionaryHeightDatum](T1.DictionaryHeightDatum_HeightDatumID, T1.DictionaryHeightDatum_StandardHeightDatumName, T1.DictionaryHeightDatum_CoalHeightDatumName, T1.DictionaryHeightDatum_GoldHeightDatumName, T1.DictionaryHeightDatum_CustomHeightDatumName, T1.DictionaryHeightDatum_Description, T1.DictionaryHeightDatum_FullDescription, T1.DictionaryHeightDatum_Thumbnail, T1.DictionaryHeightDatum_OriginalFileDataID)
    FROM (
        SELECT 
            T.HeightDatumID AS DictionaryHeightDatum_HeightDatumID, 
            T.StandardHeightDatumName AS DictionaryHeightDatum_StandardHeightDatumName, 
            T.CoalHeightDatumName AS DictionaryHeightDatum_CoalHeightDatumName, 
            T.GoldHeightDatumName AS DictionaryHeightDatum_GoldHeightDatumName, 
            T.CustomHeightDatumName AS DictionaryHeightDatum_CustomHeightDatumName, 
            T.Description AS DictionaryHeightDatum_Description, 
            T.FullDescription AS DictionaryHeightDatum_FullDescription, 
            T.Thumbnail AS DictionaryHeightDatum_Thumbnail, 
            T.OriginalFileDataID AS DictionaryHeightDatum_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryHeightDatum AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryHolePurposes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView380()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryHolePurposes", @"
    SELECT VALUE -- Constructing DictionaryHolePurposes
        [XODB.Module.BusinessObjects.DictionaryHolePurpose](T1.DictionaryHolePurpose_HolePurposeID, T1.DictionaryHolePurpose_StandardHolePurposeName, T1.DictionaryHolePurpose_CoalHolePurposeName, T1.DictionaryHolePurpose_GoldHolePurposeName, T1.DictionaryHolePurpose_CustomHolePurposeName, T1.DictionaryHolePurpose_Description, T1.DictionaryHolePurpose_FullDescription, T1.DictionaryHolePurpose_Thumbnail, T1.DictionaryHolePurpose_OriginalFileDataID)
    FROM (
        SELECT 
            T.HolePurposeID AS DictionaryHolePurpose_HolePurposeID, 
            T.StandardHolePurposeName AS DictionaryHolePurpose_StandardHolePurposeName, 
            T.CoalHolePurposeName AS DictionaryHolePurpose_CoalHolePurposeName, 
            T.GoldHolePurposeName AS DictionaryHolePurpose_GoldHolePurposeName, 
            T.CustomHolePurposeName AS DictionaryHolePurpose_CustomHolePurposeName, 
            T.Description AS DictionaryHolePurpose_Description, 
            T.FullDescription AS DictionaryHolePurpose_FullDescription, 
            T.Thumbnail AS DictionaryHolePurpose_Thumbnail, 
            T.OriginalFileDataID AS DictionaryHolePurpose_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryHolePurpose AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryHoleStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView381()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryHoleStatus", @"
    SELECT VALUE -- Constructing DictionaryHoleStatus
        [XODB.Module.BusinessObjects.DictionaryHoleStatus](T1.DictionaryHoleStatus_HoleStatusID, T1.DictionaryHoleStatus_StandardHoleStatusName, T1.DictionaryHoleStatus_CoalHoleStatusName, T1.DictionaryHoleStatus_GoldHoleStatusName, T1.DictionaryHoleStatus_CustomHoleStatusName, T1.DictionaryHoleStatus_Description, T1.DictionaryHoleStatus_FullDescription, T1.DictionaryHoleStatus_Thumbnail, T1.DictionaryHoleStatus_OriginalFileDataID)
    FROM (
        SELECT 
            T.HoleStatusID AS DictionaryHoleStatus_HoleStatusID, 
            T.StandardHoleStatusName AS DictionaryHoleStatus_StandardHoleStatusName, 
            T.CoalHoleStatusName AS DictionaryHoleStatus_CoalHoleStatusName, 
            T.GoldHoleStatusName AS DictionaryHoleStatus_GoldHoleStatusName, 
            T.CustomHoleStatusName AS DictionaryHoleStatus_CustomHoleStatusName, 
            T.Description AS DictionaryHoleStatus_Description, 
            T.FullDescription AS DictionaryHoleStatus_FullDescription, 
            T.Thumbnail AS DictionaryHoleStatus_Thumbnail, 
            T.OriginalFileDataID AS DictionaryHoleStatus_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryHoleStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryHoleTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView382()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryHoleTypes", @"
    SELECT VALUE -- Constructing DictionaryHoleTypes
        [XODB.Module.BusinessObjects.DictionaryHoleType](T1.DictionaryHoleType_HoleTypeID, T1.DictionaryHoleType_StandardHoleTypeName, T1.DictionaryHoleType_CoalHoleTypeName, T1.DictionaryHoleType_GoldHoleTypeName, T1.DictionaryHoleType_CustomHoleTypeName, T1.DictionaryHoleType_Description, T1.DictionaryHoleType_FullDescription, T1.DictionaryHoleType_Thumbnail, T1.DictionaryHoleType_OriginalFileDataID)
    FROM (
        SELECT 
            T.HoleTypeID AS DictionaryHoleType_HoleTypeID, 
            T.StandardHoleTypeName AS DictionaryHoleType_StandardHoleTypeName, 
            T.CoalHoleTypeName AS DictionaryHoleType_CoalHoleTypeName, 
            T.GoldHoleTypeName AS DictionaryHoleType_GoldHoleTypeName, 
            T.CustomHoleTypeName AS DictionaryHoleType_CustomHoleTypeName, 
            T.Description AS DictionaryHoleType_Description, 
            T.FullDescription AS DictionaryHoleType_FullDescription, 
            T.Thumbnail AS DictionaryHoleType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryHoleType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryHoleType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryHorizons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView383()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryHorizons", @"
    SELECT VALUE -- Constructing DictionaryHorizons
        [XODB.Module.BusinessObjects.DictionaryHorizon](T1.DictionaryHorizon_HorizonID, T1.DictionaryHorizon_StandardHorizonName, T1.DictionaryHorizon_CoalHorizonName, T1.DictionaryHorizon_GoldHorizonName, T1.DictionaryHorizon_CustomHorizonName, T1.DictionaryHorizon_Description, T1.DictionaryHorizon_FullDescription, T1.DictionaryHorizon_Thumbnail, T1.DictionaryHorizon_OriginalFileDataID)
    FROM (
        SELECT 
            T.HorizonID AS DictionaryHorizon_HorizonID, 
            T.StandardHorizonName AS DictionaryHorizon_StandardHorizonName, 
            T.CoalHorizonName AS DictionaryHorizon_CoalHorizonName, 
            T.GoldHorizonName AS DictionaryHorizon_GoldHorizonName, 
            T.CustomHorizonName AS DictionaryHorizon_CustomHorizonName, 
            T.Description AS DictionaryHorizon_Description, 
            T.FullDescription AS DictionaryHorizon_FullDescription, 
            T.Thumbnail AS DictionaryHorizon_Thumbnail, 
            T.OriginalFileDataID AS DictionaryHorizon_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryHorizon AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryHues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView384()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryHues", @"
    SELECT VALUE -- Constructing DictionaryHues
        [XODB.Module.BusinessObjects.DictionaryHue](T1.DictionaryHue_HueID, T1.DictionaryHue_StandardHueName, T1.DictionaryHue_CoalHueName, T1.DictionaryHue_GoldHueName, T1.DictionaryHue_CustomHueName, T1.DictionaryHue_Description, T1.DictionaryHue_FullDescription, T1.DictionaryHue_Thumbnail, T1.DictionaryHue_OriginalFileDataID)
    FROM (
        SELECT 
            T.HueID AS DictionaryHue_HueID, 
            T.StandardHueName AS DictionaryHue_StandardHueName, 
            T.CoalHueName AS DictionaryHue_CoalHueName, 
            T.GoldHueName AS DictionaryHue_GoldHueName, 
            T.CustomHueName AS DictionaryHue_CustomHueName, 
            T.Description AS DictionaryHue_Description, 
            T.FullDescription AS DictionaryHue_FullDescription, 
            T.Thumbnail AS DictionaryHue_Thumbnail, 
            T.OriginalFileDataID AS DictionaryHue_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryHue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryInfillModes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView385()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryInfillModes", @"
    SELECT VALUE -- Constructing DictionaryInfillModes
        [XODB.Module.BusinessObjects.DictionaryInfillMode](T1.DictionaryInfillMode_InfillModeID, T1.DictionaryInfillMode_StandardInfillModeName, T1.DictionaryInfillMode_CoalInfillModeName, T1.DictionaryInfillMode_GoldInfillModeName, T1.DictionaryInfillMode_CustomInfillModeName, T1.DictionaryInfillMode_Description, T1.DictionaryInfillMode_FullDescription, T1.DictionaryInfillMode_Thumbnail, T1.DictionaryInfillMode_OriginalFileDataID)
    FROM (
        SELECT 
            T.InfillModeID AS DictionaryInfillMode_InfillModeID, 
            T.StandardInfillModeName AS DictionaryInfillMode_StandardInfillModeName, 
            T.CoalInfillModeName AS DictionaryInfillMode_CoalInfillModeName, 
            T.GoldInfillModeName AS DictionaryInfillMode_GoldInfillModeName, 
            T.CustomInfillModeName AS DictionaryInfillMode_CustomInfillModeName, 
            T.Description AS DictionaryInfillMode_Description, 
            T.FullDescription AS DictionaryInfillMode_FullDescription, 
            T.Thumbnail AS DictionaryInfillMode_Thumbnail, 
            T.OriginalFileDataID AS DictionaryInfillMode_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryInfillMode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryInfillTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView386()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryInfillTypes", @"
    SELECT VALUE -- Constructing DictionaryInfillTypes
        [XODB.Module.BusinessObjects.DictionaryInfillType](T1.DictionaryInfillType_InfillTypeID, T1.DictionaryInfillType_StandardInfillTypeName, T1.DictionaryInfillType_CoalInfillTypeName, T1.DictionaryInfillType_GoldInfillTypeName, T1.DictionaryInfillType_CustomInfillTypeName, T1.DictionaryInfillType_Description, T1.DictionaryInfillType_FullDescription, T1.DictionaryInfillType_Thumbnail, T1.DictionaryInfillType_OriginalFileDataID)
    FROM (
        SELECT 
            T.InfillTypeID AS DictionaryInfillType_InfillTypeID, 
            T.StandardInfillTypeName AS DictionaryInfillType_StandardInfillTypeName, 
            T.CoalInfillTypeName AS DictionaryInfillType_CoalInfillTypeName, 
            T.GoldInfillTypeName AS DictionaryInfillType_GoldInfillTypeName, 
            T.CustomInfillTypeName AS DictionaryInfillType_CustomInfillTypeName, 
            T.Description AS DictionaryInfillType_Description, 
            T.FullDescription AS DictionaryInfillType_FullDescription, 
            T.Thumbnail AS DictionaryInfillType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryInfillType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryInfillType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryIntervalStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView387()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryIntervalStatus", @"
    SELECT VALUE -- Constructing DictionaryIntervalStatus
        [XODB.Module.BusinessObjects.DictionaryIntervalStatus](T1.DictionaryIntervalStatus_IntervalStatusID, T1.DictionaryIntervalStatus_StandardIntervalStatusName, T1.DictionaryIntervalStatus_CoalIntervalStatusName, T1.DictionaryIntervalStatus_GoldIntervalStatusName, T1.DictionaryIntervalStatus_CustomIntervalStatusName, T1.DictionaryIntervalStatus_Description, T1.DictionaryIntervalStatus_FullDescription, T1.DictionaryIntervalStatus_Thumbnail, T1.DictionaryIntervalStatus_OriginalFileDataID)
    FROM (
        SELECT 
            T.IntervalStatusID AS DictionaryIntervalStatus_IntervalStatusID, 
            T.StandardIntervalStatusName AS DictionaryIntervalStatus_StandardIntervalStatusName, 
            T.CoalIntervalStatusName AS DictionaryIntervalStatus_CoalIntervalStatusName, 
            T.GoldIntervalStatusName AS DictionaryIntervalStatus_GoldIntervalStatusName, 
            T.CustomIntervalStatusName AS DictionaryIntervalStatus_CustomIntervalStatusName, 
            T.Description AS DictionaryIntervalStatus_Description, 
            T.FullDescription AS DictionaryIntervalStatus_FullDescription, 
            T.Thumbnail AS DictionaryIntervalStatus_Thumbnail, 
            T.OriginalFileDataID AS DictionaryIntervalStatus_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryIntervalStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryLeaseApplicationTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView388()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryLeaseApplicationTypes", "\r\n    SELECT VALUE -- Constructing DictionaryLeaseApplicationTypes\r\n        [XODB" +
                    ".Module.BusinessObjects.DictionaryLeaseApplicationType](T1.DictionaryLeaseApplic" +
                    "ationType_LeaseApplicationTypeID, T1.DictionaryLeaseApplicationType_StandardLeas" +
                    "eApplicationTypeName, T1.DictionaryLeaseApplicationType_CoalLeaseApplicationType" +
                    "Name, T1.DictionaryLeaseApplicationType_GoldLeaseApplicationTypeName, T1.Diction" +
                    "aryLeaseApplicationType_CustomLeaseApplicationTypeName, T1.DictionaryLeaseApplic" +
                    "ationType_Description, T1.DictionaryLeaseApplicationType_FullDescription, T1.Dic" +
                    "tionaryLeaseApplicationType_Thumbnail, T1.DictionaryLeaseApplicationType_Origina" +
                    "lFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.LeaseApplicationTypeID " +
                    "AS DictionaryLeaseApplicationType_LeaseApplicationTypeID, \r\n            T.Standa" +
                    "rdLeaseApplicationTypeName AS DictionaryLeaseApplicationType_StandardLeaseApplic" +
                    "ationTypeName, \r\n            T.CoalLeaseApplicationTypeName AS DictionaryLeaseAp" +
                    "plicationType_CoalLeaseApplicationTypeName, \r\n            T.GoldLeaseApplication" +
                    "TypeName AS DictionaryLeaseApplicationType_GoldLeaseApplicationTypeName, \r\n     " +
                    "       T.CustomLeaseApplicationTypeName AS DictionaryLeaseApplicationType_Custom" +
                    "LeaseApplicationTypeName, \r\n            T.Description AS DictionaryLeaseApplicat" +
                    "ionType_Description, \r\n            T.FullDescription AS DictionaryLeaseApplicati" +
                    "onType_FullDescription, \r\n            T.Thumbnail AS DictionaryLeaseApplicationT" +
                    "ype_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryLeaseApplicationT" +
                    "ype_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XODBModuleBus" +
                    "inessObjectsStoreContainer.X_DictionaryLeaseApplicationType AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryLicenseTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView389()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2202);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryLicenseTypes\r\n        [XODB.Module.");
            viewString.Append("BusinessObjects.DictionaryLicenseType](T1.DictionaryLicenseType_LicenseTypeID, T");
            viewString.Append("1.DictionaryLicenseType_StandardLicenseTypeName, T1.DictionaryLicenseType_Custom");
            viewString.Append("LicenseTypeName, T1.DictionaryLicenseType_Description, T1.DictionaryLicenseType_");
            viewString.Append("FullDescription, T1.DictionaryLicenseType_Thumbnail, T1.DictionaryLicenseType_Or");
            viewString.Append("iginalFileDataID, T1.DictionaryLicenseType_Version, T1.DictionaryLicenseType_Ver");
            viewString.Append("sionAntecedentID, T1.DictionaryLicenseType_VersionCertainty, T1.DictionaryLicens");
            viewString.Append("eType_VersionWorkflowInstanceID, T1.DictionaryLicenseType_VersionUpdatedBy, T1.D");
            viewString.Append("ictionaryLicenseType_VersionDeletedBy, T1.DictionaryLicenseType_VersionOwnerCont");
            viewString.Append("actID, T1.DictionaryLicenseType_VersionOwnerCompanyID, T1.DictionaryLicenseType_");
            viewString.Append("VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.LicenseTypeID AS Dic");
            viewString.Append("tionaryLicenseType_LicenseTypeID, \r\n            T.StandardLicenseTypeName AS Dic");
            viewString.Append("tionaryLicenseType_StandardLicenseTypeName, \r\n            T.CustomLicenseTypeNam");
            viewString.Append("e AS DictionaryLicenseType_CustomLicenseTypeName, \r\n            T.Description AS");
            viewString.Append(" DictionaryLicenseType_Description, \r\n            T.FullDescription AS Dictionar");
            viewString.Append("yLicenseType_FullDescription, \r\n            T.Thumbnail AS DictionaryLicenseType");
            viewString.Append("_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryLicenseType_Original");
            viewString.Append("FileDataID, \r\n            T.Version AS DictionaryLicenseType_Version, \r\n        ");
            viewString.Append("    T.VersionAntecedentID AS DictionaryLicenseType_VersionAntecedentID, \r\n      ");
            viewString.Append("      T.VersionCertainty AS DictionaryLicenseType_VersionCertainty, \r\n          ");
            viewString.Append("  T.VersionWorkflowInstanceID AS DictionaryLicenseType_VersionWorkflowInstanceID");
            viewString.Append(", \r\n            T.VersionUpdatedBy AS DictionaryLicenseType_VersionUpdatedBy, \r\n");
            viewString.Append("            T.VersionDeletedBy AS DictionaryLicenseType_VersionDeletedBy, \r\n    ");
            viewString.Append("        T.VersionOwnerContactID AS DictionaryLicenseType_VersionOwnerContactID, ");
            viewString.Append("\r\n            T.VersionOwnerCompanyID AS DictionaryLicenseType_VersionOwnerCompa");
            viewString.Append("nyID, \r\n            T.VersionUpdated AS DictionaryLicenseType_VersionUpdated, \r\n");
            viewString.Append("            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer");
            viewString.Append(".X_DictionaryLicenseType AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryLicenseTypes", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryLithologyInterrelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView390()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryLithologyInterrelations", "\r\n    SELECT VALUE -- Constructing DictionaryLithologyInterrelations\r\n        [XO" +
                    "DB.Module.BusinessObjects.DictionaryLithologyInterrelation](T1.DictionaryLitholo" +
                    "gyInterrelation_LithologyInterralationID, T1.DictionaryLithologyInterrelation_St" +
                    "andardLithologyInterrelationName, T1.DictionaryLithologyInterrelation_CoalLithol" +
                    "ogyInterrelationName, T1.DictionaryLithologyInterrelation_GoldLithologyInterrela" +
                    "tionName, T1.DictionaryLithologyInterrelation_CustomLithologyInterrelationName, " +
                    "T1.DictionaryLithologyInterrelation_Description, T1.DictionaryLithologyInterrela" +
                    "tion_FullDescription, T1.DictionaryLithologyInterrelation_Thumbnail, T1.Dictiona" +
                    "ryLithologyInterrelation_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.LithologyInterralationID AS DictionaryLithologyInterrelation_LithologyI" +
                    "nterralationID, \r\n            T.StandardLithologyInterrelationName AS Dictionary" +
                    "LithologyInterrelation_StandardLithologyInterrelationName, \r\n            T.CoalL" +
                    "ithologyInterrelationName AS DictionaryLithologyInterrelation_CoalLithologyInter" +
                    "relationName, \r\n            T.GoldLithologyInterrelationName AS DictionaryLithol" +
                    "ogyInterrelation_GoldLithologyInterrelationName, \r\n            T.CustomLithology" +
                    "InterrelationName AS DictionaryLithologyInterrelation_CustomLithologyInterrelati" +
                    "onName, \r\n            T.Description AS DictionaryLithologyInterrelation_Descript" +
                    "ion, \r\n            T.FullDescription AS DictionaryLithologyInterrelation_FullDes" +
                    "cription, \r\n            T.Thumbnail AS DictionaryLithologyInterrelation_Thumbnai" +
                    "l, \r\n            T.OriginalFileDataID AS DictionaryLithologyInterrelation_Origin" +
                    "alFileDataID, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjec" +
                    "tsStoreContainer.X_DictionaryLithologyInterrelation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryLithologyQualifiers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView391()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryLithologyQualifiers", "\r\n    SELECT VALUE -- Constructing DictionaryLithologyQualifiers\r\n        [XODB.M" +
                    "odule.BusinessObjects.DictionaryLithologyQualifier](T1.DictionaryLithologyQualif" +
                    "ier_LithologyQualifierID, T1.DictionaryLithologyQualifier_StandardLithologyQuali" +
                    "fierName, T1.DictionaryLithologyQualifier_CoalLithologyQualifierName, T1.Diction" +
                    "aryLithologyQualifier_GoldLithologyQualifierName, T1.DictionaryLithologyQualifie" +
                    "r_CustomLithologyQualifierName, T1.DictionaryLithologyQualifier_Description, T1." +
                    "DictionaryLithologyQualifier_FullDescription, T1.DictionaryLithologyQualifier_Th" +
                    "umbnail, T1.DictionaryLithologyQualifier_OriginalFileDataID)\r\n    FROM (\r\n      " +
                    "  SELECT \r\n            T.LithologyQualifierID AS DictionaryLithologyQualifier_Li" +
                    "thologyQualifierID, \r\n            T.StandardLithologyQualifierName AS Dictionary" +
                    "LithologyQualifier_StandardLithologyQualifierName, \r\n            T.CoalLithology" +
                    "QualifierName AS DictionaryLithologyQualifier_CoalLithologyQualifierName, \r\n    " +
                    "        T.GoldLithologyQualifierName AS DictionaryLithologyQualifier_GoldLitholo" +
                    "gyQualifierName, \r\n            T.CustomLithologyQualifierName AS DictionaryLitho" +
                    "logyQualifier_CustomLithologyQualifierName, \r\n            T.Description AS Dicti" +
                    "onaryLithologyQualifier_Description, \r\n            T.FullDescription AS Dictiona" +
                    "ryLithologyQualifier_FullDescription, \r\n            T.Thumbnail AS DictionaryLit" +
                    "hologyQualifier_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryLitho" +
                    "logyQualifier_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XOD" +
                    "BModuleBusinessObjectsStoreContainer.X_DictionaryLithologyQualifier AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryLithologyTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView392()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryLithologyTypes", @"
    SELECT VALUE -- Constructing DictionaryLithologyTypes
        [XODB.Module.BusinessObjects.DictionaryLithologyType](T1.DictionaryLithologyType_LithologyTypeID, T1.DictionaryLithologyType_StandardLithologyTypeName, T1.DictionaryLithologyType_CoalLithologyTypeName, T1.DictionaryLithologyType_GoldLithologyTypeName, T1.DictionaryLithologyType_CustomLithologyTypeName, T1.DictionaryLithologyType_Description, T1.DictionaryLithologyType_FullDescription, T1.DictionaryLithologyType_Thumbnail, T1.DictionaryLithologyType_OriginalFileDataID)
    FROM (
        SELECT 
            T.LithologyTypeID AS DictionaryLithologyType_LithologyTypeID, 
            T.StandardLithologyTypeName AS DictionaryLithologyType_StandardLithologyTypeName, 
            T.CoalLithologyTypeName AS DictionaryLithologyType_CoalLithologyTypeName, 
            T.GoldLithologyTypeName AS DictionaryLithologyType_GoldLithologyTypeName, 
            T.CustomLithologyTypeName AS DictionaryLithologyType_CustomLithologyTypeName, 
            T.Description AS DictionaryLithologyType_Description, 
            T.FullDescription AS DictionaryLithologyType_FullDescription, 
            T.Thumbnail AS DictionaryLithologyType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryLithologyType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryLithologyType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryLocationTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView393()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryLocationTypes", @"
    SELECT VALUE -- Constructing DictionaryLocationTypes
        [XODB.Module.BusinessObjects.DictionaryLocationType](T1.DictionaryLocationType_LocationTypeID, T1.DictionaryLocationType_StandardLocationTypeName, T1.DictionaryLocationType_CoalLocationTypeName, T1.DictionaryLocationType_GoldLocationTypeName, T1.DictionaryLocationType_CustomLocationTypeName, T1.DictionaryLocationType_Description, T1.DictionaryLocationType_FullDescription, T1.DictionaryLocationType_Thumbnail, T1.DictionaryLocationType_OriginalFileDataID)
    FROM (
        SELECT 
            T.LocationTypeID AS DictionaryLocationType_LocationTypeID, 
            T.StandardLocationTypeName AS DictionaryLocationType_StandardLocationTypeName, 
            T.CoalLocationTypeName AS DictionaryLocationType_CoalLocationTypeName, 
            T.GoldLocationTypeName AS DictionaryLocationType_GoldLocationTypeName, 
            T.CustomLocationTypeName AS DictionaryLocationType_CustomLocationTypeName, 
            T.Description AS DictionaryLocationType_Description, 
            T.FullDescription AS DictionaryLocationType_FullDescription, 
            T.Thumbnail AS DictionaryLocationType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryLocationType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryLocationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMechanicalStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView394()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMechanicalStates", @"
    SELECT VALUE -- Constructing DictionaryMechanicalStates
        [XODB.Module.BusinessObjects.DictionaryMechanicalState](T1.DictionaryMechanicalState_MechanicalStateID, T1.DictionaryMechanicalState_StandardMechanicalStateName, T1.DictionaryMechanicalState_CoalMechanicalStateName, T1.DictionaryMechanicalState_GoldMechanicalStateName, T1.DictionaryMechanicalState_CustomMechanicalStateName, T1.DictionaryMechanicalState_Description, T1.DictionaryMechanicalState_FullDescription, T1.DictionaryMechanicalState_Thumbnail, T1.DictionaryMechanicalState_OriginalFileDataID)
    FROM (
        SELECT 
            T.MechanicalStateID AS DictionaryMechanicalState_MechanicalStateID, 
            T.StandardMechanicalStateName AS DictionaryMechanicalState_StandardMechanicalStateName, 
            T.CoalMechanicalStateName AS DictionaryMechanicalState_CoalMechanicalStateName, 
            T.GoldMechanicalStateName AS DictionaryMechanicalState_GoldMechanicalStateName, 
            T.CustomMechanicalStateName AS DictionaryMechanicalState_CustomMechanicalStateName, 
            T.Description AS DictionaryMechanicalState_Description, 
            T.FullDescription AS DictionaryMechanicalState_FullDescription, 
            T.Thumbnail AS DictionaryMechanicalState_Thumbnail, 
            T.OriginalFileDataID AS DictionaryMechanicalState_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryMechanicalState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMineralAbundances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView395()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMineralAbundances", "\r\n    SELECT VALUE -- Constructing DictionaryMineralAbundances\r\n        [XODB.Mod" +
                    "ule.BusinessObjects.DictionaryMineralAbundance](T1.DictionaryMineralAbundance_Mi" +
                    "neralAbundanceID, T1.DictionaryMineralAbundance_StandardMineralAbundanceName, T1" +
                    ".DictionaryMineralAbundance_CoalMineralAbundanceName, T1.DictionaryMineralAbunda" +
                    "nce_GoldMineralAbundanceName, T1.DictionaryMineralAbundance_CustomMineralAbundan" +
                    "ceName, T1.DictionaryMineralAbundance_Description, T1.DictionaryMineralAbundance" +
                    "_FullDescription, T1.DictionaryMineralAbundance_Thumbnail, T1.DictionaryMineralA" +
                    "bundance_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.Mineral" +
                    "AbundanceID AS DictionaryMineralAbundance_MineralAbundanceID, \r\n            T.St" +
                    "andardMineralAbundanceName AS DictionaryMineralAbundance_StandardMineralAbundanc" +
                    "eName, \r\n            T.CoalMineralAbundanceName AS DictionaryMineralAbundance_Co" +
                    "alMineralAbundanceName, \r\n            T.GoldMineralAbundanceName AS DictionaryMi" +
                    "neralAbundance_GoldMineralAbundanceName, \r\n            T.CustomMineralAbundanceN" +
                    "ame AS DictionaryMineralAbundance_CustomMineralAbundanceName, \r\n            T.De" +
                    "scription AS DictionaryMineralAbundance_Description, \r\n            T.FullDescrip" +
                    "tion AS DictionaryMineralAbundance_FullDescription, \r\n            T.Thumbnail AS" +
                    " DictionaryMineralAbundance_Thumbnail, \r\n            T.OriginalFileDataID AS Dic" +
                    "tionaryMineralAbundance_OriginalFileDataID, \r\n            True AS _from0\r\n      " +
                    "  FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAbundance AS T" +
                    "\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMineralAndFossilAbundances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView396()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMineralAndFossilAbundances", "\r\n    SELECT VALUE -- Constructing DictionaryMineralAndFossilAbundances\r\n        " +
                    "[XODB.Module.BusinessObjects.DictionaryMineralAndFossilAbundance](T1.DictionaryM" +
                    "ineralAndFossilAbundance_MineralAndFossilAbundanceID, T1.DictionaryMineralAndFos" +
                    "silAbundance_StandardMineralAndFossilAbundanceName, T1.DictionaryMineralAndFossi" +
                    "lAbundance_CoalMineralAndFossilAbundanceName, T1.DictionaryMineralAndFossilAbund" +
                    "ance_GoldMineralAndFossilAbundanceName, T1.DictionaryMineralAndFossilAbundance_C" +
                    "ustomMineralAndFossilAbundanceName, T1.DictionaryMineralAndFossilAbundance_Descr" +
                    "iption, T1.DictionaryMineralAndFossilAbundance_FullDescription, T1.DictionaryMin" +
                    "eralAndFossilAbundance_Thumbnail, T1.DictionaryMineralAndFossilAbundance_Origina" +
                    "lFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.MineralAndFossilAbundan" +
                    "ceID AS DictionaryMineralAndFossilAbundance_MineralAndFossilAbundanceID, \r\n     " +
                    "       T.StandardMineralAndFossilAbundanceName AS DictionaryMineralAndFossilAbun" +
                    "dance_StandardMineralAndFossilAbundanceName, \r\n            T.CoalMineralAndFossi" +
                    "lAbundanceName AS DictionaryMineralAndFossilAbundance_CoalMineralAndFossilAbunda" +
                    "nceName, \r\n            T.GoldMineralAndFossilAbundanceName AS DictionaryMineralA" +
                    "ndFossilAbundance_GoldMineralAndFossilAbundanceName, \r\n            T.CustomMiner" +
                    "alAndFossilAbundanceName AS DictionaryMineralAndFossilAbundance_CustomMineralAnd" +
                    "FossilAbundanceName, \r\n            T.Description AS DictionaryMineralAndFossilAb" +
                    "undance_Description, \r\n            T.FullDescription AS DictionaryMineralAndFoss" +
                    "ilAbundance_FullDescription, \r\n            T.Thumbnail AS DictionaryMineralAndFo" +
                    "ssilAbundance_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryMineral" +
                    "AndFossilAbundance_OriginalFileDataID, \r\n            True AS _from0\r\n        FRO" +
                    "M XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilAbundance " +
                    "AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMineralAndFossilAssociations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView397()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMineralAndFossilAssociations", "\r\n    SELECT VALUE -- Constructing DictionaryMineralAndFossilAssociations\r\n      " +
                    "  [XODB.Module.BusinessObjects.DictionaryMineralAndFossilAssociation](T1.Diction" +
                    "aryMineralAndFossilAssociation_MineralAndFossilAssociationID, T1.DictionaryMiner" +
                    "alAndFossilAssociation_StandardMineralAndFossilAssociationName, T1.DictionaryMin" +
                    "eralAndFossilAssociation_CoalMineralAndFossilAssociationName, T1.DictionaryMiner" +
                    "alAndFossilAssociation_GoldMineralAndFossilAssociationName, T1.DictionaryMineral" +
                    "AndFossilAssociation_CustomMineralAndFossilAssociationName, T1.DictionaryMineral" +
                    "AndFossilAssociation_Description, T1.DictionaryMineralAndFossilAssociation_FullD" +
                    "escription, T1.DictionaryMineralAndFossilAssociation_Thumbnail, T1.DictionaryMin" +
                    "eralAndFossilAssociation_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.MineralAndFossilAssociationID AS DictionaryMineralAndFossilAssociation_" +
                    "MineralAndFossilAssociationID, \r\n            T.StandardMineralAndFossilAssociati" +
                    "onName AS DictionaryMineralAndFossilAssociation_StandardMineralAndFossilAssociat" +
                    "ionName, \r\n            T.CoalMineralAndFossilAssociationName AS DictionaryMinera" +
                    "lAndFossilAssociation_CoalMineralAndFossilAssociationName, \r\n            T.GoldM" +
                    "ineralAndFossilAssociationName AS DictionaryMineralAndFossilAssociation_GoldMine" +
                    "ralAndFossilAssociationName, \r\n            T.CustomMineralAndFossilAssociationNa" +
                    "me AS DictionaryMineralAndFossilAssociation_CustomMineralAndFossilAssociationNam" +
                    "e, \r\n            T.Description AS DictionaryMineralAndFossilAssociation_Descript" +
                    "ion, \r\n            T.FullDescription AS DictionaryMineralAndFossilAssociation_Fu" +
                    "llDescription, \r\n            T.Thumbnail AS DictionaryMineralAndFossilAssociatio" +
                    "n_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryMineralAndFossilAss" +
                    "ociation_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XODBModu" +
                    "leBusinessObjectsStoreContainer.X_DictionaryMineralAndFossilAssociation AS T\r\n  " +
                    "  ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMineralAndFossilTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView398()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMineralAndFossilTypes", "\r\n    SELECT VALUE -- Constructing DictionaryMineralAndFossilTypes\r\n        [XODB" +
                    ".Module.BusinessObjects.DictionaryMineralAndFossilType](T1.DictionaryMineralAndF" +
                    "ossilType_MineralAndFossilTypeID, T1.DictionaryMineralAndFossilType_StandardMine" +
                    "ralAndFossilTypeName, T1.DictionaryMineralAndFossilType_CoalMineralAndFossilType" +
                    "Name, T1.DictionaryMineralAndFossilType_GoldMineralAndFossilTypeName, T1.Diction" +
                    "aryMineralAndFossilType_CustomMineralAndFossilTypeName, T1.DictionaryMineralAndF" +
                    "ossilType_Description, T1.DictionaryMineralAndFossilType_FullDescription, T1.Dic" +
                    "tionaryMineralAndFossilType_Thumbnail, T1.DictionaryMineralAndFossilType_Origina" +
                    "lFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.MineralAndFossilTypeID " +
                    "AS DictionaryMineralAndFossilType_MineralAndFossilTypeID, \r\n            T.Standa" +
                    "rdMineralAndFossilTypeName AS DictionaryMineralAndFossilType_StandardMineralAndF" +
                    "ossilTypeName, \r\n            T.CoalMineralAndFossilTypeName AS DictionaryMineral" +
                    "AndFossilType_CoalMineralAndFossilTypeName, \r\n            T.GoldMineralAndFossil" +
                    "TypeName AS DictionaryMineralAndFossilType_GoldMineralAndFossilTypeName, \r\n     " +
                    "       T.CustomMineralAndFossilTypeName AS DictionaryMineralAndFossilType_Custom" +
                    "MineralAndFossilTypeName, \r\n            T.Description AS DictionaryMineralAndFos" +
                    "silType_Description, \r\n            T.FullDescription AS DictionaryMineralAndFoss" +
                    "ilType_FullDescription, \r\n            T.Thumbnail AS DictionaryMineralAndFossilT" +
                    "ype_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryMineralAndFossilT" +
                    "ype_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XODBModuleBus" +
                    "inessObjectsStoreContainer.X_DictionaryMineralAndFossilType AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMineralForms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView399()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMineralForms", @"
    SELECT VALUE -- Constructing DictionaryMineralForms
        [XODB.Module.BusinessObjects.DictionaryMineralForm](T1.DictionaryMineralForm_MineralFormID, T1.DictionaryMineralForm_StandardMineralFormName, T1.DictionaryMineralForm_CoalMineralFormName, T1.DictionaryMineralForm_GoldMineralFormName, T1.DictionaryMineralForm_CustomMineralFormName, T1.DictionaryMineralForm_Description, T1.DictionaryMineralForm_FullDescription, T1.DictionaryMineralForm_Thumbnail, T1.DictionaryMineralForm_OriginalFileDataID)
    FROM (
        SELECT 
            T.MineralFormID AS DictionaryMineralForm_MineralFormID, 
            T.StandardMineralFormName AS DictionaryMineralForm_StandardMineralFormName, 
            T.CoalMineralFormName AS DictionaryMineralForm_CoalMineralFormName, 
            T.GoldMineralFormName AS DictionaryMineralForm_GoldMineralFormName, 
            T.CustomMineralFormName AS DictionaryMineralForm_CustomMineralFormName, 
            T.Description AS DictionaryMineralForm_Description, 
            T.FullDescription AS DictionaryMineralForm_FullDescription, 
            T.Thumbnail AS DictionaryMineralForm_Thumbnail, 
            T.OriginalFileDataID AS DictionaryMineralForm_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralForm AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMineralStyles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView400()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMineralStyles", @"
    SELECT VALUE -- Constructing DictionaryMineralStyles
        [XODB.Module.BusinessObjects.DictionaryMineralStyle](T1.DictionaryMineralStyle_MineralStyleID, T1.DictionaryMineralStyle_StandardMineralStyleName, T1.DictionaryMineralStyle_CoalMineralStyleName, T1.DictionaryMineralStyle_GoldMineralStyleName, T1.DictionaryMineralStyle_CustomMineralStyleName, T1.DictionaryMineralStyle_Description, T1.DictionaryMineralStyle_FullDescription, T1.DictionaryMineralStyle_Thumbnail, T1.DictionaryMineralStyle_OriginalFileDataID)
    FROM (
        SELECT 
            T.MineralStyleID AS DictionaryMineralStyle_MineralStyleID, 
            T.StandardMineralStyleName AS DictionaryMineralStyle_StandardMineralStyleName, 
            T.CoalMineralStyleName AS DictionaryMineralStyle_CoalMineralStyleName, 
            T.GoldMineralStyleName AS DictionaryMineralStyle_GoldMineralStyleName, 
            T.CustomMineralStyleName AS DictionaryMineralStyle_CustomMineralStyleName, 
            T.Description AS DictionaryMineralStyle_Description, 
            T.FullDescription AS DictionaryMineralStyle_FullDescription, 
            T.Thumbnail AS DictionaryMineralStyle_Thumbnail, 
            T.OriginalFileDataID AS DictionaryMineralStyle_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralStyle AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMineralTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView401()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMineralTypes", @"
    SELECT VALUE -- Constructing DictionaryMineralTypes
        [XODB.Module.BusinessObjects.DictionaryMineralType](T1.DictionaryMineralType_MineralTypeID, T1.DictionaryMineralType_StandardMineralTypeName, T1.DictionaryMineralType_CoalMineralTypeName, T1.DictionaryMineralType_GoldMineralTypeName, T1.DictionaryMineralType_CustomMineralTypeName, T1.DictionaryMineralType_Description, T1.DictionaryMineralType_FullDescription, T1.DictionaryMineralType_Thumbnail, T1.DictionaryMineralType_OriginalFileDataID)
    FROM (
        SELECT 
            T.MineralTypeID AS DictionaryMineralType_MineralTypeID, 
            T.StandardMineralTypeName AS DictionaryMineralType_StandardMineralTypeName, 
            T.CoalMineralTypeName AS DictionaryMineralType_CoalMineralTypeName, 
            T.GoldMineralTypeName AS DictionaryMineralType_GoldMineralTypeName, 
            T.CustomMineralTypeName AS DictionaryMineralType_CustomMineralTypeName, 
            T.Description AS DictionaryMineralType_Description, 
            T.FullDescription AS DictionaryMineralType_FullDescription, 
            T.Thumbnail AS DictionaryMineralType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryMineralType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryMineralType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView402()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3177);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryModels\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.DictionaryModel](T1.DictionaryModel_ModelID, T1.DictionaryModel_Parent");
            viewString.Append("ModelID, T1.DictionaryModel_StandardModelName, T1.DictionaryModel_EcriModelName,");
            viewString.Append(" T1.DictionaryModel_CustomModelName, T1.DictionaryModel_CompanyID, T1.Dictionary");
            viewString.Append("Model_OriginalManufacturerName, T1.DictionaryModel_ModelStatusID, T1.DictionaryM");
            viewString.Append("odel_DeviceTypeID, T1.DictionaryModel_IsMake, T1.DictionaryModel_ManufacturedFro");
            viewString.Append("m, T1.DictionaryModel_ManufacturedUntil, T1.DictionaryModel_SupportedUntil, T1.D");
            viewString.Append("ictionaryModel_EstimatedLifetimeUnitID, T1.DictionaryModel_EstimatedLifetime, T1");
            viewString.Append(".DictionaryModel_Description, T1.DictionaryModel_FullDescription, T1.DictionaryM");
            viewString.Append("odel_Thumbnail, T1.DictionaryModel_OriginalFileDataID, T1.DictionaryModel_Versio");
            viewString.Append("n, T1.DictionaryModel_VersionAntecedentID, T1.DictionaryModel_VersionCertainty, ");
            viewString.Append("T1.DictionaryModel_VersionWorkflowInstanceID, T1.DictionaryModel_VersionUpdatedB");
            viewString.Append("y, T1.DictionaryModel_VersionDeletedBy, T1.DictionaryModel_VersionOwnerContactID");
            viewString.Append(", T1.DictionaryModel_VersionOwnerCompanyID, T1.DictionaryModel_VersionUpdated)\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.ModelID AS DictionaryModel_ModelID, \r");
            viewString.Append("\n            T.ParentModelID AS DictionaryModel_ParentModelID, \r\n            T.S");
            viewString.Append("tandardModelName AS DictionaryModel_StandardModelName, \r\n            T.EcriModel");
            viewString.Append("Name AS DictionaryModel_EcriModelName, \r\n            T.CustomModelName AS Dictio");
            viewString.Append("naryModel_CustomModelName, \r\n            T.CompanyID AS DictionaryModel_CompanyI");
            viewString.Append("D, \r\n            T.OriginalManufacturerName AS DictionaryModel_OriginalManufactu");
            viewString.Append("rerName, \r\n            T.ModelStatusID AS DictionaryModel_ModelStatusID, \r\n     ");
            viewString.Append("       T.DeviceTypeID AS DictionaryModel_DeviceTypeID, \r\n            T.IsMake AS");
            viewString.Append(" DictionaryModel_IsMake, \r\n            T.ManufacturedFrom AS DictionaryModel_Man");
            viewString.Append("ufacturedFrom, \r\n            T.ManufacturedUntil AS DictionaryModel_Manufactured");
            viewString.Append("Until, \r\n            T.SupportedUntil AS DictionaryModel_SupportedUntil, \r\n     ");
            viewString.Append("       T.EstimatedLifetimeUnitID AS DictionaryModel_EstimatedLifetimeUnitID, \r\n ");
            viewString.Append("           T.EstimatedLifetime AS DictionaryModel_EstimatedLifetime, \r\n         ");
            viewString.Append("   T.Description AS DictionaryModel_Description, \r\n            T.FullDescription");
            viewString.Append(" AS DictionaryModel_FullDescription, \r\n            T.Thumbnail AS DictionaryMode");
            viewString.Append("l_Thumbnail, \r\n            T.OriginalFileDataID AS DictionaryModel_OriginalFileD");
            viewString.Append("ataID, \r\n            T.Version AS DictionaryModel_Version, \r\n            T.Versi");
            viewString.Append("onAntecedentID AS DictionaryModel_VersionAntecedentID, \r\n            T.VersionCe");
            viewString.Append("rtainty AS DictionaryModel_VersionCertainty, \r\n            T.VersionWorkflowInst");
            viewString.Append("anceID AS DictionaryModel_VersionWorkflowInstanceID, \r\n            T.VersionUpda");
            viewString.Append("tedBy AS DictionaryModel_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS D");
            viewString.Append("ictionaryModel_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Dictio");
            viewString.Append("naryModel_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Dictio");
            viewString.Append("naryModel_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS DictionaryMod");
            viewString.Append("el_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusiness");
            viewString.Append("ObjectsStoreContainer.X_DictionaryModel AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryModels", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryModelCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView403()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryModelCategories", @"
    SELECT VALUE -- Constructing DictionaryModelCategories
        [XODB.Module.BusinessObjects.DictionaryModelCategory](T1.DictionaryModelCategory_ModelCategoryID, T1.DictionaryModelCategory_ModelID, T1.DictionaryModelCategory_CategoryDeviceTypeID)
    FROM (
        SELECT 
            T.ModelCategoryID AS DictionaryModelCategory_ModelCategoryID, 
            T.ModelID AS DictionaryModelCategory_ModelID, 
            T.CategoryDeviceTypeID AS DictionaryModelCategory_CategoryDeviceTypeID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryModelRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView404()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryModelRelations", @"
    SELECT VALUE -- Constructing DictionaryModelRelations
        [XODB.Module.BusinessObjects.DictionaryModelRelation](T1.DictionaryModelRelation_ModelRelationID, T1.DictionaryModelRelation_OriginalModelID, T1.DictionaryModelRelation_RelatedModelID, T1.DictionaryModelRelation_RelationTypeID, T1.DictionaryModelRelation_Related)
    FROM (
        SELECT 
            T.ModelRelationID AS DictionaryModelRelation_ModelRelationID, 
            T.OriginalModelID AS DictionaryModelRelation_OriginalModelID, 
            T.RelatedModelID AS DictionaryModelRelation_RelatedModelID, 
            T.RelationTypeID AS DictionaryModelRelation_RelationTypeID, 
            T.Related AS DictionaryModelRelation_Related, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelRelation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryModelStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView405()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryModelStatus", @"
    SELECT VALUE -- Constructing DictionaryModelStatus
        [XODB.Module.BusinessObjects.DictionaryModelStatus](T1.DictionaryModelStatus_ModelStatusID, T1.DictionaryModelStatus_StandardModelStatusName, T1.DictionaryModelStatus_CustomModelStatusName, T1.DictionaryModelStatus_Description, T1.DictionaryModelStatus_FullDescription, T1.DictionaryModelStatus_Thumbnail, T1.DictionaryModelStatus_OriginalFileDataID)
    FROM (
        SELECT 
            T.ModelStatusID AS DictionaryModelStatus_ModelStatusID, 
            T.StandardModelStatusName AS DictionaryModelStatus_StandardModelStatusName, 
            T.CustomModelStatusName AS DictionaryModelStatus_CustomModelStatusName, 
            T.Description AS DictionaryModelStatus_Description, 
            T.FullDescription AS DictionaryModelStatus_FullDescription, 
            T.Thumbnail AS DictionaryModelStatus_Thumbnail, 
            T.OriginalFileDataID AS DictionaryModelStatus_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryModelStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryMoistureSensitivities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView406()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryMoistureSensitivities", "\r\n    SELECT VALUE -- Constructing DictionaryMoistureSensitivities\r\n        [XODB" +
                    ".Module.BusinessObjects.DictionaryMoistureSensitivity](T1.DictionaryMoistureSens" +
                    "itivity_MoistureSensitivityID, T1.DictionaryMoistureSensitivity_StandardMoisture" +
                    "SensitivityName, T1.DictionaryMoistureSensitivity_CoalMoistureSensitivityName, T" +
                    "1.DictionaryMoistureSensitivity_GoldMoistureSensitivityName, T1.DictionaryMoistu" +
                    "reSensitivity_CustomMoistureSensitivityName, T1.DictionaryMoistureSensitivity_De" +
                    "scription, T1.DictionaryMoistureSensitivity_FullDescription, T1.DictionaryMoistu" +
                    "reSensitivity_Thumbnail, T1.DictionaryMoistureSensitivity_OriginalFileDataID)\r\n " +
                    "   FROM (\r\n        SELECT \r\n            T.MoistureSensitivityID AS DictionaryMoi" +
                    "stureSensitivity_MoistureSensitivityID, \r\n            T.StandardMoistureSensitiv" +
                    "ityName AS DictionaryMoistureSensitivity_StandardMoistureSensitivityName, \r\n    " +
                    "        T.CoalMoistureSensitivityName AS DictionaryMoistureSensitivity_CoalMoist" +
                    "ureSensitivityName, \r\n            T.GoldMoistureSensitivityName AS DictionaryMoi" +
                    "stureSensitivity_GoldMoistureSensitivityName, \r\n            T.CustomMoistureSens" +
                    "itivityName AS DictionaryMoistureSensitivity_CustomMoistureSensitivityName, \r\n  " +
                    "          T.Description AS DictionaryMoistureSensitivity_Description, \r\n        " +
                    "    T.FullDescription AS DictionaryMoistureSensitivity_FullDescription, \r\n      " +
                    "      T.Thumbnail AS DictionaryMoistureSensitivity_Thumbnail, \r\n            T.Or" +
                    "iginalFileDataID AS DictionaryMoistureSensitivity_OriginalFileDataID, \r\n        " +
                    "    True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Dicti" +
                    "onaryMoistureSensitivity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPartStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView407()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPartStatus", @"
    SELECT VALUE -- Constructing DictionaryPartStatus
        [XODB.Module.BusinessObjects.DictionaryPartStatus](T1.DictionaryPartStatus_PartStatusID, T1.DictionaryPartStatus_StandardPartStatusName, T1.DictionaryPartStatus_CustomPartStatusName, T1.DictionaryPartStatus_Description, T1.DictionaryPartStatus_FullDescription, T1.DictionaryPartStatus_Thumbnail, T1.DictionaryPartStatus_OriginalFileDataID)
    FROM (
        SELECT 
            T.PartStatusID AS DictionaryPartStatus_PartStatusID, 
            T.StandardPartStatusName AS DictionaryPartStatus_StandardPartStatusName, 
            T.CustomPartStatusName AS DictionaryPartStatus_CustomPartStatusName, 
            T.Description AS DictionaryPartStatus_Description, 
            T.FullDescription AS DictionaryPartStatus_FullDescription, 
            T.Thumbnail AS DictionaryPartStatus_Thumbnail, 
            T.OriginalFileDataID AS DictionaryPartStatus_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryPartStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPlasticities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView408()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPlasticities", @"
    SELECT VALUE -- Constructing DictionaryPlasticities
        [XODB.Module.BusinessObjects.DictionaryPlasticity](T1.DictionaryPlasticity_PlasticityID, T1.DictionaryPlasticity_StandardPlasticityName, T1.DictionaryPlasticity_CoalPlasticityName, T1.DictionaryPlasticity_GoldPlasticityName, T1.DictionaryPlasticity_CustomPlasticityName, T1.DictionaryPlasticity_Description, T1.DictionaryPlasticity_FullDescription, T1.DictionaryPlasticity_Thumbnail, T1.DictionaryPlasticity_OriginalFileDataID)
    FROM (
        SELECT 
            T.PlasticityID AS DictionaryPlasticity_PlasticityID, 
            T.StandardPlasticityName AS DictionaryPlasticity_StandardPlasticityName, 
            T.CoalPlasticityName AS DictionaryPlasticity_CoalPlasticityName, 
            T.GoldPlasticityName AS DictionaryPlasticity_GoldPlasticityName, 
            T.CustomPlasticityName AS DictionaryPlasticity_CustomPlasticityName, 
            T.Description AS DictionaryPlasticity_Description, 
            T.FullDescription AS DictionaryPlasticity_FullDescription, 
            T.Thumbnail AS DictionaryPlasticity_Thumbnail, 
            T.OriginalFileDataID AS DictionaryPlasticity_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryPlasticity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPlies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView409()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPlies", @"
    SELECT VALUE -- Constructing DictionaryPlies
        [XODB.Module.BusinessObjects.DictionaryPly](T1.DictionaryPly_PlyID, T1.DictionaryPly_StandardPlyName, T1.DictionaryPly_Description, T1.DictionaryPly_FullDescription, T1.DictionaryPly_Thumbnail, T1.DictionaryPly_OriginalFileDataID)
    FROM (
        SELECT 
            T.PlyID AS DictionaryPly_PlyID, 
            T.StandardPlyName AS DictionaryPly_StandardPlyName, 
            T.Description AS DictionaryPly_Description, 
            T.FullDescription AS DictionaryPly_FullDescription, 
            T.Thumbnail AS DictionaryPly_Thumbnail, 
            T.OriginalFileDataID AS DictionaryPly_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryPly AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPlyAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView410()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPlyAlias", @"
    SELECT VALUE -- Constructing DictionaryPlyAlias
        [XODB.Module.BusinessObjects.DictionaryPlyAlias](T1.DictionaryPlyAlias_PlyAliasID, T1.DictionaryPlyAlias_PlyID, T1.DictionaryPlyAlias_CustomPlyName, T1.DictionaryPlyAlias_FullDescription, T1.DictionaryPlyAlias_Thumbnail, T1.DictionaryPlyAlias_OriginalFileDataID)
    FROM (
        SELECT 
            T.PlyAliasID AS DictionaryPlyAlias_PlyAliasID, 
            T.PlyID AS DictionaryPlyAlias_PlyID, 
            T.CustomPlyName AS DictionaryPlyAlias_CustomPlyName, 
            T.FullDescription AS DictionaryPlyAlias_FullDescription, 
            T.Thumbnail AS DictionaryPlyAlias_Thumbnail, 
            T.OriginalFileDataID AS DictionaryPlyAlias_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryPlyAlias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPointLoadTestTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView411()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPointLoadTestTypes", "\r\n    SELECT VALUE -- Constructing DictionaryPointLoadTestTypes\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.DictionaryPointLoadTestType](T1.DictionaryPointLoadTestType" +
                    "_PointLoadTestTypeID, T1.DictionaryPointLoadTestType_StandardPointLoadTestTypeNa" +
                    "me, T1.DictionaryPointLoadTestType_CoalPointLoadTestTypeName, T1.DictionaryPoint" +
                    "LoadTestType_GoldPointLoadTestTypeName, T1.DictionaryPointLoadTestType_CustomPoi" +
                    "ntLoadTestTypeName, T1.DictionaryPointLoadTestType_Description, T1.DictionaryPoi" +
                    "ntLoadTestType_FullDescription, T1.DictionaryPointLoadTestType_Thumbnail, T1.Dic" +
                    "tionaryPointLoadTestType_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.PointLoadTestTypeID AS DictionaryPointLoadTestType_PointLoadTestTypeID," +
                    " \r\n            T.StandardPointLoadTestTypeName AS DictionaryPointLoadTestType_St" +
                    "andardPointLoadTestTypeName, \r\n            T.CoalPointLoadTestTypeName AS Dictio" +
                    "naryPointLoadTestType_CoalPointLoadTestTypeName, \r\n            T.GoldPointLoadTe" +
                    "stTypeName AS DictionaryPointLoadTestType_GoldPointLoadTestTypeName, \r\n         " +
                    "   T.CustomPointLoadTestTypeName AS DictionaryPointLoadTestType_CustomPointLoadT" +
                    "estTypeName, \r\n            T.Description AS DictionaryPointLoadTestType_Descript" +
                    "ion, \r\n            T.FullDescription AS DictionaryPointLoadTestType_FullDescript" +
                    "ion, \r\n            T.Thumbnail AS DictionaryPointLoadTestType_Thumbnail, \r\n     " +
                    "       T.OriginalFileDataID AS DictionaryPointLoadTestType_OriginalFileDataID, \r" +
                    "\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContaine" +
                    "r.X_DictionaryPointLoadTestType AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryPositions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView412()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryPositions", @"
    SELECT VALUE -- Constructing DictionaryPositions
        [XODB.Module.BusinessObjects.DictionaryPosition](T1.DictionaryPosition_PositionID, T1.DictionaryPosition_StandardPositionName, T1.DictionaryPosition_CoalPositionName, T1.DictionaryPosition_GoldPositionName, T1.DictionaryPosition_CustomPositionName, T1.DictionaryPosition_Description, T1.DictionaryPosition_FullDescription, T1.DictionaryPosition_Thumbnail, T1.DictionaryPosition_OriginalFileDataID)
    FROM (
        SELECT 
            T.PositionID AS DictionaryPosition_PositionID, 
            T.StandardPositionName AS DictionaryPosition_StandardPositionName, 
            T.CoalPositionName AS DictionaryPosition_CoalPositionName, 
            T.GoldPositionName AS DictionaryPosition_GoldPositionName, 
            T.CustomPositionName AS DictionaryPosition_CustomPositionName, 
            T.Description AS DictionaryPosition_Description, 
            T.FullDescription AS DictionaryPosition_FullDescription, 
            T.Thumbnail AS DictionaryPosition_Thumbnail, 
            T.OriginalFileDataID AS DictionaryPosition_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryPosition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryProfessions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView413()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryProfessions", @"
    SELECT VALUE -- Constructing DictionaryProfessions
        [XODB.Module.BusinessObjects.DictionaryProfession](T1.DictionaryProfession_ProfessionID, T1.DictionaryProfession_StandardProfessionName, T1.DictionaryProfession_CoalProfessionName, T1.DictionaryProfession_GoldProfessionName, T1.DictionaryProfession_CustomProfessionName, T1.DictionaryProfession_Description, T1.DictionaryProfession_FullDescription, T1.DictionaryProfession_Thumbnail, T1.DictionaryProfession_OriginalFileDataID)
    FROM (
        SELECT 
            T.ProfessionID AS DictionaryProfession_ProfessionID, 
            T.StandardProfessionName AS DictionaryProfession_StandardProfessionName, 
            T.CoalProfessionName AS DictionaryProfession_CoalProfessionName, 
            T.GoldProfessionName AS DictionaryProfession_GoldProfessionName, 
            T.CustomProfessionName AS DictionaryProfession_CustomProfessionName, 
            T.Description AS DictionaryProfession_Description, 
            T.FullDescription AS DictionaryProfession_FullDescription, 
            T.Thumbnail AS DictionaryProfession_Thumbnail, 
            T.OriginalFileDataID AS DictionaryProfession_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryProfession AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryProvinceGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView414()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryProvinceGroups", "\r\n    SELECT VALUE -- Constructing DictionaryProvinceGroups\r\n        [XODB.Module" +
                    ".BusinessObjects.DictionaryProvinceGroup](T1.DictionaryProvinceGroup_ProvinceGro" +
                    "upID, T1.DictionaryProvinceGroup_StandardProvinceGroupName, T1.DictionaryProvinc" +
                    "eGroup_CoalProvinceGroupName, T1.DictionaryProvinceGroup_GoldProvinceGroupName, " +
                    "T1.DictionaryProvinceGroup_CustomProvinceGroupName, T1.DictionaryProvinceGroup_P" +
                    "arentProvinceTypeID, T1.DictionaryProvinceGroup_Description, T1.DictionaryProvin" +
                    "ceGroup_FullDescription, T1.DictionaryProvinceGroup_Thumbnail, T1.DictionaryProv" +
                    "inceGroup_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.Provin" +
                    "ceGroupID AS DictionaryProvinceGroup_ProvinceGroupID, \r\n            T.StandardPr" +
                    "ovinceGroupName AS DictionaryProvinceGroup_StandardProvinceGroupName, \r\n        " +
                    "    T.CoalProvinceGroupName AS DictionaryProvinceGroup_CoalProvinceGroupName, \r\n" +
                    "            T.GoldProvinceGroupName AS DictionaryProvinceGroup_GoldProvinceGroup" +
                    "Name, \r\n            T.CustomProvinceGroupName AS DictionaryProvinceGroup_CustomP" +
                    "rovinceGroupName, \r\n            T.ParentProvinceTypeID AS DictionaryProvinceGrou" +
                    "p_ParentProvinceTypeID, \r\n            T.Description AS DictionaryProvinceGroup_D" +
                    "escription, \r\n            T.FullDescription AS DictionaryProvinceGroup_FullDescr" +
                    "iption, \r\n            T.Thumbnail AS DictionaryProvinceGroup_Thumbnail, \r\n      " +
                    "      T.OriginalFileDataID AS DictionaryProvinceGroup_OriginalFileDataID, \r\n    " +
                    "        True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_D" +
                    "ictionaryProvinceGroup AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryProvinceTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView415()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryProvinceTypes", @"
    SELECT VALUE -- Constructing DictionaryProvinceTypes
        [XODB.Module.BusinessObjects.DictionaryProvinceType](T1.DictionaryProvinceType_ProvinceTypeID, T1.DictionaryProvinceType_StandardProvinceTypeName, T1.DictionaryProvinceType_CoalProvinceTypeName, T1.DictionaryProvinceType_GoldProvinceTypeName, T1.DictionaryProvinceType_CustomProvinceTypeName, T1.DictionaryProvinceType_Description, T1.DictionaryProvinceType_FullDescription, T1.DictionaryProvinceType_Thumbnail, T1.DictionaryProvinceType_OriginalFileDataID)
    FROM (
        SELECT 
            T.ProvinceTypeID AS DictionaryProvinceType_ProvinceTypeID, 
            T.StandardProvinceTypeName AS DictionaryProvinceType_StandardProvinceTypeName, 
            T.CoalProvinceTypeName AS DictionaryProvinceType_CoalProvinceTypeName, 
            T.GoldProvinceTypeName AS DictionaryProvinceType_GoldProvinceTypeName, 
            T.CustomProvinceTypeName AS DictionaryProvinceType_CustomProvinceTypeName, 
            T.Description AS DictionaryProvinceType_Description, 
            T.FullDescription AS DictionaryProvinceType_FullDescription, 
            T.Thumbnail AS DictionaryProvinceType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryProvinceType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryProvinceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryRelationTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView416()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryRelationTypes", @"
    SELECT VALUE -- Constructing DictionaryRelationTypes
        [XODB.Module.BusinessObjects.DictionaryRelationType](T1.DictionaryRelationType_RelationTypeID, T1.DictionaryRelationType_StandardRelationTypeName, T1.DictionaryRelationType_CoalRelationTypeName, T1.DictionaryRelationType_GoldRelationTypeName, T1.DictionaryRelationType_CustomRelationTypeName, T1.DictionaryRelationType_Description, T1.DictionaryRelationType_FullDescription, T1.DictionaryRelationType_Thumbnail, T1.DictionaryRelationType_OriginalFileDataID)
    FROM (
        SELECT 
            T.RelationTypeID AS DictionaryRelationType_RelationTypeID, 
            T.StandardRelationTypeName AS DictionaryRelationType_StandardRelationTypeName, 
            T.CoalRelationTypeName AS DictionaryRelationType_CoalRelationTypeName, 
            T.GoldRelationTypeName AS DictionaryRelationType_GoldRelationTypeName, 
            T.CustomRelationTypeName AS DictionaryRelationType_CustomRelationTypeName, 
            T.Description AS DictionaryRelationType_Description, 
            T.FullDescription AS DictionaryRelationType_FullDescription, 
            T.Thumbnail AS DictionaryRelationType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryRelationType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryRelationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryRockMassUnitTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView417()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryRockMassUnitTypes", "\r\n    SELECT VALUE -- Constructing DictionaryRockMassUnitTypes\r\n        [XODB.Mod" +
                    "ule.BusinessObjects.DictionaryRockMassUnitType](T1.DictionaryRockMassUnitType_Ro" +
                    "ckMassUnitTypeID, T1.DictionaryRockMassUnitType_StandardRockMassUnitTypeName, T1" +
                    ".DictionaryRockMassUnitType_CoalRockMassUnitTypeName, T1.DictionaryRockMassUnitT" +
                    "ype_GoldRockMassUnitTypeName, T1.DictionaryRockMassUnitType_CustomRockMassUnitTy" +
                    "peName, T1.DictionaryRockMassUnitType_Description, T1.DictionaryRockMassUnitType" +
                    "_FullDescription, T1.DictionaryRockMassUnitType_Thumbnail, T1.DictionaryRockMass" +
                    "UnitType_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.RockMas" +
                    "sUnitTypeID AS DictionaryRockMassUnitType_RockMassUnitTypeID, \r\n            T.St" +
                    "andardRockMassUnitTypeName AS DictionaryRockMassUnitType_StandardRockMassUnitTyp" +
                    "eName, \r\n            T.CoalRockMassUnitTypeName AS DictionaryRockMassUnitType_Co" +
                    "alRockMassUnitTypeName, \r\n            T.GoldRockMassUnitTypeName AS DictionaryRo" +
                    "ckMassUnitType_GoldRockMassUnitTypeName, \r\n            T.CustomRockMassUnitTypeN" +
                    "ame AS DictionaryRockMassUnitType_CustomRockMassUnitTypeName, \r\n            T.De" +
                    "scription AS DictionaryRockMassUnitType_Description, \r\n            T.FullDescrip" +
                    "tion AS DictionaryRockMassUnitType_FullDescription, \r\n            T.Thumbnail AS" +
                    " DictionaryRockMassUnitType_Thumbnail, \r\n            T.OriginalFileDataID AS Dic" +
                    "tionaryRockMassUnitType_OriginalFileDataID, \r\n            True AS _from0\r\n      " +
                    "  FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryRockMassUnitType AS T" +
                    "\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySampleCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView418()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySampleCategories", @"
    SELECT VALUE -- Constructing DictionarySampleCategories
        [XODB.Module.BusinessObjects.DictionarySampleCategory](T1.DictionarySampleCategory_SampleCategoryID, T1.DictionarySampleCategory_StandardSampleCategoryName, T1.DictionarySampleCategory_CoalSampleCategoryName, T1.DictionarySampleCategory_GoldSampleCategoryName, T1.DictionarySampleCategory_CustomSampleCategoryName, T1.DictionarySampleCategory_Description, T1.DictionarySampleCategory_FullDescription, T1.DictionarySampleCategory_Thumbnail, T1.DictionarySampleCategory_OriginalFileDataID)
    FROM (
        SELECT 
            T.SampleCategoryID AS DictionarySampleCategory_SampleCategoryID, 
            T.StandardSampleCategoryName AS DictionarySampleCategory_StandardSampleCategoryName, 
            T.CoalSampleCategoryName AS DictionarySampleCategory_CoalSampleCategoryName, 
            T.GoldSampleCategoryName AS DictionarySampleCategory_GoldSampleCategoryName, 
            T.CustomSampleCategoryName AS DictionarySampleCategory_CustomSampleCategoryName, 
            T.Description AS DictionarySampleCategory_Description, 
            T.FullDescription AS DictionarySampleCategory_FullDescription, 
            T.Thumbnail AS DictionarySampleCategory_Thumbnail, 
            T.OriginalFileDataID AS DictionarySampleCategory_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySampleStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView419()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySampleStates", @"
    SELECT VALUE -- Constructing DictionarySampleStates
        [XODB.Module.BusinessObjects.DictionarySampleState](T1.DictionarySampleState_SampleStateID, T1.DictionarySampleState_StandardSampleStateName, T1.DictionarySampleState_CoalSampleStateName, T1.DictionarySampleState_GoldSampleStateName, T1.DictionarySampleState_CustomSampleStateName, T1.DictionarySampleState_Description, T1.DictionarySampleState_FullDescription, T1.DictionarySampleState_Thumbnail, T1.DictionarySampleState_OriginalFileDataID)
    FROM (
        SELECT 
            T.SampleStateID AS DictionarySampleState_SampleStateID, 
            T.StandardSampleStateName AS DictionarySampleState_StandardSampleStateName, 
            T.CoalSampleStateName AS DictionarySampleState_CoalSampleStateName, 
            T.GoldSampleStateName AS DictionarySampleState_GoldSampleStateName, 
            T.CustomSampleStateName AS DictionarySampleState_CustomSampleStateName, 
            T.Description AS DictionarySampleState_Description, 
            T.FullDescription AS DictionarySampleState_FullDescription, 
            T.Thumbnail AS DictionarySampleState_Thumbnail, 
            T.OriginalFileDataID AS DictionarySampleState_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySampleTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView420()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySampleTypes", @"
    SELECT VALUE -- Constructing DictionarySampleTypes
        [XODB.Module.BusinessObjects.DictionarySampleType](T1.DictionarySampleType_SampleTypeID, T1.DictionarySampleType_StandardSampleTypeName, T1.DictionarySampleType_CoalSampleTypeName, T1.DictionarySampleType_GoldSampleTypeName, T1.DictionarySampleType_CustomSampleTypeName, T1.DictionarySampleType_Description, T1.DictionarySampleType_FullDescription, T1.DictionarySampleType_Thumbnail, T1.DictionarySampleType_OriginalFileDataID)
    FROM (
        SELECT 
            T.SampleTypeID AS DictionarySampleType_SampleTypeID, 
            T.StandardSampleTypeName AS DictionarySampleType_StandardSampleTypeName, 
            T.CoalSampleTypeName AS DictionarySampleType_CoalSampleTypeName, 
            T.GoldSampleTypeName AS DictionarySampleType_GoldSampleTypeName, 
            T.CustomSampleTypeName AS DictionarySampleType_CustomSampleTypeName, 
            T.Description AS DictionarySampleType_Description, 
            T.FullDescription AS DictionarySampleType_FullDescription, 
            T.Thumbnail AS DictionarySampleType_Thumbnail, 
            T.OriginalFileDataID AS DictionarySampleType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionarySampleType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySeams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView421()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySeams", @"
    SELECT VALUE -- Constructing DictionarySeams
        [XODB.Module.BusinessObjects.DictionarySeam](T1.DictionarySeam_SeamID, T1.DictionarySeam_StandardSeamName, T1.DictionarySeam_Description, T1.DictionarySeam_FullDescription, T1.DictionarySeam_Thumbnail, T1.DictionarySeam_OriginalFileDataID)
    FROM (
        SELECT 
            T.SeamID AS DictionarySeam_SeamID, 
            T.StandardSeamName AS DictionarySeam_StandardSeamName, 
            T.Description AS DictionarySeam_Description, 
            T.FullDescription AS DictionarySeam_FullDescription, 
            T.Thumbnail AS DictionarySeam_Thumbnail, 
            T.OriginalFileDataID AS DictionarySeam_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionarySeam AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySeamAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView422()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySeamAlias", @"
    SELECT VALUE -- Constructing DictionarySeamAlias
        [XODB.Module.BusinessObjects.DictionarySeamAlias](T1.DictionarySeamAlias_SeamAliasID, T1.DictionarySeamAlias_SeamID, T1.DictionarySeamAlias_CustomSeamName, T1.DictionarySeamAlias_FullDescription, T1.DictionarySeamAlias_Thumbnail, T1.DictionarySeamAlias_OriginalFileDataID)
    FROM (
        SELECT 
            T.SeamAliasID AS DictionarySeamAlias_SeamAliasID, 
            T.SeamID AS DictionarySeamAlias_SeamID, 
            T.CustomSeamName AS DictionarySeamAlias_CustomSeamName, 
            T.FullDescription AS DictionarySeamAlias_FullDescription, 
            T.Thumbnail AS DictionarySeamAlias_Thumbnail, 
            T.OriginalFileDataID AS DictionarySeamAlias_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionarySeamAlias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySedimentaryFeatures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView423()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySedimentaryFeatures", "\r\n    SELECT VALUE -- Constructing DictionarySedimentaryFeatures\r\n        [XODB.M" +
                    "odule.BusinessObjects.DictionarySedimentaryFeature](T1.DictionarySedimentaryFeat" +
                    "ure_SedimentaryFeatureID, T1.DictionarySedimentaryFeature_StandardSedimentaryFea" +
                    "tureName, T1.DictionarySedimentaryFeature_CoalSedimentaryFeatureName, T1.Diction" +
                    "arySedimentaryFeature_GoldSedimentaryFeatureName, T1.DictionarySedimentaryFeatur" +
                    "e_CustomSedimentaryFeatureName, T1.DictionarySedimentaryFeature_Description, T1." +
                    "DictionarySedimentaryFeature_FullDescription, T1.DictionarySedimentaryFeature_Th" +
                    "umbnail, T1.DictionarySedimentaryFeature_OriginalFileDataID)\r\n    FROM (\r\n      " +
                    "  SELECT \r\n            T.SedimentaryFeatureID AS DictionarySedimentaryFeature_Se" +
                    "dimentaryFeatureID, \r\n            T.StandardSedimentaryFeatureName AS Dictionary" +
                    "SedimentaryFeature_StandardSedimentaryFeatureName, \r\n            T.CoalSedimenta" +
                    "ryFeatureName AS DictionarySedimentaryFeature_CoalSedimentaryFeatureName, \r\n    " +
                    "        T.GoldSedimentaryFeatureName AS DictionarySedimentaryFeature_GoldSedimen" +
                    "taryFeatureName, \r\n            T.CustomSedimentaryFeatureName AS DictionarySedim" +
                    "entaryFeature_CustomSedimentaryFeatureName, \r\n            T.Description AS Dicti" +
                    "onarySedimentaryFeature_Description, \r\n            T.FullDescription AS Dictiona" +
                    "rySedimentaryFeature_FullDescription, \r\n            T.Thumbnail AS DictionarySed" +
                    "imentaryFeature_Thumbnail, \r\n            T.OriginalFileDataID AS DictionarySedim" +
                    "entaryFeature_OriginalFileDataID, \r\n            True AS _from0\r\n        FROM XOD" +
                    "BModuleBusinessObjectsStoreContainer.X_DictionarySedimentaryFeature AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryShades
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView424()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryShades", @"
    SELECT VALUE -- Constructing DictionaryShades
        [XODB.Module.BusinessObjects.DictionaryShade](T1.DictionaryShade_ShadeID, T1.DictionaryShade_StandardShadeName, T1.DictionaryShade_CoalShadeName, T1.DictionaryShade_GoldShadeName, T1.DictionaryShade_CustomShadeName, T1.DictionaryShade_Description, T1.DictionaryShade_FullDescription, T1.DictionaryShade_Thumbnail, T1.DictionaryShade_OriginalFileDataID)
    FROM (
        SELECT 
            T.ShadeID AS DictionaryShade_ShadeID, 
            T.StandardShadeName AS DictionaryShade_StandardShadeName, 
            T.CoalShadeName AS DictionaryShade_CoalShadeName, 
            T.GoldShadeName AS DictionaryShade_GoldShadeName, 
            T.CustomShadeName AS DictionaryShade_CustomShadeName, 
            T.Description AS DictionaryShade_Description, 
            T.FullDescription AS DictionaryShade_FullDescription, 
            T.Thumbnail AS DictionaryShade_Thumbnail, 
            T.OriginalFileDataID AS DictionaryShade_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryShade AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryShapes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView425()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryShapes", @"
    SELECT VALUE -- Constructing DictionaryShapes
        [XODB.Module.BusinessObjects.DictionaryShape](T1.DictionaryShape_ShapeID, T1.DictionaryShape_StandardShapeName, T1.DictionaryShape_CoalShapeName, T1.DictionaryShape_GoldShapeName, T1.DictionaryShape_CustomShapeName, T1.DictionaryShape_Description, T1.DictionaryShape_FullDescription, T1.DictionaryShape_Thumbnail, T1.DictionaryShape_OriginalFileDataID)
    FROM (
        SELECT 
            T.ShapeID AS DictionaryShape_ShapeID, 
            T.StandardShapeName AS DictionaryShape_StandardShapeName, 
            T.CoalShapeName AS DictionaryShape_CoalShapeName, 
            T.GoldShapeName AS DictionaryShape_GoldShapeName, 
            T.CustomShapeName AS DictionaryShape_CustomShapeName, 
            T.Description AS DictionaryShape_Description, 
            T.FullDescription AS DictionaryShape_FullDescription, 
            T.Thumbnail AS DictionaryShape_Thumbnail, 
            T.OriginalFileDataID AS DictionaryShape_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryShape AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryStratigraphies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView426()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryStratigraphies", @"
    SELECT VALUE -- Constructing DictionaryStratigraphies
        [XODB.Module.BusinessObjects.DictionaryStratigraphy](T1.DictionaryStratigraphy_StratigraphyID, T1.DictionaryStratigraphy_StandardStratigraphyName, T1.DictionaryStratigraphy_CoalStratigraphyName, T1.DictionaryStratigraphy_GoldStratigraphyName, T1.DictionaryStratigraphy_CustomStratigraphyName, T1.DictionaryStratigraphy_Description, T1.DictionaryStratigraphy_FullDescription, T1.DictionaryStratigraphy_Thumbnail, T1.DictionaryStratigraphy_OriginalFileDataID)
    FROM (
        SELECT 
            T.StratigraphyID AS DictionaryStratigraphy_StratigraphyID, 
            T.StandardStratigraphyName AS DictionaryStratigraphy_StandardStratigraphyName, 
            T.CoalStratigraphyName AS DictionaryStratigraphy_CoalStratigraphyName, 
            T.GoldStratigraphyName AS DictionaryStratigraphy_GoldStratigraphyName, 
            T.CustomStratigraphyName AS DictionaryStratigraphy_CustomStratigraphyName, 
            T.Description AS DictionaryStratigraphy_Description, 
            T.FullDescription AS DictionaryStratigraphy_FullDescription, 
            T.Thumbnail AS DictionaryStratigraphy_Thumbnail, 
            T.OriginalFileDataID AS DictionaryStratigraphy_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryStratigraphy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySurfaceRoughnesses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView427()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySurfaceRoughnesses", "\r\n    SELECT VALUE -- Constructing DictionarySurfaceRoughnesses\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.DictionarySurfaceRoughness](T1.DictionarySurfaceRoughness_S" +
                    "urfaceRoughnessID, T1.DictionarySurfaceRoughness_StandardSurfaceRoughnessName, T" +
                    "1.DictionarySurfaceRoughness_CoalSurfaceRoughnessName, T1.DictionarySurfaceRough" +
                    "ness_GoldSurfaceRoughnessName, T1.DictionarySurfaceRoughness_CustomSurfaceRoughn" +
                    "essName, T1.DictionarySurfaceRoughness_Description, T1.DictionarySurfaceRoughnes" +
                    "s_FullDescription, T1.DictionarySurfaceRoughness_Thumbnail, T1.DictionarySurface" +
                    "Roughness_OriginalFileDataID)\r\n    FROM (\r\n        SELECT \r\n            T.Surfac" +
                    "eRoughnessID AS DictionarySurfaceRoughness_SurfaceRoughnessID, \r\n            T.S" +
                    "tandardSurfaceRoughnessName AS DictionarySurfaceRoughness_StandardSurfaceRoughne" +
                    "ssName, \r\n            T.CoalSurfaceRoughnessName AS DictionarySurfaceRoughness_C" +
                    "oalSurfaceRoughnessName, \r\n            T.GoldSurfaceRoughnessName AS DictionaryS" +
                    "urfaceRoughness_GoldSurfaceRoughnessName, \r\n            T.CustomSurfaceRoughness" +
                    "Name AS DictionarySurfaceRoughness_CustomSurfaceRoughnessName, \r\n            T.D" +
                    "escription AS DictionarySurfaceRoughness_Description, \r\n            T.FullDescri" +
                    "ption AS DictionarySurfaceRoughness_FullDescription, \r\n            T.Thumbnail A" +
                    "S DictionarySurfaceRoughness_Thumbnail, \r\n            T.OriginalFileDataID AS Di" +
                    "ctionarySurfaceRoughness_OriginalFileDataID, \r\n            True AS _from0\r\n     " +
                    "   FROM XODBModuleBusinessObjectsStoreContainer.X_DictionarySurfaceRoughness AS " +
                    "T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionarySurveyAccuracies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView428()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionarySurveyAccuracies", @"
    SELECT VALUE -- Constructing DictionarySurveyAccuracies
        [XODB.Module.BusinessObjects.DictionarySurveyAccuracy](T1.DictionarySurveyAccuracy_SurveyAccuracyID, T1.DictionarySurveyAccuracy_StandardSurveyAccuracyName, T1.DictionarySurveyAccuracy_CoalSurveyAccuracyName, T1.DictionarySurveyAccuracy_GoldSurveyAccuracyName, T1.DictionarySurveyAccuracy_CustomSurveyAccuracyName, T1.DictionarySurveyAccuracy_Description, T1.DictionarySurveyAccuracy_FullDescription, T1.DictionarySurveyAccuracy_Thumbnail, T1.DictionarySurveyAccuracy_OriginalFileDataID)
    FROM (
        SELECT 
            T.SurveyAccuracyID AS DictionarySurveyAccuracy_SurveyAccuracyID, 
            T.StandardSurveyAccuracyName AS DictionarySurveyAccuracy_StandardSurveyAccuracyName, 
            T.CoalSurveyAccuracyName AS DictionarySurveyAccuracy_CoalSurveyAccuracyName, 
            T.GoldSurveyAccuracyName AS DictionarySurveyAccuracy_GoldSurveyAccuracyName, 
            T.CustomSurveyAccuracyName AS DictionarySurveyAccuracy_CustomSurveyAccuracyName, 
            T.Description AS DictionarySurveyAccuracy_Description, 
            T.FullDescription AS DictionarySurveyAccuracy_FullDescription, 
            T.Thumbnail AS DictionarySurveyAccuracy_Thumbnail, 
            T.OriginalFileDataID AS DictionarySurveyAccuracy_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionarySurveyAccuracy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryTextures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView429()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryTextures", @"
    SELECT VALUE -- Constructing DictionaryTextures
        [XODB.Module.BusinessObjects.DictionaryTexture](T1.DictionaryTexture_TextureID, T1.DictionaryTexture_StandardTextureName, T1.DictionaryTexture_CoalTextureName, T1.DictionaryTexture_GoldTextureName, T1.DictionaryTexture_CustomTextureName, T1.DictionaryTexture_Description, T1.DictionaryTexture_FullDescription, T1.DictionaryTexture_Thumbnail, T1.DictionaryTexture_OriginalFileDataID)
    FROM (
        SELECT 
            T.TextureID AS DictionaryTexture_TextureID, 
            T.StandardTextureName AS DictionaryTexture_StandardTextureName, 
            T.CoalTextureName AS DictionaryTexture_CoalTextureName, 
            T.GoldTextureName AS DictionaryTexture_GoldTextureName, 
            T.CustomTextureName AS DictionaryTexture_CustomTextureName, 
            T.Description AS DictionaryTexture_Description, 
            T.FullDescription AS DictionaryTexture_FullDescription, 
            T.Thumbnail AS DictionaryTexture_Thumbnail, 
            T.OriginalFileDataID AS DictionaryTexture_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryTexture AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryUnits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView430()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryUnits", @"
    SELECT VALUE -- Constructing DictionaryUnits
        [XODB.Module.BusinessObjects.DictionaryUnit](T1.DictionaryUnit_UnitID, T1.DictionaryUnit_UnitTypeID, T1.DictionaryUnit_StrictlySI, T1.DictionaryUnit_EquivalentUnit, T1.DictionaryUnit_EquivalentMultiplier, T1.DictionaryUnit_StandardUnitName, T1.DictionaryUnit_CoalUnitName, T1.DictionaryUnit_GoldUnitName, T1.DictionaryUnit_CustomUnitName, T1.DictionaryUnit_Description, T1.DictionaryUnit_FullDescription, T1.DictionaryUnit_Thumbnail, T1.DictionaryUnit_OriginalFileDataID)
    FROM (
        SELECT 
            T.UnitID AS DictionaryUnit_UnitID, 
            T.UnitTypeID AS DictionaryUnit_UnitTypeID, 
            T.StrictlySI AS DictionaryUnit_StrictlySI, 
            T.EquivalentUnit AS DictionaryUnit_EquivalentUnit, 
            T.EquivalentMultiplier AS DictionaryUnit_EquivalentMultiplier, 
            T.StandardUnitName AS DictionaryUnit_StandardUnitName, 
            T.CoalUnitName AS DictionaryUnit_CoalUnitName, 
            T.GoldUnitName AS DictionaryUnit_GoldUnitName, 
            T.CustomUnitName AS DictionaryUnit_CustomUnitName, 
            T.Description AS DictionaryUnit_Description, 
            T.FullDescription AS DictionaryUnit_FullDescription, 
            T.Thumbnail AS DictionaryUnit_Thumbnail, 
            T.OriginalFileDataID AS DictionaryUnit_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryUnit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryUnitTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView431()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryUnitTypes", @"
    SELECT VALUE -- Constructing DictionaryUnitTypes
        [XODB.Module.BusinessObjects.DictionaryUnitType](T1.DictionaryUnitType_UnitTypeID, T1.DictionaryUnitType_StandardUnitTypeName, T1.DictionaryUnitType_CustomUnitTypeName, T1.DictionaryUnitType_Description, T1.DictionaryUnitType_FullDescription, T1.DictionaryUnitType_Thumbnail, T1.DictionaryUnitType_OriginalFileDataID)
    FROM (
        SELECT 
            T.UnitTypeID AS DictionaryUnitType_UnitTypeID, 
            T.StandardUnitTypeName AS DictionaryUnitType_StandardUnitTypeName, 
            T.CustomUnitTypeName AS DictionaryUnitType_CustomUnitTypeName, 
            T.Description AS DictionaryUnitType_Description, 
            T.FullDescription AS DictionaryUnitType_FullDescription, 
            T.Thumbnail AS DictionaryUnitType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryUnitType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryUnitType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryUsageAuditTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView432()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryUsageAuditTypes", @"
    SELECT VALUE -- Constructing DictionaryUsageAuditTypes
        [XODB.Module.BusinessObjects.DictionaryUsageAuditType](T1.DictionaryUsageAuditType_UsageAuditTypeID, T1.DictionaryUsageAuditType_UsageAuditTypeName, T1.DictionaryUsageAuditType_Description, T1.DictionaryUsageAuditType_FullDescription, T1.DictionaryUsageAuditType_Thumbnail, T1.DictionaryUsageAuditType_OriginalFileDataID)
    FROM (
        SELECT 
            T.UsageAuditTypeID AS DictionaryUsageAuditType_UsageAuditTypeID, 
            T.UsageAuditTypeName AS DictionaryUsageAuditType_UsageAuditTypeName, 
            T.Description AS DictionaryUsageAuditType_Description, 
            T.FullDescription AS DictionaryUsageAuditType_FullDescription, 
            T.Thumbnail AS DictionaryUsageAuditType_Thumbnail, 
            T.OriginalFileDataID AS DictionaryUsageAuditType_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryUsageAuditType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryWeatherings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView433()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryWeatherings", @"
    SELECT VALUE -- Constructing DictionaryWeatherings
        [XODB.Module.BusinessObjects.DictionaryWeathering](T1.DictionaryWeathering_WeatheringID, T1.DictionaryWeathering_StandardWeatheringName, T1.DictionaryWeathering_CoalWeatheringName, T1.DictionaryWeathering_GoldWeatheringName, T1.DictionaryWeathering_CustomWeatheringName, T1.DictionaryWeathering_Description, T1.DictionaryWeathering_FullDescription, T1.DictionaryWeathering_Thumbnail, T1.DictionaryWeathering_OriginalFileDataID)
    FROM (
        SELECT 
            T.WeatheringID AS DictionaryWeathering_WeatheringID, 
            T.StandardWeatheringName AS DictionaryWeathering_StandardWeatheringName, 
            T.CoalWeatheringName AS DictionaryWeathering_CoalWeatheringName, 
            T.GoldWeatheringName AS DictionaryWeathering_GoldWeatheringName, 
            T.CustomWeatheringName AS DictionaryWeathering_CustomWeatheringName, 
            T.Description AS DictionaryWeathering_Description, 
            T.FullDescription AS DictionaryWeathering_FullDescription, 
            T.Thumbnail AS DictionaryWeathering_Thumbnail, 
            T.OriginalFileDataID AS DictionaryWeathering_OriginalFileDataID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryWeathering AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryWorkTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView434()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2162);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryWorkTypes\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.DictionaryWorkType](T1.DictionaryWorkType_WorkTypeID, T1.Dictionary");
            viewString.Append("WorkType_ProfessionID, T1.DictionaryWorkType_WorkTypeClassID, T1.DictionaryWorkT");
            viewString.Append("ype_WorkTypeName, T1.DictionaryWorkType_WorkTypeDescription, T1.DictionaryWorkTy");
            viewString.Append("pe_FullDescription, T1.DictionaryWorkType_Thumbnail, T1.DictionaryWorkType_Origi");
            viewString.Append("nalFileDataID, T1.DictionaryWorkType_Version, T1.DictionaryWorkType_VersionAntec");
            viewString.Append("edentID, T1.DictionaryWorkType_VersionCertainty, T1.DictionaryWorkType_VersionWo");
            viewString.Append("rkflowInstanceID, T1.DictionaryWorkType_VersionUpdatedBy, T1.DictionaryWorkType_");
            viewString.Append("VersionDeletedBy, T1.DictionaryWorkType_VersionOwnerContactID, T1.DictionaryWork");
            viewString.Append("Type_VersionOwnerCompanyID, T1.DictionaryWorkType_VersionUpdated)\r\n    FROM (\r\n ");
            viewString.Append("       SELECT \r\n            T.WorkTypeID AS DictionaryWorkType_WorkTypeID, \r\n   ");
            viewString.Append("         T.ProfessionID AS DictionaryWorkType_ProfessionID, \r\n            T.Work");
            viewString.Append("TypeClassID AS DictionaryWorkType_WorkTypeClassID, \r\n            T.WorkTypeName ");
            viewString.Append("AS DictionaryWorkType_WorkTypeName, \r\n            T.WorkTypeDescription AS Dicti");
            viewString.Append("onaryWorkType_WorkTypeDescription, \r\n            T.FullDescription AS Dictionary");
            viewString.Append("WorkType_FullDescription, \r\n            T.Thumbnail AS DictionaryWorkType_Thumbn");
            viewString.Append("ail, \r\n            T.OriginalFileDataID AS DictionaryWorkType_OriginalFileDataID");
            viewString.Append(", \r\n            T.Version AS DictionaryWorkType_Version, \r\n            T.Version");
            viewString.Append("AntecedentID AS DictionaryWorkType_VersionAntecedentID, \r\n            T.VersionC");
            viewString.Append("ertainty AS DictionaryWorkType_VersionCertainty, \r\n            T.VersionWorkflow");
            viewString.Append("InstanceID AS DictionaryWorkType_VersionWorkflowInstanceID, \r\n            T.Vers");
            viewString.Append("ionUpdatedBy AS DictionaryWorkType_VersionUpdatedBy, \r\n            T.VersionDele");
            viewString.Append("tedBy AS DictionaryWorkType_VersionDeletedBy, \r\n            T.VersionOwnerContac");
            viewString.Append("tID AS DictionaryWorkType_VersionOwnerContactID, \r\n            T.VersionOwnerCom");
            viewString.Append("panyID AS DictionaryWorkType_VersionOwnerCompanyID, \r\n            T.VersionUpdat");
            viewString.Append("ed AS DictionaryWorkType_VersionUpdated, \r\n            True AS _from0\r\n        F");
            viewString.Append("ROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkType AS T\r\n    ) AS ");
            viewString.Append("T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryWorkTypes", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryWorkTypeClasses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView435()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2567);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DictionaryWorkTypeClasses\r\n        [XODB.Modu");
            viewString.Append("le.BusinessObjects.DictionaryWorkTypeClass](T1.DictionaryWorkTypeClass_WorkTypeC");
            viewString.Append("lassID, T1.DictionaryWorkTypeClass_StandardWorkTypeClassName, T1.DictionaryWorkT");
            viewString.Append("ypeClass_CoalWorkTypeClassName, T1.DictionaryWorkTypeClass_GoldWorkTypeClassName");
            viewString.Append(", T1.DictionaryWorkTypeClass_CustomWorkTypeClassName, T1.DictionaryWorkTypeClass");
            viewString.Append("_Description, T1.DictionaryWorkTypeClass_FullDescription, T1.DictionaryWorkTypeC");
            viewString.Append("lass_Thumbnail, T1.DictionaryWorkTypeClass_OriginalFileDataID, T1.DictionaryWork");
            viewString.Append("TypeClass_Version, T1.DictionaryWorkTypeClass_VersionAntecedentID, T1.Dictionary");
            viewString.Append("WorkTypeClass_VersionCertainty, T1.DictionaryWorkTypeClass_VersionWorkflowInstan");
            viewString.Append("ceID, T1.DictionaryWorkTypeClass_VersionUpdatedBy, T1.DictionaryWorkTypeClass_Ve");
            viewString.Append("rsionDeletedBy, T1.DictionaryWorkTypeClass_VersionOwnerContactID, T1.DictionaryW");
            viewString.Append("orkTypeClass_VersionOwnerCompanyID, T1.DictionaryWorkTypeClass_VersionUpdated)\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.WorkTypeClassID AS DictionaryWorkType");
            viewString.Append("Class_WorkTypeClassID, \r\n            T.StandardWorkTypeClassName AS DictionaryWo");
            viewString.Append("rkTypeClass_StandardWorkTypeClassName, \r\n            T.CoalWorkTypeClassName AS ");
            viewString.Append("DictionaryWorkTypeClass_CoalWorkTypeClassName, \r\n            T.GoldWorkTypeClass");
            viewString.Append("Name AS DictionaryWorkTypeClass_GoldWorkTypeClassName, \r\n            T.CustomWor");
            viewString.Append("kTypeClassName AS DictionaryWorkTypeClass_CustomWorkTypeClassName, \r\n           ");
            viewString.Append(" T.Description AS DictionaryWorkTypeClass_Description, \r\n            T.FullDescr");
            viewString.Append("iption AS DictionaryWorkTypeClass_FullDescription, \r\n            T.Thumbnail AS ");
            viewString.Append("DictionaryWorkTypeClass_Thumbnail, \r\n            T.OriginalFileDataID AS Diction");
            viewString.Append("aryWorkTypeClass_OriginalFileDataID, \r\n            T.Version AS DictionaryWorkTy");
            viewString.Append("peClass_Version, \r\n            T.VersionAntecedentID AS DictionaryWorkTypeClass_");
            viewString.Append("VersionAntecedentID, \r\n            T.VersionCertainty AS DictionaryWorkTypeClass");
            viewString.Append("_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS DictionaryWorkTy");
            viewString.Append("peClass_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Dictionar");
            viewString.Append("yWorkTypeClass_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS DictionaryW");
            viewString.Append("orkTypeClass_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Dictiona");
            viewString.Append("ryWorkTypeClass_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS ");
            viewString.Append("DictionaryWorkTypeClass_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS");
            viewString.Append(" DictionaryWorkTypeClass_VersionUpdated, \r\n            True AS _from0\r\n        F");
            viewString.Append("ROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkTypeClass AS T\r\n    ");
            viewString.Append(") AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryWorkTypeClasses", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryWorkTypeRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView436()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryWorkTypeRelations", "\r\n    SELECT VALUE -- Constructing DictionaryWorkTypeRelations\r\n        [XODB.Mod" +
                    "ule.BusinessObjects.DictionaryWorkTypeRelation](T1.DictionaryWorkTypeRelation_Wo" +
                    "rkTypeRelationID, T1.DictionaryWorkTypeRelation_WorkTypeID, T1.DictionaryWorkTyp" +
                    "eRelation_ParentWorkTypeID, T1.DictionaryWorkTypeRelation_Version, T1.Dictionary" +
                    "WorkTypeRelation_VersionAntecedentID, T1.DictionaryWorkTypeRelation_VersionCerta" +
                    "inty, T1.DictionaryWorkTypeRelation_VersionWorkflowInstanceID, T1.DictionaryWork" +
                    "TypeRelation_VersionUpdatedBy, T1.DictionaryWorkTypeRelation_VersionDeletedBy, T" +
                    "1.DictionaryWorkTypeRelation_VersionOwnerContactID, T1.DictionaryWorkTypeRelatio" +
                    "n_VersionOwnerCompanyID, T1.DictionaryWorkTypeRelation_VersionUpdated)\r\n    FROM" +
                    " (\r\n        SELECT \r\n            T.WorkTypeRelationID AS DictionaryWorkTypeRelat" +
                    "ion_WorkTypeRelationID, \r\n            T.WorkTypeID AS DictionaryWorkTypeRelation" +
                    "_WorkTypeID, \r\n            T.ParentWorkTypeID AS DictionaryWorkTypeRelation_Pare" +
                    "ntWorkTypeID, \r\n            T.Version AS DictionaryWorkTypeRelation_Version, \r\n " +
                    "           T.VersionAntecedentID AS DictionaryWorkTypeRelation_VersionAntecedent" +
                    "ID, \r\n            T.VersionCertainty AS DictionaryWorkTypeRelation_VersionCertai" +
                    "nty, \r\n            T.VersionWorkflowInstanceID AS DictionaryWorkTypeRelation_Ver" +
                    "sionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS DictionaryWorkTypeRe" +
                    "lation_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS DictionaryWorkTypeR" +
                    "elation_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS DictionaryWor" +
                    "kTypeRelation_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Di" +
                    "ctionaryWorkTypeRelation_VersionOwnerCompanyID, \r\n            T.VersionUpdated A" +
                    "S DictionaryWorkTypeRelation_VersionUpdated, \r\n            True AS _from0\r\n     " +
                    "   FROM XODBModuleBusinessObjectsStoreContainer.X_DictionaryWorkTypeRelation AS " +
                    "T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Drillings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView437()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2491);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Drillings\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Drilling](T1.Drilling_DrillingID, T1.Drilling_HeaderID, T1.Drilling_FromDepth");
            viewString.Append(", T1.Drilling_ToDepth, T1.Drilling_RunNumber, T1.Drilling_RecoveredThickness, T1");
            viewString.Append(".Drilling_DrillingDate, T1.Drilling_DrillingCompanyID, T1.Drilling_DrillRigNumbe");
            viewString.Append("r, T1.Drilling_DrillRigTypeID, T1.Drilling_DrillerID, T1.Drilling_DrillBitTypeID");
            viewString.Append(", T1.Drilling_DrillFluidID, T1.Drilling_DrillSizeID, T1.Drilling_CoreSize, T1.Dr");
            viewString.Append("illing_HoleSize, T1.Drilling_Reamed, T1.Drilling_Comment, T1.Drilling_Version, T");
            viewString.Append("1.Drilling_VersionAntecedentID, T1.Drilling_VersionCertainty, T1.Drilling_Versio");
            viewString.Append("nWorkflowInstanceID, T1.Drilling_VersionUpdatedBy, T1.Drilling_VersionDeletedBy,");
            viewString.Append(" T1.Drilling_VersionOwnerContactID, T1.Drilling_VersionOwnerCompanyID, T1.Drilli");
            viewString.Append("ng_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.DrillingID AS Dri");
            viewString.Append("lling_DrillingID, \r\n            T.HeaderID AS Drilling_HeaderID, \r\n            T");
            viewString.Append(".FromDepth AS Drilling_FromDepth, \r\n            T.ToDepth AS Drilling_ToDepth, \r");
            viewString.Append("\n            T.RunNumber AS Drilling_RunNumber, \r\n            T.RecoveredThickne");
            viewString.Append("ss AS Drilling_RecoveredThickness, \r\n            T.DrillingDate AS Drilling_Dril");
            viewString.Append("lingDate, \r\n            T.DrillingCompanyID AS Drilling_DrillingCompanyID, \r\n   ");
            viewString.Append("         T.DrillRigNumber AS Drilling_DrillRigNumber, \r\n            T.DrillRigTy");
            viewString.Append("peID AS Drilling_DrillRigTypeID, \r\n            T.DrillerID AS Drilling_DrillerID");
            viewString.Append(", \r\n            T.DrillBitTypeID AS Drilling_DrillBitTypeID, \r\n            T.Dri");
            viewString.Append("llFluidID AS Drilling_DrillFluidID, \r\n            T.DrillSizeID AS Drilling_Dril");
            viewString.Append("lSizeID, \r\n            T.CoreSize AS Drilling_CoreSize, \r\n            T.HoleSize");
            viewString.Append(" AS Drilling_HoleSize, \r\n            T.Reamed AS Drilling_Reamed, \r\n            ");
            viewString.Append("T.Comment AS Drilling_Comment, \r\n            T.Version AS Drilling_Version, \r\n  ");
            viewString.Append("          T.VersionAntecedentID AS Drilling_VersionAntecedentID, \r\n            T");
            viewString.Append(".VersionCertainty AS Drilling_VersionCertainty, \r\n            T.VersionWorkflowI");
            viewString.Append("nstanceID AS Drilling_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedB");
            viewString.Append("y AS Drilling_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Drilling_Ver");
            viewString.Append("sionDeletedBy, \r\n            T.VersionOwnerContactID AS Drilling_VersionOwnerCon");
            viewString.Append("tactID, \r\n            T.VersionOwnerCompanyID AS Drilling_VersionOwnerCompanyID,");
            viewString.Append(" \r\n            T.VersionUpdated AS Drilling_VersionUpdated, \r\n            True A");
            viewString.Append("S _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Drilling AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Drillings", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.DrillingProjectPlanTasks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView438()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DrillingProjectPlanTasks", "\r\n    SELECT VALUE -- Constructing DrillingProjectPlanTasks\r\n        [XODB.Module" +
                    ".BusinessObjects.DrillingProjectPlanTask](T1.DrillingProjectPlanTask_DrillingPro" +
                    "jectPlanTaskID, T1.DrillingProjectPlanTask_DrillingID, T1.DrillingProjectPlanTas" +
                    "k_ProjectPlanTaskID, T1.DrillingProjectPlanTask_Version, T1.DrillingProjectPlanT" +
                    "ask_VersionAntecedentID, T1.DrillingProjectPlanTask_VersionCertainty, T1.Drillin" +
                    "gProjectPlanTask_VersionWorkflowInstanceID, T1.DrillingProjectPlanTask_VersionUp" +
                    "datedBy, T1.DrillingProjectPlanTask_VersionDeletedBy, T1.DrillingProjectPlanTask" +
                    "_VersionOwnerContactID, T1.DrillingProjectPlanTask_VersionOwnerCompanyID, T1.Dri" +
                    "llingProjectPlanTask_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".DrillingProjectPlanTaskID AS DrillingProjectPlanTask_DrillingProjectPlanTaskID," +
                    " \r\n            T.DrillingID AS DrillingProjectPlanTask_DrillingID, \r\n           " +
                    " T.ProjectPlanTaskID AS DrillingProjectPlanTask_ProjectPlanTaskID, \r\n           " +
                    " T.Version AS DrillingProjectPlanTask_Version, \r\n            T.VersionAntecedent" +
                    "ID AS DrillingProjectPlanTask_VersionAntecedentID, \r\n            T.VersionCertai" +
                    "nty AS DrillingProjectPlanTask_VersionCertainty, \r\n            T.VersionWorkflow" +
                    "InstanceID AS DrillingProjectPlanTask_VersionWorkflowInstanceID, \r\n            T" +
                    ".VersionUpdatedBy AS DrillingProjectPlanTask_VersionUpdatedBy, \r\n            T.V" +
                    "ersionDeletedBy AS DrillingProjectPlanTask_VersionDeletedBy, \r\n            T.Ver" +
                    "sionOwnerContactID AS DrillingProjectPlanTask_VersionOwnerContactID, \r\n         " +
                    "   T.VersionOwnerCompanyID AS DrillingProjectPlanTask_VersionOwnerCompanyID, \r\n " +
                    "           T.VersionUpdated AS DrillingProjectPlanTask_VersionUpdated, \r\n       " +
                    "     True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Dril" +
                    "lingProjectPlanTask AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Experiences
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView439()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3687);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Experiences\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.Experience](T1.Experience_ExperienceID, T1.Experience_ExperienceName, T1.Ex");
            viewString.Append("perience_ExperienceGroupID, T1.Experience_CompanyID, T1.Experience_ProjectID, T1");
            viewString.Append(".Experience_ContactID, T1.Experience_LocationID, T1.Experience_ProvinceID, T1.Ex");
            viewString.Append("perience_WorkTypeID, T1.Experience_ProfessionID, T1.Experience_PositionID, T1.Ex");
            viewString.Append("perience_ClientAlias, T1.Experience_Division, T1.Experience_OfficeLocationAlias,");
            viewString.Append(" T1.Experience_ExternalProjectCode, T1.Experience_EstimatedDurationDays, T1.Expe");
            viewString.Append("rience_UserExperienceLevel, T1.Experience_AssignedExperienceLevel, T1.Experience");
            viewString.Append("_NormalizedExperienceLevel, T1.Experience_DateStart, T1.Experience_DateFinished,");
            viewString.Append(" T1.Experience_Expiry, T1.Experience_HourlyRate, T1.Experience_DailyRate, T1.Exp");
            viewString.Append("erience_AnnualRate, T1.Experience_BlendedHourlyRate, T1.Experience_BlendedHourly");
            viewString.Append("Cost, T1.Experience_Comment, T1.Experience_IsApproved, T1.Experience_Version, T1");
            viewString.Append(".Experience_VersionAntecedentID, T1.Experience_VersionCertainty, T1.Experience_V");
            viewString.Append("ersionWorkflowInstanceID, T1.Experience_VersionUpdatedBy, T1.Experience_VersionD");
            viewString.Append("eletedBy, T1.Experience_VersionOwnerContactID, T1.Experience_VersionOwnerCompany");
            viewString.Append("ID, T1.Experience_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Ex");
            viewString.Append("perienceID AS Experience_ExperienceID, \r\n            T.ExperienceName AS Experie");
            viewString.Append("nce_ExperienceName, \r\n            T.ExperienceGroupID AS Experience_ExperienceGr");
            viewString.Append("oupID, \r\n            T.CompanyID AS Experience_CompanyID, \r\n            T.Projec");
            viewString.Append("tID AS Experience_ProjectID, \r\n            T.ContactID AS Experience_ContactID, ");
            viewString.Append("\r\n            T.LocationID AS Experience_LocationID, \r\n            T.ProvinceID ");
            viewString.Append("AS Experience_ProvinceID, \r\n            T.WorkTypeID AS Experience_WorkTypeID, \r");
            viewString.Append("\n            T.ProfessionID AS Experience_ProfessionID, \r\n            T.Position");
            viewString.Append("ID AS Experience_PositionID, \r\n            T.ClientAlias AS Experience_ClientAli");
            viewString.Append("as, \r\n            T.Division AS Experience_Division, \r\n            T.OfficeLocat");
            viewString.Append("ionAlias AS Experience_OfficeLocationAlias, \r\n            T.ExternalProjectCode ");
            viewString.Append("AS Experience_ExternalProjectCode, \r\n            T.EstimatedDurationDays AS Expe");
            viewString.Append("rience_EstimatedDurationDays, \r\n            T.UserExperienceLevel AS Experience_");
            viewString.Append("UserExperienceLevel, \r\n            T.AssignedExperienceLevel AS Experience_Assig");
            viewString.Append("nedExperienceLevel, \r\n            T.NormalizedExperienceLevel AS Experience_Norm");
            viewString.Append("alizedExperienceLevel, \r\n            T.DateStart AS Experience_DateStart, \r\n    ");
            viewString.Append("        T.DateFinished AS Experience_DateFinished, \r\n            T.Expiry AS Exp");
            viewString.Append("erience_Expiry, \r\n            T.HourlyRate AS Experience_HourlyRate, \r\n         ");
            viewString.Append("   T.DailyRate AS Experience_DailyRate, \r\n            T.AnnualRate AS Experience");
            viewString.Append("_AnnualRate, \r\n            T.BlendedHourlyRate AS Experience_BlendedHourlyRate, ");
            viewString.Append("\r\n            T.BlendedHourlyCost AS Experience_BlendedHourlyCost, \r\n           ");
            viewString.Append(" T.Comment AS Experience_Comment, \r\n            T.IsApproved AS Experience_IsApp");
            viewString.Append("roved, \r\n            T.Version AS Experience_Version, \r\n            T.VersionAnt");
            viewString.Append("ecedentID AS Experience_VersionAntecedentID, \r\n            T.VersionCertainty AS");
            viewString.Append(" Experience_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Exper");
            viewString.Append("ience_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Experience_");
            viewString.Append("VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Experience_VersionDeletedB");
            viewString.Append("y, \r\n            T.VersionOwnerContactID AS Experience_VersionOwnerContactID, \r\n");
            viewString.Append("            T.VersionOwnerCompanyID AS Experience_VersionOwnerCompanyID, \r\n     ");
            viewString.Append("       T.VersionUpdated AS Experience_VersionUpdated, \r\n            True AS _fro");
            viewString.Append("m0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Experience AS T\r\n    ");
            viewString.Append(") AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Experiences", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.FileDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView440()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2131);
            viewString.Append("\r\n    SELECT VALUE -- Constructing FileDatas\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.FileData](T1.FileData_FileDataID, T1.FileData_ParentFileID, T1.FileData_Table");
            viewString.Append("Type, T1.FileData_ReferenceID, T1.FileData_WorkerID, T1.FileData_FileTypeID, T1.");
            viewString.Append("FileData_FileName, T1.FileData_DocumentType, T1.FileData_MimeType, T1.FileData_A");
            viewString.Append("uthor, T1.FileData_FileBytes, T1.FileData_FileContent, T1.FileData_FileChecksum,");
            viewString.Append(" T1.FileData_Comment, T1.FileData_Version, T1.FileData_VersionAntecedentID, T1.F");
            viewString.Append("ileData_VersionCertainty, T1.FileData_VersionWorkflowInstanceID, T1.FileData_Ver");
            viewString.Append("sionUpdatedBy, T1.FileData_VersionDeletedBy, T1.FileData_VersionOwnerContactID, ");
            viewString.Append("T1.FileData_VersionOwnerCompanyID, T1.FileData_VersionUpdated)\r\n    FROM (\r\n    ");
            viewString.Append("    SELECT \r\n            T.FileDataID AS FileData_FileDataID, \r\n            T.Pa");
            viewString.Append("rentFileID AS FileData_ParentFileID, \r\n            T.TableType AS FileData_Table");
            viewString.Append("Type, \r\n            T.ReferenceID AS FileData_ReferenceID, \r\n            T.Worke");
            viewString.Append("rID AS FileData_WorkerID, \r\n            T.FileTypeID AS FileData_FileTypeID, \r\n ");
            viewString.Append("           T.FileName AS FileData_FileName, \r\n            T.DocumentType AS File");
            viewString.Append("Data_DocumentType, \r\n            T.MimeType AS FileData_MimeType, \r\n            ");
            viewString.Append("T.Author AS FileData_Author, \r\n            T.FileBytes AS FileData_FileBytes, \r\n");
            viewString.Append("            T.FileContent AS FileData_FileContent, \r\n            T.FileChecksum ");
            viewString.Append("AS FileData_FileChecksum, \r\n            T.Comment AS FileData_Comment, \r\n       ");
            viewString.Append("     T.Version AS FileData_Version, \r\n            T.VersionAntecedentID AS FileD");
            viewString.Append("ata_VersionAntecedentID, \r\n            T.VersionCertainty AS FileData_VersionCer");
            viewString.Append("tainty, \r\n            T.VersionWorkflowInstanceID AS FileData_VersionWorkflowIns");
            viewString.Append("tanceID, \r\n            T.VersionUpdatedBy AS FileData_VersionUpdatedBy, \r\n      ");
            viewString.Append("      T.VersionDeletedBy AS FileData_VersionDeletedBy, \r\n            T.VersionOw");
            viewString.Append("nerContactID AS FileData_VersionOwnerContactID, \r\n            T.VersionOwnerComp");
            viewString.Append("anyID AS FileData_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS FileD");
            viewString.Append("ata_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusines");
            viewString.Append("sObjectsStoreContainer.X_FileData AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.FileDatas", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Geologies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView441()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Geologies", "\r\n    SELECT VALUE -- Constructing Geologies\r\n        [XODB.Module.BusinessObject" +
                    "s.Geology](T1.Geology_GeologyID, T1.Geology_HeaderID, T1.Geology_GeologyContactI" +
                    "D, T1.Geology_FromDepth, T1.Geology_ToDepth, T1.Geology_Comment, T1.Geology_Vers" +
                    "ion, T1.Geology_VersionAntecedentID, T1.Geology_VersionCertainty, T1.Geology_Ver" +
                    "sionWorkflowInstanceID, T1.Geology_VersionUpdatedBy, T1.Geology_VersionDeletedBy" +
                    ", T1.Geology_VersionOwnerContactID, T1.Geology_VersionOwnerCompanyID, T1.Geology" +
                    "_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.GeologyID AS Geolog" +
                    "y_GeologyID, \r\n            T.HeaderID AS Geology_HeaderID, \r\n            T.Geolo" +
                    "gyContactID AS Geology_GeologyContactID, \r\n            T.FromDepth AS Geology_Fr" +
                    "omDepth, \r\n            T.ToDepth AS Geology_ToDepth, \r\n            T.Comment AS " +
                    "Geology_Comment, \r\n            T.Version AS Geology_Version, \r\n            T.Ver" +
                    "sionAntecedentID AS Geology_VersionAntecedentID, \r\n            T.VersionCertaint" +
                    "y AS Geology_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Geol" +
                    "ogy_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Geology_Versi" +
                    "onUpdatedBy, \r\n            T.VersionDeletedBy AS Geology_VersionDeletedBy, \r\n   " +
                    "         T.VersionOwnerContactID AS Geology_VersionOwnerContactID, \r\n           " +
                    " T.VersionOwnerCompanyID AS Geology_VersionOwnerCompanyID, \r\n            T.Versi" +
                    "onUpdated AS Geology_VersionUpdated, \r\n            True AS _from0\r\n        FROM " +
                    "XODBModuleBusinessObjectsStoreContainer.X_Geology AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Geophysics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView442()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Geophysics", "\r\n    SELECT VALUE -- Constructing Geophysics\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Geophysics](T1.Geophysics_GeophysicsID, T1.Geophysics_FileName, T1.Geophysics" +
                    "_OriginalFileDataID, T1.Geophysics_HeaderID, T1.Geophysics_DimensionUnitID, T1.G" +
                    "eophysics_LasVersion, T1.Geophysics_LasFormat, T1.Geophysics_LasWrap, T1.Geophys" +
                    "ics_LasDelimiter, T1.Geophysics_LasNullValue, T1.Geophysics_Version, T1.Geophysi" +
                    "cs_VersionAntecedentID, T1.Geophysics_VersionCertainty, T1.Geophysics_VersionWor" +
                    "kflowInstanceID, T1.Geophysics_VersionUpdatedBy, T1.Geophysics_VersionDeletedBy," +
                    " T1.Geophysics_VersionOwnerContactID, T1.Geophysics_VersionOwnerCompanyID, T1.Ge" +
                    "ophysics_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.GeophysicsI" +
                    "D AS Geophysics_GeophysicsID, \r\n            T.FileName AS Geophysics_FileName, \r" +
                    "\n            T.OriginalFileDataID AS Geophysics_OriginalFileDataID, \r\n          " +
                    "  T.HeaderID AS Geophysics_HeaderID, \r\n            T.DimensionUnitID AS Geophysi" +
                    "cs_DimensionUnitID, \r\n            T.LasVersion AS Geophysics_LasVersion, \r\n     " +
                    "       T.LasFormat AS Geophysics_LasFormat, \r\n            T.LasWrap AS Geophysic" +
                    "s_LasWrap, \r\n            T.LasDelimiter AS Geophysics_LasDelimiter, \r\n          " +
                    "  T.LasNullValue AS Geophysics_LasNullValue, \r\n            T.Version AS Geophysi" +
                    "cs_Version, \r\n            T.VersionAntecedentID AS Geophysics_VersionAntecedentI" +
                    "D, \r\n            T.VersionCertainty AS Geophysics_VersionCertainty, \r\n          " +
                    "  T.VersionWorkflowInstanceID AS Geophysics_VersionWorkflowInstanceID, \r\n       " +
                    "     T.VersionUpdatedBy AS Geophysics_VersionUpdatedBy, \r\n            T.VersionD" +
                    "eletedBy AS Geophysics_VersionDeletedBy, \r\n            T.VersionOwnerContactID A" +
                    "S Geophysics_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Geo" +
                    "physics_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Geophysics_Vers" +
                    "ionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjects" +
                    "StoreContainer.X_Geophysics AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.GeophysicsDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView443()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.GeophysicsDatas", "\r\n    SELECT VALUE -- Constructing GeophysicsDatas\r\n        [XODB.Module.Business" +
                    "Objects.GeophysicsData](T1.GeophysicsData_GeophysicsDataID, T1.GeophysicsData_Ge" +
                    "ophysicsMetadataID, T1.GeophysicsData_Dimension, T1.GeophysicsData_MeasurementVa" +
                    "lue, T1.GeophysicsData_MeasurementText, T1.GeophysicsData_Version, T1.Geophysics" +
                    "Data_VersionAntecedentID, T1.GeophysicsData_VersionCertainty, T1.GeophysicsData_" +
                    "VersionWorkflowInstanceID, T1.GeophysicsData_VersionUpdatedBy, T1.GeophysicsData" +
                    "_VersionDeletedBy, T1.GeophysicsData_VersionOwnerContactID, T1.GeophysicsData_Ve" +
                    "rsionOwnerCompanyID, T1.GeophysicsData_VersionUpdated)\r\n    FROM (\r\n        SELE" +
                    "CT \r\n            T.GeophysicsDataID AS GeophysicsData_GeophysicsDataID, \r\n      " +
                    "      T.GeophysicsMetadataID AS GeophysicsData_GeophysicsMetadataID, \r\n         " +
                    "   T.Dimension AS GeophysicsData_Dimension, \r\n            T.MeasurementValue AS " +
                    "GeophysicsData_MeasurementValue, \r\n            T.MeasurementText AS GeophysicsDa" +
                    "ta_MeasurementText, \r\n            T.Version AS GeophysicsData_Version, \r\n       " +
                    "     T.VersionAntecedentID AS GeophysicsData_VersionAntecedentID, \r\n            " +
                    "T.VersionCertainty AS GeophysicsData_VersionCertainty, \r\n            T.VersionWo" +
                    "rkflowInstanceID AS GeophysicsData_VersionWorkflowInstanceID, \r\n            T.Ve" +
                    "rsionUpdatedBy AS GeophysicsData_VersionUpdatedBy, \r\n            T.VersionDelete" +
                    "dBy AS GeophysicsData_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS" +
                    " GeophysicsData_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS " +
                    "GeophysicsData_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Geophysi" +
                    "csData_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusi" +
                    "nessObjectsStoreContainer.X_GeophysicsData AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.GeophysicsMetadatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView444()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2137);
            viewString.Append("\r\n    SELECT VALUE -- Constructing GeophysicsMetadatas\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.GeophysicsMetadata](T1.GeophysicsMetadata_GeophysicsMetadataID, T1.");
            viewString.Append("GeophysicsMetadata_GeophysicsID, T1.GeophysicsMetadata_ParameterID, T1.Geophysic");
            viewString.Append("sMetadata_Mnemonic, T1.GeophysicsMetadata_Unit, T1.GeophysicsMetadata_Data, T1.G");
            viewString.Append("eophysicsMetadata_Code, T1.GeophysicsMetadata_Description, T1.GeophysicsMetadata");
            viewString.Append("_Format, T1.GeophysicsMetadata_Version, T1.GeophysicsMetadata_VersionAntecedentI");
            viewString.Append("D, T1.GeophysicsMetadata_VersionCertainty, T1.GeophysicsMetadata_VersionWorkflow");
            viewString.Append("InstanceID, T1.GeophysicsMetadata_VersionUpdatedBy, T1.GeophysicsMetadata_Versio");
            viewString.Append("nDeletedBy, T1.GeophysicsMetadata_VersionOwnerContactID, T1.GeophysicsMetadata_V");
            viewString.Append("ersionOwnerCompanyID, T1.GeophysicsMetadata_VersionUpdated)\r\n    FROM (\r\n       ");
            viewString.Append(" SELECT \r\n            T.GeophysicsMetadataID AS GeophysicsMetadata_GeophysicsMet");
            viewString.Append("adataID, \r\n            T.GeophysicsID AS GeophysicsMetadata_GeophysicsID, \r\n    ");
            viewString.Append("        T.ParameterID AS GeophysicsMetadata_ParameterID, \r\n            T.Mnemoni");
            viewString.Append("c AS GeophysicsMetadata_Mnemonic, \r\n            T.Unit AS GeophysicsMetadata_Uni");
            viewString.Append("t, \r\n            T.Data AS GeophysicsMetadata_Data, \r\n            T.Code AS Geop");
            viewString.Append("hysicsMetadata_Code, \r\n            T.Description AS GeophysicsMetadata_Descripti");
            viewString.Append("on, \r\n            T.Format AS GeophysicsMetadata_Format, \r\n            T.Version");
            viewString.Append(" AS GeophysicsMetadata_Version, \r\n            T.VersionAntecedentID AS Geophysic");
            viewString.Append("sMetadata_VersionAntecedentID, \r\n            T.VersionCertainty AS GeophysicsMet");
            viewString.Append("adata_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS GeophysicsM");
            viewString.Append("etadata_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Geophysic");
            viewString.Append("sMetadata_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS GeophysicsMetada");
            viewString.Append("ta_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS GeophysicsMetadata");
            viewString.Append("_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS GeophysicsMetad");
            viewString.Append("ata_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS GeophysicsMetadata_");
            viewString.Append("VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObj");
            viewString.Append("ectsStoreContainer.X_GeophysicsMetadata AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.GeophysicsMetadatas", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Headers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView445()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3775);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Headers\r\n        [XODB.Module.BusinessObjects");
            viewString.Append(".Header](T1.Header_HeaderID, T1.Header_ProjectID, T1.Header_HoleName, T1.Header_");
            viewString.Append("Site, T1.Header_HoleTypeID, T1.Header_DataStatusID, T1.Header_PrimaryHolePurpose");
            viewString.Append("ID, T1.Header_SecondaryHolePurposeID, T1.Header_SurveyAccuracyID, T1.Header_Geod");
            viewString.Append("eticDatumID, T1.Header_UtmZoneNumber, T1.Header_UtmZoneHemisphere, T1.Header_Hei");
            viewString.Append("ghtDatumID, T1.Header_EastingUtm, T1.Header_NorthingUtm, T1.Header_Elevation, T1");
            viewString.Append(".Header_Inclination, T1.Header_Azimuth, T1.Header_LocationID, T1.Header_StartDat");
            viewString.Append("e, T1.Header_CompleteDate, T1.Header_TotalDepth, T1.Header_HoleRedrilled, T1.Hea");
            viewString.Append("der_GeologyCompanyID, T1.Header_HasHadGeotechLogs, T1.Header_HasHadCorePhotos, T");
            viewString.Append("1.Header_DefaultGeophysicalLoggingCompanyID, T1.Header_DefaultGeophysicalLoggerI");
            viewString.Append("D, T1.Header_StandingWaterLevel, T1.Header_StandingWaterLevelDate, T1.Header_Dat");
            viewString.Append("eRehabilitated, T1.Header_HoleStatusID, T1.Header_Comment, T1.Header_Version, T1");
            viewString.Append(".Header_VersionAntecedentID, T1.Header_VersionCertainty, T1.Header_VersionWorkfl");
            viewString.Append("owInstanceID, T1.Header_VersionUpdatedBy, T1.Header_VersionDeletedBy, T1.Header_");
            viewString.Append("VersionOwnerContactID, T1.Header_VersionOwnerCompanyID, T1.Header_VersionUpdated");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.HeaderID AS Header_HeaderID, \r\n   ");
            viewString.Append("         T.ProjectID AS Header_ProjectID, \r\n            T.HoleName AS Header_Hol");
            viewString.Append("eName, \r\n            T.Site AS Header_Site, \r\n            T.HoleTypeID AS Header");
            viewString.Append("_HoleTypeID, \r\n            T.DataStatusID AS Header_DataStatusID, \r\n            ");
            viewString.Append("T.PrimaryHolePurposeID AS Header_PrimaryHolePurposeID, \r\n            T.Secondary");
            viewString.Append("HolePurposeID AS Header_SecondaryHolePurposeID, \r\n            T.SurveyAccuracyID");
            viewString.Append(" AS Header_SurveyAccuracyID, \r\n            T.GeodeticDatumID AS Header_GeodeticD");
            viewString.Append("atumID, \r\n            T.UtmZoneNumber AS Header_UtmZoneNumber, \r\n            T.U");
            viewString.Append("tmZoneHemisphere AS Header_UtmZoneHemisphere, \r\n            T.HeightDatumID AS H");
            viewString.Append("eader_HeightDatumID, \r\n            T.EastingUtm AS Header_EastingUtm, \r\n        ");
            viewString.Append("    T.NorthingUtm AS Header_NorthingUtm, \r\n            T.Elevation AS Header_Ele");
            viewString.Append("vation, \r\n            T.Inclination AS Header_Inclination, \r\n            T.Azimu");
            viewString.Append("th AS Header_Azimuth, \r\n            T.LocationID AS Header_LocationID, \r\n       ");
            viewString.Append("     T.StartDate AS Header_StartDate, \r\n            T.CompleteDate AS Header_Com");
            viewString.Append("pleteDate, \r\n            T.TotalDepth AS Header_TotalDepth, \r\n            T.Hole");
            viewString.Append("Redrilled AS Header_HoleRedrilled, \r\n            T.GeologyCompanyID AS Header_Ge");
            viewString.Append("ologyCompanyID, \r\n            T.HasHadGeotechLogs AS Header_HasHadGeotechLogs, \r");
            viewString.Append("\n            T.HasHadCorePhotos AS Header_HasHadCorePhotos, \r\n            T.Defa");
            viewString.Append("ultGeophysicalLoggingCompanyID AS Header_DefaultGeophysicalLoggingCompanyID, \r\n ");
            viewString.Append("           T.DefaultGeophysicalLoggerID AS Header_DefaultGeophysicalLoggerID, \r\n");
            viewString.Append("            T.StandingWaterLevel AS Header_StandingWaterLevel, \r\n            T.S");
            viewString.Append("tandingWaterLevelDate AS Header_StandingWaterLevelDate, \r\n            T.DateReha");
            viewString.Append("bilitated AS Header_DateRehabilitated, \r\n            T.HoleStatusID AS Header_Ho");
            viewString.Append("leStatusID, \r\n            T.Comment AS Header_Comment, \r\n            T.Version A");
            viewString.Append("S Header_Version, \r\n            T.VersionAntecedentID AS Header_VersionAnteceden");
            viewString.Append("tID, \r\n            T.VersionCertainty AS Header_VersionCertainty, \r\n            ");
            viewString.Append("T.VersionWorkflowInstanceID AS Header_VersionWorkflowInstanceID, \r\n            T");
            viewString.Append(".VersionUpdatedBy AS Header_VersionUpdatedBy, \r\n            T.VersionDeletedBy A");
            viewString.Append("S Header_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Header_Versi");
            viewString.Append("onOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Header_VersionOwnerCo");
            viewString.Append("mpanyID, \r\n            T.VersionUpdated AS Header_VersionUpdated, \r\n            ");
            viewString.Append("True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Header AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Headers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.HeaderGeophysicalLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView446()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2080);
            viewString.Append("\r\n    SELECT VALUE -- Constructing HeaderGeophysicalLogs\r\n        [XODB.Module.B");
            viewString.Append("usinessObjects.HeaderGeophysicalLog](T1.HeaderGeophysicalLog_HeaderGeophysicalLo");
            viewString.Append("gID, T1.HeaderGeophysicalLog_HeaderID, T1.HeaderGeophysicalLog_GeophysicalLogTyp");
            viewString.Append("eID, T1.HeaderGeophysicalLog_Sequence, T1.HeaderGeophysicalLog_GeophysicalLoggin");
            viewString.Append("gCompanyID, T1.HeaderGeophysicalLog_GeophysicalLoggerID, T1.HeaderGeophysicalLog");
            viewString.Append("_Version, T1.HeaderGeophysicalLog_VersionAntecedentID, T1.HeaderGeophysicalLog_V");
            viewString.Append("ersionCertainty, T1.HeaderGeophysicalLog_VersionWorkflowInstanceID, T1.HeaderGeo");
            viewString.Append("physicalLog_VersionUpdatedBy, T1.HeaderGeophysicalLog_VersionDeletedBy, T1.Heade");
            viewString.Append("rGeophysicalLog_VersionOwnerContactID, T1.HeaderGeophysicalLog_VersionOwnerCompa");
            viewString.Append("nyID, T1.HeaderGeophysicalLog_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.HeaderGeophysicalLogID AS HeaderGeophysicalLog_HeaderGeophysicalLogID,");
            viewString.Append(" \r\n            T.HeaderID AS HeaderGeophysicalLog_HeaderID, \r\n            T.Geop");
            viewString.Append("hysicalLogTypeID AS HeaderGeophysicalLog_GeophysicalLogTypeID, \r\n            T.S");
            viewString.Append("equence AS HeaderGeophysicalLog_Sequence, \r\n            T.GeophysicalLoggingComp");
            viewString.Append("anyID AS HeaderGeophysicalLog_GeophysicalLoggingCompanyID, \r\n            T.Geoph");
            viewString.Append("ysicalLoggerID AS HeaderGeophysicalLog_GeophysicalLoggerID, \r\n            T.Vers");
            viewString.Append("ion AS HeaderGeophysicalLog_Version, \r\n            T.VersionAntecedentID AS Head");
            viewString.Append("erGeophysicalLog_VersionAntecedentID, \r\n            T.VersionCertainty AS Header");
            viewString.Append("GeophysicalLog_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS He");
            viewString.Append("aderGeophysicalLog_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy A");
            viewString.Append("S HeaderGeophysicalLog_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Hea");
            viewString.Append("derGeophysicalLog_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Hea");
            viewString.Append("derGeophysicalLog_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID A");
            viewString.Append("S HeaderGeophysicalLog_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ");
            viewString.Append("HeaderGeophysicalLog_VersionUpdated, \r\n            True AS _from0\r\n        FROM ");
            viewString.Append("XODBModuleBusinessObjectsStoreContainer.X_HeaderGeophysicalLog AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.HeaderGeophysicalLogs", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.HeaderRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView447()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.HeaderRelations", "\r\n    SELECT VALUE -- Constructing HeaderRelations\r\n        [XODB.Module.Business" +
                    "Objects.HeaderRelation](T1.HeaderRelation_HeaderRelationID, T1.HeaderRelation_Or" +
                    "iginalHeaderID, T1.HeaderRelation_RelatedHeaderID, T1.HeaderRelation_RelationTyp" +
                    "eID, T1.HeaderRelation_Related, T1.HeaderRelation_Version, T1.HeaderRelation_Ver" +
                    "sionAntecedentID, T1.HeaderRelation_VersionCertainty, T1.HeaderRelation_VersionW" +
                    "orkflowInstanceID, T1.HeaderRelation_VersionUpdatedBy, T1.HeaderRelation_Version" +
                    "DeletedBy, T1.HeaderRelation_VersionOwnerContactID, T1.HeaderRelation_VersionOwn" +
                    "erCompanyID, T1.HeaderRelation_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n   " +
                    "         T.HeaderRelationID AS HeaderRelation_HeaderRelationID, \r\n            T." +
                    "OriginalHeaderID AS HeaderRelation_OriginalHeaderID, \r\n            T.RelatedHead" +
                    "erID AS HeaderRelation_RelatedHeaderID, \r\n            T.RelationTypeID AS Header" +
                    "Relation_RelationTypeID, \r\n            T.Related AS HeaderRelation_Related, \r\n  " +
                    "          T.Version AS HeaderRelation_Version, \r\n            T.VersionAntecedent" +
                    "ID AS HeaderRelation_VersionAntecedentID, \r\n            T.VersionCertainty AS He" +
                    "aderRelation_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Head" +
                    "erRelation_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Header" +
                    "Relation_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS HeaderRelation_Ve" +
                    "rsionDeletedBy, \r\n            T.VersionOwnerContactID AS HeaderRelation_VersionO" +
                    "wnerContactID, \r\n            T.VersionOwnerCompanyID AS HeaderRelation_VersionOw" +
                    "nerCompanyID, \r\n            T.VersionUpdated AS HeaderRelation_VersionUpdated, \r" +
                    "\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContaine" +
                    "r.X_HeaderRelation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Interpretations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView448()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3622);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Interpretations\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.Interpretation](T1.Interpretation_InterpretationID, T1.Interpretation_F");
            viewString.Append("romDepth, T1.Interpretation_ToDepth, T1.Interpretation_TopX, T1.Interpretation_T");
            viewString.Append("opY, T1.Interpretation_TopZ, T1.Interpretation_CentroidX, T1.Interpretation_Cent");
            viewString.Append("roidY, T1.Interpretation_CentroidZ, T1.Interpretation_BottomX, T1.Interpretation");
            viewString.Append("_BottomY, T1.Interpretation_BottomZ, T1.Interpretation_DesurveyID, T1.Interpreta");
            viewString.Append("tion_HeaderID, T1.Interpretation_AssayGroupTestSampleID, T1.Interpretation_Casin");
            viewString.Append("gID, T1.Interpretation_CementingID, T1.Interpretation_DefectID, T1.Interpretatio");
            viewString.Append("n_DrillingID, T1.Interpretation_GeologyID, T1.Interpretation_GeophysicsDataID, T");
            viewString.Append("1.Interpretation_LithologyID, T1.Interpretation_SeamID, T1.Interpretation_PlyID,");
            viewString.Append(" T1.Interpretation_MineralogyID, T1.Interpretation_PointLoadID, T1.Interpretatio");
            viewString.Append("n_RecoveryID, T1.Interpretation_BlockModelBlockID, T1.Interpretation_Version, T1");
            viewString.Append(".Interpretation_VersionAntecedentID, T1.Interpretation_VersionCertainty, T1.Inte");
            viewString.Append("rpretation_VersionWorkflowInstanceID, T1.Interpretation_VersionUpdatedBy, T1.Int");
            viewString.Append("erpretation_VersionDeletedBy, T1.Interpretation_VersionOwnerContactID, T1.Interp");
            viewString.Append("retation_VersionOwnerCompanyID, T1.Interpretation_VersionUpdated)\r\n    FROM (\r\n ");
            viewString.Append("       SELECT \r\n            T.InterpretationID AS Interpretation_InterpretationI");
            viewString.Append("D, \r\n            T.FromDepth AS Interpretation_FromDepth, \r\n            T.ToDept");
            viewString.Append("h AS Interpretation_ToDepth, \r\n            T.TopX AS Interpretation_TopX, \r\n    ");
            viewString.Append("        T.TopY AS Interpretation_TopY, \r\n            T.TopZ AS Interpretation_To");
            viewString.Append("pZ, \r\n            T.CentroidX AS Interpretation_CentroidX, \r\n            T.Centr");
            viewString.Append("oidY AS Interpretation_CentroidY, \r\n            T.CentroidZ AS Interpretation_Ce");
            viewString.Append("ntroidZ, \r\n            T.BottomX AS Interpretation_BottomX, \r\n            T.Bott");
            viewString.Append("omY AS Interpretation_BottomY, \r\n            T.BottomZ AS Interpretation_BottomZ");
            viewString.Append(", \r\n            T.DesurveyID AS Interpretation_DesurveyID, \r\n            T.Heade");
            viewString.Append("rID AS Interpretation_HeaderID, \r\n            T.AssayGroupTestSampleID AS Interp");
            viewString.Append("retation_AssayGroupTestSampleID, \r\n            T.CasingID AS Interpretation_Casi");
            viewString.Append("ngID, \r\n            T.CementingID AS Interpretation_CementingID, \r\n            T");
            viewString.Append(".DefectID AS Interpretation_DefectID, \r\n            T.DrillingID AS Interpretati");
            viewString.Append("on_DrillingID, \r\n            T.GeologyID AS Interpretation_GeologyID, \r\n        ");
            viewString.Append("    T.GeophysicsDataID AS Interpretation_GeophysicsDataID, \r\n            T.Litho");
            viewString.Append("logyID AS Interpretation_LithologyID, \r\n            T.SeamID AS Interpretation_S");
            viewString.Append("eamID, \r\n            T.PlyID AS Interpretation_PlyID, \r\n            T.Mineralogy");
            viewString.Append("ID AS Interpretation_MineralogyID, \r\n            T.PointLoadID AS Interpretation");
            viewString.Append("_PointLoadID, \r\n            T.RecoveryID AS Interpretation_RecoveryID, \r\n       ");
            viewString.Append("     T.BlockModelBlockID AS Interpretation_BlockModelBlockID, \r\n            T.Ve");
            viewString.Append("rsion AS Interpretation_Version, \r\n            T.VersionAntecedentID AS Interpre");
            viewString.Append("tation_VersionAntecedentID, \r\n            T.VersionCertainty AS Interpretation_V");
            viewString.Append("ersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Interpretation_Ver");
            viewString.Append("sionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Interpretation_Versi");
            viewString.Append("onUpdatedBy, \r\n            T.VersionDeletedBy AS Interpretation_VersionDeletedBy");
            viewString.Append(", \r\n            T.VersionOwnerContactID AS Interpretation_VersionOwnerContactID,");
            viewString.Append(" \r\n            T.VersionOwnerCompanyID AS Interpretation_VersionOwnerCompanyID, ");
            viewString.Append("\r\n            T.VersionUpdated AS Interpretation_VersionUpdated, \r\n            T");
            viewString.Append("rue AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Interpreta");
            viewString.Append("tion AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Interpretations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.InterpretationDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView449()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.InterpretationDatas", "\r\n    SELECT VALUE -- Constructing InterpretationDatas\r\n        [XODB.Module.Busi" +
                    "nessObjects.InterpretationData](T1.InterpretationData_InterpretationDataID, T1.I" +
                    "nterpretationData_InterpretationID, T1.InterpretationData_ParameterID, T1.Interp" +
                    "retationData_InterpretationDataText, T1.InterpretationData_InterpretationDataVal" +
                    "ue, T1.InterpretationData_Version, T1.InterpretationData_VersionAntecedentID, T1" +
                    ".InterpretationData_VersionCertainty, T1.InterpretationData_VersionWorkflowInsta" +
                    "nceID, T1.InterpretationData_VersionUpdatedBy, T1.InterpretationData_VersionDele" +
                    "tedBy, T1.InterpretationData_VersionOwnerContactID, T1.InterpretationData_Versio" +
                    "nOwnerCompanyID, T1.InterpretationData_VersionUpdated)\r\n    FROM (\r\n        SELE" +
                    "CT \r\n            T.InterpretationDataID AS InterpretationData_InterpretationData" +
                    "ID, \r\n            T.InterpretationID AS InterpretationData_InterpretationID, \r\n " +
                    "           T.ParameterID AS InterpretationData_ParameterID, \r\n            T.Inte" +
                    "rpretationDataText AS InterpretationData_InterpretationDataText, \r\n            T" +
                    ".InterpretationDataValue AS InterpretationData_InterpretationDataValue, \r\n      " +
                    "      T.Version AS InterpretationData_Version, \r\n            T.VersionAntecedent" +
                    "ID AS InterpretationData_VersionAntecedentID, \r\n            T.VersionCertainty A" +
                    "S InterpretationData_VersionCertainty, \r\n            T.VersionWorkflowInstanceID" +
                    " AS InterpretationData_VersionWorkflowInstanceID, \r\n            T.VersionUpdated" +
                    "By AS InterpretationData_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS I" +
                    "nterpretationData_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Int" +
                    "erpretationData_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS " +
                    "InterpretationData_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Inte" +
                    "rpretationData_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBMo" +
                    "duleBusinessObjectsStoreContainer.X_InterpretationData AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Leases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView450()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Leases", "\r\n    SELECT VALUE -- Constructing Leases\r\n        [XODB.Module.BusinessObjects.L" +
                    "ease](T1.Lease_LeaseID, T1.Lease_TenementID, T1.Lease_LeaseNumber, T1.Lease_Owne" +
                    "rCompanyID, T1.Lease_ApprovedByContactID, T1.Lease_ValidFrom, T1.Lease_Expiry, T" +
                    "1.Lease_Comment, T1.Lease_Version, T1.Lease_VersionAntecedentID, T1.Lease_Versio" +
                    "nCertainty, T1.Lease_VersionWorkflowInstanceID, T1.Lease_VersionUpdatedBy, T1.Le" +
                    "ase_VersionDeletedBy, T1.Lease_VersionOwnerContactID, T1.Lease_VersionOwnerCompa" +
                    "nyID, T1.Lease_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Lease" +
                    "ID AS Lease_LeaseID, \r\n            T.TenementID AS Lease_TenementID, \r\n         " +
                    "   T.LeaseNumber AS Lease_LeaseNumber, \r\n            T.OwnerCompanyID AS Lease_O" +
                    "wnerCompanyID, \r\n            T.ApprovedByContactID AS Lease_ApprovedByContactID," +
                    " \r\n            T.ValidFrom AS Lease_ValidFrom, \r\n            T.Expiry AS Lease_E" +
                    "xpiry, \r\n            T.Comment AS Lease_Comment, \r\n            T.Version AS Leas" +
                    "e_Version, \r\n            T.VersionAntecedentID AS Lease_VersionAntecedentID, \r\n " +
                    "           T.VersionCertainty AS Lease_VersionCertainty, \r\n            T.Version" +
                    "WorkflowInstanceID AS Lease_VersionWorkflowInstanceID, \r\n            T.VersionUp" +
                    "datedBy AS Lease_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Lease_Ver" +
                    "sionDeletedBy, \r\n            T.VersionOwnerContactID AS Lease_VersionOwnerContac" +
                    "tID, \r\n            T.VersionOwnerCompanyID AS Lease_VersionOwnerCompanyID, \r\n   " +
                    "         T.VersionUpdated AS Lease_VersionUpdated, \r\n            True AS _from0\r" +
                    "\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Lease AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.LeaseApplications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView451()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2394);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LeaseApplications\r\n        [XODB.Module.Busin");
            viewString.Append("essObjects.LeaseApplication](T1.LeaseApplication_LeaseApplicationID, T1.LeaseApp");
            viewString.Append("lication_TenementID, T1.LeaseApplication_LeaseApplicationTypeID, T1.LeaseApplica");
            viewString.Append("tion_LeaseApplicationNumber, T1.LeaseApplication_OwnerCompanyID, T1.LeaseApplica");
            viewString.Append("tion_OfficeOfApproval, T1.LeaseApplication_Approved, T1.LeaseApplication_Approve");
            viewString.Append("dByContactID, T1.LeaseApplication_ValidFrom, T1.LeaseApplication_Expiry, T1.Leas");
            viewString.Append("eApplication_Comment, T1.LeaseApplication_Version, T1.LeaseApplication_VersionAn");
            viewString.Append("tecedentID, T1.LeaseApplication_VersionCertainty, T1.LeaseApplication_VersionWor");
            viewString.Append("kflowInstanceID, T1.LeaseApplication_VersionUpdatedBy, T1.LeaseApplication_Versi");
            viewString.Append("onDeletedBy, T1.LeaseApplication_VersionOwnerContactID, T1.LeaseApplication_Vers");
            viewString.Append("ionOwnerCompanyID, T1.LeaseApplication_VersionUpdated)\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.LeaseApplicationID AS LeaseApplication_LeaseApplicationID, \r\n");
            viewString.Append("            T.TenementID AS LeaseApplication_TenementID, \r\n            T.LeaseAp");
            viewString.Append("plicationTypeID AS LeaseApplication_LeaseApplicationTypeID, \r\n            T.Leas");
            viewString.Append("eApplicationNumber AS LeaseApplication_LeaseApplicationNumber, \r\n            T.O");
            viewString.Append("wnerCompanyID AS LeaseApplication_OwnerCompanyID, \r\n            T.OfficeOfApprov");
            viewString.Append("al AS LeaseApplication_OfficeOfApproval, \r\n            T.Approved AS LeaseApplic");
            viewString.Append("ation_Approved, \r\n            T.ApprovedByContactID AS LeaseApplication_Approved");
            viewString.Append("ByContactID, \r\n            T.ValidFrom AS LeaseApplication_ValidFrom, \r\n        ");
            viewString.Append("    T.Expiry AS LeaseApplication_Expiry, \r\n            T.Comment AS LeaseApplica");
            viewString.Append("tion_Comment, \r\n            T.Version AS LeaseApplication_Version, \r\n           ");
            viewString.Append(" T.VersionAntecedentID AS LeaseApplication_VersionAntecedentID, \r\n            T.");
            viewString.Append("VersionCertainty AS LeaseApplication_VersionCertainty, \r\n            T.VersionWo");
            viewString.Append("rkflowInstanceID AS LeaseApplication_VersionWorkflowInstanceID, \r\n            T.");
            viewString.Append("VersionUpdatedBy AS LeaseApplication_VersionUpdatedBy, \r\n            T.VersionDe");
            viewString.Append("letedBy AS LeaseApplication_VersionDeletedBy, \r\n            T.VersionOwnerContac");
            viewString.Append("tID AS LeaseApplication_VersionOwnerContactID, \r\n            T.VersionOwnerCompa");
            viewString.Append("nyID AS LeaseApplication_VersionOwnerCompanyID, \r\n            T.VersionUpdated A");
            viewString.Append("S LeaseApplication_VersionUpdated, \r\n            True AS _from0\r\n        FROM XO");
            viewString.Append("DBModuleBusinessObjectsStoreContainer.X_LeaseApplication AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LeaseApplications", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Lithologies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView452()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4983);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Lithologies\r\n        [XODB.Module.BusinessObj");
            viewString.Append("ects.Lithology](T1.Lithology_LithologyID, T1.Lithology_HeaderID, T1.Lithology_Fr");
            viewString.Append("omDepth, T1.Lithology_ToDepth, T1.Lithology_RecoveredThickness, T1.Lithology_Dom");
            viewString.Append("ainID, T1.Lithology_SeamID, T1.Lithology_PlyID, T1.Lithology_StratigraphyID, T1.");
            viewString.Append("Lithology_HorizonID, T1.Lithology_SampleTypeID, T1.Lithology_SampleNumber, T1.Li");
            viewString.Append("thology_SampleMassKg, T1.Lithology_IntervalStatusID, T1.Lithology_LithologyPerce");
            viewString.Append("ntage, T1.Lithology_LithologyTypeID, T1.Lithology_LithologyQualifierID, T1.Litho");
            viewString.Append("logy_ShadeID, T1.Lithology_HueID, T1.Lithology_ColourID, T1.Lithology_AdjectiveI");
            viewString.Append("D1, T1.Lithology_AdjectiveID2, T1.Lithology_AdjectiveID3, T1.Lithology_Adjective");
            viewString.Append("ID4, T1.Lithology_LithologyInterrelationID, T1.Lithology_WeatheringID, T1.Lithol");
            viewString.Append("ogy_EstimatedStrengthID, T1.Lithology_BedSpacingID, T1.Lithology_DefectTypeID, T");
            viewString.Append("1.Lithology_DefectCompletenessID, T1.Lithology_DefectSpacingID, T1.Lithology_Def");
            viewString.Append("ectDip, T1.Lithology_CoreStateID, T1.Lithology_MechanicalStateID, T1.Lithology_T");
            viewString.Append("extureID, T1.Lithology_BasalContactID, T1.Lithology_SedimentaryFeature1ID, T1.Li");
            viewString.Append("thology_SedimentaryFeature2ID, T1.Lithology_BeddingDip, T1.Lithology_MineralAndF");
            viewString.Append("ossilAbundanceID, T1.Lithology_MineralAndFossilTypeID, T1.Lithology_MineralAndFo");
            viewString.Append("ssilAssociationID, T1.Lithology_GasDetectedID, T1.Lithology_Description, T1.Lith");
            viewString.Append("ology_Version, T1.Lithology_VersionAntecedentID, T1.Lithology_VersionCertainty, ");
            viewString.Append("T1.Lithology_VersionWorkflowInstanceID, T1.Lithology_VersionUpdatedBy, T1.Lithol");
            viewString.Append("ogy_VersionDeletedBy, T1.Lithology_VersionOwnerContactID, T1.Lithology_VersionOw");
            viewString.Append("nerCompanyID, T1.Lithology_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.LithologyID AS Lithology_LithologyID, \r\n            T.HeaderID AS Litholo");
            viewString.Append("gy_HeaderID, \r\n            T.FromDepth AS Lithology_FromDepth, \r\n            T.T");
            viewString.Append("oDepth AS Lithology_ToDepth, \r\n            T.RecoveredThickness AS Lithology_Rec");
            viewString.Append("overedThickness, \r\n            T.DomainID AS Lithology_DomainID, \r\n            T");
            viewString.Append(".SeamID AS Lithology_SeamID, \r\n            T.PlyID AS Lithology_PlyID, \r\n       ");
            viewString.Append("     T.StratigraphyID AS Lithology_StratigraphyID, \r\n            T.HorizonID AS ");
            viewString.Append("Lithology_HorizonID, \r\n            T.SampleTypeID AS Lithology_SampleTypeID, \r\n ");
            viewString.Append("           T.SampleNumber AS Lithology_SampleNumber, \r\n            T.SampleMassK");
            viewString.Append("g AS Lithology_SampleMassKg, \r\n            T.IntervalStatusID AS Lithology_Inter");
            viewString.Append("valStatusID, \r\n            T.LithologyPercentage AS Lithology_LithologyPercentag");
            viewString.Append("e, \r\n            T.LithologyTypeID AS Lithology_LithologyTypeID, \r\n            T");
            viewString.Append(".LithologyQualifierID AS Lithology_LithologyQualifierID, \r\n            T.ShadeID");
            viewString.Append(" AS Lithology_ShadeID, \r\n            T.HueID AS Lithology_HueID, \r\n            T");
            viewString.Append(".ColourID AS Lithology_ColourID, \r\n            T.AdjectiveID1 AS Lithology_Adjec");
            viewString.Append("tiveID1, \r\n            T.AdjectiveID2 AS Lithology_AdjectiveID2, \r\n            T");
            viewString.Append(".AdjectiveID3 AS Lithology_AdjectiveID3, \r\n            T.AdjectiveID4 AS Litholo");
            viewString.Append("gy_AdjectiveID4, \r\n            T.LithologyInterrelationID AS Lithology_Lithology");
            viewString.Append("InterrelationID, \r\n            T.WeatheringID AS Lithology_WeatheringID, \r\n     ");
            viewString.Append("       T.EstimatedStrengthID AS Lithology_EstimatedStrengthID, \r\n            T.B");
            viewString.Append("edSpacingID AS Lithology_BedSpacingID, \r\n            T.DefectTypeID AS Lithology");
            viewString.Append("_DefectTypeID, \r\n            T.DefectCompletenessID AS Lithology_DefectCompleten");
            viewString.Append("essID, \r\n            T.DefectSpacingID AS Lithology_DefectSpacingID, \r\n         ");
            viewString.Append("   T.DefectDip AS Lithology_DefectDip, \r\n            T.CoreStateID AS Lithology_");
            viewString.Append("CoreStateID, \r\n            T.MechanicalStateID AS Lithology_MechanicalStateID, \r");
            viewString.Append("\n            T.TextureID AS Lithology_TextureID, \r\n            T.BasalContactID ");
            viewString.Append("AS Lithology_BasalContactID, \r\n            T.SedimentaryFeature1ID AS Lithology_");
            viewString.Append("SedimentaryFeature1ID, \r\n            T.SedimentaryFeature2ID AS Lithology_Sedime");
            viewString.Append("ntaryFeature2ID, \r\n            T.BeddingDip AS Lithology_BeddingDip, \r\n         ");
            viewString.Append("   T.MineralAndFossilAbundanceID AS Lithology_MineralAndFossilAbundanceID, \r\n   ");
            viewString.Append("         T.MineralAndFossilTypeID AS Lithology_MineralAndFossilTypeID, \r\n       ");
            viewString.Append("     T.MineralAndFossilAssociationID AS Lithology_MineralAndFossilAssociationID,");
            viewString.Append(" \r\n            T.GasDetectedID AS Lithology_GasDetectedID, \r\n            T.Descr");
            viewString.Append("iption AS Lithology_Description, \r\n            T.Version AS Lithology_Version, \r");
            viewString.Append("\n            T.VersionAntecedentID AS Lithology_VersionAntecedentID, \r\n         ");
            viewString.Append("   T.VersionCertainty AS Lithology_VersionCertainty, \r\n            T.VersionWork");
            viewString.Append("flowInstanceID AS Lithology_VersionWorkflowInstanceID, \r\n            T.VersionUp");
            viewString.Append("datedBy AS Lithology_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Litho");
            viewString.Append("logy_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Lithology_Versio");
            viewString.Append("nOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Lithology_VersionOwner");
            viewString.Append("CompanyID, \r\n            T.VersionUpdated AS Lithology_VersionUpdated, \r\n       ");
            viewString.Append("     True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Lith");
            viewString.Append("ology AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Lithologies", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Locations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView453()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2290);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Locations\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Location](T1.Location_LocationID, T1.Location_LocationTypeID, T1.Location_Def");
            viewString.Append("aultLocationName, T1.Location_LocationCode, T1.Location_LocationGeography, T1.Lo");
            viewString.Append("cation_LatitudeWGS84, T1.Location_LongitudeWGS84, T1.Location_Elevation, T1.Loca");
            viewString.Append("tion_CountryID, T1.Location_CountryStateID, T1.Location_DefaultCulture, T1.Locat");
            viewString.Append("ion_OwnerCompanyID, T1.Location_ResponsibleContactID, T1.Location_Comment, T1.Lo");
            viewString.Append("cation_Version, T1.Location_VersionAntecedentID, T1.Location_VersionCertainty, T");
            viewString.Append("1.Location_VersionWorkflowInstanceID, T1.Location_VersionUpdatedBy, T1.Location_");
            viewString.Append("VersionDeletedBy, T1.Location_VersionOwnerContactID, T1.Location_VersionOwnerCom");
            viewString.Append("panyID, T1.Location_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.");
            viewString.Append("LocationID AS Location_LocationID, \r\n            T.LocationTypeID AS Location_Lo");
            viewString.Append("cationTypeID, \r\n            T.DefaultLocationName AS Location_DefaultLocationNam");
            viewString.Append("e, \r\n            T.LocationCode AS Location_LocationCode, \r\n            T.Locati");
            viewString.Append("onGeography AS Location_LocationGeography, \r\n            T.LatitudeWGS84 AS Loca");
            viewString.Append("tion_LatitudeWGS84, \r\n            T.LongitudeWGS84 AS Location_LongitudeWGS84, \r");
            viewString.Append("\n            T.Elevation AS Location_Elevation, \r\n            T.CountryID AS Loc");
            viewString.Append("ation_CountryID, \r\n            T.CountryStateID AS Location_CountryStateID, \r\n  ");
            viewString.Append("          T.DefaultCulture AS Location_DefaultCulture, \r\n            T.OwnerComp");
            viewString.Append("anyID AS Location_OwnerCompanyID, \r\n            T.ResponsibleContactID AS Locati");
            viewString.Append("on_ResponsibleContactID, \r\n            T.Comment AS Location_Comment, \r\n        ");
            viewString.Append("    T.Version AS Location_Version, \r\n            T.VersionAntecedentID AS Locati");
            viewString.Append("on_VersionAntecedentID, \r\n            T.VersionCertainty AS Location_VersionCert");
            viewString.Append("ainty, \r\n            T.VersionWorkflowInstanceID AS Location_VersionWorkflowInst");
            viewString.Append("anceID, \r\n            T.VersionUpdatedBy AS Location_VersionUpdatedBy, \r\n       ");
            viewString.Append("     T.VersionDeletedBy AS Location_VersionDeletedBy, \r\n            T.VersionOwn");
            viewString.Append("erContactID AS Location_VersionOwnerContactID, \r\n            T.VersionOwnerCompa");
            viewString.Append("nyID AS Location_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Locati");
            viewString.Append("on_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusiness");
            viewString.Append("ObjectsStoreContainer.X_Location AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Locations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.LocationAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView454()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LocationAlias", "\r\n    SELECT VALUE -- Constructing LocationAlias\r\n        [XODB.Module.BusinessOb" +
                    "jects.LocationAlias](T1.LocationAlias_LocationAliasID, T1.LocationAlias_Location" +
                    "ID, T1.LocationAlias_Alias, T1.LocationAlias_Culture, T1.LocationAlias_Priority," +
                    " T1.LocationAlias_Version, T1.LocationAlias_VersionAntecedentID, T1.LocationAlia" +
                    "s_VersionCertainty, T1.LocationAlias_VersionWorkflowInstanceID, T1.LocationAlias" +
                    "_VersionUpdatedBy, T1.LocationAlias_VersionDeletedBy, T1.LocationAlias_VersionOw" +
                    "nerContactID, T1.LocationAlias_VersionOwnerCompanyID, T1.LocationAlias_VersionUp" +
                    "dated)\r\n    FROM (\r\n        SELECT \r\n            T.LocationAliasID AS LocationAl" +
                    "ias_LocationAliasID, \r\n            T.LocationID AS LocationAlias_LocationID, \r\n " +
                    "           T.Alias AS LocationAlias_Alias, \r\n            T.Culture AS LocationAl" +
                    "ias_Culture, \r\n            T.Priority AS LocationAlias_Priority, \r\n            T" +
                    ".Version AS LocationAlias_Version, \r\n            T.VersionAntecedentID AS Locati" +
                    "onAlias_VersionAntecedentID, \r\n            T.VersionCertainty AS LocationAlias_V" +
                    "ersionCertainty, \r\n            T.VersionWorkflowInstanceID AS LocationAlias_Vers" +
                    "ionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS LocationAlias_Version" +
                    "UpdatedBy, \r\n            T.VersionDeletedBy AS LocationAlias_VersionDeletedBy, \r" +
                    "\n            T.VersionOwnerContactID AS LocationAlias_VersionOwnerContactID, \r\n " +
                    "           T.VersionOwnerCompanyID AS LocationAlias_VersionOwnerCompanyID, \r\n   " +
                    "         T.VersionUpdated AS LocationAlias_VersionUpdated, \r\n            True AS" +
                    " _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_LocationAlias AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.LocationDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView455()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LocationDatas", "\r\n    SELECT VALUE -- Constructing LocationDatas\r\n        [XODB.Module.BusinessOb" +
                    "jects.LocationData](T1.LocationData_LocationDataID, T1.LocationData_ParentLocati" +
                    "onDataID, T1.LocationData_TableType, T1.LocationData_ReferenceID, T1.LocationDat" +
                    "a_LocationID, T1.LocationData_Version, T1.LocationData_VersionAntecedentID, T1.L" +
                    "ocationData_VersionCertainty, T1.LocationData_VersionWorkflowInstanceID, T1.Loca" +
                    "tionData_VersionUpdatedBy, T1.LocationData_VersionDeletedBy, T1.LocationData_Ver" +
                    "sionOwnerContactID, T1.LocationData_VersionOwnerCompanyID, T1.LocationData_Versi" +
                    "onUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.LocationDataID AS Locatio" +
                    "nData_LocationDataID, \r\n            T.ParentLocationDataID AS LocationData_Paren" +
                    "tLocationDataID, \r\n            T.TableType AS LocationData_TableType, \r\n        " +
                    "    T.ReferenceID AS LocationData_ReferenceID, \r\n            T.LocationID AS Loc" +
                    "ationData_LocationID, \r\n            T.Version AS LocationData_Version, \r\n       " +
                    "     T.VersionAntecedentID AS LocationData_VersionAntecedentID, \r\n            T." +
                    "VersionCertainty AS LocationData_VersionCertainty, \r\n            T.VersionWorkfl" +
                    "owInstanceID AS LocationData_VersionWorkflowInstanceID, \r\n            T.VersionU" +
                    "pdatedBy AS LocationData_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS L" +
                    "ocationData_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS LocationD" +
                    "ata_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS LocationData" +
                    "_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS LocationData_VersionUp" +
                    "dated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStore" +
                    "Container.X_LocationData AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.LocationTraces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView456()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LocationTraces", "\r\n    SELECT VALUE -- Constructing LocationTraces\r\n        [XODB.Module.BusinessO" +
                    "bjects.LocationTrace](T1.LocationTrace_LocationHistoryID, T1.LocationTrace_Locat" +
                    "ionHistory, T1.LocationTrace_LocationTaken, T1.LocationTrace_CorrectedLocationID" +
                    ", T1.LocationTrace_ContactID, T1.LocationTrace_Version, T1.LocationTrace_Version" +
                    "AntecedentID, T1.LocationTrace_VersionCertainty, T1.LocationTrace_VersionWorkflo" +
                    "wInstanceID, T1.LocationTrace_VersionUpdatedBy, T1.LocationTrace_VersionDeletedB" +
                    "y, T1.LocationTrace_VersionOwnerContactID, T1.LocationTrace_VersionOwnerCompanyI" +
                    "D, T1.LocationTrace_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T." +
                    "LocationHistoryID AS LocationTrace_LocationHistoryID, \r\n            T.LocationHi" +
                    "story AS LocationTrace_LocationHistory, \r\n            T.LocationTaken AS Locatio" +
                    "nTrace_LocationTaken, \r\n            T.CorrectedLocationID AS LocationTrace_Corre" +
                    "ctedLocationID, \r\n            T.ContactID AS LocationTrace_ContactID, \r\n        " +
                    "    T.Version AS LocationTrace_Version, \r\n            T.VersionAntecedentID AS L" +
                    "ocationTrace_VersionAntecedentID, \r\n            T.VersionCertainty AS LocationTr" +
                    "ace_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS LocationTrace" +
                    "_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS LocationTrace_Ve" +
                    "rsionUpdatedBy, \r\n            T.VersionDeletedBy AS LocationTrace_VersionDeleted" +
                    "By, \r\n            T.VersionOwnerContactID AS LocationTrace_VersionOwnerContactID" +
                    ", \r\n            T.VersionOwnerCompanyID AS LocationTrace_VersionOwnerCompanyID, " +
                    "\r\n            T.VersionUpdated AS LocationTrace_VersionUpdated, \r\n            Tr" +
                    "ue AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_LocationHis" +
                    "tory AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Mineralogies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView457()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Mineralogies", "\r\n    SELECT VALUE -- Constructing Mineralogies\r\n        [XODB.Module.BusinessObj" +
                    "ects.Mineralogy](T1.Mineralogy_MineralogyID, T1.Mineralogy_HeaderID, T1.Mineralo" +
                    "gy_FromDepth, T1.Mineralogy_ToDepth, T1.Mineralogy_MineralAbundanceID, T1.Minera" +
                    "logy_MineralFormID, T1.Mineralogy_MineralTypeID, T1.Mineralogy_MineralStyleID, T" +
                    "1.Mineralogy_Logged, T1.Mineralogy_LoggedBy, T1.Mineralogy_Comment, T1.Mineralog" +
                    "y_Version, T1.Mineralogy_VersionAntecedentID, T1.Mineralogy_VersionCertainty, T1" +
                    ".Mineralogy_VersionWorkflowInstanceID, T1.Mineralogy_VersionUpdatedBy, T1.Minera" +
                    "logy_VersionDeletedBy, T1.Mineralogy_VersionOwnerContactID, T1.Mineralogy_Versio" +
                    "nOwnerCompanyID, T1.Mineralogy_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n   " +
                    "         T.MineralogyID AS Mineralogy_MineralogyID, \r\n            T.HeaderID AS " +
                    "Mineralogy_HeaderID, \r\n            T.FromDepth AS Mineralogy_FromDepth, \r\n      " +
                    "      T.ToDepth AS Mineralogy_ToDepth, \r\n            T.MineralAbundanceID AS Min" +
                    "eralogy_MineralAbundanceID, \r\n            T.MineralFormID AS Mineralogy_MineralF" +
                    "ormID, \r\n            T.MineralTypeID AS Mineralogy_MineralTypeID, \r\n            " +
                    "T.MineralStyleID AS Mineralogy_MineralStyleID, \r\n            T.Logged AS Mineral" +
                    "ogy_Logged, \r\n            T.LoggedBy AS Mineralogy_LoggedBy, \r\n            T.Com" +
                    "ment AS Mineralogy_Comment, \r\n            T.Version AS Mineralogy_Version, \r\n   " +
                    "         T.VersionAntecedentID AS Mineralogy_VersionAntecedentID, \r\n            " +
                    "T.VersionCertainty AS Mineralogy_VersionCertainty, \r\n            T.VersionWorkfl" +
                    "owInstanceID AS Mineralogy_VersionWorkflowInstanceID, \r\n            T.VersionUpd" +
                    "atedBy AS Mineralogy_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Miner" +
                    "alogy_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Mineralogy_Vers" +
                    "ionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Mineralogy_VersionOw" +
                    "nerCompanyID, \r\n            T.VersionUpdated AS Mineralogy_VersionUpdated, \r\n   " +
                    "         True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_" +
                    "Mineralogy AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelCharacteristics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView458()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelCharacteristics", "\r\n    SELECT VALUE -- Constructing ModelCharacteristics\r\n        [XODB.Module.Bus" +
                    "inessObjects.ModelCharacteristic](T1.ModelCharacteristic_ModelCharacteristicID, " +
                    "T1.ModelCharacteristic_ModelID, T1.ModelCharacteristic_CharacteristicID, T1.Mode" +
                    "lCharacteristic_Value, T1.ModelCharacteristic_Version, T1.ModelCharacteristic_Ve" +
                    "rsionAntecedentID, T1.ModelCharacteristic_VersionCertainty, T1.ModelCharacterist" +
                    "ic_VersionWorkflowInstanceID, T1.ModelCharacteristic_VersionUpdatedBy, T1.ModelC" +
                    "haracteristic_VersionDeletedBy, T1.ModelCharacteristic_VersionOwnerContactID, T1" +
                    ".ModelCharacteristic_VersionOwnerCompanyID, T1.ModelCharacteristic_VersionUpdate" +
                    "d)\r\n    FROM (\r\n        SELECT \r\n            T.ModelCharacteristicID AS ModelCha" +
                    "racteristic_ModelCharacteristicID, \r\n            T.ModelID AS ModelCharacteristi" +
                    "c_ModelID, \r\n            T.CharacteristicID AS ModelCharacteristic_Characteristi" +
                    "cID, \r\n            T.[Value] AS ModelCharacteristic_Value, \r\n            T.Versi" +
                    "on AS ModelCharacteristic_Version, \r\n            T.VersionAntecedentID AS ModelC" +
                    "haracteristic_VersionAntecedentID, \r\n            T.VersionCertainty AS ModelChar" +
                    "acteristic_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS ModelC" +
                    "haracteristic_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Mod" +
                    "elCharacteristic_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS ModelChar" +
                    "acteristic_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS ModelChara" +
                    "cteristic_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS ModelC" +
                    "haracteristic_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ModelChar" +
                    "acteristic_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModule" +
                    "BusinessObjectsStoreContainer.X_ModelCharacteristic AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Opportunities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView459()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2972);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Opportunities\r\n        [XODB.Module.BusinessO");
            viewString.Append("bjects.Opportunity](T1.Opportunity_OpportunityID, T1.Opportunity_OpportunityName");
            viewString.Append(", T1.Opportunity_OpportunityContactID, T1.Opportunity_OpportunityCompanyID, T1.O");
            viewString.Append("pportunity_StatusWorkTypeID, T1.Opportunity_RegardingWorkTypeID, T1.Opportunity_");
            viewString.Append("Description, T1.Opportunity_ProposalContactID, T1.Opportunity_ProposalFileDataID");
            viewString.Append(", T1.Opportunity_ProjectID, T1.Opportunity_ExperienceID, T1.Opportunity_OpenedBy");
            viewString.Append(", T1.Opportunity_AssignedBy, T1.Opportunity_MaintainedBy, T1.Opportunity_Convert");
            viewString.Append("edBy, T1.Opportunity_EstimatedConversion, T1.Opportunity_EstimatedDurationHours,");
            viewString.Append(" T1.Opportunity_EstimatedRevenue, T1.Opportunity_Probability, T1.Opportunity_Ver");
            viewString.Append("sion, T1.Opportunity_VersionAntecedentID, T1.Opportunity_VersionCertainty, T1.Op");
            viewString.Append("portunity_VersionWorkflowInstanceID, T1.Opportunity_VersionUpdatedBy, T1.Opportu");
            viewString.Append("nity_VersionDeletedBy, T1.Opportunity_VersionOwnerContactID, T1.Opportunity_Vers");
            viewString.Append("ionOwnerCompanyID, T1.Opportunity_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n");
            viewString.Append("            T.OpportunityID AS Opportunity_OpportunityID, \r\n            T.Opport");
            viewString.Append("unityName AS Opportunity_OpportunityName, \r\n            T.OpportunityContactID A");
            viewString.Append("S Opportunity_OpportunityContactID, \r\n            T.OpportunityCompanyID AS Oppo");
            viewString.Append("rtunity_OpportunityCompanyID, \r\n            T.StatusWorkTypeID AS Opportunity_St");
            viewString.Append("atusWorkTypeID, \r\n            T.RegardingWorkTypeID AS Opportunity_RegardingWork");
            viewString.Append("TypeID, \r\n            T.Description AS Opportunity_Description, \r\n            T.");
            viewString.Append("ProposalContactID AS Opportunity_ProposalContactID, \r\n            T.ProposalFile");
            viewString.Append("DataID AS Opportunity_ProposalFileDataID, \r\n            T.ProjectID AS Opportuni");
            viewString.Append("ty_ProjectID, \r\n            T.ExperienceID AS Opportunity_ExperienceID, \r\n      ");
            viewString.Append("      T.OpenedBy AS Opportunity_OpenedBy, \r\n            T.AssignedBy AS Opportun");
            viewString.Append("ity_AssignedBy, \r\n            T.MaintainedBy AS Opportunity_MaintainedBy, \r\n    ");
            viewString.Append("        T.ConvertedBy AS Opportunity_ConvertedBy, \r\n            T.EstimatedConve");
            viewString.Append("rsion AS Opportunity_EstimatedConversion, \r\n            T.EstimatedDurationHours");
            viewString.Append(" AS Opportunity_EstimatedDurationHours, \r\n            T.EstimatedRevenue AS Oppo");
            viewString.Append("rtunity_EstimatedRevenue, \r\n            T.Probability AS Opportunity_Probability");
            viewString.Append(", \r\n            T.Version AS Opportunity_Version, \r\n            T.VersionAnteced");
            viewString.Append("entID AS Opportunity_VersionAntecedentID, \r\n            T.VersionCertainty AS Op");
            viewString.Append("portunity_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Opportu");
            viewString.Append("nity_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Opportunity_");
            viewString.Append("VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Opportunity_VersionDeleted");
            viewString.Append("By, \r\n            T.VersionOwnerContactID AS Opportunity_VersionOwnerContactID, ");
            viewString.Append("\r\n            T.VersionOwnerCompanyID AS Opportunity_VersionOwnerCompanyID, \r\n  ");
            viewString.Append("          T.VersionUpdated AS Opportunity_VersionUpdated, \r\n            True AS ");
            viewString.Append("_from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Opportunity AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Opportunities", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Parameters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView460()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Parameters", "\r\n    SELECT VALUE -- Constructing Parameters\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Parameter](T1.Parameter_ParameterID, T1.Parameter_ParameterType, T1.Parameter" +
                    "_ParameterName, T1.Parameter_DefaultParameterValue, T1.Parameter_DefaultParamete" +
                    "rText, T1.Parameter_UnitID, T1.Parameter_Format, T1.Parameter_Description, T1.Pa" +
                    "rameter_Locale, T1.Parameter_Version, T1.Parameter_VersionAntecedentID, T1.Param" +
                    "eter_VersionCertainty, T1.Parameter_VersionWorkflowInstanceID, T1.Parameter_Vers" +
                    "ionUpdatedBy, T1.Parameter_VersionDeletedBy, T1.Parameter_VersionOwnerContactID," +
                    " T1.Parameter_VersionOwnerCompanyID, T1.Parameter_VersionUpdated)\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.ParameterID AS Parameter_ParameterID, \r\n          " +
                    "  T.ParameterType AS Parameter_ParameterType, \r\n            T.ParameterName AS P" +
                    "arameter_ParameterName, \r\n            T.DefaultParameterValue AS Parameter_Defau" +
                    "ltParameterValue, \r\n            T.DefaultParameterText AS Parameter_DefaultParam" +
                    "eterText, \r\n            T.UnitID AS Parameter_UnitID, \r\n            T.Format AS " +
                    "Parameter_Format, \r\n            T.Description AS Parameter_Description, \r\n      " +
                    "      T.Locale AS Parameter_Locale, \r\n            T.Version AS Parameter_Version" +
                    ", \r\n            T.VersionAntecedentID AS Parameter_VersionAntecedentID, \r\n      " +
                    "      T.VersionCertainty AS Parameter_VersionCertainty, \r\n            T.VersionW" +
                    "orkflowInstanceID AS Parameter_VersionWorkflowInstanceID, \r\n            T.Versio" +
                    "nUpdatedBy AS Parameter_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Pa" +
                    "rameter_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Parameter_Ver" +
                    "sionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Parameter_VersionOw" +
                    "nerCompanyID, \r\n            T.VersionUpdated AS Parameter_VersionUpdated, \r\n    " +
                    "        True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_P" +
                    "arameter AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ParameterDuplicates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView461()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ParameterDuplicates", "\r\n    SELECT VALUE -- Constructing ParameterDuplicates\r\n        [XODB.Module.Busi" +
                    "nessObjects.ParameterDuplicate](T1.ParameterDuplicate_ParameterDuplicateID, T1.P" +
                    "arameterDuplicate_Parameter1ID, T1.ParameterDuplicate_Parameter2ID, T1.Parameter" +
                    "Duplicate_Version, T1.ParameterDuplicate_VersionAntecedentID, T1.ParameterDuplic" +
                    "ate_VersionCertainty, T1.ParameterDuplicate_VersionWorkflowInstanceID, T1.Parame" +
                    "terDuplicate_VersionUpdatedBy, T1.ParameterDuplicate_VersionDeletedBy, T1.Parame" +
                    "terDuplicate_VersionOwnerContactID, T1.ParameterDuplicate_VersionOwnerCompanyID," +
                    " T1.ParameterDuplicate_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n           " +
                    " T.ParameterDuplicateID AS ParameterDuplicate_ParameterDuplicateID, \r\n          " +
                    "  T.Parameter1ID AS ParameterDuplicate_Parameter1ID, \r\n            T.Parameter2I" +
                    "D AS ParameterDuplicate_Parameter2ID, \r\n            T.Version AS ParameterDuplic" +
                    "ate_Version, \r\n            T.VersionAntecedentID AS ParameterDuplicate_VersionAn" +
                    "tecedentID, \r\n            T.VersionCertainty AS ParameterDuplicate_VersionCertai" +
                    "nty, \r\n            T.VersionWorkflowInstanceID AS ParameterDuplicate_VersionWork" +
                    "flowInstanceID, \r\n            T.VersionUpdatedBy AS ParameterDuplicate_VersionUp" +
                    "datedBy, \r\n            T.VersionDeletedBy AS ParameterDuplicate_VersionDeletedBy" +
                    ", \r\n            T.VersionOwnerContactID AS ParameterDuplicate_VersionOwnerContac" +
                    "tID, \r\n            T.VersionOwnerCompanyID AS ParameterDuplicate_VersionOwnerCom" +
                    "panyID, \r\n            T.VersionUpdated AS ParameterDuplicate_VersionUpdated, \r\n " +
                    "           True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer." +
                    "X_ParameterDuplicate AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ParameterGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView462()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ParameterGroups", "\r\n    SELECT VALUE -- Constructing ParameterGroups\r\n        [XODB.Module.Business" +
                    "Objects.ParameterGroup](T1.ParameterGroup_ParameterGroupID, T1.ParameterGroup_Pa" +
                    "rameterID, T1.ParameterGroup_GroupID, T1.ParameterGroup_Version, T1.ParameterGro" +
                    "up_VersionAntecedentID, T1.ParameterGroup_VersionCertainty, T1.ParameterGroup_Ve" +
                    "rsionWorkflowInstanceID, T1.ParameterGroup_VersionUpdatedBy, T1.ParameterGroup_V" +
                    "ersionDeletedBy, T1.ParameterGroup_VersionOwnerContactID, T1.ParameterGroup_Vers" +
                    "ionOwnerCompanyID, T1.ParameterGroup_VersionUpdated)\r\n    FROM (\r\n        SELECT" +
                    " \r\n            T.ParameterGroupID AS ParameterGroup_ParameterGroupID, \r\n        " +
                    "    T.ParameterID AS ParameterGroup_ParameterID, \r\n            T.GroupID AS Para" +
                    "meterGroup_GroupID, \r\n            T.Version AS ParameterGroup_Version, \r\n       " +
                    "     T.VersionAntecedentID AS ParameterGroup_VersionAntecedentID, \r\n            " +
                    "T.VersionCertainty AS ParameterGroup_VersionCertainty, \r\n            T.VersionWo" +
                    "rkflowInstanceID AS ParameterGroup_VersionWorkflowInstanceID, \r\n            T.Ve" +
                    "rsionUpdatedBy AS ParameterGroup_VersionUpdatedBy, \r\n            T.VersionDelete" +
                    "dBy AS ParameterGroup_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS" +
                    " ParameterGroup_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS " +
                    "ParameterGroup_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Paramete" +
                    "rGroup_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusi" +
                    "nessObjectsStoreContainer.X_ParameterGroup AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.PartCharacteristics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView463()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.PartCharacteristics", "\r\n    SELECT VALUE -- Constructing PartCharacteristics\r\n        [XODB.Module.Busi" +
                    "nessObjects.PartCharacteristic](T1.PartCharacteristic_PartCharacteristicID, T1.P" +
                    "artCharacteristic_PartID, T1.PartCharacteristic_CharacteristicID, T1.PartCharact" +
                    "eristic_Value, T1.PartCharacteristic_Version, T1.PartCharacteristic_VersionAntec" +
                    "edentID, T1.PartCharacteristic_VersionCertainty, T1.PartCharacteristic_VersionWo" +
                    "rkflowInstanceID, T1.PartCharacteristic_VersionUpdatedBy, T1.PartCharacteristic_" +
                    "VersionDeletedBy, T1.PartCharacteristic_VersionOwnerContactID, T1.PartCharacteri" +
                    "stic_VersionOwnerCompanyID, T1.PartCharacteristic_VersionUpdated)\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.PartCharacteristicID AS PartCharacteristic_PartCha" +
                    "racteristicID, \r\n            T.PartID AS PartCharacteristic_PartID, \r\n          " +
                    "  T.CharacteristicID AS PartCharacteristic_CharacteristicID, \r\n            T.[Va" +
                    "lue] AS PartCharacteristic_Value, \r\n            T.Version AS PartCharacteristic_" +
                    "Version, \r\n            T.VersionAntecedentID AS PartCharacteristic_VersionAntece" +
                    "dentID, \r\n            T.VersionCertainty AS PartCharacteristic_VersionCertainty," +
                    " \r\n            T.VersionWorkflowInstanceID AS PartCharacteristic_VersionWorkflow" +
                    "InstanceID, \r\n            T.VersionUpdatedBy AS PartCharacteristic_VersionUpdate" +
                    "dBy, \r\n            T.VersionDeletedBy AS PartCharacteristic_VersionDeletedBy, \r\n" +
                    "            T.VersionOwnerContactID AS PartCharacteristic_VersionOwnerContactID," +
                    " \r\n            T.VersionOwnerCompanyID AS PartCharacteristic_VersionOwnerCompany" +
                    "ID, \r\n            T.VersionUpdated AS PartCharacteristic_VersionUpdated, \r\n     " +
                    "       True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Pa" +
                    "rtCharacteristic AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.PointLoads
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView464()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2427);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PointLoads\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.PointLoad](T1.PointLoad_PointLoadID, T1.PointLoad_HeaderID, T1.PointLoad_Fro");
            viewString.Append("mDepth, T1.PointLoad_ToDepth, T1.PointLoad_SampleNumber, T1.PointLoad_SampleLeng");
            viewString.Append("th, T1.PointLoad_SampleStateID, T1.PointLoad_SampleTypeID, T1.PointLoad_TestSamp");
            viewString.Append("leCode, T1.PointLoad_TestSampleDepth, T1.PointLoad_PointLoadTestTypeID, T1.Point");
            viewString.Append("Load_PlatenSeparation, T1.PointLoad_Width, T1.PointLoad_FailureLoad, T1.PointLoa");
            viewString.Append("d_FailureModeID, T1.PointLoad_Comment, T1.PointLoad_Version, T1.PointLoad_Versio");
            viewString.Append("nAntecedentID, T1.PointLoad_VersionCertainty, T1.PointLoad_VersionWorkflowInstan");
            viewString.Append("ceID, T1.PointLoad_VersionUpdatedBy, T1.PointLoad_VersionDeletedBy, T1.PointLoad");
            viewString.Append("_VersionOwnerContactID, T1.PointLoad_VersionOwnerCompanyID, T1.PointLoad_Version");
            viewString.Append("Updated)\r\n    FROM (\r\n        SELECT \r\n            T.PointLoadID AS PointLoad_Po");
            viewString.Append("intLoadID, \r\n            T.HeaderID AS PointLoad_HeaderID, \r\n            T.FromD");
            viewString.Append("epth AS PointLoad_FromDepth, \r\n            T.ToDepth AS PointLoad_ToDepth, \r\n   ");
            viewString.Append("         T.SampleNumber AS PointLoad_SampleNumber, \r\n            T.SampleLength ");
            viewString.Append("AS PointLoad_SampleLength, \r\n            T.SampleStateID AS PointLoad_SampleStat");
            viewString.Append("eID, \r\n            T.SampleTypeID AS PointLoad_SampleTypeID, \r\n            T.Tes");
            viewString.Append("tSampleCode AS PointLoad_TestSampleCode, \r\n            T.TestSampleDepth AS Poin");
            viewString.Append("tLoad_TestSampleDepth, \r\n            T.PointLoadTestTypeID AS PointLoad_PointLoa");
            viewString.Append("dTestTypeID, \r\n            T.PlatenSeparation AS PointLoad_PlatenSeparation, \r\n ");
            viewString.Append("           T.Width AS PointLoad_Width, \r\n            T.FailureLoad AS PointLoad_");
            viewString.Append("FailureLoad, \r\n            T.FailureModeID AS PointLoad_FailureModeID, \r\n       ");
            viewString.Append("     T.Comment AS PointLoad_Comment, \r\n            T.Version AS PointLoad_Versio");
            viewString.Append("n, \r\n            T.VersionAntecedentID AS PointLoad_VersionAntecedentID, \r\n     ");
            viewString.Append("       T.VersionCertainty AS PointLoad_VersionCertainty, \r\n            T.Version");
            viewString.Append("WorkflowInstanceID AS PointLoad_VersionWorkflowInstanceID, \r\n            T.Versi");
            viewString.Append("onUpdatedBy AS PointLoad_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS P");
            viewString.Append("ointLoad_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS PointLoad_Ve");
            viewString.Append("rsionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS PointLoad_VersionO");
            viewString.Append("wnerCompanyID, \r\n            T.VersionUpdated AS PointLoad_VersionUpdated, \r\n   ");
            viewString.Append("         True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_");
            viewString.Append("PointLoad AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.PointLoads", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Projects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView465()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Projects", "\r\n    SELECT VALUE -- Constructing Projects\r\n        [XODB.Module.BusinessObjects" +
                    ".Project](T1.Project_ProjectID, T1.Project_ParentProjectID, T1.Project_TenementI" +
                    "D, T1.Project_ProjectName, T1.Project_ProjectCode, T1.Project_ClientCompanyID, T" +
                    "1.Project_Comment, T1.Project_Version, T1.Project_VersionAntecedentID, T1.Projec" +
                    "t_VersionCertainty, T1.Project_VersionWorkflowInstanceID, T1.Project_VersionUpda" +
                    "tedBy, T1.Project_VersionDeletedBy, T1.Project_VersionOwnerContactID, T1.Project" +
                    "_VersionOwnerCompanyID, T1.Project_VersionUpdated)\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.ProjectID AS Project_ProjectID, \r\n            T.ParentProjectID A" +
                    "S Project_ParentProjectID, \r\n            T.TenementID AS Project_TenementID, \r\n " +
                    "           T.ProjectName AS Project_ProjectName, \r\n            T.ProjectCode AS " +
                    "Project_ProjectCode, \r\n            T.ClientCompanyID AS Project_ClientCompanyID," +
                    " \r\n            T.Comment AS Project_Comment, \r\n            T.Version AS Project_" +
                    "Version, \r\n            T.VersionAntecedentID AS Project_VersionAntecedentID, \r\n " +
                    "           T.VersionCertainty AS Project_VersionCertainty, \r\n            T.Versi" +
                    "onWorkflowInstanceID AS Project_VersionWorkflowInstanceID, \r\n            T.Versi" +
                    "onUpdatedBy AS Project_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Pro" +
                    "ject_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Project_VersionO" +
                    "wnerContactID, \r\n            T.VersionOwnerCompanyID AS Project_VersionOwnerComp" +
                    "anyID, \r\n            T.VersionUpdated AS Project_VersionUpdated, \r\n            T" +
                    "rue AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Project AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectDeliverables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView466()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4079);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectDeliverables\r\n        [XODB.Module.Bus");
            viewString.Append("inessObjects.ProjectDeliverable](T1.ProjectDeliverable_ProjectDeliverableID, T1.");
            viewString.Append("ProjectDeliverable_ProjectID, T1.ProjectDeliverable_Sequence, T1.ProjectDelivera");
            viewString.Append("ble_DeliverableName, T1.ProjectDeliverable_WorkTypeID, T1.ProjectDeliverable_Mil");
            viewString.Append("estoneTaskID, T1.ProjectDeliverable_Description, T1.ProjectDeliverable_Initiated");
            viewString.Append("By, T1.ProjectDeliverable_Initiated, T1.ProjectDeliverable_ApprovedBy, T1.Projec");
            viewString.Append("tDeliverable_Approved, T1.ProjectDeliverable_EvidenceDescription, T1.ProjectDeli");
            viewString.Append("verable_EvidenceFileDataID, T1.ProjectDeliverable_EvidenceContractID, T1.Project");
            viewString.Append("Deliverable_EvidenceContactID, T1.ProjectDeliverable_EvidenceCreated, T1.Project");
            viewString.Append("Deliverable_ExpectedProRataUnits, T1.ProjectDeliverable_ExpectedProRataPerUnitID");
            viewString.Append(", T1.ProjectDeliverable_ExpectedProRataValue, T1.ProjectDeliverable_EstimatedDur");
            viewString.Append("ationManHours, T1.ProjectDeliverable_EstimatedCost, T1.ProjectDeliverable_Due, T");
            viewString.Append("1.ProjectDeliverable_HourlyPenalties, T1.ProjectDeliverable_TotalValue, T1.Proje");
            viewString.Append("ctDeliverable_Completed, T1.ProjectDeliverable_Comment, T1.ProjectDeliverable_Ve");
            viewString.Append("rsion, T1.ProjectDeliverable_VersionAntecedentID, T1.ProjectDeliverable_VersionC");
            viewString.Append("ertainty, T1.ProjectDeliverable_VersionWorkflowInstanceID, T1.ProjectDeliverable");
            viewString.Append("_VersionUpdatedBy, T1.ProjectDeliverable_VersionDeletedBy, T1.ProjectDeliverable");
            viewString.Append("_VersionOwnerContactID, T1.ProjectDeliverable_VersionOwnerCompanyID, T1.ProjectD");
            viewString.Append("eliverable_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectDe");
            viewString.Append("liverableID AS ProjectDeliverable_ProjectDeliverableID, \r\n            T.ProjectI");
            viewString.Append("D AS ProjectDeliverable_ProjectID, \r\n            T.Sequence AS ProjectDeliverabl");
            viewString.Append("e_Sequence, \r\n            T.DeliverableName AS ProjectDeliverable_DeliverableNam");
            viewString.Append("e, \r\n            T.WorkTypeID AS ProjectDeliverable_WorkTypeID, \r\n            T.");
            viewString.Append("MilestoneTaskID AS ProjectDeliverable_MilestoneTaskID, \r\n            T.Descripti");
            viewString.Append("on AS ProjectDeliverable_Description, \r\n            T.InitiatedBy AS ProjectDeli");
            viewString.Append("verable_InitiatedBy, \r\n            T.Initiated AS ProjectDeliverable_Initiated, ");
            viewString.Append("\r\n            T.ApprovedBy AS ProjectDeliverable_ApprovedBy, \r\n            T.App");
            viewString.Append("roved AS ProjectDeliverable_Approved, \r\n            T.EvidenceDescription AS Pro");
            viewString.Append("jectDeliverable_EvidenceDescription, \r\n            T.EvidenceFileDataID AS Proje");
            viewString.Append("ctDeliverable_EvidenceFileDataID, \r\n            T.EvidenceContractID AS ProjectD");
            viewString.Append("eliverable_EvidenceContractID, \r\n            T.EvidenceContactID AS ProjectDeliv");
            viewString.Append("erable_EvidenceContactID, \r\n            T.EvidenceCreated AS ProjectDeliverable_");
            viewString.Append("EvidenceCreated, \r\n            T.ExpectedProRataUnits AS ProjectDeliverable_Expe");
            viewString.Append("ctedProRataUnits, \r\n            T.ExpectedProRataPerUnitID AS ProjectDeliverable");
            viewString.Append("_ExpectedProRataPerUnitID, \r\n            T.ExpectedProRataValue AS ProjectDelive");
            viewString.Append("rable_ExpectedProRataValue, \r\n            T.EstimatedDurationManHours AS Project");
            viewString.Append("Deliverable_EstimatedDurationManHours, \r\n            T.EstimatedCost AS ProjectD");
            viewString.Append("eliverable_EstimatedCost, \r\n            T.Due AS ProjectDeliverable_Due, \r\n     ");
            viewString.Append("       T.HourlyPenalties AS ProjectDeliverable_HourlyPenalties, \r\n            T.");
            viewString.Append("TotalValue AS ProjectDeliverable_TotalValue, \r\n            T.Completed AS Projec");
            viewString.Append("tDeliverable_Completed, \r\n            T.Comment AS ProjectDeliverable_Comment, \r");
            viewString.Append("\n            T.Version AS ProjectDeliverable_Version, \r\n            T.VersionAnt");
            viewString.Append("ecedentID AS ProjectDeliverable_VersionAntecedentID, \r\n            T.VersionCert");
            viewString.Append("ainty AS ProjectDeliverable_VersionCertainty, \r\n            T.VersionWorkflowIns");
            viewString.Append("tanceID AS ProjectDeliverable_VersionWorkflowInstanceID, \r\n            T.Version");
            viewString.Append("UpdatedBy AS ProjectDeliverable_VersionUpdatedBy, \r\n            T.VersionDeleted");
            viewString.Append("By AS ProjectDeliverable_VersionDeletedBy, \r\n            T.VersionOwnerContactID");
            viewString.Append(" AS ProjectDeliverable_VersionOwnerContactID, \r\n            T.VersionOwnerCompan");
            viewString.Append("yID AS ProjectDeliverable_VersionOwnerCompanyID, \r\n            T.VersionUpdated ");
            viewString.Append("AS ProjectDeliverable_VersionUpdated, \r\n            True AS _from0\r\n        FROM");
            viewString.Append(" XODBModuleBusinessObjectsStoreContainer.X_ProjectDeliverable AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectDeliverables", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlans
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView467()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlans", "\r\n    SELECT VALUE -- Constructing ProjectPlans\r\n        [XODB.Module.BusinessObj" +
                    "ects.ProjectPlan](T1.ProjectPlan_ProjectPlanID, T1.ProjectPlan_ProjectID, T1.Pro" +
                    "jectPlan_ParentProjectPlanID, T1.ProjectPlan_ProjectPlanName, T1.ProjectPlan_Res" +
                    "ponsibleContactID, T1.ProjectPlan_Comment, T1.ProjectPlan_Version, T1.ProjectPla" +
                    "n_VersionAntecedentID, T1.ProjectPlan_VersionCertainty, T1.ProjectPlan_VersionWo" +
                    "rkflowInstanceID, T1.ProjectPlan_VersionUpdatedBy, T1.ProjectPlan_VersionDeleted" +
                    "By, T1.ProjectPlan_VersionOwnerContactID, T1.ProjectPlan_VersionOwnerCompanyID, " +
                    "T1.ProjectPlan_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.Proje" +
                    "ctPlanID AS ProjectPlan_ProjectPlanID, \r\n            T.ProjectID AS ProjectPlan_" +
                    "ProjectID, \r\n            T.ParentProjectPlanID AS ProjectPlan_ParentProjectPlanI" +
                    "D, \r\n            T.ProjectPlanName AS ProjectPlan_ProjectPlanName, \r\n           " +
                    " T.ResponsibleContactID AS ProjectPlan_ResponsibleContactID, \r\n            T.Com" +
                    "ment AS ProjectPlan_Comment, \r\n            T.Version AS ProjectPlan_Version, \r\n " +
                    "           T.VersionAntecedentID AS ProjectPlan_VersionAntecedentID, \r\n         " +
                    "   T.VersionCertainty AS ProjectPlan_VersionCertainty, \r\n            T.VersionWo" +
                    "rkflowInstanceID AS ProjectPlan_VersionWorkflowInstanceID, \r\n            T.Versi" +
                    "onUpdatedBy AS ProjectPlan_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS" +
                    " ProjectPlan_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS ProjectP" +
                    "lan_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS ProjectPlan_" +
                    "VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ProjectPlan_VersionUpda" +
                    "ted, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreCo" +
                    "ntainer.X_ProjectPlan AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTasks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView468()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2368);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectPlanTasks\r\n        [XODB.Module.Busine");
            viewString.Append("ssObjects.ProjectPlanTask](T1.ProjectPlanTask_ProjectPlanTaskID, T1.ProjectPlanT");
            viewString.Append("ask_ProjectPlanID, T1.ProjectPlanTask_ParentProjectTaskID, T1.ProjectPlanTask_Pr");
            viewString.Append("ojectTaskName, T1.ProjectPlanTask_TaskID, T1.ProjectPlanTask_WorkTypeID, T1.Proj");
            viewString.Append("ectPlanTask_Priority, T1.ProjectPlanTask_Progress, T1.ProjectPlanTask_StartDate,");
            viewString.Append(" T1.ProjectPlanTask_StopDate, T1.ProjectPlanTask_AllocatedManHours, T1.ProjectPl");
            viewString.Append("anTask_Comment, T1.ProjectPlanTask_Version, T1.ProjectPlanTask_VersionAntecedent");
            viewString.Append("ID, T1.ProjectPlanTask_VersionCertainty, T1.ProjectPlanTask_VersionWorkflowInsta");
            viewString.Append("nceID, T1.ProjectPlanTask_VersionUpdatedBy, T1.ProjectPlanTask_VersionDeletedBy,");
            viewString.Append(" T1.ProjectPlanTask_VersionOwnerContactID, T1.ProjectPlanTask_VersionOwnerCompan");
            viewString.Append("yID, T1.ProjectPlanTask_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n          ");
            viewString.Append("  T.ProjectPlanTaskID AS ProjectPlanTask_ProjectPlanTaskID, \r\n            T.Proj");
            viewString.Append("ectPlanID AS ProjectPlanTask_ProjectPlanID, \r\n            T.ParentProjectTaskID ");
            viewString.Append("AS ProjectPlanTask_ParentProjectTaskID, \r\n            T.ProjectTaskName AS Proje");
            viewString.Append("ctPlanTask_ProjectTaskName, \r\n            T.TaskID AS ProjectPlanTask_TaskID, \r\n");
            viewString.Append("            T.WorkTypeID AS ProjectPlanTask_WorkTypeID, \r\n            T.Priority");
            viewString.Append(" AS ProjectPlanTask_Priority, \r\n            T.Progress AS ProjectPlanTask_Progre");
            viewString.Append("ss, \r\n            T.StartDate AS ProjectPlanTask_StartDate, \r\n            T.Stop");
            viewString.Append("Date AS ProjectPlanTask_StopDate, \r\n            T.AllocatedManHours AS ProjectPl");
            viewString.Append("anTask_AllocatedManHours, \r\n            T.Comment AS ProjectPlanTask_Comment, \r\n");
            viewString.Append("            T.Version AS ProjectPlanTask_Version, \r\n            T.VersionAnteced");
            viewString.Append("entID AS ProjectPlanTask_VersionAntecedentID, \r\n            T.VersionCertainty A");
            viewString.Append("S ProjectPlanTask_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS");
            viewString.Append(" ProjectPlanTask_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS ");
            viewString.Append("ProjectPlanTask_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS ProjectPla");
            viewString.Append("nTask_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS ProjectPlanTask");
            viewString.Append("_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS ProjectPlanTask");
            viewString.Append("_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ProjectPlanTask_Versio");
            viewString.Append("nUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsSt");
            viewString.Append("oreContainer.X_ProjectPlanTask AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTasks", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTaskComplianceResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView469()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2953);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectPlanTaskComplianceResponses\r\n        [");
            viewString.Append("XODB.Module.BusinessObjects.ProjectPlanTaskComplianceResponse](T1.ProjectPlanTas");
            viewString.Append("kComplianceResponse_ProjectPlanTaskComplianceResponseID, T1.ProjectPlanTaskCompl");
            viewString.Append("ianceResponse_ProjectPlanTaskID, T1.ProjectPlanTaskComplianceResponse_ProjectPla");
            viewString.Append("nTaskResponseID, T1.ProjectPlanTaskComplianceResponse_ComplianceWorkTypeID, T1.P");
            viewString.Append("rojectPlanTaskComplianceResponse_ComplianceFormResponse, T1.ProjectPlanTaskCompl");
            viewString.Append("ianceResponse_CompletedBy, T1.ProjectPlanTaskComplianceResponse_Completed, T1.Pr");
            viewString.Append("ojectPlanTaskComplianceResponse_ApprovedBy, T1.ProjectPlanTaskComplianceResponse");
            viewString.Append("_Approved, T1.ProjectPlanTaskComplianceResponse_Version, T1.ProjectPlanTaskCompl");
            viewString.Append("ianceResponse_VersionAntecedentID, T1.ProjectPlanTaskComplianceResponse_VersionC");
            viewString.Append("ertainty, T1.ProjectPlanTaskComplianceResponse_VersionWorkflowInstanceID, T1.Pro");
            viewString.Append("jectPlanTaskComplianceResponse_VersionUpdatedBy, T1.ProjectPlanTaskComplianceRes");
            viewString.Append("ponse_VersionDeletedBy, T1.ProjectPlanTaskComplianceResponse_VersionOwnerContact");
            viewString.Append("ID, T1.ProjectPlanTaskComplianceResponse_VersionOwnerCompanyID, T1.ProjectPlanTa");
            viewString.Append("skComplianceResponse_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T");
            viewString.Append(".ProjectPlanTaskComplianceResponseID AS ProjectPlanTaskComplianceResponse_Projec");
            viewString.Append("tPlanTaskComplianceResponseID, \r\n            T.ProjectPlanTaskID AS ProjectPlanT");
            viewString.Append("askComplianceResponse_ProjectPlanTaskID, \r\n            T.ProjectPlanTaskResponse");
            viewString.Append("ID AS ProjectPlanTaskComplianceResponse_ProjectPlanTaskResponseID, \r\n           ");
            viewString.Append(" T.ComplianceWorkTypeID AS ProjectPlanTaskComplianceResponse_ComplianceWorkTypeI");
            viewString.Append("D, \r\n            T.ComplianceFormResponse AS ProjectPlanTaskComplianceResponse_C");
            viewString.Append("omplianceFormResponse, \r\n            T.CompletedBy AS ProjectPlanTaskComplianceR");
            viewString.Append("esponse_CompletedBy, \r\n            T.Completed AS ProjectPlanTaskComplianceRespo");
            viewString.Append("nse_Completed, \r\n            T.ApprovedBy AS ProjectPlanTaskComplianceResponse_A");
            viewString.Append("pprovedBy, \r\n            T.Approved AS ProjectPlanTaskComplianceResponse_Approve");
            viewString.Append("d, \r\n            T.Version AS ProjectPlanTaskComplianceResponse_Version, \r\n     ");
            viewString.Append("       T.VersionAntecedentID AS ProjectPlanTaskComplianceResponse_VersionAnteced");
            viewString.Append("entID, \r\n            T.VersionCertainty AS ProjectPlanTaskComplianceResponse_Ver");
            viewString.Append("sionCertainty, \r\n            T.VersionWorkflowInstanceID AS ProjectPlanTaskCompl");
            viewString.Append("ianceResponse_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Pro");
            viewString.Append("jectPlanTaskComplianceResponse_VersionUpdatedBy, \r\n            T.VersionDeletedB");
            viewString.Append("y AS ProjectPlanTaskComplianceResponse_VersionDeletedBy, \r\n            T.Version");
            viewString.Append("OwnerContactID AS ProjectPlanTaskComplianceResponse_VersionOwnerContactID, \r\n   ");
            viewString.Append("         T.VersionOwnerCompanyID AS ProjectPlanTaskComplianceResponse_VersionOwn");
            viewString.Append("erCompanyID, \r\n            T.VersionUpdated AS ProjectPlanTaskComplianceResponse");
            viewString.Append("_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessOb");
            viewString.Append("jectsStoreContainer.X_ProjectPlanTaskComplianceResponse AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTaskComplianceResponses", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTaskDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView470()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTaskDatas", "\r\n    SELECT VALUE -- Constructing ProjectPlanTaskDatas\r\n        [XODB.Module.Bus" +
                    "inessObjects.ProjectPlanTaskData](T1.ProjectPlanTaskData_ProjectPlanTaskDataID, " +
                    "T1.ProjectPlanTaskData_ParentProjectPlanTaskDataID, T1.ProjectPlanTaskData_Table" +
                    "Type, T1.ProjectPlanTaskData_ReferenceID, T1.ProjectPlanTaskData_ProjectPlanTask" +
                    "ID, T1.ProjectPlanTaskData_Version, T1.ProjectPlanTaskData_VersionAntecedentID, " +
                    "T1.ProjectPlanTaskData_VersionCertainty, T1.ProjectPlanTaskData_VersionWorkflowI" +
                    "nstanceID, T1.ProjectPlanTaskData_VersionUpdatedBy, T1.ProjectPlanTaskData_Versi" +
                    "onDeletedBy, T1.ProjectPlanTaskData_VersionOwnerContactID, T1.ProjectPlanTaskDat" +
                    "a_VersionOwnerCompanyID, T1.ProjectPlanTaskData_VersionUpdated)\r\n    FROM (\r\n   " +
                    "     SELECT \r\n            T.ProjectPlanTaskDataID AS ProjectPlanTaskData_Project" +
                    "PlanTaskDataID, \r\n            T.ParentProjectPlanTaskDataID AS ProjectPlanTaskDa" +
                    "ta_ParentProjectPlanTaskDataID, \r\n            T.TableType AS ProjectPlanTaskData" +
                    "_TableType, \r\n            T.ReferenceID AS ProjectPlanTaskData_ReferenceID, \r\n  " +
                    "          T.ProjectPlanTaskID AS ProjectPlanTaskData_ProjectPlanTaskID, \r\n      " +
                    "      T.Version AS ProjectPlanTaskData_Version, \r\n            T.VersionAnteceden" +
                    "tID AS ProjectPlanTaskData_VersionAntecedentID, \r\n            T.VersionCertainty" +
                    " AS ProjectPlanTaskData_VersionCertainty, \r\n            T.VersionWorkflowInstanc" +
                    "eID AS ProjectPlanTaskData_VersionWorkflowInstanceID, \r\n            T.VersionUpd" +
                    "atedBy AS ProjectPlanTaskData_VersionUpdatedBy, \r\n            T.VersionDeletedBy" +
                    " AS ProjectPlanTaskData_VersionDeletedBy, \r\n            T.VersionOwnerContactID " +
                    "AS ProjectPlanTaskData_VersionOwnerContactID, \r\n            T.VersionOwnerCompan" +
                    "yID AS ProjectPlanTaskData_VersionOwnerCompanyID, \r\n            T.VersionUpdated" +
                    " AS ProjectPlanTaskData_VersionUpdated, \r\n            True AS _from0\r\n        FR" +
                    "OM XODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskData AS T\r\n    ) AS " +
                    "T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTaskResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView471()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3682);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectPlanTaskResponses\r\n        [XODB.Modul");
            viewString.Append("e.BusinessObjects.ProjectPlanTaskResponse](T1.ProjectPlanTaskResponse_ProjectPla");
            viewString.Append("nTaskResponseID, T1.ProjectPlanTaskResponse_ProjectPlanTaskID, T1.ProjectPlanTas");
            viewString.Append("kResponse_ResponsibleContactID, T1.ProjectPlanTaskResponse_ActualWorkTypeID, T1.");
            viewString.Append("ProjectPlanTaskResponse_Began, T1.ProjectPlanTaskResponse_Completed, T1.ProjectP");
            viewString.Append("lanTaskResponse_Hours, T1.ProjectPlanTaskResponse_EstimatedProRataUnits, T1.Proj");
            viewString.Append("ectPlanTaskResponse_EstimatedProRataCost, T1.ProjectPlanTaskResponse_EstimatedVa");
            viewString.Append("lue, T1.ProjectPlanTaskResponse_PerformanceMetricParameterID, T1.ProjectPlanTask");
            viewString.Append("Response_PerformanceMetricQuantity, T1.ProjectPlanTaskResponse_PerformanceMetric");
            viewString.Append("ContributedPercent, T1.ProjectPlanTaskResponse_ApprovedProRataUnits, T1.ProjectP");
            viewString.Append("lanTaskResponse_ApprovedProRataCost, T1.ProjectPlanTaskResponse_Approved, T1.Pro");
            viewString.Append("jectPlanTaskResponse_ApprovedBy, T1.ProjectPlanTaskResponse_Comments, T1.Project");
            viewString.Append("PlanTaskResponse_Version, T1.ProjectPlanTaskResponse_VersionAntecedentID, T1.Pro");
            viewString.Append("jectPlanTaskResponse_VersionCertainty, T1.ProjectPlanTaskResponse_VersionWorkflo");
            viewString.Append("wInstanceID, T1.ProjectPlanTaskResponse_VersionUpdatedBy, T1.ProjectPlanTaskResp");
            viewString.Append("onse_VersionDeletedBy, T1.ProjectPlanTaskResponse_VersionOwnerContactID, T1.Proj");
            viewString.Append("ectPlanTaskResponse_VersionOwnerCompanyID, T1.ProjectPlanTaskResponse_VersionUpd");
            viewString.Append("ated)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectPlanTaskResponseID AS P");
            viewString.Append("rojectPlanTaskResponse_ProjectPlanTaskResponseID, \r\n            T.ProjectPlanTas");
            viewString.Append("kID AS ProjectPlanTaskResponse_ProjectPlanTaskID, \r\n            T.ResponsibleCon");
            viewString.Append("tactID AS ProjectPlanTaskResponse_ResponsibleContactID, \r\n            T.ActualWo");
            viewString.Append("rkTypeID AS ProjectPlanTaskResponse_ActualWorkTypeID, \r\n            T.Began AS P");
            viewString.Append("rojectPlanTaskResponse_Began, \r\n            T.Completed AS ProjectPlanTaskRespon");
            viewString.Append("se_Completed, \r\n            T.Hours AS ProjectPlanTaskResponse_Hours, \r\n        ");
            viewString.Append("    T.EstimatedProRataUnits AS ProjectPlanTaskResponse_EstimatedProRataUnits, \r\n");
            viewString.Append("            T.EstimatedProRataCost AS ProjectPlanTaskResponse_EstimatedProRataCo");
            viewString.Append("st, \r\n            T.EstimatedValue AS ProjectPlanTaskResponse_EstimatedValue, \r\n");
            viewString.Append("            T.PerformanceMetricParameterID AS ProjectPlanTaskResponse_Performanc");
            viewString.Append("eMetricParameterID, \r\n            T.PerformanceMetricQuantity AS ProjectPlanTask");
            viewString.Append("Response_PerformanceMetricQuantity, \r\n            T.PerformanceMetricContributed");
            viewString.Append("Percent AS ProjectPlanTaskResponse_PerformanceMetricContributedPercent, \r\n      ");
            viewString.Append("      T.ApprovedProRataUnits AS ProjectPlanTaskResponse_ApprovedProRataUnits, \r\n");
            viewString.Append("            T.ApprovedProRataCost AS ProjectPlanTaskResponse_ApprovedProRataCost");
            viewString.Append(", \r\n            T.Approved AS ProjectPlanTaskResponse_Approved, \r\n            T.");
            viewString.Append("ApprovedBy AS ProjectPlanTaskResponse_ApprovedBy, \r\n            T.Comments AS Pr");
            viewString.Append("ojectPlanTaskResponse_Comments, \r\n            T.Version AS ProjectPlanTaskRespon");
            viewString.Append("se_Version, \r\n            T.VersionAntecedentID AS ProjectPlanTaskResponse_Versi");
            viewString.Append("onAntecedentID, \r\n            T.VersionCertainty AS ProjectPlanTaskResponse_Vers");
            viewString.Append("ionCertainty, \r\n            T.VersionWorkflowInstanceID AS ProjectPlanTaskRespon");
            viewString.Append("se_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS ProjectPlanTas");
            viewString.Append("kResponse_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS ProjectPlanTaskR");
            viewString.Append("esponse_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS ProjectPlanTa");
            viewString.Append("skResponse_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Proje");
            viewString.Append("ctPlanTaskResponse_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Proj");
            viewString.Append("ectPlanTaskResponse_VersionUpdated, \r\n            True AS _from0\r\n        FROM X");
            viewString.Append("ODBModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskResponse AS T\r\n    ) AS ");
            viewString.Append("T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTaskResponses", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTaskResponseDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView472()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2243);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectPlanTaskResponseDatas\r\n        [XODB.M");
            viewString.Append("odule.BusinessObjects.ProjectPlanTaskResponseData](T1.ProjectPlanTaskResponseDat");
            viewString.Append("a_ProjectPlanTaskResponseDataID, T1.ProjectPlanTaskResponseData_ParentProjectPla");
            viewString.Append("nTaskResponseDataID, T1.ProjectPlanTaskResponseData_TableType, T1.ProjectPlanTas");
            viewString.Append("kResponseData_ReferenceID, T1.ProjectPlanTaskResponseData_ProjectPlanTaskRespons");
            viewString.Append("eID, T1.ProjectPlanTaskResponseData_Version, T1.ProjectPlanTaskResponseData_Vers");
            viewString.Append("ionAntecedentID, T1.ProjectPlanTaskResponseData_VersionCertainty, T1.ProjectPlan");
            viewString.Append("TaskResponseData_VersionWorkflowInstanceID, T1.ProjectPlanTaskResponseData_Versi");
            viewString.Append("onUpdatedBy, T1.ProjectPlanTaskResponseData_VersionDeletedBy, T1.ProjectPlanTask");
            viewString.Append("ResponseData_VersionOwnerContactID, T1.ProjectPlanTaskResponseData_VersionOwnerC");
            viewString.Append("ompanyID, T1.ProjectPlanTaskResponseData_VersionUpdated)\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.ProjectPlanTaskResponseDataID AS ProjectPlanTaskResponseDat");
            viewString.Append("a_ProjectPlanTaskResponseDataID, \r\n            T.ParentProjectPlanTaskResponseDa");
            viewString.Append("taID AS ProjectPlanTaskResponseData_ParentProjectPlanTaskResponseDataID, \r\n     ");
            viewString.Append("       T.TableType AS ProjectPlanTaskResponseData_TableType, \r\n            T.Ref");
            viewString.Append("erenceID AS ProjectPlanTaskResponseData_ReferenceID, \r\n            T.ProjectPlan");
            viewString.Append("TaskResponseID AS ProjectPlanTaskResponseData_ProjectPlanTaskResponseID, \r\n     ");
            viewString.Append("       T.Version AS ProjectPlanTaskResponseData_Version, \r\n            T.Version");
            viewString.Append("AntecedentID AS ProjectPlanTaskResponseData_VersionAntecedentID, \r\n            T");
            viewString.Append(".VersionCertainty AS ProjectPlanTaskResponseData_VersionCertainty, \r\n           ");
            viewString.Append(" T.VersionWorkflowInstanceID AS ProjectPlanTaskResponseData_VersionWorkflowInsta");
            viewString.Append("nceID, \r\n            T.VersionUpdatedBy AS ProjectPlanTaskResponseData_VersionUp");
            viewString.Append("datedBy, \r\n            T.VersionDeletedBy AS ProjectPlanTaskResponseData_Version");
            viewString.Append("DeletedBy, \r\n            T.VersionOwnerContactID AS ProjectPlanTaskResponseData_");
            viewString.Append("VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS ProjectPlanTaskR");
            viewString.Append("esponseData_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ProjectPlan");
            viewString.Append("TaskResponseData_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODB");
            viewString.Append("ModuleBusinessObjectsStoreContainer.X_ProjectPlanTaskResponseData AS T\r\n    ) AS");
            viewString.Append(" T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTaskResponseDatas", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectPlanTaskWorkers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView473()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectPlanTaskWorkers", "\r\n    SELECT VALUE -- Constructing ProjectPlanTaskWorkers\r\n        [XODB.Module.B" +
                    "usinessObjects.ProjectPlanTaskWorker](T1.ProjectPlanTaskWorker_ProjectPlanTaskWo" +
                    "rkerID, T1.ProjectPlanTaskWorker_ProjectPlanTaskID, T1.ProjectPlanTaskWorker_Wor" +
                    "kerID, T1.ProjectPlanTaskWorker_AvailableFromDate, T1.ProjectPlanTaskWorker_Avai" +
                    "lableUntilDate, T1.ProjectPlanTaskWorker_Version, T1.ProjectPlanTaskWorker_Versi" +
                    "onAntecedentID, T1.ProjectPlanTaskWorker_VersionCertainty, T1.ProjectPlanTaskWor" +
                    "ker_VersionWorkflowInstanceID, T1.ProjectPlanTaskWorker_VersionUpdatedBy, T1.Pro" +
                    "jectPlanTaskWorker_VersionDeletedBy, T1.ProjectPlanTaskWorker_VersionOwnerContac" +
                    "tID, T1.ProjectPlanTaskWorker_VersionOwnerCompanyID, T1.ProjectPlanTaskWorker_Ve" +
                    "rsionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectPlanTaskWorkerI" +
                    "D AS ProjectPlanTaskWorker_ProjectPlanTaskWorkerID, \r\n            T.ProjectPlanT" +
                    "askID AS ProjectPlanTaskWorker_ProjectPlanTaskID, \r\n            T.WorkerID AS Pr" +
                    "ojectPlanTaskWorker_WorkerID, \r\n            T.AvailableFromDate AS ProjectPlanTa" +
                    "skWorker_AvailableFromDate, \r\n            T.AvailableUntilDate AS ProjectPlanTas" +
                    "kWorker_AvailableUntilDate, \r\n            T.Version AS ProjectPlanTaskWorker_Ver" +
                    "sion, \r\n            T.VersionAntecedentID AS ProjectPlanTaskWorker_VersionAntece" +
                    "dentID, \r\n            T.VersionCertainty AS ProjectPlanTaskWorker_VersionCertain" +
                    "ty, \r\n            T.VersionWorkflowInstanceID AS ProjectPlanTaskWorker_VersionWo" +
                    "rkflowInstanceID, \r\n            T.VersionUpdatedBy AS ProjectPlanTaskWorker_Vers" +
                    "ionUpdatedBy, \r\n            T.VersionDeletedBy AS ProjectPlanTaskWorker_VersionD" +
                    "eletedBy, \r\n            T.VersionOwnerContactID AS ProjectPlanTaskWorker_Version" +
                    "OwnerContactID, \r\n            T.VersionOwnerCompanyID AS ProjectPlanTaskWorker_V" +
                    "ersionOwnerCompanyID, \r\n            T.VersionUpdated AS ProjectPlanTaskWorker_Ve" +
                    "rsionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjec" +
                    "tsStoreContainer.X_ProjectPlanTaskWorker AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProspectusProjects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView474()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2911);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProspectusProjects\r\n        [XODB.Module.Busi");
            viewString.Append("nessObjects.ProspectusProject](T1.ProspectusProject_ProspectusProjectID, T1.Pros");
            viewString.Append("pectusProject_ProjectID, T1.ProspectusProject_ProspectusProjectName, T1.Prospect");
            viewString.Append("usProject_Company, T1.ProspectusProject_CompanyID, T1.ProspectusProject_Geologis");
            viewString.Append("t, T1.ProspectusProject_GeologistContactID, T1.ProspectusProject_GeologyCompanyI");
            viewString.Append("D, T1.ProspectusProject_ListDate, T1.ProspectusProject_Cost, T1.ProspectusProjec");
            viewString.Append("t_CurrencyID, T1.ProspectusProject_Pages, T1.ProspectusProject_CountryID, T1.Pro");
            viewString.Append("spectusProject_CountryStateID, T1.ProspectusProject_Place, T1.ProspectusProject_");
            viewString.Append("TenementID, T1.ProspectusProject_ProvinceID, T1.ProspectusProject_Version, T1.Pr");
            viewString.Append("ospectusProject_VersionAntecedentID, T1.ProspectusProject_VersionCertainty, T1.P");
            viewString.Append("rospectusProject_VersionWorkflowInstanceID, T1.ProspectusProject_VersionUpdatedB");
            viewString.Append("y, T1.ProspectusProject_VersionDeletedBy, T1.ProspectusProject_VersionOwnerConta");
            viewString.Append("ctID, T1.ProspectusProject_VersionOwnerCompanyID, T1.ProspectusProject_VersionUp");
            viewString.Append("dated)\r\n    FROM (\r\n        SELECT \r\n            T.ProspectusProjectID AS Prospe");
            viewString.Append("ctusProject_ProspectusProjectID, \r\n            T.ProjectID AS ProspectusProject_");
            viewString.Append("ProjectID, \r\n            T.ProspectusProjectName AS ProspectusProject_Prospectus");
            viewString.Append("ProjectName, \r\n            T.Company AS ProspectusProject_Company, \r\n           ");
            viewString.Append(" T.CompanyID AS ProspectusProject_CompanyID, \r\n            T.Geologist AS Prospe");
            viewString.Append("ctusProject_Geologist, \r\n            T.GeologistContactID AS ProspectusProject_G");
            viewString.Append("eologistContactID, \r\n            T.GeologyCompanyID AS ProspectusProject_Geology");
            viewString.Append("CompanyID, \r\n            T.ListDate AS ProspectusProject_ListDate, \r\n           ");
            viewString.Append(" T.Cost AS ProspectusProject_Cost, \r\n            T.CurrencyID AS ProspectusProje");
            viewString.Append("ct_CurrencyID, \r\n            T.Pages AS ProspectusProject_Pages, \r\n            T");
            viewString.Append(".CountryID AS ProspectusProject_CountryID, \r\n            T.CountryStateID AS Pro");
            viewString.Append("spectusProject_CountryStateID, \r\n            T.Place AS ProspectusProject_Place,");
            viewString.Append(" \r\n            T.TenementID AS ProspectusProject_TenementID, \r\n            T.Pro");
            viewString.Append("vinceID AS ProspectusProject_ProvinceID, \r\n            T.Version AS ProspectusPr");
            viewString.Append("oject_Version, \r\n            T.VersionAntecedentID AS ProspectusProject_VersionA");
            viewString.Append("ntecedentID, \r\n            T.VersionCertainty AS ProspectusProject_VersionCertai");
            viewString.Append("nty, \r\n            T.VersionWorkflowInstanceID AS ProspectusProject_VersionWorkf");
            viewString.Append("lowInstanceID, \r\n            T.VersionUpdatedBy AS ProspectusProject_VersionUpda");
            viewString.Append("tedBy, \r\n            T.VersionDeletedBy AS ProspectusProject_VersionDeletedBy, \r");
            viewString.Append("\n            T.VersionOwnerContactID AS ProspectusProject_VersionOwnerContactID,");
            viewString.Append(" \r\n            T.VersionOwnerCompanyID AS ProspectusProject_VersionOwnerCompanyI");
            viewString.Append("D, \r\n            T.VersionUpdated AS ProspectusProject_VersionUpdated, \r\n       ");
            viewString.Append("     True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Pros");
            viewString.Append("pectusProject AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProspectusProjects", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProspectusProjectCommodities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView475()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProspectusProjectCommodities", "\r\n    SELECT VALUE -- Constructing ProspectusProjectCommodities\r\n        [XODB.Mo" +
                    "dule.BusinessObjects.ProspectusProjectCommodity](T1.ProspectusProjectCommodity_P" +
                    "rospectusProjectCommodityID, T1.ProspectusProjectCommodity_ProspectusProjectID, " +
                    "T1.ProspectusProjectCommodity_CommodityID, T1.ProspectusProjectCommodity_Version" +
                    ", T1.ProspectusProjectCommodity_VersionAntecedentID, T1.ProspectusProjectCommodi" +
                    "ty_VersionCertainty, T1.ProspectusProjectCommodity_VersionWorkflowInstanceID, T1" +
                    ".ProspectusProjectCommodity_VersionUpdatedBy, T1.ProspectusProjectCommodity_Vers" +
                    "ionDeletedBy, T1.ProspectusProjectCommodity_VersionOwnerContactID, T1.Prospectus" +
                    "ProjectCommodity_VersionOwnerCompanyID, T1.ProspectusProjectCommodity_VersionUpd" +
                    "ated)\r\n    FROM (\r\n        SELECT \r\n            T.ProspectusProjectCommodityID A" +
                    "S ProspectusProjectCommodity_ProspectusProjectCommodityID, \r\n            T.Prosp" +
                    "ectusProjectID AS ProspectusProjectCommodity_ProspectusProjectID, \r\n            " +
                    "T.CommodityID AS ProspectusProjectCommodity_CommodityID, \r\n            T.Version" +
                    " AS ProspectusProjectCommodity_Version, \r\n            T.VersionAntecedentID AS P" +
                    "rospectusProjectCommodity_VersionAntecedentID, \r\n            T.VersionCertainty " +
                    "AS ProspectusProjectCommodity_VersionCertainty, \r\n            T.VersionWorkflowI" +
                    "nstanceID AS ProspectusProjectCommodity_VersionWorkflowInstanceID, \r\n           " +
                    " T.VersionUpdatedBy AS ProspectusProjectCommodity_VersionUpdatedBy, \r\n          " +
                    "  T.VersionDeletedBy AS ProspectusProjectCommodity_VersionDeletedBy, \r\n         " +
                    "   T.VersionOwnerContactID AS ProspectusProjectCommodity_VersionOwnerContactID, " +
                    "\r\n            T.VersionOwnerCompanyID AS ProspectusProjectCommodity_VersionOwner" +
                    "CompanyID, \r\n            T.VersionUpdated AS ProspectusProjectCommodity_VersionU" +
                    "pdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStor" +
                    "eContainer.X_ProspectusProjectCommodity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Provinces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView476()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2344);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Provinces\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Province](T1.Province_ProvinceID, T1.Province_ProvinceTypeID, T1.Province_Def");
            viewString.Append("aultProvinceName, T1.Province_ProvinceCode, T1.Province_ProvinceGeography, T1.Pr");
            viewString.Append("ovince_MarkerLatitudeWGS84, T1.Province_MarkerLongitudeWGS84, T1.Province_Provin");
            viewString.Append("ceGroupID, T1.Province_CountryID, T1.Province_CountryStateID, T1.Province_Defaul");
            viewString.Append("tCulture, T1.Province_OwnerCompanyID, T1.Province_ResponsibleContactID, T1.Provi");
            viewString.Append("nce_Comment, T1.Province_Version, T1.Province_VersionAntecedentID, T1.Province_V");
            viewString.Append("ersionCertainty, T1.Province_VersionWorkflowInstanceID, T1.Province_VersionUpdat");
            viewString.Append("edBy, T1.Province_VersionDeletedBy, T1.Province_VersionOwnerContactID, T1.Provin");
            viewString.Append("ce_VersionOwnerCompanyID, T1.Province_VersionUpdated)\r\n    FROM (\r\n        SELEC");
            viewString.Append("T \r\n            T.ProvinceID AS Province_ProvinceID, \r\n            T.ProvinceTyp");
            viewString.Append("eID AS Province_ProvinceTypeID, \r\n            T.DefaultProvinceName AS Province_");
            viewString.Append("DefaultProvinceName, \r\n            T.ProvinceCode AS Province_ProvinceCode, \r\n  ");
            viewString.Append("          T.ProvinceGeography AS Province_ProvinceGeography, \r\n            T.Mar");
            viewString.Append("kerLatitudeWGS84 AS Province_MarkerLatitudeWGS84, \r\n            T.MarkerLongitud");
            viewString.Append("eWGS84 AS Province_MarkerLongitudeWGS84, \r\n            T.ProvinceGroupID AS Prov");
            viewString.Append("ince_ProvinceGroupID, \r\n            T.CountryID AS Province_CountryID, \r\n       ");
            viewString.Append("     T.CountryStateID AS Province_CountryStateID, \r\n            T.DefaultCulture");
            viewString.Append(" AS Province_DefaultCulture, \r\n            T.OwnerCompanyID AS Province_OwnerCom");
            viewString.Append("panyID, \r\n            T.ResponsibleContactID AS Province_ResponsibleContactID, \r");
            viewString.Append("\n            T.Comment AS Province_Comment, \r\n            T.Version AS Province_");
            viewString.Append("Version, \r\n            T.VersionAntecedentID AS Province_VersionAntecedentID, \r\n");
            viewString.Append("            T.VersionCertainty AS Province_VersionCertainty, \r\n            T.Ver");
            viewString.Append("sionWorkflowInstanceID AS Province_VersionWorkflowInstanceID, \r\n            T.Ve");
            viewString.Append("rsionUpdatedBy AS Province_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS");
            viewString.Append(" Province_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Province_Ve");
            viewString.Append("rsionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Province_VersionOw");
            viewString.Append("nerCompanyID, \r\n            T.VersionUpdated AS Province_VersionUpdated, \r\n     ");
            viewString.Append("       True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Pr");
            viewString.Append("ovince AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Provinces", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ProvinceAlias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView477()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProvinceAlias", "\r\n    SELECT VALUE -- Constructing ProvinceAlias\r\n        [XODB.Module.BusinessOb" +
                    "jects.ProvinceAlias](T1.ProvinceAlias_ProvinceAliasID, T1.ProvinceAlias_Province" +
                    "ID, T1.ProvinceAlias_Alias, T1.ProvinceAlias_Culture, T1.ProvinceAlias_Priority," +
                    " T1.ProvinceAlias_Version, T1.ProvinceAlias_VersionAntecedentID, T1.ProvinceAlia" +
                    "s_VersionCertainty, T1.ProvinceAlias_VersionWorkflowInstanceID, T1.ProvinceAlias" +
                    "_VersionUpdatedBy, T1.ProvinceAlias_VersionDeletedBy, T1.ProvinceAlias_VersionOw" +
                    "nerContactID, T1.ProvinceAlias_VersionOwnerCompanyID, T1.ProvinceAlias_VersionUp" +
                    "dated)\r\n    FROM (\r\n        SELECT \r\n            T.ProvinceAliasID AS ProvinceAl" +
                    "ias_ProvinceAliasID, \r\n            T.ProvinceID AS ProvinceAlias_ProvinceID, \r\n " +
                    "           T.Alias AS ProvinceAlias_Alias, \r\n            T.Culture AS ProvinceAl" +
                    "ias_Culture, \r\n            T.Priority AS ProvinceAlias_Priority, \r\n            T" +
                    ".Version AS ProvinceAlias_Version, \r\n            T.VersionAntecedentID AS Provin" +
                    "ceAlias_VersionAntecedentID, \r\n            T.VersionCertainty AS ProvinceAlias_V" +
                    "ersionCertainty, \r\n            T.VersionWorkflowInstanceID AS ProvinceAlias_Vers" +
                    "ionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS ProvinceAlias_Version" +
                    "UpdatedBy, \r\n            T.VersionDeletedBy AS ProvinceAlias_VersionDeletedBy, \r" +
                    "\n            T.VersionOwnerContactID AS ProvinceAlias_VersionOwnerContactID, \r\n " +
                    "           T.VersionOwnerCompanyID AS ProvinceAlias_VersionOwnerCompanyID, \r\n   " +
                    "         T.VersionUpdated AS ProvinceAlias_VersionUpdated, \r\n            True AS" +
                    " _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_ProvinceAlias AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProvinceDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView478()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProvinceDatas", "\r\n    SELECT VALUE -- Constructing ProvinceDatas\r\n        [XODB.Module.BusinessOb" +
                    "jects.ProvinceData](T1.ProvinceData_ProvinceDataID, T1.ProvinceData_ParentProvin" +
                    "ceDataID, T1.ProvinceData_TableType, T1.ProvinceData_ReferenceID, T1.ProvinceDat" +
                    "a_ProvinceID, T1.ProvinceData_Version, T1.ProvinceData_VersionAntecedentID, T1.P" +
                    "rovinceData_VersionCertainty, T1.ProvinceData_VersionWorkflowInstanceID, T1.Prov" +
                    "inceData_VersionUpdatedBy, T1.ProvinceData_VersionDeletedBy, T1.ProvinceData_Ver" +
                    "sionOwnerContactID, T1.ProvinceData_VersionOwnerCompanyID, T1.ProvinceData_Versi" +
                    "onUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ProvinceDataID AS Provinc" +
                    "eData_ProvinceDataID, \r\n            T.ParentProvinceDataID AS ProvinceData_Paren" +
                    "tProvinceDataID, \r\n            T.TableType AS ProvinceData_TableType, \r\n        " +
                    "    T.ReferenceID AS ProvinceData_ReferenceID, \r\n            T.ProvinceID AS Pro" +
                    "vinceData_ProvinceID, \r\n            T.Version AS ProvinceData_Version, \r\n       " +
                    "     T.VersionAntecedentID AS ProvinceData_VersionAntecedentID, \r\n            T." +
                    "VersionCertainty AS ProvinceData_VersionCertainty, \r\n            T.VersionWorkfl" +
                    "owInstanceID AS ProvinceData_VersionWorkflowInstanceID, \r\n            T.VersionU" +
                    "pdatedBy AS ProvinceData_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS P" +
                    "rovinceData_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS ProvinceD" +
                    "ata_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS ProvinceData" +
                    "_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS ProvinceData_VersionUp" +
                    "dated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStore" +
                    "Container.X_ProvinceData AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProvinceRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView479()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProvinceRelations", "\r\n    SELECT VALUE -- Constructing ProvinceRelations\r\n        [XODB.Module.Busine" +
                    "ssObjects.ProvinceRelation](T1.ProvinceRelation_ProvinceRelationID, T1.ProvinceR" +
                    "elation_OriginalProvinceID, T1.ProvinceRelation_RelatedProvinceID, T1.ProvinceRe" +
                    "lation_RelationTypeID, T1.ProvinceRelation_Related, T1.ProvinceRelation_Version," +
                    " T1.ProvinceRelation_VersionAntecedentID, T1.ProvinceRelation_VersionCertainty, " +
                    "T1.ProvinceRelation_VersionWorkflowInstanceID, T1.ProvinceRelation_VersionUpdate" +
                    "dBy, T1.ProvinceRelation_VersionDeletedBy, T1.ProvinceRelation_VersionOwnerConta" +
                    "ctID, T1.ProvinceRelation_VersionOwnerCompanyID, T1.ProvinceRelation_VersionUpda" +
                    "ted)\r\n    FROM (\r\n        SELECT \r\n            T.ProvinceRelationID AS ProvinceR" +
                    "elation_ProvinceRelationID, \r\n            T.OriginalProvinceID AS ProvinceRelati" +
                    "on_OriginalProvinceID, \r\n            T.RelatedProvinceID AS ProvinceRelation_Rel" +
                    "atedProvinceID, \r\n            T.RelationTypeID AS ProvinceRelation_RelationTypeI" +
                    "D, \r\n            T.Related AS ProvinceRelation_Related, \r\n            T.Version " +
                    "AS ProvinceRelation_Version, \r\n            T.VersionAntecedentID AS ProvinceRela" +
                    "tion_VersionAntecedentID, \r\n            T.VersionCertainty AS ProvinceRelation_V" +
                    "ersionCertainty, \r\n            T.VersionWorkflowInstanceID AS ProvinceRelation_V" +
                    "ersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS ProvinceRelation_V" +
                    "ersionUpdatedBy, \r\n            T.VersionDeletedBy AS ProvinceRelation_VersionDel" +
                    "etedBy, \r\n            T.VersionOwnerContactID AS ProvinceRelation_VersionOwnerCo" +
                    "ntactID, \r\n            T.VersionOwnerCompanyID AS ProvinceRelation_VersionOwnerC" +
                    "ompanyID, \r\n            T.VersionUpdated AS ProvinceRelation_VersionUpdated, \r\n " +
                    "           True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer." +
                    "X_ProvinceRelation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Recoveries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView480()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Recoveries", "\r\n    SELECT VALUE -- Constructing Recoveries\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Recovery](T1.Recovery_RecoveryID, T1.Recovery_HeaderID, T1.Recovery_FromDepth" +
                    ", T1.Recovery_ToDepth, T1.Recovery_Advance, T1.Recovery_CoreLoss, T1.Recovery_Co" +
                    "reRecovered, T1.Recovery_Solid, T1.Recovery_Total, T1.Recovery_Confident, T1.Rec" +
                    "overy_DrillSizeID, T1.Recovery_CoreSize, T1.Recovery_Comment, T1.Recovery_Versio" +
                    "n, T1.Recovery_VersionAntecedentID, T1.Recovery_VersionCertainty, T1.Recovery_Ve" +
                    "rsionWorkflowInstanceID, T1.Recovery_VersionUpdatedBy, T1.Recovery_VersionDelete" +
                    "dBy, T1.Recovery_VersionOwnerContactID, T1.Recovery_VersionOwnerCompanyID, T1.Re" +
                    "covery_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.RecoveryID AS" +
                    " Recovery_RecoveryID, \r\n            T.HeaderID AS Recovery_HeaderID, \r\n         " +
                    "   T.FromDepth AS Recovery_FromDepth, \r\n            T.ToDepth AS Recovery_ToDept" +
                    "h, \r\n            T.Advance AS Recovery_Advance, \r\n            T.CoreLoss AS Reco" +
                    "very_CoreLoss, \r\n            T.CoreRecovered AS Recovery_CoreRecovered, \r\n      " +
                    "      T.Solid AS Recovery_Solid, \r\n            T.Total AS Recovery_Total, \r\n    " +
                    "        T.Confident AS Recovery_Confident, \r\n            T.DrillSizeID AS Recove" +
                    "ry_DrillSizeID, \r\n            T.CoreSize AS Recovery_CoreSize, \r\n            T.C" +
                    "omment AS Recovery_Comment, \r\n            T.Version AS Recovery_Version, \r\n     " +
                    "       T.VersionAntecedentID AS Recovery_VersionAntecedentID, \r\n            T.Ve" +
                    "rsionCertainty AS Recovery_VersionCertainty, \r\n            T.VersionWorkflowInst" +
                    "anceID AS Recovery_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy A" +
                    "S Recovery_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Recovery_Versio" +
                    "nDeletedBy, \r\n            T.VersionOwnerContactID AS Recovery_VersionOwnerContac" +
                    "tID, \r\n            T.VersionOwnerCompanyID AS Recovery_VersionOwnerCompanyID, \r\n" +
                    "            T.VersionUpdated AS Recovery_VersionUpdated, \r\n            True AS _" +
                    "from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_Recovery AS T\r\n   " +
                    " ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Samples
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView481()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Samples", "\r\n    SELECT VALUE -- Constructing Samples\r\n        [XODB.Module.BusinessObjects." +
                    "Sample](T1.Sample_SampleID, T1.Sample_HeaderID, T1.Sample_SampleCategoryID, T1.S" +
                    "ample_SampleStateID, T1.Sample_SampleTypeID, T1.Sample_SampleName, T1.Sample_Sam" +
                    "pleNumber, T1.Sample_SampleTaken, T1.Sample_FromDepth, T1.Sample_ToDepth, T1.Sam" +
                    "ple_SampleMassKg, T1.Sample_DryMassKg, T1.Sample_Location, T1.Sample_Version, T1" +
                    ".Sample_VersionAntecedentID, T1.Sample_VersionCertainty, T1.Sample_VersionWorkfl" +
                    "owInstanceID, T1.Sample_VersionUpdatedBy, T1.Sample_VersionDeletedBy, T1.Sample_" +
                    "VersionOwnerContactID, T1.Sample_VersionOwnerCompanyID, T1.Sample_VersionUpdated" +
                    ")\r\n    FROM (\r\n        SELECT \r\n            T.SampleID AS Sample_SampleID, \r\n   " +
                    "         T.HeaderID AS Sample_HeaderID, \r\n            T.SampleCategoryID AS Samp" +
                    "le_SampleCategoryID, \r\n            T.SampleStateID AS Sample_SampleStateID, \r\n  " +
                    "          T.SampleTypeID AS Sample_SampleTypeID, \r\n            T.SampleName AS S" +
                    "ample_SampleName, \r\n            T.SampleNumber AS Sample_SampleNumber, \r\n       " +
                    "     T.SampleTaken AS Sample_SampleTaken, \r\n            T.FromDepth AS Sample_Fr" +
                    "omDepth, \r\n            T.ToDepth AS Sample_ToDepth, \r\n            T.SampleMassKg" +
                    " AS Sample_SampleMassKg, \r\n            T.DryMassKg AS Sample_DryMassKg, \r\n      " +
                    "      T.Location AS Sample_Location, \r\n            T.Version AS Sample_Version, " +
                    "\r\n            T.VersionAntecedentID AS Sample_VersionAntecedentID, \r\n           " +
                    " T.VersionCertainty AS Sample_VersionCertainty, \r\n            T.VersionWorkflowI" +
                    "nstanceID AS Sample_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy " +
                    "AS Sample_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS Sample_VersionDe" +
                    "letedBy, \r\n            T.VersionOwnerContactID AS Sample_VersionOwnerContactID, " +
                    "\r\n            T.VersionOwnerCompanyID AS Sample_VersionOwnerCompanyID, \r\n       " +
                    "     T.VersionUpdated AS Sample_VersionUpdated, \r\n            True AS _from0\r\n  " +
                    "      FROM XODBModuleBusinessObjectsStoreContainer.X_Sample AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.SecurityBlacklists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView482()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3205);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SecurityBlacklists\r\n        [XODB.Module.Busi");
            viewString.Append("nessObjects.SecurityBlacklist](T1.SecurityBlacklist_SecurityBlacklistID, T1.Secu");
            viewString.Append("rityBlacklist_OwnerApplicationID, T1.SecurityBlacklist_OwnerCompanyID, T1.Securi");
            viewString.Append("tyBlacklist_OwnerContactID, T1.SecurityBlacklist_OwnerProjectID, T1.SecurityBlac");
            viewString.Append("klist_OwnerEntitySystemType, T1.SecurityBlacklist_OwnerTableType, T1.SecurityBla");
            viewString.Append("cklist_OwnerField, T1.SecurityBlacklist_OwnerReferenceID, T1.SecurityBlacklist_A");
            viewString.Append("ccessorApplicationID, T1.SecurityBlacklist_AccessorCompanyID, T1.SecurityBlackli");
            viewString.Append("st_AccessorProjectID, T1.SecurityBlacklist_AccessorContactID, T1.SecurityBlackli");
            viewString.Append("st_AccessorRoleID, T1.SecurityBlacklist_CanCreate, T1.SecurityBlacklist_CanRead,");
            viewString.Append(" T1.SecurityBlacklist_CanUpdate, T1.SecurityBlacklist_CanDelete, T1.SecurityBlac");
            viewString.Append("klist_Version, T1.SecurityBlacklist_VersionAntecedentID, T1.SecurityBlacklist_Ve");
            viewString.Append("rsionCertainty, T1.SecurityBlacklist_VersionWorkflowInstanceID, T1.SecurityBlack");
            viewString.Append("list_VersionUpdatedBy, T1.SecurityBlacklist_VersionDeletedBy, T1.SecurityBlackli");
            viewString.Append("st_VersionOwnerContactID, T1.SecurityBlacklist_VersionOwnerCompanyID, T1.Securit");
            viewString.Append("yBlacklist_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.SecurityB");
            viewString.Append("lacklistID AS SecurityBlacklist_SecurityBlacklistID, \r\n            T.OwnerApplic");
            viewString.Append("ationID AS SecurityBlacklist_OwnerApplicationID, \r\n            T.OwnerCompanyID ");
            viewString.Append("AS SecurityBlacklist_OwnerCompanyID, \r\n            T.OwnerContactID AS SecurityB");
            viewString.Append("lacklist_OwnerContactID, \r\n            T.OwnerProjectID AS SecurityBlacklist_Own");
            viewString.Append("erProjectID, \r\n            T.OwnerEntitySystemType AS SecurityBlacklist_OwnerEnt");
            viewString.Append("itySystemType, \r\n            T.OwnerTableType AS SecurityBlacklist_OwnerTableTyp");
            viewString.Append("e, \r\n            T.OwnerField AS SecurityBlacklist_OwnerField, \r\n            T.O");
            viewString.Append("wnerReferenceID AS SecurityBlacklist_OwnerReferenceID, \r\n            T.AccessorA");
            viewString.Append("pplicationID AS SecurityBlacklist_AccessorApplicationID, \r\n            T.Accesso");
            viewString.Append("rCompanyID AS SecurityBlacklist_AccessorCompanyID, \r\n            T.AccessorProje");
            viewString.Append("ctID AS SecurityBlacklist_AccessorProjectID, \r\n            T.AccessorContactID A");
            viewString.Append("S SecurityBlacklist_AccessorContactID, \r\n            T.AccessorRoleID AS Securit");
            viewString.Append("yBlacklist_AccessorRoleID, \r\n            T.CanCreate AS SecurityBlacklist_CanCre");
            viewString.Append("ate, \r\n            T.CanRead AS SecurityBlacklist_CanRead, \r\n            T.CanUp");
            viewString.Append("date AS SecurityBlacklist_CanUpdate, \r\n            T.CanDelete AS SecurityBlackl");
            viewString.Append("ist_CanDelete, \r\n            T.Version AS SecurityBlacklist_Version, \r\n         ");
            viewString.Append("   T.VersionAntecedentID AS SecurityBlacklist_VersionAntecedentID, \r\n           ");
            viewString.Append(" T.VersionCertainty AS SecurityBlacklist_VersionCertainty, \r\n            T.Versi");
            viewString.Append("onWorkflowInstanceID AS SecurityBlacklist_VersionWorkflowInstanceID, \r\n         ");
            viewString.Append("   T.VersionUpdatedBy AS SecurityBlacklist_VersionUpdatedBy, \r\n            T.Ver");
            viewString.Append("sionDeletedBy AS SecurityBlacklist_VersionDeletedBy, \r\n            T.VersionOwne");
            viewString.Append("rContactID AS SecurityBlacklist_VersionOwnerContactID, \r\n            T.VersionOw");
            viewString.Append("nerCompanyID AS SecurityBlacklist_VersionOwnerCompanyID, \r\n            T.Version");
            viewString.Append("Updated AS SecurityBlacklist_VersionUpdated, \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM XODBModuleBusinessObjectsStoreContainer.X_SecurityBlacklist AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SecurityBlacklists", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.SecurityWhitelists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView483()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3205);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SecurityWhitelists\r\n        [XODB.Module.Busi");
            viewString.Append("nessObjects.SecurityWhitelist](T1.SecurityWhitelist_SecurityWhitelistID, T1.Secu");
            viewString.Append("rityWhitelist_OwnerApplicationID, T1.SecurityWhitelist_OwnerCompanyID, T1.Securi");
            viewString.Append("tyWhitelist_OwnerContactID, T1.SecurityWhitelist_OwnerProjectID, T1.SecurityWhit");
            viewString.Append("elist_OwnerEntitySystemType, T1.SecurityWhitelist_OwnerTableType, T1.SecurityWhi");
            viewString.Append("telist_OwnerField, T1.SecurityWhitelist_OwnerReferenceID, T1.SecurityWhitelist_A");
            viewString.Append("ccessorApplicationID, T1.SecurityWhitelist_AccessorCompanyID, T1.SecurityWhiteli");
            viewString.Append("st_AccessorProjectID, T1.SecurityWhitelist_AccessorContactID, T1.SecurityWhiteli");
            viewString.Append("st_AccessorRoleID, T1.SecurityWhitelist_CanCreate, T1.SecurityWhitelist_CanRead,");
            viewString.Append(" T1.SecurityWhitelist_CanUpdate, T1.SecurityWhitelist_CanDelete, T1.SecurityWhit");
            viewString.Append("elist_Version, T1.SecurityWhitelist_VersionAntecedentID, T1.SecurityWhitelist_Ve");
            viewString.Append("rsionCertainty, T1.SecurityWhitelist_VersionWorkflowInstanceID, T1.SecurityWhite");
            viewString.Append("list_VersionUpdatedBy, T1.SecurityWhitelist_VersionDeletedBy, T1.SecurityWhiteli");
            viewString.Append("st_VersionOwnerContactID, T1.SecurityWhitelist_VersionOwnerCompanyID, T1.Securit");
            viewString.Append("yWhitelist_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.SecurityW");
            viewString.Append("hitelistID AS SecurityWhitelist_SecurityWhitelistID, \r\n            T.OwnerApplic");
            viewString.Append("ationID AS SecurityWhitelist_OwnerApplicationID, \r\n            T.OwnerCompanyID ");
            viewString.Append("AS SecurityWhitelist_OwnerCompanyID, \r\n            T.OwnerContactID AS SecurityW");
            viewString.Append("hitelist_OwnerContactID, \r\n            T.OwnerProjectID AS SecurityWhitelist_Own");
            viewString.Append("erProjectID, \r\n            T.OwnerEntitySystemType AS SecurityWhitelist_OwnerEnt");
            viewString.Append("itySystemType, \r\n            T.OwnerTableType AS SecurityWhitelist_OwnerTableTyp");
            viewString.Append("e, \r\n            T.OwnerField AS SecurityWhitelist_OwnerField, \r\n            T.O");
            viewString.Append("wnerReferenceID AS SecurityWhitelist_OwnerReferenceID, \r\n            T.AccessorA");
            viewString.Append("pplicationID AS SecurityWhitelist_AccessorApplicationID, \r\n            T.Accesso");
            viewString.Append("rCompanyID AS SecurityWhitelist_AccessorCompanyID, \r\n            T.AccessorProje");
            viewString.Append("ctID AS SecurityWhitelist_AccessorProjectID, \r\n            T.AccessorContactID A");
            viewString.Append("S SecurityWhitelist_AccessorContactID, \r\n            T.AccessorRoleID AS Securit");
            viewString.Append("yWhitelist_AccessorRoleID, \r\n            T.CanCreate AS SecurityWhitelist_CanCre");
            viewString.Append("ate, \r\n            T.CanRead AS SecurityWhitelist_CanRead, \r\n            T.CanUp");
            viewString.Append("date AS SecurityWhitelist_CanUpdate, \r\n            T.CanDelete AS SecurityWhitel");
            viewString.Append("ist_CanDelete, \r\n            T.Version AS SecurityWhitelist_Version, \r\n         ");
            viewString.Append("   T.VersionAntecedentID AS SecurityWhitelist_VersionAntecedentID, \r\n           ");
            viewString.Append(" T.VersionCertainty AS SecurityWhitelist_VersionCertainty, \r\n            T.Versi");
            viewString.Append("onWorkflowInstanceID AS SecurityWhitelist_VersionWorkflowInstanceID, \r\n         ");
            viewString.Append("   T.VersionUpdatedBy AS SecurityWhitelist_VersionUpdatedBy, \r\n            T.Ver");
            viewString.Append("sionDeletedBy AS SecurityWhitelist_VersionDeletedBy, \r\n            T.VersionOwne");
            viewString.Append("rContactID AS SecurityWhitelist_VersionOwnerContactID, \r\n            T.VersionOw");
            viewString.Append("nerCompanyID AS SecurityWhitelist_VersionOwnerCompanyID, \r\n            T.Version");
            viewString.Append("Updated AS SecurityWhitelist_VersionUpdated, \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM XODBModuleBusinessObjectsStoreContainer.X_SecurityWhitelist AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SecurityWhitelists", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Surveys
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView484()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2111);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Surveys\r\n        [XODB.Module.BusinessObjects");
            viewString.Append(".Survey](T1.Survey_SurveyID, T1.Survey_HeaderID, T1.Survey_Depth, T1.Survey_Dip,");
            viewString.Append(" T1.Survey_MagneticDip, T1.Survey_MagnetAffected, T1.Survey_OriginalAzimuth, T1.");
            viewString.Append("Survey_CorrectedAzimuth, T1.Survey_Gravity, T1.Survey_InstrumentModelID, T1.Surv");
            viewString.Append("ey_InstrumentAssetID, T1.Survey_Surveyed, T1.Survey_SurveyContactID, T1.Survey_S");
            viewString.Append("urveyCompanyID, T1.Survey_Version, T1.Survey_VersionAntecedentID, T1.Survey_Vers");
            viewString.Append("ionCertainty, T1.Survey_VersionWorkflowInstanceID, T1.Survey_VersionUpdatedBy, T");
            viewString.Append("1.Survey_VersionDeletedBy, T1.Survey_VersionOwnerContactID, T1.Survey_VersionOwn");
            viewString.Append("erCompanyID, T1.Survey_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n           ");
            viewString.Append(" T.SurveyID AS Survey_SurveyID, \r\n            T.HeaderID AS Survey_HeaderID, \r\n ");
            viewString.Append("           T.Depth AS Survey_Depth, \r\n            T.Dip AS Survey_Dip, \r\n       ");
            viewString.Append("     T.MagneticDip AS Survey_MagneticDip, \r\n            T.MagnetAffected AS Surv");
            viewString.Append("ey_MagnetAffected, \r\n            T.OriginalAzimuth AS Survey_OriginalAzimuth, \r\n");
            viewString.Append("            T.CorrectedAzimuth AS Survey_CorrectedAzimuth, \r\n            T.Gravi");
            viewString.Append("ty AS Survey_Gravity, \r\n            T.InstrumentModelID AS Survey_InstrumentMode");
            viewString.Append("lID, \r\n            T.InstrumentAssetID AS Survey_InstrumentAssetID, \r\n          ");
            viewString.Append("  T.Surveyed AS Survey_Surveyed, \r\n            T.SurveyContactID AS Survey_Surve");
            viewString.Append("yContactID, \r\n            T.SurveyCompanyID AS Survey_SurveyCompanyID, \r\n       ");
            viewString.Append("     T.Version AS Survey_Version, \r\n            T.VersionAntecedentID AS Survey_");
            viewString.Append("VersionAntecedentID, \r\n            T.VersionCertainty AS Survey_VersionCertainty");
            viewString.Append(", \r\n            T.VersionWorkflowInstanceID AS Survey_VersionWorkflowInstanceID,");
            viewString.Append(" \r\n            T.VersionUpdatedBy AS Survey_VersionUpdatedBy, \r\n            T.Ve");
            viewString.Append("rsionDeletedBy AS Survey_VersionDeletedBy, \r\n            T.VersionOwnerContactID");
            viewString.Append(" AS Survey_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Surve");
            viewString.Append("y_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Survey_VersionUpdated");
            viewString.Append(", \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreConta");
            viewString.Append("iner.X_Survey AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Surveys", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Tasks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView485()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Tasks", "\r\n    SELECT VALUE -- Constructing Tasks\r\n        [XODB.Module.BusinessObjects.Ta" +
                    "sk](T1.Task_TaskID, T1.Task_TaskName, T1.Task_WorkTypeID, T1.Task_DefaultPriorit" +
                    "y, T1.Task_EstimatedDuration, T1.Task_EstimatedDurationUnitID, T1.Task_Estimated" +
                    "LabourCosts, T1.Task_EstimatedCapitalCosts, T1.Task_EstimatedValue, T1.Task_Perf" +
                    "ormanceMetricParameterID, T1.Task_PerformanceMetricQuantity, T1.Task_Comment, T1" +
                    ".Task_Version, T1.Task_VersionAntecedentID, T1.Task_VersionCertainty, T1.Task_Ve" +
                    "rsionWorkflowInstanceID, T1.Task_VersionUpdatedBy, T1.Task_VersionDeletedBy, T1." +
                    "Task_VersionOwnerContactID, T1.Task_VersionOwnerCompanyID, T1.Task_VersionUpdate" +
                    "d)\r\n    FROM (\r\n        SELECT \r\n            T.TaskID AS Task_TaskID, \r\n        " +
                    "    T.TaskName AS Task_TaskName, \r\n            T.WorkTypeID AS Task_WorkTypeID, " +
                    "\r\n            T.DefaultPriority AS Task_DefaultPriority, \r\n            T.Estimat" +
                    "edDuration AS Task_EstimatedDuration, \r\n            T.EstimatedDurationUnitID AS" +
                    " Task_EstimatedDurationUnitID, \r\n            T.EstimatedLabourCosts AS Task_Esti" +
                    "matedLabourCosts, \r\n            T.EstimatedCapitalCosts AS Task_EstimatedCapital" +
                    "Costs, \r\n            T.EstimatedValue AS Task_EstimatedValue, \r\n            T.Pe" +
                    "rformanceMetricParameterID AS Task_PerformanceMetricParameterID, \r\n            T" +
                    ".PerformanceMetricQuantity AS Task_PerformanceMetricQuantity, \r\n            T.Co" +
                    "mment AS Task_Comment, \r\n            T.Version AS Task_Version, \r\n            T." +
                    "VersionAntecedentID AS Task_VersionAntecedentID, \r\n            T.VersionCertaint" +
                    "y AS Task_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Task_Ve" +
                    "rsionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Task_VersionUpdated" +
                    "By, \r\n            T.VersionDeletedBy AS Task_VersionDeletedBy, \r\n            T.V" +
                    "ersionOwnerContactID AS Task_VersionOwnerContactID, \r\n            T.VersionOwner" +
                    "CompanyID AS Task_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Task_" +
                    "VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObj" +
                    "ectsStoreContainer.X_Task AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.TaskDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView486()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.TaskDatas", @"
    SELECT VALUE -- Constructing TaskDatas
        [XODB.Module.BusinessObjects.TaskData](T1.TaskData_TaskDataID, T1.TaskData_ParentTaskDataID, T1.TaskData_TableType, T1.TaskData_ReferenceID, T1.TaskData_TaskID, T1.TaskData_Version, T1.TaskData_VersionAntecedentID, T1.TaskData_VersionCertainty, T1.TaskData_VersionWorkflowInstanceID, T1.TaskData_VersionUpdatedBy, T1.TaskData_VersionDeletedBy, T1.TaskData_VersionOwnerContactID, T1.TaskData_VersionOwnerCompanyID, T1.TaskData_VersionUpdated)
    FROM (
        SELECT 
            T.TaskDataID AS TaskData_TaskDataID, 
            T.ParentTaskDataID AS TaskData_ParentTaskDataID, 
            T.TableType AS TaskData_TableType, 
            T.ReferenceID AS TaskData_ReferenceID, 
            T.TaskID AS TaskData_TaskID, 
            T.Version AS TaskData_Version, 
            T.VersionAntecedentID AS TaskData_VersionAntecedentID, 
            T.VersionCertainty AS TaskData_VersionCertainty, 
            T.VersionWorkflowInstanceID AS TaskData_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS TaskData_VersionUpdatedBy, 
            T.VersionDeletedBy AS TaskData_VersionDeletedBy, 
            T.VersionOwnerContactID AS TaskData_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS TaskData_VersionOwnerCompanyID, 
            T.VersionUpdated AS TaskData_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_TaskData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.TaskRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView487()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.TaskRelations", "\r\n    SELECT VALUE -- Constructing TaskRelations\r\n        [XODB.Module.BusinessOb" +
                    "jects.TaskRelation](T1.TaskRelation_TaskRelationID, T1.TaskRelation_OriginalTask" +
                    "ID, T1.TaskRelation_RelatedTaskID, T1.TaskRelation_RelationTypeID, T1.TaskRelati" +
                    "on_Related, T1.TaskRelation_Version, T1.TaskRelation_VersionAntecedentID, T1.Tas" +
                    "kRelation_VersionCertainty, T1.TaskRelation_VersionWorkflowInstanceID, T1.TaskRe" +
                    "lation_VersionUpdatedBy, T1.TaskRelation_VersionDeletedBy, T1.TaskRelation_Versi" +
                    "onOwnerContactID, T1.TaskRelation_VersionOwnerCompanyID, T1.TaskRelation_Version" +
                    "Updated)\r\n    FROM (\r\n        SELECT \r\n            T.TaskRelationID AS TaskRelat" +
                    "ion_TaskRelationID, \r\n            T.OriginalTaskID AS TaskRelation_OriginalTaskI" +
                    "D, \r\n            T.RelatedTaskID AS TaskRelation_RelatedTaskID, \r\n            T." +
                    "RelationTypeID AS TaskRelation_RelationTypeID, \r\n            T.Related AS TaskRe" +
                    "lation_Related, \r\n            T.Version AS TaskRelation_Version, \r\n            T" +
                    ".VersionAntecedentID AS TaskRelation_VersionAntecedentID, \r\n            T.Versio" +
                    "nCertainty AS TaskRelation_VersionCertainty, \r\n            T.VersionWorkflowInst" +
                    "anceID AS TaskRelation_VersionWorkflowInstanceID, \r\n            T.VersionUpdated" +
                    "By AS TaskRelation_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS TaskRel" +
                    "ation_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS TaskRelation_Ve" +
                    "rsionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS TaskRelation_Versi" +
                    "onOwnerCompanyID, \r\n            T.VersionUpdated AS TaskRelation_VersionUpdated," +
                    " \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContai" +
                    "ner.X_TaskRelation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Tenements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView488()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Tenements", "\r\n    SELECT VALUE -- Constructing Tenements\r\n        [XODB.Module.BusinessObject" +
                    "s.Tenement](T1.Tenement_TenementID, T1.Tenement_TenementName, T1.Tenement_Teneme" +
                    "ntNumber, T1.Tenement_TenementDevelopmentPhase, T1.Tenement_CountryID, T1.Teneme" +
                    "nt_TenementBoundaryProvinceID, T1.Tenement_OwnerCompanyID, T1.Tenement_ApprovedB" +
                    "yContactID, T1.Tenement_ValidFrom, T1.Tenement_Expiry, T1.Tenement_Version, T1.T" +
                    "enement_VersionAntecedentID, T1.Tenement_VersionCertainty, T1.Tenement_VersionWo" +
                    "rkflowInstanceID, T1.Tenement_VersionUpdatedBy, T1.Tenement_VersionDeletedBy, T1" +
                    ".Tenement_VersionOwnerContactID, T1.Tenement_VersionOwnerCompanyID, T1.Tenement_" +
                    "VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.TenementID AS Teneme" +
                    "nt_TenementID, \r\n            T.TenementName AS Tenement_TenementName, \r\n        " +
                    "    T.TenementNumber AS Tenement_TenementNumber, \r\n            T.TenementDevelop" +
                    "mentPhase AS Tenement_TenementDevelopmentPhase, \r\n            T.CountryID AS Ten" +
                    "ement_CountryID, \r\n            T.TenementBoundaryProvinceID AS Tenement_Tenement" +
                    "BoundaryProvinceID, \r\n            T.OwnerCompanyID AS Tenement_OwnerCompanyID, \r" +
                    "\n            T.ApprovedByContactID AS Tenement_ApprovedByContactID, \r\n          " +
                    "  T.ValidFrom AS Tenement_ValidFrom, \r\n            T.Expiry AS Tenement_Expiry, " +
                    "\r\n            T.Version AS Tenement_Version, \r\n            T.VersionAntecedentID" +
                    " AS Tenement_VersionAntecedentID, \r\n            T.VersionCertainty AS Tenement_V" +
                    "ersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Tenement_VersionWo" +
                    "rkflowInstanceID, \r\n            T.VersionUpdatedBy AS Tenement_VersionUpdatedBy," +
                    " \r\n            T.VersionDeletedBy AS Tenement_VersionDeletedBy, \r\n            T." +
                    "VersionOwnerContactID AS Tenement_VersionOwnerContactID, \r\n            T.Version" +
                    "OwnerCompanyID AS Tenement_VersionOwnerCompanyID, \r\n            T.VersionUpdated" +
                    " AS Tenement_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModu" +
                    "leBusinessObjectsStoreContainer.X_Tenement AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.TenementCommodities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView489()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.TenementCommodities", "\r\n    SELECT VALUE -- Constructing TenementCommodities\r\n        [XODB.Module.Busi" +
                    "nessObjects.TenementCommodity](T1.TenementCommodity_TenementCommodityID, T1.Tene" +
                    "mentCommodity_TenementID, T1.TenementCommodity_CommodityID, T1.TenementCommodity" +
                    "_Version, T1.TenementCommodity_VersionAntecedentID, T1.TenementCommodity_Version" +
                    "Certainty, T1.TenementCommodity_VersionWorkflowInstanceID, T1.TenementCommodity_" +
                    "VersionUpdatedBy, T1.TenementCommodity_VersionDeletedBy, T1.TenementCommodity_Ve" +
                    "rsionOwnerContactID, T1.TenementCommodity_VersionOwnerCompanyID, T1.TenementComm" +
                    "odity_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.TenementCommod" +
                    "ityID AS TenementCommodity_TenementCommodityID, \r\n            T.TenementID AS Te" +
                    "nementCommodity_TenementID, \r\n            T.CommodityID AS TenementCommodity_Com" +
                    "modityID, \r\n            T.Version AS TenementCommodity_Version, \r\n            T." +
                    "VersionAntecedentID AS TenementCommodity_VersionAntecedentID, \r\n            T.Ve" +
                    "rsionCertainty AS TenementCommodity_VersionCertainty, \r\n            T.VersionWor" +
                    "kflowInstanceID AS TenementCommodity_VersionWorkflowInstanceID, \r\n            T." +
                    "VersionUpdatedBy AS TenementCommodity_VersionUpdatedBy, \r\n            T.VersionD" +
                    "eletedBy AS TenementCommodity_VersionDeletedBy, \r\n            T.VersionOwnerCont" +
                    "actID AS TenementCommodity_VersionOwnerContactID, \r\n            T.VersionOwnerCo" +
                    "mpanyID AS TenementCommodity_VersionOwnerCompanyID, \r\n            T.VersionUpdat" +
                    "ed AS TenementCommodity_VersionUpdated, \r\n            True AS _from0\r\n        FR" +
                    "OM XODBModuleBusinessObjectsStoreContainer.X_TenementCommodity AS T\r\n    ) AS T1" +
                    "");
        }
        
        /// <Summary>
        /// return view for XODBC.TenementProvinces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView490()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.TenementProvinces", "\r\n    SELECT VALUE -- Constructing TenementProvinces\r\n        [XODB.Module.Busine" +
                    "ssObjects.TenementProvince](T1.TenementProvince_TenementProvinceID, T1.TenementP" +
                    "rovince_TenementID, T1.TenementProvince_ProvinceID, T1.TenementProvince_Version," +
                    " T1.TenementProvince_VersionAntecedentID, T1.TenementProvince_VersionCertainty, " +
                    "T1.TenementProvince_VersionWorkflowInstanceID, T1.TenementProvince_VersionUpdate" +
                    "dBy, T1.TenementProvince_VersionDeletedBy, T1.TenementProvince_VersionOwnerConta" +
                    "ctID, T1.TenementProvince_VersionOwnerCompanyID, T1.TenementProvince_VersionUpda" +
                    "ted)\r\n    FROM (\r\n        SELECT \r\n            T.TenementProvinceID AS TenementP" +
                    "rovince_TenementProvinceID, \r\n            T.TenementID AS TenementProvince_Tenem" +
                    "entID, \r\n            T.ProvinceID AS TenementProvince_ProvinceID, \r\n            " +
                    "T.Version AS TenementProvince_Version, \r\n            T.VersionAntecedentID AS Te" +
                    "nementProvince_VersionAntecedentID, \r\n            T.VersionCertainty AS Tenement" +
                    "Province_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Tenement" +
                    "Province_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Tenement" +
                    "Province_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS TenementProvince_" +
                    "VersionDeletedBy, \r\n            T.VersionOwnerContactID AS TenementProvince_Vers" +
                    "ionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS TenementProvince_Ver" +
                    "sionOwnerCompanyID, \r\n            T.VersionUpdated AS TenementProvince_VersionUp" +
                    "dated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStore" +
                    "Container.X_TenementProvince AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.TenementRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView491()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.TenementRelations", "\r\n    SELECT VALUE -- Constructing TenementRelations\r\n        [XODB.Module.Busine" +
                    "ssObjects.TenementRelation](T1.TenementRelation_TenementRelationID, T1.TenementR" +
                    "elation_TenementID, T1.TenementRelation_ParentTenementID, T1.TenementRelation_Ve" +
                    "rsion, T1.TenementRelation_VersionAntecedentID, T1.TenementRelation_VersionCerta" +
                    "inty, T1.TenementRelation_VersionWorkflowInstanceID, T1.TenementRelation_Version" +
                    "UpdatedBy, T1.TenementRelation_VersionDeletedBy, T1.TenementRelation_VersionOwne" +
                    "rContactID, T1.TenementRelation_VersionOwnerCompanyID, T1.TenementRelation_Versi" +
                    "onUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.TenementRelationID AS Ten" +
                    "ementRelation_TenementRelationID, \r\n            T.TenementID AS TenementRelation" +
                    "_TenementID, \r\n            T.ParentTenementID AS TenementRelation_ParentTenement" +
                    "ID, \r\n            T.Version AS TenementRelation_Version, \r\n            T.Version" +
                    "AntecedentID AS TenementRelation_VersionAntecedentID, \r\n            T.VersionCer" +
                    "tainty AS TenementRelation_VersionCertainty, \r\n            T.VersionWorkflowInst" +
                    "anceID AS TenementRelation_VersionWorkflowInstanceID, \r\n            T.VersionUpd" +
                    "atedBy AS TenementRelation_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS" +
                    " TenementRelation_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS Ten" +
                    "ementRelation_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Te" +
                    "nementRelation_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Tenement" +
                    "Relation_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBu" +
                    "sinessObjectsStoreContainer.X_TenementRelation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.UsageAuditViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView492()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.UsageAuditViews", "\r\n    SELECT VALUE -- Constructing UsageAuditViews\r\n        [XODB.Module.Business" +
                    "Objects.UsageAuditView](T1.UsageAuditView_UsageAuditID, T1.UsageAuditView_UsageI" +
                    "D, T1.UsageAuditView_UsageAuditTypeID, T1.UsageAuditView_EntitySystemType, T1.Us" +
                    "ageAuditView_EntityID, T1.UsageAuditView_Action, T1.UsageAuditView_Audited, T1.U" +
                    "sageAuditView_ContactID, T1.UsageAuditView_Version, T1.UsageAuditView_VersionAnt" +
                    "ecedentID, T1.UsageAuditView_VersionCertainty, T1.UsageAuditView_VersionWorkflow" +
                    "InstanceID, T1.UsageAuditView_VersionUpdatedBy, T1.UsageAuditView_VersionDeleted" +
                    "By, T1.UsageAuditView_VersionOwnerContactID, T1.UsageAuditView_VersionOwnerCompa" +
                    "nyID, T1.UsageAuditView_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.UsageAuditID AS UsageAuditView_UsageAuditID, \r\n            T.UsageID AS Usag" +
                    "eAuditView_UsageID, \r\n            T.UsageAuditTypeID AS UsageAuditView_UsageAudi" +
                    "tTypeID, \r\n            T.EntitySystemType AS UsageAuditView_EntitySystemType, \r\n" +
                    "            T.EntityID AS UsageAuditView_EntityID, \r\n            T.Action AS Usa" +
                    "geAuditView_Action, \r\n            T.Audited AS UsageAuditView_Audited, \r\n       " +
                    "     T.ContactID AS UsageAuditView_ContactID, \r\n            T.Version AS UsageAu" +
                    "ditView_Version, \r\n            T.VersionAntecedentID AS UsageAuditView_VersionAn" +
                    "tecedentID, \r\n            T.VersionCertainty AS UsageAuditView_VersionCertainty," +
                    " \r\n            T.VersionWorkflowInstanceID AS UsageAuditView_VersionWorkflowInst" +
                    "anceID, \r\n            T.VersionUpdatedBy AS UsageAuditView_VersionUpdatedBy, \r\n " +
                    "           T.VersionDeletedBy AS UsageAuditView_VersionDeletedBy, \r\n            " +
                    "T.VersionOwnerContactID AS UsageAuditView_VersionOwnerContactID, \r\n            T" +
                    ".VersionOwnerCompanyID AS UsageAuditView_VersionOwnerCompanyID, \r\n            T." +
                    "VersionUpdated AS UsageAuditView_VersionUpdated, \r\n            True AS _from0\r\n " +
                    "       FROM XODBModuleBusinessObjectsStoreContainer.X_UsageAudit AS T\r\n    ) AS " +
                    "T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WaterFlows
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView493()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2314);
            viewString.Append("\r\n    SELECT VALUE -- Constructing WaterFlows\r\n        [XODB.Module.BusinessObje");
            viewString.Append("cts.WaterFlow](T1.WaterFlow_WaterFlowID, T1.WaterFlow_HeaderID, T1.WaterFlow_Tes");
            viewString.Append("tDepth, T1.WaterFlow_TestDate, T1.WaterFlow_SampleTypeID, T1.WaterFlow_SampleNum");
            viewString.Append("ber, T1.WaterFlow_FlowTestTypeID, T1.WaterFlow_FlowHeight, T1.WaterFlow_FlowRate");
            viewString.Append(", T1.WaterFlow_Ph, T1.WaterFlow_TotalDissolvedSolids, T1.WaterFlow_ElectricalCon");
            viewString.Append("ductivity, T1.WaterFlow_Temperature, T1.WaterFlow_Pressure, T1.WaterFlow_Comment");
            viewString.Append(", T1.WaterFlow_Version, T1.WaterFlow_VersionAntecedentID, T1.WaterFlow_VersionCe");
            viewString.Append("rtainty, T1.WaterFlow_VersionWorkflowInstanceID, T1.WaterFlow_VersionUpdatedBy, ");
            viewString.Append("T1.WaterFlow_VersionDeletedBy, T1.WaterFlow_VersionOwnerContactID, T1.WaterFlow_");
            viewString.Append("VersionOwnerCompanyID, T1.WaterFlow_VersionUpdated)\r\n    FROM (\r\n        SELECT ");
            viewString.Append("\r\n            T.WaterFlowID AS WaterFlow_WaterFlowID, \r\n            T.HeaderID A");
            viewString.Append("S WaterFlow_HeaderID, \r\n            T.TestDepth AS WaterFlow_TestDepth, \r\n      ");
            viewString.Append("      T.TestDate AS WaterFlow_TestDate, \r\n            T.SampleTypeID AS WaterFlo");
            viewString.Append("w_SampleTypeID, \r\n            T.SampleNumber AS WaterFlow_SampleNumber, \r\n      ");
            viewString.Append("      T.FlowTestTypeID AS WaterFlow_FlowTestTypeID, \r\n            T.FlowHeight A");
            viewString.Append("S WaterFlow_FlowHeight, \r\n            T.FlowRate AS WaterFlow_FlowRate, \r\n      ");
            viewString.Append("      T.Ph AS WaterFlow_Ph, \r\n            T.TotalDissolvedSolids AS WaterFlow_To");
            viewString.Append("talDissolvedSolids, \r\n            T.ElectricalConductivity AS WaterFlow_Electric");
            viewString.Append("alConductivity, \r\n            T.Temperature AS WaterFlow_Temperature, \r\n        ");
            viewString.Append("    T.Pressure AS WaterFlow_Pressure, \r\n            T.Comment AS WaterFlow_Comme");
            viewString.Append("nt, \r\n            T.Version AS WaterFlow_Version, \r\n            T.VersionAnteced");
            viewString.Append("entID AS WaterFlow_VersionAntecedentID, \r\n            T.VersionCertainty AS Wate");
            viewString.Append("rFlow_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS WaterFlow_V");
            viewString.Append("ersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS WaterFlow_VersionU");
            viewString.Append("pdatedBy, \r\n            T.VersionDeletedBy AS WaterFlow_VersionDeletedBy, \r\n    ");
            viewString.Append("        T.VersionOwnerContactID AS WaterFlow_VersionOwnerContactID, \r\n          ");
            viewString.Append("  T.VersionOwnerCompanyID AS WaterFlow_VersionOwnerCompanyID, \r\n            T.Ve");
            viewString.Append("rsionUpdated AS WaterFlow_VersionUpdated, \r\n            True AS _from0\r\n        ");
            viewString.Append("FROM XODBModuleBusinessObjectsStoreContainer.X_WaterFlow AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WaterFlows", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView494()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [XODB.Module.BusinessObjects.Store.sysdiagrams](T1.sysdiagrams_name, T1.[sysdiagrams.principal_id], T1.[sysdiagrams.diagram_id], T1.sysdiagrams_version, T1.sysdiagrams_definition)
    FROM (
        SELECT 
            T.name AS sysdiagrams_name, 
            T.principal_id AS [sysdiagrams.principal_id], 
            T.diagram_id AS [sysdiagrams.diagram_id], 
            T.version AS sysdiagrams_version, 
            T.definition AS sysdiagrams_definition, 
            True AS _from0
        FROM XODBC.sysdiagrams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView495()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [XODB.Module.BusinessObjects.sysdiagram](T1.sysdiagram_name, T1.[sysdiagram.principal_id], T1.[sysdiagram.diagram_id], T1.sysdiagram_version, T1.sysdiagram_definition)
    FROM (
        SELECT 
            T.name AS sysdiagram_name, 
            T.principal_id AS [sysdiagram.principal_id], 
            T.diagram_id AS [sysdiagram.diagram_id], 
            T.version AS sysdiagram_version, 
            T.definition AS sysdiagram_definition, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.sysdiagrams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_CompanyServer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView496()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_CompanyServer", "\r\n    SELECT VALUE -- Constructing X_CompanyServer\r\n        [XODB.Module.Business" +
                    "Objects.Store.X_CompanyServer](T1.[X_CompanyServer.CompanyServerID], T1.[X_Compa" +
                    "nyServer.CompanyID], T1.[X_CompanyServer.ServerID], T1.[X_CompanyServer.Version]" +
                    ", T1.[X_CompanyServer.VersionAntecedentID], T1.[X_CompanyServer.VersionCertainty" +
                    "], T1.[X_CompanyServer.VersionWorkflowInstanceID], T1.[X_CompanyServer.VersionUp" +
                    "datedBy], T1.[X_CompanyServer.VersionDeletedBy], T1.[X_CompanyServer.VersionOwne" +
                    "rContactID], T1.[X_CompanyServer.VersionOwnerCompanyID], T1.[X_CompanyServer.Ver" +
                    "sionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.CompanyServerID AS [X_" +
                    "CompanyServer.CompanyServerID], \r\n            T.CompanyID AS [X_CompanyServer.Co" +
                    "mpanyID], \r\n            T.ServerID AS [X_CompanyServer.ServerID], \r\n            " +
                    "T.Version AS [X_CompanyServer.Version], \r\n            T.VersionAntecedentID AS [" +
                    "X_CompanyServer.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_Com" +
                    "panyServer.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_Co" +
                    "mpanyServer.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_C" +
                    "ompanyServer.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_CompanySe" +
                    "rver.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_CompanyServe" +
                    "r.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_CompanySer" +
                    "ver.VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_CompanyServer.V" +
                    "ersionUpdated], \r\n            True AS _from0\r\n        FROM XODBC.CompanyServers " +
                    "AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.CompanyServers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView497()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.CompanyServers", @"
    SELECT VALUE -- Constructing CompanyServers
        [XODB.Module.BusinessObjects.CompanyServer](T1.CompanyServer_CompanyServerID, T1.CompanyServer_CompanyID, T1.CompanyServer_ServerID, T1.CompanyServer_Version, T1.CompanyServer_VersionAntecedentID, T1.CompanyServer_VersionCertainty, T1.CompanyServer_VersionWorkflowInstanceID, T1.CompanyServer_VersionUpdatedBy, T1.CompanyServer_VersionDeletedBy, T1.CompanyServer_VersionOwnerContactID, T1.CompanyServer_VersionOwnerCompanyID, T1.CompanyServer_VersionUpdated)
    FROM (
        SELECT 
            T.CompanyServerID AS CompanyServer_CompanyServerID, 
            T.CompanyID AS CompanyServer_CompanyID, 
            T.ServerID AS CompanyServer_ServerID, 
            T.Version AS CompanyServer_Version, 
            T.VersionAntecedentID AS CompanyServer_VersionAntecedentID, 
            T.VersionCertainty AS CompanyServer_VersionCertainty, 
            T.VersionWorkflowInstanceID AS CompanyServer_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS CompanyServer_VersionUpdatedBy, 
            T.VersionDeletedBy AS CompanyServer_VersionDeletedBy, 
            T.VersionOwnerContactID AS CompanyServer_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS CompanyServer_VersionOwnerCompanyID, 
            T.VersionUpdated AS CompanyServer_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_CompanyServer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Dictionary
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView498()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Dictionary", @"
    SELECT VALUE -- Constructing X_Dictionary
        [XODB.Module.BusinessObjects.Store.X_Dictionary](T1.[X_Dictionary.CategoryID], T1.[X_Dictionary.CodeID], T1.[X_Dictionary.Description])
    FROM (
        SELECT 
            T.CategoryID AS [X_Dictionary.CategoryID], 
            T.CodeID AS [X_Dictionary.CodeID], 
            T.Description AS [X_Dictionary.Description], 
            True AS _from0
        FROM XODBC.Dictionaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Dictionaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView499()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Dictionaries", @"
    SELECT VALUE -- Constructing Dictionaries
        [XODB.Module.BusinessObjects.Dictionary](T1.Dictionary_CategoryID, T1.Dictionary_CodeID, T1.Dictionary_Description)
    FROM (
        SELECT 
            T.CategoryID AS Dictionary_CategoryID, 
            T.CodeID AS Dictionary_CodeID, 
            T.Description AS Dictionary_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_Dictionary AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_License
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView500()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(6161);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_License\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Store.X_License](T1.[X_License.LicenseID], T1.[X_License.CompanyID], T1.[X_Li");
            viewString.Append("cense.ContactID], T1.[X_License.LicenseeGUID], T1.[X_License.LicenseeName], T1.[");
            viewString.Append("X_License.LicenseeUsername], T1.[X_License.LicenseeUniqueMachineCode1], T1.[X_Li");
            viewString.Append("cense.LicenseeUniqueMachineCode2], T1.[X_License.LicenseeGroupID], T1.[X_License");
            viewString.Append(".LicensorIP], T1.[X_License.LicensorName], T1.[X_License.LicenseTypeID], T1.[X_L");
            viewString.Append("icense.LicenseType], T1.[X_License.LicenseURL], T1.[X_License.RootServerName], T");
            viewString.Append("1.[X_License.RootServerID], T1.[X_License.ServerName], T1.[X_License.ServerID], ");
            viewString.Append("T1.[X_License.ApplicationID], T1.[X_License.ServiceAuthenticationMethod], T1.[X_");
            viewString.Append("License.ServiceAuthorisationMethod], T1.[X_License.ValidFrom], T1.[X_License.Exp");
            viewString.Append("iry], T1.[X_License.SupportExpiry], T1.[X_License.ValidForDuration], T1.[X_Licen");
            viewString.Append("se.ValidForUnitID], T1.[X_License.ValidForUnitTarget], T1.[X_License.VersionMajo");
            viewString.Append("r], T1.[X_License.VersionMinor], T1.[X_License.VersionBuild], T1.[X_License.Supp");
            viewString.Append("ortedToMajor], T1.[X_License.SupportedToMinor], T1.[X_License.SupportedToBuild],");
            viewString.Append(" T1.[X_License.Nuked], T1.[X_License.NukedReason], T1.[X_License.TimeServerID], ");
            viewString.Append("T1.[X_License.TimeServerName], T1.[X_License.TimeServerResolutionMask], T1.[X_Li");
            viewString.Append("cense.TimeServerIP], T1.[X_License.PreAuthorizationCode], T1.[X_License.PreAutho");
            viewString.Append("rizationExecuted], T1.[X_License.Signatory1], T1.[X_License.Signatory2], T1.[X_L");
            viewString.Append("icense.Signatory3], T1.[X_License.Signature1], T1.[X_License.Signature2], T1.[X_");
            viewString.Append("License.Signature3], T1.[X_License.Received], T1.[X_License.CheckedIn], T1.[X_Li");
            viewString.Append("cense.LicenceeCertificate], T1.[X_License.LicensorCertificate], T1.[X_License.Ch");
            viewString.Append("ecksumType], T1.[X_License.Checksum], T1.[X_License.EncryptedKey], T1.[X_License");
            viewString.Append(".LicenseKeyCode], T1.[X_License.Version], T1.[X_License.VersionAntecedentID], T1");
            viewString.Append(".[X_License.VersionCertainty], T1.[X_License.VersionWorkflowInstanceID], T1.[X_L");
            viewString.Append("icense.VersionUpdatedBy], T1.[X_License.VersionDeletedBy], T1.[X_License.Version");
            viewString.Append("OwnerContactID], T1.[X_License.VersionOwnerCompanyID], T1.[X_License.VersionUpda");
            viewString.Append("ted])\r\n    FROM (\r\n        SELECT \r\n            T.LicenseID AS [X_License.Licens");
            viewString.Append("eID], \r\n            T.CompanyID AS [X_License.CompanyID], \r\n            T.Contac");
            viewString.Append("tID AS [X_License.ContactID], \r\n            T.LicenseeGUID AS [X_License.License");
            viewString.Append("eGUID], \r\n            T.LicenseeName AS [X_License.LicenseeName], \r\n            ");
            viewString.Append("T.LicenseeUsername AS [X_License.LicenseeUsername], \r\n            T.LicenseeUniq");
            viewString.Append("ueMachineCode1 AS [X_License.LicenseeUniqueMachineCode1], \r\n            T.Licens");
            viewString.Append("eeUniqueMachineCode2 AS [X_License.LicenseeUniqueMachineCode2], \r\n            T.");
            viewString.Append("LicenseeGroupID AS [X_License.LicenseeGroupID], \r\n            T.LicensorIP AS [X");
            viewString.Append("_License.LicensorIP], \r\n            T.LicensorName AS [X_License.LicensorName], ");
            viewString.Append("\r\n            T.LicenseTypeID AS [X_License.LicenseTypeID], \r\n            T.Lice");
            viewString.Append("nseType AS [X_License.LicenseType], \r\n            T.LicenseURL AS [X_License.Lic");
            viewString.Append("enseURL], \r\n            T.RootServerName AS [X_License.RootServerName], \r\n      ");
            viewString.Append("      T.RootServerID AS [X_License.RootServerID], \r\n            T.ServerName AS ");
            viewString.Append("[X_License.ServerName], \r\n            T.ServerID AS [X_License.ServerID], \r\n    ");
            viewString.Append("        T.ApplicationID AS [X_License.ApplicationID], \r\n            T.ServiceAut");
            viewString.Append("henticationMethod AS [X_License.ServiceAuthenticationMethod], \r\n            T.Se");
            viewString.Append("rviceAuthorisationMethod AS [X_License.ServiceAuthorisationMethod], \r\n          ");
            viewString.Append("  T.ValidFrom AS [X_License.ValidFrom], \r\n            T.Expiry AS [X_License.Exp");
            viewString.Append("iry], \r\n            T.SupportExpiry AS [X_License.SupportExpiry], \r\n            ");
            viewString.Append("T.ValidForDuration AS [X_License.ValidForDuration], \r\n            T.ValidForUnit");
            viewString.Append("ID AS [X_License.ValidForUnitID], \r\n            T.ValidForUnitTarget AS [X_Licen");
            viewString.Append("se.ValidForUnitTarget], \r\n            T.VersionMajor AS [X_License.VersionMajor]");
            viewString.Append(", \r\n            T.VersionMinor AS [X_License.VersionMinor], \r\n            T.Vers");
            viewString.Append("ionBuild AS [X_License.VersionBuild], \r\n            T.SupportedToMajor AS [X_Lic");
            viewString.Append("ense.SupportedToMajor], \r\n            T.SupportedToMinor AS [X_License.Supported");
            viewString.Append("ToMinor], \r\n            T.SupportedToBuild AS [X_License.SupportedToBuild], \r\n  ");
            viewString.Append("          T.Nuked AS [X_License.Nuked], \r\n            T.NukedReason AS [X_Licens");
            viewString.Append("e.NukedReason], \r\n            T.TimeServerID AS [X_License.TimeServerID], \r\n    ");
            viewString.Append("        T.TimeServerName AS [X_License.TimeServerName], \r\n            T.TimeServ");
            viewString.Append("erResolutionMask AS [X_License.TimeServerResolutionMask], \r\n            T.TimeSe");
            viewString.Append("rverIP AS [X_License.TimeServerIP], \r\n            T.PreAuthorizationCode AS [X_L");
            viewString.Append("icense.PreAuthorizationCode], \r\n            T.PreAuthorizationExecuted AS [X_Lic");
            viewString.Append("ense.PreAuthorizationExecuted], \r\n            T.Signatory1 AS [X_License.Signato");
            viewString.Append("ry1], \r\n            T.Signatory2 AS [X_License.Signatory2], \r\n            T.Sign");
            viewString.Append("atory3 AS [X_License.Signatory3], \r\n            T.Signature1 AS [X_License.Signa");
            viewString.Append("ture1], \r\n            T.Signature2 AS [X_License.Signature2], \r\n            T.Si");
            viewString.Append("gnature3 AS [X_License.Signature3], \r\n            T.Received AS [X_License.Recei");
            viewString.Append("ved], \r\n            T.CheckedIn AS [X_License.CheckedIn], \r\n            T.Licenc");
            viewString.Append("eeCertificate AS [X_License.LicenceeCertificate], \r\n            T.LicensorCertif");
            viewString.Append("icate AS [X_License.LicensorCertificate], \r\n            T.ChecksumType AS [X_Lic");
            viewString.Append("ense.ChecksumType], \r\n            T.Checksum AS [X_License.Checksum], \r\n        ");
            viewString.Append("    T.EncryptedKey AS [X_License.EncryptedKey], \r\n            T.LicenseKeyCode A");
            viewString.Append("S [X_License.LicenseKeyCode], \r\n            T.Version AS [X_License.Version], \r\n");
            viewString.Append("            T.VersionAntecedentID AS [X_License.VersionAntecedentID], \r\n        ");
            viewString.Append("    T.VersionCertainty AS [X_License.VersionCertainty], \r\n            T.VersionW");
            viewString.Append("orkflowInstanceID AS [X_License.VersionWorkflowInstanceID], \r\n            T.Vers");
            viewString.Append("ionUpdatedBy AS [X_License.VersionUpdatedBy], \r\n            T.VersionDeletedBy A");
            viewString.Append("S [X_License.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Lice");
            viewString.Append("nse.VersionOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_License.");
            viewString.Append("VersionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_License.VersionUpda");
            viewString.Append("ted], \r\n            True AS _from0\r\n        FROM XODBC.Licenses AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_License", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Licenses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView501()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(5675);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Licenses\r\n        [XODB.Module.BusinessObject");
            viewString.Append("s.License](T1.License_LicenseID, T1.License_CompanyID, T1.License_ContactID, T1.");
            viewString.Append("License_LicenseeGUID, T1.License_LicenseeName, T1.License_LicenseeUsername, T1.L");
            viewString.Append("icense_LicenseeUniqueMachineCode1, T1.License_LicenseeUniqueMachineCode2, T1.Lic");
            viewString.Append("ense_LicenseeGroupID, T1.License_LicensorIP, T1.License_LicensorName, T1.License");
            viewString.Append("_LicenseTypeID, T1.License_LicenseType, T1.License_LicenseURL, T1.License_RootSe");
            viewString.Append("rverName, T1.License_RootServerID, T1.License_ServerName, T1.License_ServerID, T");
            viewString.Append("1.License_ApplicationID, T1.License_ServiceAuthenticationMethod, T1.License_Serv");
            viewString.Append("iceAuthorisationMethod, T1.License_ValidFrom, T1.License_Expiry, T1.License_Supp");
            viewString.Append("ortExpiry, T1.License_ValidForDuration, T1.License_ValidForUnitID, T1.License_Va");
            viewString.Append("lidForUnitTarget, T1.License_VersionMajor, T1.License_VersionMinor, T1.License_V");
            viewString.Append("ersionBuild, T1.License_SupportedToMajor, T1.License_SupportedToMinor, T1.Licens");
            viewString.Append("e_SupportedToBuild, T1.License_Nuked, T1.License_NukedReason, T1.License_TimeSer");
            viewString.Append("verID, T1.License_TimeServerName, T1.License_TimeServerResolutionMask, T1.Licens");
            viewString.Append("e_TimeServerIP, T1.License_PreAuthorizationCode, T1.License_PreAuthorizationExec");
            viewString.Append("uted, T1.License_Signatory1, T1.License_Signatory2, T1.License_Signatory3, T1.Li");
            viewString.Append("cense_Signature1, T1.License_Signature2, T1.License_Signature3, T1.License_Recei");
            viewString.Append("ved, T1.License_CheckedIn, T1.License_LicenceeCertificate, T1.License_LicensorCe");
            viewString.Append("rtificate, T1.License_ChecksumType, T1.License_Checksum, T1.License_EncryptedKey");
            viewString.Append(", T1.License_LicenseKeyCode, T1.License_Version, T1.License_VersionAntecedentID,");
            viewString.Append(" T1.License_VersionCertainty, T1.License_VersionWorkflowInstanceID, T1.License_V");
            viewString.Append("ersionUpdatedBy, T1.License_VersionDeletedBy, T1.License_VersionOwnerContactID, ");
            viewString.Append("T1.License_VersionOwnerCompanyID, T1.License_VersionUpdated)\r\n    FROM (\r\n      ");
            viewString.Append("  SELECT \r\n            T.LicenseID AS License_LicenseID, \r\n            T.Company");
            viewString.Append("ID AS License_CompanyID, \r\n            T.ContactID AS License_ContactID, \r\n     ");
            viewString.Append("       T.LicenseeGUID AS License_LicenseeGUID, \r\n            T.LicenseeName AS L");
            viewString.Append("icense_LicenseeName, \r\n            T.LicenseeUsername AS License_LicenseeUsernam");
            viewString.Append("e, \r\n            T.LicenseeUniqueMachineCode1 AS License_LicenseeUniqueMachineCo");
            viewString.Append("de1, \r\n            T.LicenseeUniqueMachineCode2 AS License_LicenseeUniqueMachine");
            viewString.Append("Code2, \r\n            T.LicenseeGroupID AS License_LicenseeGroupID, \r\n           ");
            viewString.Append(" T.LicensorIP AS License_LicensorIP, \r\n            T.LicensorName AS License_Lic");
            viewString.Append("ensorName, \r\n            T.LicenseTypeID AS License_LicenseTypeID, \r\n           ");
            viewString.Append(" T.LicenseType AS License_LicenseType, \r\n            T.LicenseURL AS License_Lic");
            viewString.Append("enseURL, \r\n            T.RootServerName AS License_RootServerName, \r\n           ");
            viewString.Append(" T.RootServerID AS License_RootServerID, \r\n            T.ServerName AS License_S");
            viewString.Append("erverName, \r\n            T.ServerID AS License_ServerID, \r\n            T.Applica");
            viewString.Append("tionID AS License_ApplicationID, \r\n            T.ServiceAuthenticationMethod AS ");
            viewString.Append("License_ServiceAuthenticationMethod, \r\n            T.ServiceAuthorisationMethod ");
            viewString.Append("AS License_ServiceAuthorisationMethod, \r\n            T.ValidFrom AS License_Vali");
            viewString.Append("dFrom, \r\n            T.Expiry AS License_Expiry, \r\n            T.SupportExpiry A");
            viewString.Append("S License_SupportExpiry, \r\n            T.ValidForDuration AS License_ValidForDur");
            viewString.Append("ation, \r\n            T.ValidForUnitID AS License_ValidForUnitID, \r\n            T");
            viewString.Append(".ValidForUnitTarget AS License_ValidForUnitTarget, \r\n            T.VersionMajor ");
            viewString.Append("AS License_VersionMajor, \r\n            T.VersionMinor AS License_VersionMinor, \r");
            viewString.Append("\n            T.VersionBuild AS License_VersionBuild, \r\n            T.SupportedTo");
            viewString.Append("Major AS License_SupportedToMajor, \r\n            T.SupportedToMinor AS License_S");
            viewString.Append("upportedToMinor, \r\n            T.SupportedToBuild AS License_SupportedToBuild, \r");
            viewString.Append("\n            T.Nuked AS License_Nuked, \r\n            T.NukedReason AS License_Nu");
            viewString.Append("kedReason, \r\n            T.TimeServerID AS License_TimeServerID, \r\n            T");
            viewString.Append(".TimeServerName AS License_TimeServerName, \r\n            T.TimeServerResolutionM");
            viewString.Append("ask AS License_TimeServerResolutionMask, \r\n            T.TimeServerIP AS License");
            viewString.Append("_TimeServerIP, \r\n            T.PreAuthorizationCode AS License_PreAuthorizationC");
            viewString.Append("ode, \r\n            T.PreAuthorizationExecuted AS License_PreAuthorizationExecute");
            viewString.Append("d, \r\n            T.Signatory1 AS License_Signatory1, \r\n            T.Signatory2 ");
            viewString.Append("AS License_Signatory2, \r\n            T.Signatory3 AS License_Signatory3, \r\n     ");
            viewString.Append("       T.Signature1 AS License_Signature1, \r\n            T.Signature2 AS License");
            viewString.Append("_Signature2, \r\n            T.Signature3 AS License_Signature3, \r\n            T.R");
            viewString.Append("eceived AS License_Received, \r\n            T.CheckedIn AS License_CheckedIn, \r\n ");
            viewString.Append("           T.LicenceeCertificate AS License_LicenceeCertificate, \r\n            T");
            viewString.Append(".LicensorCertificate AS License_LicensorCertificate, \r\n            T.ChecksumTyp");
            viewString.Append("e AS License_ChecksumType, \r\n            T.Checksum AS License_Checksum, \r\n     ");
            viewString.Append("       T.EncryptedKey AS License_EncryptedKey, \r\n            T.LicenseKeyCode AS");
            viewString.Append(" License_LicenseKeyCode, \r\n            T.Version AS License_Version, \r\n         ");
            viewString.Append("   T.VersionAntecedentID AS License_VersionAntecedentID, \r\n            T.Version");
            viewString.Append("Certainty AS License_VersionCertainty, \r\n            T.VersionWorkflowInstanceID");
            viewString.Append(" AS License_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Licen");
            viewString.Append("se_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS License_VersionDeletedB");
            viewString.Append("y, \r\n            T.VersionOwnerContactID AS License_VersionOwnerContactID, \r\n   ");
            viewString.Append("         T.VersionOwnerCompanyID AS License_VersionOwnerCompanyID, \r\n           ");
            viewString.Append(" T.VersionUpdated AS License_VersionUpdated, \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM XODBModuleBusinessObjectsStoreContainer.X_License AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Licenses", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_LicenseAsset
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView502()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_LicenseAsset", "\r\n    SELECT VALUE -- Constructing X_LicenseAsset\r\n        [XODB.Module.BusinessO" +
                    "bjects.Store.X_LicenseAsset](T1.[X_LicenseAsset.LicenseAssetID], T1.[X_LicenseAs" +
                    "set.LicenseID], T1.[X_LicenseAsset.AssetID], T1.[X_LicenseAsset.ModelID], T1.[X_" +
                    "LicenseAsset.Restrictions], T1.[X_LicenseAsset.Version], T1.[X_LicenseAsset.Vers" +
                    "ionAntecedentID], T1.[X_LicenseAsset.VersionCertainty], T1.[X_LicenseAsset.Versi" +
                    "onWorkflowInstanceID], T1.[X_LicenseAsset.VersionUpdatedBy], T1.[X_LicenseAsset." +
                    "VersionDeletedBy], T1.[X_LicenseAsset.VersionOwnerContactID], T1.[X_LicenseAsset" +
                    ".VersionOwnerCompanyID], T1.[X_LicenseAsset.VersionUpdated])\r\n    FROM (\r\n      " +
                    "  SELECT \r\n            T.LicenseAssetID AS [X_LicenseAsset.LicenseAssetID], \r\n  " +
                    "          T.LicenseID AS [X_LicenseAsset.LicenseID], \r\n            T.AssetID AS " +
                    "[X_LicenseAsset.AssetID], \r\n            T.ModelID AS [X_LicenseAsset.ModelID], \r" +
                    "\n            T.Restrictions AS [X_LicenseAsset.Restrictions], \r\n            T.Ve" +
                    "rsion AS [X_LicenseAsset.Version], \r\n            T.VersionAntecedentID AS [X_Lic" +
                    "enseAsset.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_LicenseAs" +
                    "set.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_LicenseAs" +
                    "set.VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_LicenseAs" +
                    "set.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_LicenseAsset.Versi" +
                    "onDeletedBy], \r\n            T.VersionOwnerContactID AS [X_LicenseAsset.VersionOw" +
                    "nerContactID], \r\n            T.VersionOwnerCompanyID AS [X_LicenseAsset.VersionO" +
                    "wnerCompanyID], \r\n            T.VersionUpdated AS [X_LicenseAsset.VersionUpdated" +
                    "], \r\n            True AS _from0\r\n        FROM XODBC.LicenseAssets AS T\r\n    ) AS" +
                    " T1");
        }
        
        /// <Summary>
        /// return view for XODBC.LicenseAssets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView503()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LicenseAssets", "\r\n    SELECT VALUE -- Constructing LicenseAssets\r\n        [XODB.Module.BusinessOb" +
                    "jects.LicenseAsset](T1.LicenseAsset_LicenseAssetID, T1.LicenseAsset_LicenseID, T" +
                    "1.LicenseAsset_AssetID, T1.LicenseAsset_ModelID, T1.LicenseAsset_Restrictions, T" +
                    "1.LicenseAsset_Version, T1.LicenseAsset_VersionAntecedentID, T1.LicenseAsset_Ver" +
                    "sionCertainty, T1.LicenseAsset_VersionWorkflowInstanceID, T1.LicenseAsset_Versio" +
                    "nUpdatedBy, T1.LicenseAsset_VersionDeletedBy, T1.LicenseAsset_VersionOwnerContac" +
                    "tID, T1.LicenseAsset_VersionOwnerCompanyID, T1.LicenseAsset_VersionUpdated)\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.LicenseAssetID AS LicenseAsset_LicenseAs" +
                    "setID, \r\n            T.LicenseID AS LicenseAsset_LicenseID, \r\n            T.Asse" +
                    "tID AS LicenseAsset_AssetID, \r\n            T.ModelID AS LicenseAsset_ModelID, \r\n" +
                    "            T.Restrictions AS LicenseAsset_Restrictions, \r\n            T.Version" +
                    " AS LicenseAsset_Version, \r\n            T.VersionAntecedentID AS LicenseAsset_Ve" +
                    "rsionAntecedentID, \r\n            T.VersionCertainty AS LicenseAsset_VersionCerta" +
                    "inty, \r\n            T.VersionWorkflowInstanceID AS LicenseAsset_VersionWorkflowI" +
                    "nstanceID, \r\n            T.VersionUpdatedBy AS LicenseAsset_VersionUpdatedBy, \r\n" +
                    "            T.VersionDeletedBy AS LicenseAsset_VersionDeletedBy, \r\n            T" +
                    ".VersionOwnerContactID AS LicenseAsset_VersionOwnerContactID, \r\n            T.Ve" +
                    "rsionOwnerCompanyID AS LicenseAsset_VersionOwnerCompanyID, \r\n            T.Versi" +
                    "onUpdated AS LicenseAsset_VersionUpdated, \r\n            True AS _from0\r\n        " +
                    "FROM XODBModuleBusinessObjectsStoreContainer.X_LicenseAsset AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_LicenseAssetModelPart
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView504()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_LicenseAssetModelPart", "\r\n    SELECT VALUE -- Constructing X_LicenseAssetModelPart\r\n        [XODB.Module." +
                    "BusinessObjects.Store.X_LicenseAssetModelPart](T1.[X_LicenseAssetModelPart.Licen" +
                    "seAssetModelPartID], T1.[X_LicenseAssetModelPart.LicenseAssetID], T1.[X_LicenseA" +
                    "ssetModelPart.ModelPartID], T1.[X_LicenseAssetModelPart.Restrictions], T1.[X_Lic" +
                    "enseAssetModelPart.Version], T1.[X_LicenseAssetModelPart.VersionAntecedentID], T" +
                    "1.[X_LicenseAssetModelPart.VersionCertainty], T1.[X_LicenseAssetModelPart.Versio" +
                    "nWorkflowInstanceID], T1.[X_LicenseAssetModelPart.VersionUpdatedBy], T1.[X_Licen" +
                    "seAssetModelPart.VersionDeletedBy], T1.[X_LicenseAssetModelPart.VersionOwnerCont" +
                    "actID], T1.[X_LicenseAssetModelPart.VersionOwnerCompanyID], T1.[X_LicenseAssetMo" +
                    "delPart.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.LicenseAsse" +
                    "tModelPartID AS [X_LicenseAssetModelPart.LicenseAssetModelPartID], \r\n           " +
                    " T.LicenseAssetID AS [X_LicenseAssetModelPart.LicenseAssetID], \r\n            T.M" +
                    "odelPartID AS [X_LicenseAssetModelPart.ModelPartID], \r\n            T.Restriction" +
                    "s AS [X_LicenseAssetModelPart.Restrictions], \r\n            T.Version AS [X_Licen" +
                    "seAssetModelPart.Version], \r\n            T.VersionAntecedentID AS [X_LicenseAsse" +
                    "tModelPart.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_LicenseA" +
                    "ssetModelPart.VersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X" +
                    "_LicenseAssetModelPart.VersionWorkflowInstanceID], \r\n            T.VersionUpdate" +
                    "dBy AS [X_LicenseAssetModelPart.VersionUpdatedBy], \r\n            T.VersionDelete" +
                    "dBy AS [X_LicenseAssetModelPart.VersionDeletedBy], \r\n            T.VersionOwnerC" +
                    "ontactID AS [X_LicenseAssetModelPart.VersionOwnerContactID], \r\n            T.Ver" +
                    "sionOwnerCompanyID AS [X_LicenseAssetModelPart.VersionOwnerCompanyID], \r\n       " +
                    "     T.VersionUpdated AS [X_LicenseAssetModelPart.VersionUpdated], \r\n           " +
                    " True AS _from0\r\n        FROM XODBC.LicenseAssetModelParts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.LicenseAssetModelParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView505()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LicenseAssetModelParts", "\r\n    SELECT VALUE -- Constructing LicenseAssetModelParts\r\n        [XODB.Module.B" +
                    "usinessObjects.LicenseAssetModelPart](T1.LicenseAssetModelPart_LicenseAssetModel" +
                    "PartID, T1.LicenseAssetModelPart_LicenseAssetID, T1.LicenseAssetModelPart_ModelP" +
                    "artID, T1.LicenseAssetModelPart_Restrictions, T1.LicenseAssetModelPart_Version, " +
                    "T1.LicenseAssetModelPart_VersionAntecedentID, T1.LicenseAssetModelPart_VersionCe" +
                    "rtainty, T1.LicenseAssetModelPart_VersionWorkflowInstanceID, T1.LicenseAssetMode" +
                    "lPart_VersionUpdatedBy, T1.LicenseAssetModelPart_VersionDeletedBy, T1.LicenseAss" +
                    "etModelPart_VersionOwnerContactID, T1.LicenseAssetModelPart_VersionOwnerCompanyI" +
                    "D, T1.LicenseAssetModelPart_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n      " +
                    "      T.LicenseAssetModelPartID AS LicenseAssetModelPart_LicenseAssetModelPartID" +
                    ", \r\n            T.LicenseAssetID AS LicenseAssetModelPart_LicenseAssetID, \r\n    " +
                    "        T.ModelPartID AS LicenseAssetModelPart_ModelPartID, \r\n            T.Rest" +
                    "rictions AS LicenseAssetModelPart_Restrictions, \r\n            T.Version AS Licen" +
                    "seAssetModelPart_Version, \r\n            T.VersionAntecedentID AS LicenseAssetMod" +
                    "elPart_VersionAntecedentID, \r\n            T.VersionCertainty AS LicenseAssetMode" +
                    "lPart_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS LicenseAsse" +
                    "tModelPart_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS Licens" +
                    "eAssetModelPart_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS LicenseAss" +
                    "etModelPart_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS LicenseAs" +
                    "setModelPart_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Lic" +
                    "enseAssetModelPart_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Lice" +
                    "nseAssetModelPart_VersionUpdated, \r\n            True AS _from0\r\n        FROM XOD" +
                    "BModuleBusinessObjectsStoreContainer.X_LicenseAssetModelPart AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_LicenseHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView506()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_LicenseHistory", "\r\n    SELECT VALUE -- Constructing X_LicenseHistory\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_LicenseHistory](T1.[X_LicenseHistory.LicenseeGUID], T1.[X_Licen" +
                    "seHistory.LastLicenseID], T1.[X_LicenseHistory.LicenseHistoryEncrypted], T1.[X_L" +
                    "icenseHistory.Version], T1.[X_LicenseHistory.VersionAntecedentID], T1.[X_License" +
                    "History.VersionCertainty], T1.[X_LicenseHistory.VersionWorkflowInstanceID], T1.[" +
                    "X_LicenseHistory.VersionUpdatedBy], T1.[X_LicenseHistory.VersionDeletedBy], T1.[" +
                    "X_LicenseHistory.VersionOwnerContactID], T1.[X_LicenseHistory.VersionOwnerCompan" +
                    "yID], T1.[X_LicenseHistory.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n      " +
                    "      T.LicenseeGUID AS [X_LicenseHistory.LicenseeGUID], \r\n            T.LastLic" +
                    "enseID AS [X_LicenseHistory.LastLicenseID], \r\n            T.LicenseHistoryEncryp" +
                    "ted AS [X_LicenseHistory.LicenseHistoryEncrypted], \r\n            T.Version AS [X" +
                    "_LicenseHistory.Version], \r\n            T.VersionAntecedentID AS [X_LicenseHisto" +
                    "ry.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_LicenseHistory.V" +
                    "ersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_LicenseHistory" +
                    ".VersionWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_LicenseHisto" +
                    "ry.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_LicenseHistory.Vers" +
                    "ionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_LicenseHistory.Versio" +
                    "nOwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_LicenseHistory.Ver" +
                    "sionOwnerCompanyID], \r\n            T.VersionUpdated AS [X_LicenseHistory.Version" +
                    "Updated], \r\n            True AS _from0\r\n        FROM XODBC.LicenseHistories AS T" +
                    "\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.LicenseHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView507()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LicenseHistories", "\r\n    SELECT VALUE -- Constructing LicenseHistories\r\n        [XODB.Module.Busines" +
                    "sObjects.LicenseHistory](T1.LicenseHistory_LicenseeGUID, T1.LicenseHistory_LastL" +
                    "icenseID, T1.LicenseHistory_LicenseHistoryEncrypted, T1.LicenseHistory_Version, " +
                    "T1.LicenseHistory_VersionAntecedentID, T1.LicenseHistory_VersionCertainty, T1.Li" +
                    "censeHistory_VersionWorkflowInstanceID, T1.LicenseHistory_VersionUpdatedBy, T1.L" +
                    "icenseHistory_VersionDeletedBy, T1.LicenseHistory_VersionOwnerContactID, T1.Lice" +
                    "nseHistory_VersionOwnerCompanyID, T1.LicenseHistory_VersionUpdated)\r\n    FROM (\r" +
                    "\n        SELECT \r\n            T.LicenseeGUID AS LicenseHistory_LicenseeGUID, \r\n " +
                    "           T.LastLicenseID AS LicenseHistory_LastLicenseID, \r\n            T.Lice" +
                    "nseHistoryEncrypted AS LicenseHistory_LicenseHistoryEncrypted, \r\n            T.V" +
                    "ersion AS LicenseHistory_Version, \r\n            T.VersionAntecedentID AS License" +
                    "History_VersionAntecedentID, \r\n            T.VersionCertainty AS LicenseHistory_" +
                    "VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS LicenseHistory_Ve" +
                    "rsionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS LicenseHistory_Vers" +
                    "ionUpdatedBy, \r\n            T.VersionDeletedBy AS LicenseHistory_VersionDeletedB" +
                    "y, \r\n            T.VersionOwnerContactID AS LicenseHistory_VersionOwnerContactID" +
                    ", \r\n            T.VersionOwnerCompanyID AS LicenseHistory_VersionOwnerCompanyID," +
                    " \r\n            T.VersionUpdated AS LicenseHistory_VersionUpdated, \r\n            " +
                    "True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_LicenseHi" +
                    "story AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_MetaData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView508()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_MetaData", @"
    SELECT VALUE -- Constructing X_MetaData
        [XODB.Module.BusinessObjects.Store.X_MetaData](T1.[X_MetaData.MetaDataID], T1.[X_MetaData.MetaDataType], T1.[X_MetaData.ContentToIndex], T1.[X_MetaData.Version], T1.[X_MetaData.VersionAntecedentID], T1.[X_MetaData.VersionCertainty], T1.[X_MetaData.VersionWorkflowInstanceID], T1.[X_MetaData.VersionUpdatedBy], T1.[X_MetaData.VersionDeletedBy], T1.[X_MetaData.VersionOwnerContactID], T1.[X_MetaData.VersionOwnerCompanyID], T1.[X_MetaData.VersionUpdated])
    FROM (
        SELECT 
            T.MetaDataID AS [X_MetaData.MetaDataID], 
            T.MetaDataType AS [X_MetaData.MetaDataType], 
            T.ContentToIndex AS [X_MetaData.ContentToIndex], 
            T.Version AS [X_MetaData.Version], 
            T.VersionAntecedentID AS [X_MetaData.VersionAntecedentID], 
            T.VersionCertainty AS [X_MetaData.VersionCertainty], 
            T.VersionWorkflowInstanceID AS [X_MetaData.VersionWorkflowInstanceID], 
            T.VersionUpdatedBy AS [X_MetaData.VersionUpdatedBy], 
            T.VersionDeletedBy AS [X_MetaData.VersionDeletedBy], 
            T.VersionOwnerContactID AS [X_MetaData.VersionOwnerContactID], 
            T.VersionOwnerCompanyID AS [X_MetaData.VersionOwnerCompanyID], 
            T.VersionUpdated AS [X_MetaData.VersionUpdated], 
            True AS _from0
        FROM XODBC.MetaDatas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_MetaDataRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView509()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_MetaDataRelation", "\r\n    SELECT VALUE -- Constructing X_MetaDataRelation\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.X_MetaDataRelation](T1.[X_MetaDataRelation.MetaDataRelationID]," +
                    " T1.[X_MetaDataRelation.MetaDataID], T1.[X_MetaDataRelation.TableType], T1.[X_Me" +
                    "taDataRelation.ReferenceID], T1.[X_MetaDataRelation.Version], T1.[X_MetaDataRela" +
                    "tion.VersionAntecedentID], T1.[X_MetaDataRelation.VersionCertainty], T1.[X_MetaD" +
                    "ataRelation.VersionWorkflowInstanceID], T1.[X_MetaDataRelation.VersionUpdatedBy]" +
                    ", T1.[X_MetaDataRelation.VersionDeletedBy], T1.[X_MetaDataRelation.VersionOwnerC" +
                    "ontactID], T1.[X_MetaDataRelation.VersionOwnerCompanyID], T1.[X_MetaDataRelation" +
                    ".VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.MetaDataRelationID" +
                    " AS [X_MetaDataRelation.MetaDataRelationID], \r\n            T.MetaDataID AS [X_Me" +
                    "taDataRelation.MetaDataID], \r\n            T.TableType AS [X_MetaDataRelation.Tab" +
                    "leType], \r\n            T.ReferenceID AS [X_MetaDataRelation.ReferenceID], \r\n    " +
                    "        T.Version AS [X_MetaDataRelation.Version], \r\n            T.VersionAntece" +
                    "dentID AS [X_MetaDataRelation.VersionAntecedentID], \r\n            T.VersionCerta" +
                    "inty AS [X_MetaDataRelation.VersionCertainty], \r\n            T.VersionWorkflowIn" +
                    "stanceID AS [X_MetaDataRelation.VersionWorkflowInstanceID], \r\n            T.Vers" +
                    "ionUpdatedBy AS [X_MetaDataRelation.VersionUpdatedBy], \r\n            T.VersionDe" +
                    "letedBy AS [X_MetaDataRelation.VersionDeletedBy], \r\n            T.VersionOwnerCo" +
                    "ntactID AS [X_MetaDataRelation.VersionOwnerContactID], \r\n            T.VersionOw" +
                    "nerCompanyID AS [X_MetaDataRelation.VersionOwnerCompanyID], \r\n            T.Vers" +
                    "ionUpdated AS [X_MetaDataRelation.VersionUpdated], \r\n            True AS _from0\r" +
                    "\n        FROM XODBC.MetaDataRelations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.MetaDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView510()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.MetaDatas", @"
    SELECT VALUE -- Constructing MetaDatas
        [XODB.Module.BusinessObjects.MetaData](T1.MetaData_MetaDataID, T1.MetaData_MetaDataType, T1.MetaData_ContentToIndex, T1.MetaData_Version, T1.MetaData_VersionAntecedentID, T1.MetaData_VersionCertainty, T1.MetaData_VersionWorkflowInstanceID, T1.MetaData_VersionUpdatedBy, T1.MetaData_VersionDeletedBy, T1.MetaData_VersionOwnerContactID, T1.MetaData_VersionOwnerCompanyID, T1.MetaData_VersionUpdated)
    FROM (
        SELECT 
            T.MetaDataID AS MetaData_MetaDataID, 
            T.MetaDataType AS MetaData_MetaDataType, 
            T.ContentToIndex AS MetaData_ContentToIndex, 
            T.Version AS MetaData_Version, 
            T.VersionAntecedentID AS MetaData_VersionAntecedentID, 
            T.VersionCertainty AS MetaData_VersionCertainty, 
            T.VersionWorkflowInstanceID AS MetaData_VersionWorkflowInstanceID, 
            T.VersionUpdatedBy AS MetaData_VersionUpdatedBy, 
            T.VersionDeletedBy AS MetaData_VersionDeletedBy, 
            T.VersionOwnerContactID AS MetaData_VersionOwnerContactID, 
            T.VersionOwnerCompanyID AS MetaData_VersionOwnerCompanyID, 
            T.VersionUpdated AS MetaData_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_MetaData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.MetaDataRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView511()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.MetaDataRelations", "\r\n    SELECT VALUE -- Constructing MetaDataRelations\r\n        [XODB.Module.Busine" +
                    "ssObjects.MetaDataRelation](T1.MetaDataRelation_MetaDataRelationID, T1.MetaDataR" +
                    "elation_MetaDataID, T1.MetaDataRelation_TableType, T1.MetaDataRelation_Reference" +
                    "ID, T1.MetaDataRelation_Version, T1.MetaDataRelation_VersionAntecedentID, T1.Met" +
                    "aDataRelation_VersionCertainty, T1.MetaDataRelation_VersionWorkflowInstanceID, T" +
                    "1.MetaDataRelation_VersionUpdatedBy, T1.MetaDataRelation_VersionDeletedBy, T1.Me" +
                    "taDataRelation_VersionOwnerContactID, T1.MetaDataRelation_VersionOwnerCompanyID," +
                    " T1.MetaDataRelation_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".MetaDataRelationID AS MetaDataRelation_MetaDataRelationID, \r\n            T.Meta" +
                    "DataID AS MetaDataRelation_MetaDataID, \r\n            T.TableType AS MetaDataRela" +
                    "tion_TableType, \r\n            T.ReferenceID AS MetaDataRelation_ReferenceID, \r\n " +
                    "           T.Version AS MetaDataRelation_Version, \r\n            T.VersionAnteced" +
                    "entID AS MetaDataRelation_VersionAntecedentID, \r\n            T.VersionCertainty " +
                    "AS MetaDataRelation_VersionCertainty, \r\n            T.VersionWorkflowInstanceID " +
                    "AS MetaDataRelation_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy " +
                    "AS MetaDataRelation_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS MetaDa" +
                    "taRelation_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS MetaDataRe" +
                    "lation_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS MetaDataR" +
                    "elation_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS MetaDataRelatio" +
                    "n_VersionUpdated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessO" +
                    "bjectsStoreContainer.X_MetaDataRelation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_PrivateData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView512()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2142);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_PrivateData\r\n        [XODB.Module.BusinessO");
            viewString.Append("bjects.Store.X_PrivateData](T1.[X_PrivateData.PrivateDataID], T1.[X_PrivateData.");
            viewString.Append("UniqueID], T1.[X_PrivateData.UniqueIDSystemDataType], T1.[X_PrivateData.TableTyp");
            viewString.Append("e], T1.[X_PrivateData.ReferenceID], T1.[X_PrivateData.UserDataType], T1.[X_Priva");
            viewString.Append("teData.Value], T1.[X_PrivateData.SystemDataType], T1.[X_PrivateData.IsReadOnly],");
            viewString.Append(" T1.[X_PrivateData.IsVisible], T1.[X_PrivateData.Version], T1.[X_PrivateData.Ver");
            viewString.Append("sionAntecedentID], T1.[X_PrivateData.VersionCertainty], T1.[X_PrivateData.Versio");
            viewString.Append("nWorkflowInstanceID], T1.[X_PrivateData.VersionUpdatedBy], T1.[X_PrivateData.Ver");
            viewString.Append("sionDeletedBy], T1.[X_PrivateData.VersionOwnerContactID], T1.[X_PrivateData.Vers");
            viewString.Append("ionOwnerCompanyID], T1.[X_PrivateData.VersionUpdated])\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.PrivateDataID AS [X_PrivateData.PrivateDataID], \r\n           ");
            viewString.Append(" T.UniqueID AS [X_PrivateData.UniqueID], \r\n            T.UniqueIDSystemDataType ");
            viewString.Append("AS [X_PrivateData.UniqueIDSystemDataType], \r\n            T.TableType AS [X_Priva");
            viewString.Append("teData.TableType], \r\n            T.ReferenceID AS [X_PrivateData.ReferenceID], \r");
            viewString.Append("\n            T.UserDataType AS [X_PrivateData.UserDataType], \r\n            T.[Va");
            viewString.Append("lue] AS [X_PrivateData.Value], \r\n            T.SystemDataType AS [X_PrivateData.");
            viewString.Append("SystemDataType], \r\n            T.IsReadOnly AS [X_PrivateData.IsReadOnly], \r\n   ");
            viewString.Append("         T.IsVisible AS [X_PrivateData.IsVisible], \r\n            T.Version AS [X");
            viewString.Append("_PrivateData.Version], \r\n            T.VersionAntecedentID AS [X_PrivateData.Ver");
            viewString.Append("sionAntecedentID], \r\n            T.VersionCertainty AS [X_PrivateData.VersionCer");
            viewString.Append("tainty], \r\n            T.VersionWorkflowInstanceID AS [X_PrivateData.VersionWork");
            viewString.Append("flowInstanceID], \r\n            T.VersionUpdatedBy AS [X_PrivateData.VersionUpdat");
            viewString.Append("edBy], \r\n            T.VersionDeletedBy AS [X_PrivateData.VersionDeletedBy], \r\n ");
            viewString.Append("           T.VersionOwnerContactID AS [X_PrivateData.VersionOwnerContactID], \r\n ");
            viewString.Append("           T.VersionOwnerCompanyID AS [X_PrivateData.VersionOwnerCompanyID], \r\n ");
            viewString.Append("           T.VersionUpdated AS [X_PrivateData.VersionUpdated], \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM XODBC.PrivateDatas AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_PrivateData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.PrivateDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView513()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.PrivateDatas", "\r\n    SELECT VALUE -- Constructing PrivateDatas\r\n        [XODB.Module.BusinessObj" +
                    "ects.PrivateData](T1.PrivateData_PrivateDataID, T1.PrivateData_UniqueID, T1.Priv" +
                    "ateData_UniqueIDSystemDataType, T1.PrivateData_TableType, T1.PrivateData_Referen" +
                    "ceID, T1.PrivateData_UserDataType, T1.PrivateData_Value, T1.PrivateData_SystemDa" +
                    "taType, T1.PrivateData_IsReadOnly, T1.PrivateData_IsVisible, T1.PrivateData_Vers" +
                    "ion, T1.PrivateData_VersionAntecedentID, T1.PrivateData_VersionCertainty, T1.Pri" +
                    "vateData_VersionWorkflowInstanceID, T1.PrivateData_VersionUpdatedBy, T1.PrivateD" +
                    "ata_VersionDeletedBy, T1.PrivateData_VersionOwnerContactID, T1.PrivateData_Versi" +
                    "onOwnerCompanyID, T1.PrivateData_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n " +
                    "           T.PrivateDataID AS PrivateData_PrivateDataID, \r\n            T.UniqueI" +
                    "D AS PrivateData_UniqueID, \r\n            T.UniqueIDSystemDataType AS PrivateData" +
                    "_UniqueIDSystemDataType, \r\n            T.TableType AS PrivateData_TableType, \r\n " +
                    "           T.ReferenceID AS PrivateData_ReferenceID, \r\n            T.UserDataTyp" +
                    "e AS PrivateData_UserDataType, \r\n            T.[Value] AS PrivateData_Value, \r\n " +
                    "           T.SystemDataType AS PrivateData_SystemDataType, \r\n            T.IsRea" +
                    "dOnly AS PrivateData_IsReadOnly, \r\n            T.IsVisible AS PrivateData_IsVisi" +
                    "ble, \r\n            T.Version AS PrivateData_Version, \r\n            T.VersionAnte" +
                    "cedentID AS PrivateData_VersionAntecedentID, \r\n            T.VersionCertainty AS" +
                    " PrivateData_VersionCertainty, \r\n            T.VersionWorkflowInstanceID AS Priv" +
                    "ateData_VersionWorkflowInstanceID, \r\n            T.VersionUpdatedBy AS PrivateDa" +
                    "ta_VersionUpdatedBy, \r\n            T.VersionDeletedBy AS PrivateData_VersionDele" +
                    "tedBy, \r\n            T.VersionOwnerContactID AS PrivateData_VersionOwnerContactI" +
                    "D, \r\n            T.VersionOwnerCompanyID AS PrivateData_VersionOwnerCompanyID, \r" +
                    "\n            T.VersionUpdated AS PrivateData_VersionUpdated, \r\n            True " +
                    "AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_PrivateData AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Server
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView514()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Server", "\r\n    SELECT VALUE -- Constructing X_Server\r\n        [XODB.Module.BusinessObjects" +
                    ".Store.X_Server](T1.[X_Server.ServerID], T1.[X_Server.Hostname], T1.[X_Server.Do" +
                    "main], T1.[X_Server.IP], T1.[X_Server.ServerUniqueMachineCode1], T1.[X_Server.Se" +
                    "rverUniqueMachineCode2], T1.[X_Server.ServerUniqueMachineCode3], T1.[X_Server.Ce" +
                    "rtificate1], T1.[X_Server.Certificate2], T1.[X_Server.Version], T1.[X_Server.Ver" +
                    "sionAntecedentID], T1.[X_Server.VersionCertainty], T1.[X_Server.VersionWorkflowI" +
                    "nstanceID], T1.[X_Server.VersionUpdatedBy], T1.[X_Server.VersionDeletedBy], T1.[" +
                    "X_Server.VersionOwnerContactID], T1.[X_Server.VersionOwnerCompanyID], T1.[X_Serv" +
                    "er.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.ServerID AS [X_S" +
                    "erver.ServerID], \r\n            T.Hostname AS [X_Server.Hostname], \r\n            " +
                    "T.Domain AS [X_Server.Domain], \r\n            T.IP AS [X_Server.IP], \r\n          " +
                    "  T.ServerUniqueMachineCode1 AS [X_Server.ServerUniqueMachineCode1], \r\n         " +
                    "   T.ServerUniqueMachineCode2 AS [X_Server.ServerUniqueMachineCode2], \r\n        " +
                    "    T.ServerUniqueMachineCode3 AS [X_Server.ServerUniqueMachineCode3], \r\n       " +
                    "     T.Certificate1 AS [X_Server.Certificate1], \r\n            T.Certificate2 AS " +
                    "[X_Server.Certificate2], \r\n            T.Version AS [X_Server.Version], \r\n      " +
                    "      T.VersionAntecedentID AS [X_Server.VersionAntecedentID], \r\n            T.V" +
                    "ersionCertainty AS [X_Server.VersionCertainty], \r\n            T.VersionWorkflowI" +
                    "nstanceID AS [X_Server.VersionWorkflowInstanceID], \r\n            T.VersionUpdate" +
                    "dBy AS [X_Server.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Serve" +
                    "r.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Server.VersionO" +
                    "wnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Server.VersionOwnerC" +
                    "ompanyID], \r\n            T.VersionUpdated AS [X_Server.VersionUpdated], \r\n      " +
                    "      True AS _from0\r\n        FROM XODBC.Servers AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Servers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView515()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Servers", "\r\n    SELECT VALUE -- Constructing Servers\r\n        [XODB.Module.BusinessObjects." +
                    "Server](T1.Server_ServerID, T1.Server_Hostname, T1.Server_Domain, T1.Server_IP, " +
                    "T1.Server_ServerUniqueMachineCode1, T1.Server_ServerUniqueMachineCode2, T1.Serve" +
                    "r_ServerUniqueMachineCode3, T1.Server_Certificate1, T1.Server_Certificate2, T1.S" +
                    "erver_Version, T1.Server_VersionAntecedentID, T1.Server_VersionCertainty, T1.Ser" +
                    "ver_VersionWorkflowInstanceID, T1.Server_VersionUpdatedBy, T1.Server_VersionDele" +
                    "tedBy, T1.Server_VersionOwnerContactID, T1.Server_VersionOwnerCompanyID, T1.Serv" +
                    "er_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ServerID AS Serve" +
                    "r_ServerID, \r\n            T.Hostname AS Server_Hostname, \r\n            T.Domain " +
                    "AS Server_Domain, \r\n            T.IP AS Server_IP, \r\n            T.ServerUniqueM" +
                    "achineCode1 AS Server_ServerUniqueMachineCode1, \r\n            T.ServerUniqueMach" +
                    "ineCode2 AS Server_ServerUniqueMachineCode2, \r\n            T.ServerUniqueMachine" +
                    "Code3 AS Server_ServerUniqueMachineCode3, \r\n            T.Certificate1 AS Server" +
                    "_Certificate1, \r\n            T.Certificate2 AS Server_Certificate2, \r\n          " +
                    "  T.Version AS Server_Version, \r\n            T.VersionAntecedentID AS Server_Ver" +
                    "sionAntecedentID, \r\n            T.VersionCertainty AS Server_VersionCertainty, \r" +
                    "\n            T.VersionWorkflowInstanceID AS Server_VersionWorkflowInstanceID, \r\n" +
                    "            T.VersionUpdatedBy AS Server_VersionUpdatedBy, \r\n            T.Versi" +
                    "onDeletedBy AS Server_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS" +
                    " Server_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS Server_V" +
                    "ersionOwnerCompanyID, \r\n            T.VersionUpdated AS Server_VersionUpdated, \r" +
                    "\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContaine" +
                    "r.X_Server AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_ServerApplication
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView516()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_ServerApplication", "\r\n    SELECT VALUE -- Constructing X_ServerApplication\r\n        [XODB.Module.Busi" +
                    "nessObjects.Store.X_ServerApplication](T1.[X_ServerApplication.ServerApplication" +
                    "ID], T1.[X_ServerApplication.ServerID], T1.[X_ServerApplication.ApplicationID], " +
                    "T1.[X_ServerApplication.Version], T1.[X_ServerApplication.VersionAntecedentID], " +
                    "T1.[X_ServerApplication.VersionCertainty], T1.[X_ServerApplication.VersionWorkfl" +
                    "owInstanceID], T1.[X_ServerApplication.VersionUpdatedBy], T1.[X_ServerApplicatio" +
                    "n.VersionDeletedBy], T1.[X_ServerApplication.VersionOwnerContactID], T1.[X_Serve" +
                    "rApplication.VersionOwnerCompanyID], T1.[X_ServerApplication.VersionUpdated])\r\n " +
                    "   FROM (\r\n        SELECT \r\n            T.ServerApplicationID AS [X_ServerApplic" +
                    "ation.ServerApplicationID], \r\n            T.ServerID AS [X_ServerApplication.Ser" +
                    "verID], \r\n            T.ApplicationID AS [X_ServerApplication.ApplicationID], \r\n" +
                    "            T.Version AS [X_ServerApplication.Version], \r\n            T.VersionA" +
                    "ntecedentID AS [X_ServerApplication.VersionAntecedentID], \r\n            T.Versio" +
                    "nCertainty AS [X_ServerApplication.VersionCertainty], \r\n            T.VersionWor" +
                    "kflowInstanceID AS [X_ServerApplication.VersionWorkflowInstanceID], \r\n          " +
                    "  T.VersionUpdatedBy AS [X_ServerApplication.VersionUpdatedBy], \r\n            T." +
                    "VersionDeletedBy AS [X_ServerApplication.VersionDeletedBy], \r\n            T.Vers" +
                    "ionOwnerContactID AS [X_ServerApplication.VersionOwnerContactID], \r\n            " +
                    "T.VersionOwnerCompanyID AS [X_ServerApplication.VersionOwnerCompanyID], \r\n      " +
                    "      T.VersionUpdated AS [X_ServerApplication.VersionUpdated], \r\n            Tr" +
                    "ue AS _from0\r\n        FROM XODBC.ServerApplications AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ServerApplications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView517()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ServerApplications", "\r\n    SELECT VALUE -- Constructing ServerApplications\r\n        [XODB.Module.Busin" +
                    "essObjects.ServerApplication](T1.ServerApplication_ServerApplicationID, T1.Serve" +
                    "rApplication_ServerID, T1.ServerApplication_ApplicationID, T1.ServerApplication_" +
                    "Version, T1.ServerApplication_VersionAntecedentID, T1.ServerApplication_VersionC" +
                    "ertainty, T1.ServerApplication_VersionWorkflowInstanceID, T1.ServerApplication_V" +
                    "ersionUpdatedBy, T1.ServerApplication_VersionDeletedBy, T1.ServerApplication_Ver" +
                    "sionOwnerContactID, T1.ServerApplication_VersionOwnerCompanyID, T1.ServerApplica" +
                    "tion_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ServerApplicati" +
                    "onID AS ServerApplication_ServerApplicationID, \r\n            T.ServerID AS Serve" +
                    "rApplication_ServerID, \r\n            T.ApplicationID AS ServerApplication_Applic" +
                    "ationID, \r\n            T.Version AS ServerApplication_Version, \r\n            T.V" +
                    "ersionAntecedentID AS ServerApplication_VersionAntecedentID, \r\n            T.Ver" +
                    "sionCertainty AS ServerApplication_VersionCertainty, \r\n            T.VersionWork" +
                    "flowInstanceID AS ServerApplication_VersionWorkflowInstanceID, \r\n            T.V" +
                    "ersionUpdatedBy AS ServerApplication_VersionUpdatedBy, \r\n            T.VersionDe" +
                    "letedBy AS ServerApplication_VersionDeletedBy, \r\n            T.VersionOwnerConta" +
                    "ctID AS ServerApplication_VersionOwnerContactID, \r\n            T.VersionOwnerCom" +
                    "panyID AS ServerApplication_VersionOwnerCompanyID, \r\n            T.VersionUpdate" +
                    "d AS ServerApplication_VersionUpdated, \r\n            True AS _from0\r\n        FRO" +
                    "M XODBModuleBusinessObjectsStoreContainer.X_ServerApplication AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_Usage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView518()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_Usage", "\r\n    SELECT VALUE -- Constructing X_Usage\r\n        [XODB.Module.BusinessObjects." +
                    "Store.X_Usage](T1.[X_Usage.UsageID], T1.[X_Usage.AssetID], T1.[X_Usage.ModelID]," +
                    " T1.[X_Usage.PartID], T1.[X_Usage.DurationStart], T1.[X_Usage.DurationEnd], T1.[" +
                    "X_Usage.UnitID], T1.[X_Usage.Measurement], T1.[X_Usage.Version], T1.[X_Usage.Ver" +
                    "sionAntecedentID], T1.[X_Usage.VersionCertainty], T1.[X_Usage.VersionWorkflowIns" +
                    "tanceID], T1.[X_Usage.VersionUpdatedBy], T1.[X_Usage.VersionDeletedBy], T1.[X_Us" +
                    "age.VersionOwnerContactID], T1.[X_Usage.VersionOwnerCompanyID], T1.[X_Usage.Vers" +
                    "ionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.UsageID AS [X_Usage.Usa" +
                    "geID], \r\n            T.AssetID AS [X_Usage.AssetID], \r\n            T.ModelID AS " +
                    "[X_Usage.ModelID], \r\n            T.PartID AS [X_Usage.PartID], \r\n            T.D" +
                    "urationStart AS [X_Usage.DurationStart], \r\n            T.DurationEnd AS [X_Usage" +
                    ".DurationEnd], \r\n            T.UnitID AS [X_Usage.UnitID], \r\n            T.Measu" +
                    "rement AS [X_Usage.Measurement], \r\n            T.Version AS [X_Usage.Version], \r" +
                    "\n            T.VersionAntecedentID AS [X_Usage.VersionAntecedentID], \r\n         " +
                    "   T.VersionCertainty AS [X_Usage.VersionCertainty], \r\n            T.VersionWork" +
                    "flowInstanceID AS [X_Usage.VersionWorkflowInstanceID], \r\n            T.VersionUp" +
                    "datedBy AS [X_Usage.VersionUpdatedBy], \r\n            T.VersionDeletedBy AS [X_Us" +
                    "age.VersionDeletedBy], \r\n            T.VersionOwnerContactID AS [X_Usage.Version" +
                    "OwnerContactID], \r\n            T.VersionOwnerCompanyID AS [X_Usage.VersionOwnerC" +
                    "ompanyID], \r\n            T.VersionUpdated AS [X_Usage.VersionUpdated], \r\n       " +
                    "     True AS _from0\r\n        FROM XODBC.Usages AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.Usages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView519()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Usages", "\r\n    SELECT VALUE -- Constructing Usages\r\n        [XODB.Module.BusinessObjects.U" +
                    "sage](T1.Usage_UsageID, T1.Usage_AssetID, T1.Usage_ModelID, T1.Usage_PartID, T1." +
                    "Usage_DurationStart, T1.Usage_DurationEnd, T1.Usage_UnitID, T1.Usage_Measurement" +
                    ", T1.Usage_Version, T1.Usage_VersionAntecedentID, T1.Usage_VersionCertainty, T1." +
                    "Usage_VersionWorkflowInstanceID, T1.Usage_VersionUpdatedBy, T1.Usage_VersionDele" +
                    "tedBy, T1.Usage_VersionOwnerContactID, T1.Usage_VersionOwnerCompanyID, T1.Usage_" +
                    "VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.UsageID AS Usage_Usa" +
                    "geID, \r\n            T.AssetID AS Usage_AssetID, \r\n            T.ModelID AS Usage" +
                    "_ModelID, \r\n            T.PartID AS Usage_PartID, \r\n            T.DurationStart " +
                    "AS Usage_DurationStart, \r\n            T.DurationEnd AS Usage_DurationEnd, \r\n    " +
                    "        T.UnitID AS Usage_UnitID, \r\n            T.Measurement AS Usage_Measureme" +
                    "nt, \r\n            T.Version AS Usage_Version, \r\n            T.VersionAntecedentI" +
                    "D AS Usage_VersionAntecedentID, \r\n            T.VersionCertainty AS Usage_Versio" +
                    "nCertainty, \r\n            T.VersionWorkflowInstanceID AS Usage_VersionWorkflowIn" +
                    "stanceID, \r\n            T.VersionUpdatedBy AS Usage_VersionUpdatedBy, \r\n        " +
                    "    T.VersionDeletedBy AS Usage_VersionDeletedBy, \r\n            T.VersionOwnerCo" +
                    "ntactID AS Usage_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS" +
                    " Usage_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS Usage_VersionUpd" +
                    "ated, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreC" +
                    "ontainer.X_Usage AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_UserData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView520()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_UserData", "\r\n    SELECT VALUE -- Constructing X_UserData\r\n        [XODB.Module.BusinessObjec" +
                    "ts.Store.X_UserData](T1.[X_UserData.UserDataID], T1.[X_UserData.TableType], T1.[" +
                    "X_UserData.ReferenceID], T1.[X_UserData.UserDataType], T1.[X_UserData.SystemData" +
                    "Type], T1.[X_UserData.Value], T1.[X_UserData.Version], T1.[X_UserData.VersionAnt" +
                    "ecedentID], T1.[X_UserData.VersionCertainty], T1.[X_UserData.VersionWorkflowInst" +
                    "anceID], T1.[X_UserData.VersionUpdatedBy], T1.[X_UserData.VersionDeletedBy], T1." +
                    "[X_UserData.VersionOwnerContactID], T1.[X_UserData.VersionOwnerCompanyID], T1.[X" +
                    "_UserData.VersionUpdated])\r\n    FROM (\r\n        SELECT \r\n            T.UserDataI" +
                    "D AS [X_UserData.UserDataID], \r\n            T.TableType AS [X_UserData.TableType" +
                    "], \r\n            T.ReferenceID AS [X_UserData.ReferenceID], \r\n            T.User" +
                    "DataType AS [X_UserData.UserDataType], \r\n            T.SystemDataType AS [X_User" +
                    "Data.SystemDataType], \r\n            T.[Value] AS [X_UserData.Value], \r\n         " +
                    "   T.Version AS [X_UserData.Version], \r\n            T.VersionAntecedentID AS [X_" +
                    "UserData.VersionAntecedentID], \r\n            T.VersionCertainty AS [X_UserData.V" +
                    "ersionCertainty], \r\n            T.VersionWorkflowInstanceID AS [X_UserData.Versi" +
                    "onWorkflowInstanceID], \r\n            T.VersionUpdatedBy AS [X_UserData.VersionUp" +
                    "datedBy], \r\n            T.VersionDeletedBy AS [X_UserData.VersionDeletedBy], \r\n " +
                    "           T.VersionOwnerContactID AS [X_UserData.VersionOwnerContactID], \r\n    " +
                    "        T.VersionOwnerCompanyID AS [X_UserData.VersionOwnerCompanyID], \r\n       " +
                    "     T.VersionUpdated AS [X_UserData.VersionUpdated], \r\n            True AS _fro" +
                    "m0\r\n        FROM XODBC.UserDatas AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.UserDatas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView521()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.UserDatas", "\r\n    SELECT VALUE -- Constructing UserDatas\r\n        [XODB.Module.BusinessObject" +
                    "s.UserData](T1.UserData_UserDataID, T1.UserData_TableType, T1.UserData_Reference" +
                    "ID, T1.UserData_UserDataType, T1.UserData_SystemDataType, T1.UserData_Value, T1." +
                    "UserData_Version, T1.UserData_VersionAntecedentID, T1.UserData_VersionCertainty," +
                    " T1.UserData_VersionWorkflowInstanceID, T1.UserData_VersionUpdatedBy, T1.UserDat" +
                    "a_VersionDeletedBy, T1.UserData_VersionOwnerContactID, T1.UserData_VersionOwnerC" +
                    "ompanyID, T1.UserData_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            " +
                    "T.UserDataID AS UserData_UserDataID, \r\n            T.TableType AS UserData_Table" +
                    "Type, \r\n            T.ReferenceID AS UserData_ReferenceID, \r\n            T.UserD" +
                    "ataType AS UserData_UserDataType, \r\n            T.SystemDataType AS UserData_Sys" +
                    "temDataType, \r\n            T.[Value] AS UserData_Value, \r\n            T.Version " +
                    "AS UserData_Version, \r\n            T.VersionAntecedentID AS UserData_VersionAnte" +
                    "cedentID, \r\n            T.VersionCertainty AS UserData_VersionCertainty, \r\n     " +
                    "       T.VersionWorkflowInstanceID AS UserData_VersionWorkflowInstanceID, \r\n    " +
                    "        T.VersionUpdatedBy AS UserData_VersionUpdatedBy, \r\n            T.Version" +
                    "DeletedBy AS UserData_VersionDeletedBy, \r\n            T.VersionOwnerContactID AS" +
                    " UserData_VersionOwnerContactID, \r\n            T.VersionOwnerCompanyID AS UserDa" +
                    "ta_VersionOwnerCompanyID, \r\n            T.VersionUpdated AS UserData_VersionUpda" +
                    "ted, \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreCo" +
                    "ntainer.X_UserData AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.DefinitionIdentityTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView522()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.DefinitionIdentityTable", @"
    SELECT VALUE -- Constructing DefinitionIdentityTable
        [XODB.Module.BusinessObjects.Store.DefinitionIdentityTable](T1.DefinitionIdentityTable_SurrogateIdentityId, T1.DefinitionIdentityTable_DefinitionIdentityHash, T1.DefinitionIdentityTable_DefinitionIdentityAnyRevisionHash, T1.DefinitionIdentityTable_Name, T1.DefinitionIdentityTable_Package, T1.DefinitionIdentityTable_Build, T1.DefinitionIdentityTable_Major, T1.DefinitionIdentityTable_Minor, T1.DefinitionIdentityTable_Revision)
    FROM (
        SELECT 
            T.SurrogateIdentityId AS DefinitionIdentityTable_SurrogateIdentityId, 
            T.DefinitionIdentityHash AS DefinitionIdentityTable_DefinitionIdentityHash, 
            T.DefinitionIdentityAnyRevisionHash AS DefinitionIdentityTable_DefinitionIdentityAnyRevisionHash, 
            T.Name AS DefinitionIdentityTable_Name, 
            T.Package AS DefinitionIdentityTable_Package, 
            T.Build AS DefinitionIdentityTable_Build, 
            T.Major AS DefinitionIdentityTable_Major, 
            T.Minor AS DefinitionIdentityTable_Minor, 
            T.Revision AS DefinitionIdentityTable_Revision, 
            True AS _from0
        FROM XODBC.DefinitionIdentityTables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DefinitionIdentityTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView523()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DefinitionIdentityTables", @"
    SELECT VALUE -- Constructing DefinitionIdentityTables
        [XODB.Module.BusinessObjects.DefinitionIdentityTable](T1.DefinitionIdentityTable_SurrogateIdentityId, T1.DefinitionIdentityTable_DefinitionIdentityHash, T1.DefinitionIdentityTable_DefinitionIdentityAnyRevisionHash, T1.DefinitionIdentityTable_Name, T1.DefinitionIdentityTable_Package, T1.DefinitionIdentityTable_Build, T1.DefinitionIdentityTable_Major, T1.DefinitionIdentityTable_Minor, T1.DefinitionIdentityTable_Revision)
    FROM (
        SELECT 
            T.SurrogateIdentityId AS DefinitionIdentityTable_SurrogateIdentityId, 
            T.DefinitionIdentityHash AS DefinitionIdentityTable_DefinitionIdentityHash, 
            T.DefinitionIdentityAnyRevisionHash AS DefinitionIdentityTable_DefinitionIdentityAnyRevisionHash, 
            T.Name AS DefinitionIdentityTable_Name, 
            T.Package AS DefinitionIdentityTable_Package, 
            T.Build AS DefinitionIdentityTable_Build, 
            T.Major AS DefinitionIdentityTable_Major, 
            T.Minor AS DefinitionIdentityTable_Minor, 
            T.Revision AS DefinitionIdentityTable_Revision, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.DefinitionIdentityTable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.IdentityOwnerTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView524()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.IdentityOwnerTable", @"
    SELECT VALUE -- Constructing IdentityOwnerTable
        [XODB.Module.BusinessObjects.Store.IdentityOwnerTable](T1.IdentityOwnerTable_SurrogateIdentityId, T1.IdentityOwnerTable_SurrogateLockOwnerId)
    FROM (
        SELECT 
            T.SurrogateIdentityId AS IdentityOwnerTable_SurrogateIdentityId, 
            T.SurrogateLockOwnerId AS IdentityOwnerTable_SurrogateLockOwnerId, 
            True AS _from0
        FROM XODBC.IdentityOwnerTables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.IdentityOwnerTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView525()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.IdentityOwnerTables", @"
    SELECT VALUE -- Constructing IdentityOwnerTables
        [XODB.Module.BusinessObjects.IdentityOwnerTable](T1.IdentityOwnerTable_SurrogateIdentityId, T1.IdentityOwnerTable_SurrogateLockOwnerId)
    FROM (
        SELECT 
            T.SurrogateIdentityId AS IdentityOwnerTable_SurrogateIdentityId, 
            T.SurrogateLockOwnerId AS IdentityOwnerTable_SurrogateLockOwnerId, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.IdentityOwnerTable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.InstanceMetadataChangesTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView526()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.InstanceMetadataChangesTable", @"
    SELECT VALUE -- Constructing InstanceMetadataChangesTable
        [XODB.Module.BusinessObjects.Store.InstanceMetadataChangesTable](T1.InstanceMetadataChangesTable_SurrogateInstanceId, T1.InstanceMetadataChangesTable_ChangeTime, T1.InstanceMetadataChangesTable_EncodingOption, T1.InstanceMetadataChangesTable_Change)
    FROM (
        SELECT 
            T.SurrogateInstanceId AS InstanceMetadataChangesTable_SurrogateInstanceId, 
            T.ChangeTime AS InstanceMetadataChangesTable_ChangeTime, 
            T.EncodingOption AS InstanceMetadataChangesTable_EncodingOption, 
            T.Change AS InstanceMetadataChangesTable_Change, 
            True AS _from0
        FROM XODBC.InstanceMetadataChangesTables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.InstanceMetadataChangesTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView527()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.InstanceMetadataChangesTables", @"
    SELECT VALUE -- Constructing InstanceMetadataChangesTables
        [XODB.Module.BusinessObjects.InstanceMetadataChangesTable](T1.InstanceMetadataChangesTable_SurrogateInstanceId, T1.InstanceMetadataChangesTable_ChangeTime, T1.InstanceMetadataChangesTable_EncodingOption, T1.InstanceMetadataChangesTable_Change)
    FROM (
        SELECT 
            T.SurrogateInstanceId AS InstanceMetadataChangesTable_SurrogateInstanceId, 
            T.ChangeTime AS InstanceMetadataChangesTable_ChangeTime, 
            T.EncodingOption AS InstanceMetadataChangesTable_EncodingOption, 
            T.Change AS InstanceMetadataChangesTable_Change, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.InstanceMetadataChangesTable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.InstancePromotedPropertiesTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView528()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4133);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InstancePromotedPropertiesTable\r\n        [XOD");
            viewString.Append("B.Module.BusinessObjects.Store.InstancePromotedPropertiesTable](T1.InstancePromo");
            viewString.Append("tedPropertiesTable_SurrogateInstanceId, T1.InstancePromotedPropertiesTable_Promo");
            viewString.Append("tionName, T1.InstancePromotedPropertiesTable_Value33, T1.InstancePromotedPropert");
            viewString.Append("iesTable_Value34, T1.InstancePromotedPropertiesTable_Value35, T1.InstancePromote");
            viewString.Append("dPropertiesTable_Value36, T1.InstancePromotedPropertiesTable_Value37, T1.Instanc");
            viewString.Append("ePromotedPropertiesTable_Value38, T1.InstancePromotedPropertiesTable_Value39, T1");
            viewString.Append(".InstancePromotedPropertiesTable_Value40, T1.InstancePromotedPropertiesTable_Val");
            viewString.Append("ue41, T1.InstancePromotedPropertiesTable_Value42, T1.InstancePromotedPropertiesT");
            viewString.Append("able_Value43, T1.InstancePromotedPropertiesTable_Value44, T1.InstancePromotedPro");
            viewString.Append("pertiesTable_Value45, T1.InstancePromotedPropertiesTable_Value46, T1.InstancePro");
            viewString.Append("motedPropertiesTable_Value47, T1.InstancePromotedPropertiesTable_Value48, T1.Ins");
            viewString.Append("tancePromotedPropertiesTable_Value49, T1.InstancePromotedPropertiesTable_Value50");
            viewString.Append(", T1.InstancePromotedPropertiesTable_Value51, T1.InstancePromotedPropertiesTable");
            viewString.Append("_Value52, T1.InstancePromotedPropertiesTable_Value53, T1.InstancePromotedPropert");
            viewString.Append("iesTable_Value54, T1.InstancePromotedPropertiesTable_Value55, T1.InstancePromote");
            viewString.Append("dPropertiesTable_Value56, T1.InstancePromotedPropertiesTable_Value57, T1.Instanc");
            viewString.Append("ePromotedPropertiesTable_Value58, T1.InstancePromotedPropertiesTable_Value59, T1");
            viewString.Append(".InstancePromotedPropertiesTable_Value60, T1.InstancePromotedPropertiesTable_Val");
            viewString.Append("ue61, T1.InstancePromotedPropertiesTable_Value62, T1.InstancePromotedPropertiesT");
            viewString.Append("able_Value63, T1.InstancePromotedPropertiesTable_Value64)\r\n    FROM (\r\n        S");
            viewString.Append("ELECT \r\n            T.SurrogateInstanceId AS InstancePromotedPropertiesTable_Sur");
            viewString.Append("rogateInstanceId, \r\n            T.PromotionName AS InstancePromotedPropertiesTab");
            viewString.Append("le_PromotionName, \r\n            T.Value33 AS InstancePromotedPropertiesTable_Val");
            viewString.Append("ue33, \r\n            T.Value34 AS InstancePromotedPropertiesTable_Value34, \r\n    ");
            viewString.Append("        T.Value35 AS InstancePromotedPropertiesTable_Value35, \r\n            T.Va");
            viewString.Append("lue36 AS InstancePromotedPropertiesTable_Value36, \r\n            T.Value37 AS Ins");
            viewString.Append("tancePromotedPropertiesTable_Value37, \r\n            T.Value38 AS InstancePromote");
            viewString.Append("dPropertiesTable_Value38, \r\n            T.Value39 AS InstancePromotedPropertiesT");
            viewString.Append("able_Value39, \r\n            T.Value40 AS InstancePromotedPropertiesTable_Value40");
            viewString.Append(", \r\n            T.Value41 AS InstancePromotedPropertiesTable_Value41, \r\n        ");
            viewString.Append("    T.Value42 AS InstancePromotedPropertiesTable_Value42, \r\n            T.Value4");
            viewString.Append("3 AS InstancePromotedPropertiesTable_Value43, \r\n            T.Value44 AS Instanc");
            viewString.Append("ePromotedPropertiesTable_Value44, \r\n            T.Value45 AS InstancePromotedPro");
            viewString.Append("pertiesTable_Value45, \r\n            T.Value46 AS InstancePromotedPropertiesTable");
            viewString.Append("_Value46, \r\n            T.Value47 AS InstancePromotedPropertiesTable_Value47, \r\n");
            viewString.Append("            T.Value48 AS InstancePromotedPropertiesTable_Value48, \r\n            ");
            viewString.Append("T.Value49 AS InstancePromotedPropertiesTable_Value49, \r\n            T.Value50 AS");
            viewString.Append(" InstancePromotedPropertiesTable_Value50, \r\n            T.Value51 AS InstancePro");
            viewString.Append("motedPropertiesTable_Value51, \r\n            T.Value52 AS InstancePromotedPropert");
            viewString.Append("iesTable_Value52, \r\n            T.Value53 AS InstancePromotedPropertiesTable_Val");
            viewString.Append("ue53, \r\n            T.Value54 AS InstancePromotedPropertiesTable_Value54, \r\n    ");
            viewString.Append("        T.Value55 AS InstancePromotedPropertiesTable_Value55, \r\n            T.Va");
            viewString.Append("lue56 AS InstancePromotedPropertiesTable_Value56, \r\n            T.Value57 AS Ins");
            viewString.Append("tancePromotedPropertiesTable_Value57, \r\n            T.Value58 AS InstancePromote");
            viewString.Append("dPropertiesTable_Value58, \r\n            T.Value59 AS InstancePromotedPropertiesT");
            viewString.Append("able_Value59, \r\n            T.Value60 AS InstancePromotedPropertiesTable_Value60");
            viewString.Append(", \r\n            T.Value61 AS InstancePromotedPropertiesTable_Value61, \r\n        ");
            viewString.Append("    T.Value62 AS InstancePromotedPropertiesTable_Value62, \r\n            T.Value6");
            viewString.Append("3 AS InstancePromotedPropertiesTable_Value63, \r\n            T.Value64 AS Instanc");
            viewString.Append("ePromotedPropertiesTable_Value64, \r\n            True AS _from0\r\n        FROM XOD");
            viewString.Append("BC.InstancePromotedPropertiesTables AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.InstancePromotedPropertiesTable", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.InstancePromotedPropertiesTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView529()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4161);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InstancePromotedPropertiesTables\r\n        [XO");
            viewString.Append("DB.Module.BusinessObjects.InstancePromotedPropertiesTable](T1.InstancePromotedPr");
            viewString.Append("opertiesTable_SurrogateInstanceId, T1.InstancePromotedPropertiesTable_PromotionN");
            viewString.Append("ame, T1.InstancePromotedPropertiesTable_Value33, T1.InstancePromotedPropertiesTa");
            viewString.Append("ble_Value34, T1.InstancePromotedPropertiesTable_Value35, T1.InstancePromotedProp");
            viewString.Append("ertiesTable_Value36, T1.InstancePromotedPropertiesTable_Value37, T1.InstanceProm");
            viewString.Append("otedPropertiesTable_Value38, T1.InstancePromotedPropertiesTable_Value39, T1.Inst");
            viewString.Append("ancePromotedPropertiesTable_Value40, T1.InstancePromotedPropertiesTable_Value41,");
            viewString.Append(" T1.InstancePromotedPropertiesTable_Value42, T1.InstancePromotedPropertiesTable_");
            viewString.Append("Value43, T1.InstancePromotedPropertiesTable_Value44, T1.InstancePromotedProperti");
            viewString.Append("esTable_Value45, T1.InstancePromotedPropertiesTable_Value46, T1.InstancePromoted");
            viewString.Append("PropertiesTable_Value47, T1.InstancePromotedPropertiesTable_Value48, T1.Instance");
            viewString.Append("PromotedPropertiesTable_Value49, T1.InstancePromotedPropertiesTable_Value50, T1.");
            viewString.Append("InstancePromotedPropertiesTable_Value51, T1.InstancePromotedPropertiesTable_Valu");
            viewString.Append("e52, T1.InstancePromotedPropertiesTable_Value53, T1.InstancePromotedPropertiesTa");
            viewString.Append("ble_Value54, T1.InstancePromotedPropertiesTable_Value55, T1.InstancePromotedProp");
            viewString.Append("ertiesTable_Value56, T1.InstancePromotedPropertiesTable_Value57, T1.InstanceProm");
            viewString.Append("otedPropertiesTable_Value58, T1.InstancePromotedPropertiesTable_Value59, T1.Inst");
            viewString.Append("ancePromotedPropertiesTable_Value60, T1.InstancePromotedPropertiesTable_Value61,");
            viewString.Append(" T1.InstancePromotedPropertiesTable_Value62, T1.InstancePromotedPropertiesTable_");
            viewString.Append("Value63, T1.InstancePromotedPropertiesTable_Value64)\r\n    FROM (\r\n        SELECT");
            viewString.Append(" \r\n            T.SurrogateInstanceId AS InstancePromotedPropertiesTable_Surrogat");
            viewString.Append("eInstanceId, \r\n            T.PromotionName AS InstancePromotedPropertiesTable_Pr");
            viewString.Append("omotionName, \r\n            T.Value33 AS InstancePromotedPropertiesTable_Value33,");
            viewString.Append(" \r\n            T.Value34 AS InstancePromotedPropertiesTable_Value34, \r\n         ");
            viewString.Append("   T.Value35 AS InstancePromotedPropertiesTable_Value35, \r\n            T.Value36");
            viewString.Append(" AS InstancePromotedPropertiesTable_Value36, \r\n            T.Value37 AS Instance");
            viewString.Append("PromotedPropertiesTable_Value37, \r\n            T.Value38 AS InstancePromotedProp");
            viewString.Append("ertiesTable_Value38, \r\n            T.Value39 AS InstancePromotedPropertiesTable_");
            viewString.Append("Value39, \r\n            T.Value40 AS InstancePromotedPropertiesTable_Value40, \r\n ");
            viewString.Append("           T.Value41 AS InstancePromotedPropertiesTable_Value41, \r\n            T");
            viewString.Append(".Value42 AS InstancePromotedPropertiesTable_Value42, \r\n            T.Value43 AS ");
            viewString.Append("InstancePromotedPropertiesTable_Value43, \r\n            T.Value44 AS InstanceProm");
            viewString.Append("otedPropertiesTable_Value44, \r\n            T.Value45 AS InstancePromotedProperti");
            viewString.Append("esTable_Value45, \r\n            T.Value46 AS InstancePromotedPropertiesTable_Valu");
            viewString.Append("e46, \r\n            T.Value47 AS InstancePromotedPropertiesTable_Value47, \r\n     ");
            viewString.Append("       T.Value48 AS InstancePromotedPropertiesTable_Value48, \r\n            T.Val");
            viewString.Append("ue49 AS InstancePromotedPropertiesTable_Value49, \r\n            T.Value50 AS Inst");
            viewString.Append("ancePromotedPropertiesTable_Value50, \r\n            T.Value51 AS InstancePromoted");
            viewString.Append("PropertiesTable_Value51, \r\n            T.Value52 AS InstancePromotedPropertiesTa");
            viewString.Append("ble_Value52, \r\n            T.Value53 AS InstancePromotedPropertiesTable_Value53,");
            viewString.Append(" \r\n            T.Value54 AS InstancePromotedPropertiesTable_Value54, \r\n         ");
            viewString.Append("   T.Value55 AS InstancePromotedPropertiesTable_Value55, \r\n            T.Value56");
            viewString.Append(" AS InstancePromotedPropertiesTable_Value56, \r\n            T.Value57 AS Instance");
            viewString.Append("PromotedPropertiesTable_Value57, \r\n            T.Value58 AS InstancePromotedProp");
            viewString.Append("ertiesTable_Value58, \r\n            T.Value59 AS InstancePromotedPropertiesTable_");
            viewString.Append("Value59, \r\n            T.Value60 AS InstancePromotedPropertiesTable_Value60, \r\n ");
            viewString.Append("           T.Value61 AS InstancePromotedPropertiesTable_Value61, \r\n            T");
            viewString.Append(".Value62 AS InstancePromotedPropertiesTable_Value62, \r\n            T.Value63 AS ");
            viewString.Append("InstancePromotedPropertiesTable_Value63, \r\n            T.Value64 AS InstanceProm");
            viewString.Append("otedPropertiesTable_Value64, \r\n            True AS _from0\r\n        FROM XODBModu");
            viewString.Append("leBusinessObjectsStoreContainer.InstancePromotedPropertiesTable AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.InstancePromotedPropertiesTables", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.InstancesTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView530()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3007);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InstancesTable\r\n        [XODB.Module.Business");
            viewString.Append("Objects.Store.InstancesTable](T1.InstancesTable_Id, T1.InstancesTable_SurrogateI");
            viewString.Append("nstanceId, T1.InstancesTable_SurrogateLockOwnerId, T1.InstancesTable_PrimitiveDa");
            viewString.Append("taProperties, T1.InstancesTable_ComplexDataProperties, T1.InstancesTable_WriteOn");
            viewString.Append("lyPrimitiveDataProperties, T1.InstancesTable_WriteOnlyComplexDataProperties, T1.");
            viewString.Append("InstancesTable_MetadataProperties, T1.InstancesTable_DataEncodingOption, T1.Inst");
            viewString.Append("ancesTable_MetadataEncodingOption, T1.InstancesTable_Version, T1.InstancesTable_");
            viewString.Append("PendingTimer, T1.InstancesTable_CreationTime, T1.InstancesTable_LastUpdated, T1.");
            viewString.Append("InstancesTable_WorkflowHostType, T1.InstancesTable_ServiceDeploymentId, T1.Insta");
            viewString.Append("ncesTable_SuspensionExceptionName, T1.InstancesTable_SuspensionReason, T1.Instan");
            viewString.Append("cesTable_BlockingBookmarks, T1.InstancesTable_LastMachineRunOn, T1.InstancesTabl");
            viewString.Append("e_ExecutionStatus, T1.InstancesTable_IsInitialized, T1.InstancesTable_IsSuspende");
            viewString.Append("d, T1.InstancesTable_IsReadyToRun, T1.InstancesTable_IsCompleted, T1.InstancesTa");
            viewString.Append("ble_SurrogateIdentityId)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS Insta");
            viewString.Append("ncesTable_Id, \r\n            T.SurrogateInstanceId AS InstancesTable_SurrogateIns");
            viewString.Append("tanceId, \r\n            T.SurrogateLockOwnerId AS InstancesTable_SurrogateLockOwn");
            viewString.Append("erId, \r\n            T.PrimitiveDataProperties AS InstancesTable_PrimitiveDataPro");
            viewString.Append("perties, \r\n            T.ComplexDataProperties AS InstancesTable_ComplexDataProp");
            viewString.Append("erties, \r\n            T.WriteOnlyPrimitiveDataProperties AS InstancesTable_Write");
            viewString.Append("OnlyPrimitiveDataProperties, \r\n            T.WriteOnlyComplexDataProperties AS I");
            viewString.Append("nstancesTable_WriteOnlyComplexDataProperties, \r\n            T.MetadataProperties");
            viewString.Append(" AS InstancesTable_MetadataProperties, \r\n            T.DataEncodingOption AS Ins");
            viewString.Append("tancesTable_DataEncodingOption, \r\n            T.MetadataEncodingOption AS Instan");
            viewString.Append("cesTable_MetadataEncodingOption, \r\n            T.Version AS InstancesTable_Versi");
            viewString.Append("on, \r\n            T.PendingTimer AS InstancesTable_PendingTimer, \r\n            T");
            viewString.Append(".CreationTime AS InstancesTable_CreationTime, \r\n            T.LastUpdated AS Ins");
            viewString.Append("tancesTable_LastUpdated, \r\n            T.WorkflowHostType AS InstancesTable_Work");
            viewString.Append("flowHostType, \r\n            T.ServiceDeploymentId AS InstancesTable_ServiceDeplo");
            viewString.Append("ymentId, \r\n            T.SuspensionExceptionName AS InstancesTable_SuspensionExc");
            viewString.Append("eptionName, \r\n            T.SuspensionReason AS InstancesTable_SuspensionReason,");
            viewString.Append(" \r\n            T.BlockingBookmarks AS InstancesTable_BlockingBookmarks, \r\n      ");
            viewString.Append("      T.LastMachineRunOn AS InstancesTable_LastMachineRunOn, \r\n            T.Exe");
            viewString.Append("cutionStatus AS InstancesTable_ExecutionStatus, \r\n            T.IsInitialized AS");
            viewString.Append(" InstancesTable_IsInitialized, \r\n            T.IsSuspended AS InstancesTable_IsS");
            viewString.Append("uspended, \r\n            T.IsReadyToRun AS InstancesTable_IsReadyToRun, \r\n       ");
            viewString.Append("     T.IsCompleted AS InstancesTable_IsCompleted, \r\n            T.SurrogateIdent");
            viewString.Append("ityId AS InstancesTable_SurrogateIdentityId, \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM XODBC.InstancesTables AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.InstancesTable", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.InstancesTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView531()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3035);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InstancesTables\r\n        [XODB.Module.Busines");
            viewString.Append("sObjects.InstancesTable](T1.InstancesTable_Id, T1.InstancesTable_SurrogateInstan");
            viewString.Append("ceId, T1.InstancesTable_SurrogateLockOwnerId, T1.InstancesTable_PrimitiveDataPro");
            viewString.Append("perties, T1.InstancesTable_ComplexDataProperties, T1.InstancesTable_WriteOnlyPri");
            viewString.Append("mitiveDataProperties, T1.InstancesTable_WriteOnlyComplexDataProperties, T1.Insta");
            viewString.Append("ncesTable_MetadataProperties, T1.InstancesTable_DataEncodingOption, T1.Instances");
            viewString.Append("Table_MetadataEncodingOption, T1.InstancesTable_Version, T1.InstancesTable_Pendi");
            viewString.Append("ngTimer, T1.InstancesTable_CreationTime, T1.InstancesTable_LastUpdated, T1.Insta");
            viewString.Append("ncesTable_WorkflowHostType, T1.InstancesTable_ServiceDeploymentId, T1.InstancesT");
            viewString.Append("able_SuspensionExceptionName, T1.InstancesTable_SuspensionReason, T1.InstancesTa");
            viewString.Append("ble_BlockingBookmarks, T1.InstancesTable_LastMachineRunOn, T1.InstancesTable_Exe");
            viewString.Append("cutionStatus, T1.InstancesTable_IsInitialized, T1.InstancesTable_IsSuspended, T1");
            viewString.Append(".InstancesTable_IsReadyToRun, T1.InstancesTable_IsCompleted, T1.InstancesTable_S");
            viewString.Append("urrogateIdentityId)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS InstancesT");
            viewString.Append("able_Id, \r\n            T.SurrogateInstanceId AS InstancesTable_SurrogateInstance");
            viewString.Append("Id, \r\n            T.SurrogateLockOwnerId AS InstancesTable_SurrogateLockOwnerId,");
            viewString.Append(" \r\n            T.PrimitiveDataProperties AS InstancesTable_PrimitiveDataProperti");
            viewString.Append("es, \r\n            T.ComplexDataProperties AS InstancesTable_ComplexDataPropertie");
            viewString.Append("s, \r\n            T.WriteOnlyPrimitiveDataProperties AS InstancesTable_WriteOnlyP");
            viewString.Append("rimitiveDataProperties, \r\n            T.WriteOnlyComplexDataProperties AS Instan");
            viewString.Append("cesTable_WriteOnlyComplexDataProperties, \r\n            T.MetadataProperties AS I");
            viewString.Append("nstancesTable_MetadataProperties, \r\n            T.DataEncodingOption AS Instance");
            viewString.Append("sTable_DataEncodingOption, \r\n            T.MetadataEncodingOption AS InstancesTa");
            viewString.Append("ble_MetadataEncodingOption, \r\n            T.Version AS InstancesTable_Version, \r");
            viewString.Append("\n            T.PendingTimer AS InstancesTable_PendingTimer, \r\n            T.Crea");
            viewString.Append("tionTime AS InstancesTable_CreationTime, \r\n            T.LastUpdated AS Instance");
            viewString.Append("sTable_LastUpdated, \r\n            T.WorkflowHostType AS InstancesTable_WorkflowH");
            viewString.Append("ostType, \r\n            T.ServiceDeploymentId AS InstancesTable_ServiceDeployment");
            viewString.Append("Id, \r\n            T.SuspensionExceptionName AS InstancesTable_SuspensionExceptio");
            viewString.Append("nName, \r\n            T.SuspensionReason AS InstancesTable_SuspensionReason, \r\n  ");
            viewString.Append("          T.BlockingBookmarks AS InstancesTable_BlockingBookmarks, \r\n           ");
            viewString.Append(" T.LastMachineRunOn AS InstancesTable_LastMachineRunOn, \r\n            T.Executio");
            viewString.Append("nStatus AS InstancesTable_ExecutionStatus, \r\n            T.IsInitialized AS Inst");
            viewString.Append("ancesTable_IsInitialized, \r\n            T.IsSuspended AS InstancesTable_IsSuspen");
            viewString.Append("ded, \r\n            T.IsReadyToRun AS InstancesTable_IsReadyToRun, \r\n            ");
            viewString.Append("T.IsCompleted AS InstancesTable_IsCompleted, \r\n            T.SurrogateIdentityId");
            viewString.Append(" AS InstancesTable_SurrogateIdentityId, \r\n            True AS _from0\r\n        FR");
            viewString.Append("OM XODBModuleBusinessObjectsStoreContainer.InstancesTable AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.InstancesTables", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.KeysTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView532()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.KeysTable", @"
    SELECT VALUE -- Constructing KeysTable
        [XODB.Module.BusinessObjects.Store.KeysTable](T1.KeysTable_Id, T1.KeysTable_SurrogateKeyId, T1.KeysTable_SurrogateInstanceId, T1.KeysTable_EncodingOption, T1.KeysTable_Properties, T1.KeysTable_IsAssociated)
    FROM (
        SELECT 
            T.Id AS KeysTable_Id, 
            T.SurrogateKeyId AS KeysTable_SurrogateKeyId, 
            T.SurrogateInstanceId AS KeysTable_SurrogateInstanceId, 
            T.EncodingOption AS KeysTable_EncodingOption, 
            T.Properties AS KeysTable_Properties, 
            T.IsAssociated AS KeysTable_IsAssociated, 
            True AS _from0
        FROM XODBC.KeysTables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.KeysTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView533()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.KeysTables", @"
    SELECT VALUE -- Constructing KeysTables
        [XODB.Module.BusinessObjects.KeysTable](T1.KeysTable_Id, T1.KeysTable_SurrogateKeyId, T1.KeysTable_SurrogateInstanceId, T1.KeysTable_EncodingOption, T1.KeysTable_Properties, T1.KeysTable_IsAssociated)
    FROM (
        SELECT 
            T.Id AS KeysTable_Id, 
            T.SurrogateKeyId AS KeysTable_SurrogateKeyId, 
            T.SurrogateInstanceId AS KeysTable_SurrogateInstanceId, 
            T.EncodingOption AS KeysTable_EncodingOption, 
            T.Properties AS KeysTable_Properties, 
            T.IsAssociated AS KeysTable_IsAssociated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.KeysTable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.LockOwnersTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView534()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.LockOwnersTable", "\r\n    SELECT VALUE -- Constructing LockOwnersTable\r\n        [XODB.Module.Business" +
                    "Objects.Store.LockOwnersTable](T1.LockOwnersTable_Id, T1.LockOwnersTable_Surroga" +
                    "teLockOwnerId, T1.LockOwnersTable_LockExpiration, T1.LockOwnersTable_WorkflowHos" +
                    "tType, T1.LockOwnersTable_MachineName, T1.LockOwnersTable_EnqueueCommand, T1.Loc" +
                    "kOwnersTable_DeletesInstanceOnCompletion, T1.LockOwnersTable_PrimitiveLockOwnerD" +
                    "ata, T1.LockOwnersTable_ComplexLockOwnerData, T1.LockOwnersTable_WriteOnlyPrimit" +
                    "iveLockOwnerData, T1.LockOwnersTable_WriteOnlyComplexLockOwnerData, T1.LockOwner" +
                    "sTable_EncodingOption, T1.LockOwnersTable_WorkflowIdentityFilter)\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.Id AS LockOwnersTable_Id, \r\n            T.Surrogat" +
                    "eLockOwnerId AS LockOwnersTable_SurrogateLockOwnerId, \r\n            T.LockExpira" +
                    "tion AS LockOwnersTable_LockExpiration, \r\n            T.WorkflowHostType AS Lock" +
                    "OwnersTable_WorkflowHostType, \r\n            T.MachineName AS LockOwnersTable_Mac" +
                    "hineName, \r\n            T.EnqueueCommand AS LockOwnersTable_EnqueueCommand, \r\n  " +
                    "          T.DeletesInstanceOnCompletion AS LockOwnersTable_DeletesInstanceOnComp" +
                    "letion, \r\n            T.PrimitiveLockOwnerData AS LockOwnersTable_PrimitiveLockO" +
                    "wnerData, \r\n            T.ComplexLockOwnerData AS LockOwnersTable_ComplexLockOwn" +
                    "erData, \r\n            T.WriteOnlyPrimitiveLockOwnerData AS LockOwnersTable_Write" +
                    "OnlyPrimitiveLockOwnerData, \r\n            T.WriteOnlyComplexLockOwnerData AS Loc" +
                    "kOwnersTable_WriteOnlyComplexLockOwnerData, \r\n            T.EncodingOption AS Lo" +
                    "ckOwnersTable_EncodingOption, \r\n            T.WorkflowIdentityFilter AS LockOwne" +
                    "rsTable_WorkflowIdentityFilter, \r\n            True AS _from0\r\n        FROM XODBC" +
                    ".LockOwnersTables AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.LockOwnersTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView535()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LockOwnersTables", "\r\n    SELECT VALUE -- Constructing LockOwnersTables\r\n        [XODB.Module.Busines" +
                    "sObjects.LockOwnersTable](T1.LockOwnersTable_Id, T1.LockOwnersTable_SurrogateLoc" +
                    "kOwnerId, T1.LockOwnersTable_LockExpiration, T1.LockOwnersTable_WorkflowHostType" +
                    ", T1.LockOwnersTable_MachineName, T1.LockOwnersTable_EnqueueCommand, T1.LockOwne" +
                    "rsTable_DeletesInstanceOnCompletion, T1.LockOwnersTable_PrimitiveLockOwnerData, " +
                    "T1.LockOwnersTable_ComplexLockOwnerData, T1.LockOwnersTable_WriteOnlyPrimitiveLo" +
                    "ckOwnerData, T1.LockOwnersTable_WriteOnlyComplexLockOwnerData, T1.LockOwnersTabl" +
                    "e_EncodingOption, T1.LockOwnersTable_WorkflowIdentityFilter)\r\n    FROM (\r\n      " +
                    "  SELECT \r\n            T.Id AS LockOwnersTable_Id, \r\n            T.SurrogateLock" +
                    "OwnerId AS LockOwnersTable_SurrogateLockOwnerId, \r\n            T.LockExpiration " +
                    "AS LockOwnersTable_LockExpiration, \r\n            T.WorkflowHostType AS LockOwner" +
                    "sTable_WorkflowHostType, \r\n            T.MachineName AS LockOwnersTable_MachineN" +
                    "ame, \r\n            T.EnqueueCommand AS LockOwnersTable_EnqueueCommand, \r\n       " +
                    "     T.DeletesInstanceOnCompletion AS LockOwnersTable_DeletesInstanceOnCompletio" +
                    "n, \r\n            T.PrimitiveLockOwnerData AS LockOwnersTable_PrimitiveLockOwnerD" +
                    "ata, \r\n            T.ComplexLockOwnerData AS LockOwnersTable_ComplexLockOwnerDat" +
                    "a, \r\n            T.WriteOnlyPrimitiveLockOwnerData AS LockOwnersTable_WriteOnlyP" +
                    "rimitiveLockOwnerData, \r\n            T.WriteOnlyComplexLockOwnerData AS LockOwne" +
                    "rsTable_WriteOnlyComplexLockOwnerData, \r\n            T.EncodingOption AS LockOwn" +
                    "ersTable_EncodingOption, \r\n            T.WorkflowIdentityFilter AS LockOwnersTab" +
                    "le_WorkflowIdentityFilter, \r\n            True AS _from0\r\n        FROM XODBModule" +
                    "BusinessObjectsStoreContainer.LockOwnersTable AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.RunnableInstancesTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView536()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.RunnableInstancesTable", @"
    SELECT VALUE -- Constructing RunnableInstancesTable
        [XODB.Module.BusinessObjects.Store.RunnableInstancesTable](T1.RunnableInstancesTable_SurrogateInstanceId, T1.RunnableInstancesTable_WorkflowHostType, T1.RunnableInstancesTable_ServiceDeploymentId, T1.RunnableInstancesTable_RunnableTime, T1.RunnableInstancesTable_SurrogateIdentityId)
    FROM (
        SELECT 
            T.SurrogateInstanceId AS RunnableInstancesTable_SurrogateInstanceId, 
            T.WorkflowHostType AS RunnableInstancesTable_WorkflowHostType, 
            T.ServiceDeploymentId AS RunnableInstancesTable_ServiceDeploymentId, 
            T.RunnableTime AS RunnableInstancesTable_RunnableTime, 
            T.SurrogateIdentityId AS RunnableInstancesTable_SurrogateIdentityId, 
            True AS _from0
        FROM XODBC.RunnableInstancesTables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.RunnableInstancesTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView537()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.RunnableInstancesTables", @"
    SELECT VALUE -- Constructing RunnableInstancesTables
        [XODB.Module.BusinessObjects.RunnableInstancesTable](T1.RunnableInstancesTable_SurrogateInstanceId, T1.RunnableInstancesTable_WorkflowHostType, T1.RunnableInstancesTable_ServiceDeploymentId, T1.RunnableInstancesTable_RunnableTime, T1.RunnableInstancesTable_SurrogateIdentityId)
    FROM (
        SELECT 
            T.SurrogateInstanceId AS RunnableInstancesTable_SurrogateInstanceId, 
            T.WorkflowHostType AS RunnableInstancesTable_WorkflowHostType, 
            T.ServiceDeploymentId AS RunnableInstancesTable_ServiceDeploymentId, 
            T.RunnableTime AS RunnableInstancesTable_RunnableTime, 
            T.SurrogateIdentityId AS RunnableInstancesTable_SurrogateIdentityId, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.RunnableInstancesTable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.ServiceDeploymentsTable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView538()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.ServiceDeploymentsTable", @"
    SELECT VALUE -- Constructing ServiceDeploymentsTable
        [XODB.Module.BusinessObjects.Store.ServiceDeploymentsTable](T1.ServiceDeploymentsTable_Id, T1.ServiceDeploymentsTable_ServiceDeploymentHash, T1.ServiceDeploymentsTable_SiteName, T1.ServiceDeploymentsTable_RelativeServicePath, T1.ServiceDeploymentsTable_RelativeApplicationPath, T1.ServiceDeploymentsTable_ServiceName, T1.ServiceDeploymentsTable_ServiceNamespace)
    FROM (
        SELECT 
            T.Id AS ServiceDeploymentsTable_Id, 
            T.ServiceDeploymentHash AS ServiceDeploymentsTable_ServiceDeploymentHash, 
            T.SiteName AS ServiceDeploymentsTable_SiteName, 
            T.RelativeServicePath AS ServiceDeploymentsTable_RelativeServicePath, 
            T.RelativeApplicationPath AS ServiceDeploymentsTable_RelativeApplicationPath, 
            T.ServiceName AS ServiceDeploymentsTable_ServiceName, 
            T.ServiceNamespace AS ServiceDeploymentsTable_ServiceNamespace, 
            True AS _from0
        FROM XODBC.ServiceDeploymentsTables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ServiceDeploymentsTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView539()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ServiceDeploymentsTables", @"
    SELECT VALUE -- Constructing ServiceDeploymentsTables
        [XODB.Module.BusinessObjects.ServiceDeploymentsTable](T1.ServiceDeploymentsTable_Id, T1.ServiceDeploymentsTable_ServiceDeploymentHash, T1.ServiceDeploymentsTable_SiteName, T1.ServiceDeploymentsTable_RelativeServicePath, T1.ServiceDeploymentsTable_RelativeApplicationPath, T1.ServiceDeploymentsTable_ServiceName, T1.ServiceDeploymentsTable_ServiceNamespace)
    FROM (
        SELECT 
            T.Id AS ServiceDeploymentsTable_Id, 
            T.ServiceDeploymentHash AS ServiceDeploymentsTable_ServiceDeploymentHash, 
            T.SiteName AS ServiceDeploymentsTable_SiteName, 
            T.RelativeServicePath AS ServiceDeploymentsTable_RelativeServicePath, 
            T.RelativeApplicationPath AS ServiceDeploymentsTable_RelativeApplicationPath, 
            T.ServiceName AS ServiceDeploymentsTable_ServiceName, 
            T.ServiceNamespace AS ServiceDeploymentsTable_ServiceNamespace, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.ServiceDeploymentsTable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView540()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Applications", @"
    SELECT VALUE -- Constructing vw_aspnet_Applications
        [XODB.Module.BusinessObjects.Store.vw_aspnet_Applications](T1.[vw_aspnet_Applications.ApplicationName], T1.[vw_aspnet_Applications.LoweredApplicationName], T1.[vw_aspnet_Applications.ApplicationId], T1.[vw_aspnet_Applications.Description])
    FROM (
        SELECT 
            T.ApplicationName AS [vw_aspnet_Applications.ApplicationName], 
            T.LoweredApplicationName AS [vw_aspnet_Applications.LoweredApplicationName], 
            T.ApplicationId AS [vw_aspnet_Applications.ApplicationId], 
            T.Description AS [vw_aspnet_Applications.Description], 
            True AS _from0
        FROM XODBC.ApplicationsViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ApplicationsViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView541()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ApplicationsViews", @"
    SELECT VALUE -- Constructing ApplicationsViews
        [XODB.Module.BusinessObjects.ApplicationsView](T1.ApplicationsView_ApplicationName, T1.ApplicationsView_LoweredApplicationName, T1.ApplicationsView_ApplicationId, T1.ApplicationsView_Description)
    FROM (
        SELECT 
            T.ApplicationName AS ApplicationsView_ApplicationName, 
            T.LoweredApplicationName AS ApplicationsView_LoweredApplicationName, 
            T.ApplicationId AS ApplicationsView_ApplicationId, 
            T.Description AS ApplicationsView_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_MembershipUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView542()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3212);
            viewString.Append("\r\n    SELECT VALUE -- Constructing vw_aspnet_MembershipUsers\r\n        [XODB.Modu");
            viewString.Append("le.BusinessObjects.Store.vw_aspnet_MembershipUsers](T1.[vw_aspnet_MembershipUser");
            viewString.Append("s.UserId], T1.[vw_aspnet_MembershipUsers.PasswordFormat], T1.[vw_aspnet_Membersh");
            viewString.Append("ipUsers.MobilePIN], T1.[vw_aspnet_MembershipUsers.Email], T1.[vw_aspnet_Membersh");
            viewString.Append("ipUsers.LoweredEmail], T1.[vw_aspnet_MembershipUsers.PasswordQuestion], T1.[vw_a");
            viewString.Append("spnet_MembershipUsers.PasswordAnswer], T1.[vw_aspnet_MembershipUsers.IsApproved]");
            viewString.Append(", T1.[vw_aspnet_MembershipUsers.IsLockedOut], T1.[vw_aspnet_MembershipUsers.Crea");
            viewString.Append("teDate], T1.[vw_aspnet_MembershipUsers.LastLoginDate], T1.[vw_aspnet_MembershipU");
            viewString.Append("sers.LastPasswordChangedDate], T1.[vw_aspnet_MembershipUsers.LastLockoutDate], T");
            viewString.Append("1.[vw_aspnet_MembershipUsers.FailedPasswordAttemptCount], T1.[vw_aspnet_Membersh");
            viewString.Append("ipUsers.FailedPasswordAttemptWindowStart], T1.[vw_aspnet_MembershipUsers.FailedP");
            viewString.Append("asswordAnswerAttemptCount], T1.[vw_aspnet_MembershipUsers.FailedPasswordAnswerAt");
            viewString.Append("temptWindowStart], T1.[vw_aspnet_MembershipUsers.Comment], T1.[vw_aspnet_Members");
            viewString.Append("hipUsers.ApplicationId], T1.[vw_aspnet_MembershipUsers.UserName], T1.[vw_aspnet_");
            viewString.Append("MembershipUsers.MobileAlias], T1.[vw_aspnet_MembershipUsers.IsAnonymous], T1.[vw");
            viewString.Append("_aspnet_MembershipUsers.LastActivityDate])\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.UserId AS [vw_aspnet_MembershipUsers.UserId], \r\n            T.PasswordFor");
            viewString.Append("mat AS [vw_aspnet_MembershipUsers.PasswordFormat], \r\n            T.MobilePIN AS ");
            viewString.Append("[vw_aspnet_MembershipUsers.MobilePIN], \r\n            T.Email AS [vw_aspnet_Membe");
            viewString.Append("rshipUsers.Email], \r\n            T.LoweredEmail AS [vw_aspnet_MembershipUsers.Lo");
            viewString.Append("weredEmail], \r\n            T.PasswordQuestion AS [vw_aspnet_MembershipUsers.Pass");
            viewString.Append("wordQuestion], \r\n            T.PasswordAnswer AS [vw_aspnet_MembershipUsers.Pass");
            viewString.Append("wordAnswer], \r\n            T.IsApproved AS [vw_aspnet_MembershipUsers.IsApproved");
            viewString.Append("], \r\n            T.IsLockedOut AS [vw_aspnet_MembershipUsers.IsLockedOut], \r\n   ");
            viewString.Append("         T.CreateDate AS [vw_aspnet_MembershipUsers.CreateDate], \r\n            T");
            viewString.Append(".LastLoginDate AS [vw_aspnet_MembershipUsers.LastLoginDate], \r\n            T.Las");
            viewString.Append("tPasswordChangedDate AS [vw_aspnet_MembershipUsers.LastPasswordChangedDate], \r\n ");
            viewString.Append("           T.LastLockoutDate AS [vw_aspnet_MembershipUsers.LastLockoutDate], \r\n ");
            viewString.Append("           T.FailedPasswordAttemptCount AS [vw_aspnet_MembershipUsers.FailedPass");
            viewString.Append("wordAttemptCount], \r\n            T.FailedPasswordAttemptWindowStart AS [vw_aspne");
            viewString.Append("t_MembershipUsers.FailedPasswordAttemptWindowStart], \r\n            T.FailedPassw");
            viewString.Append("ordAnswerAttemptCount AS [vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptC");
            viewString.Append("ount], \r\n            T.FailedPasswordAnswerAttemptWindowStart AS [vw_aspnet_Memb");
            viewString.Append("ershipUsers.FailedPasswordAnswerAttemptWindowStart], \r\n            T.Comment AS ");
            viewString.Append("[vw_aspnet_MembershipUsers.Comment], \r\n            T.ApplicationId AS [vw_aspnet");
            viewString.Append("_MembershipUsers.ApplicationId], \r\n            T.UserName AS [vw_aspnet_Membersh");
            viewString.Append("ipUsers.UserName], \r\n            T.MobileAlias AS [vw_aspnet_MembershipUsers.Mob");
            viewString.Append("ileAlias], \r\n            T.IsAnonymous AS [vw_aspnet_MembershipUsers.IsAnonymous");
            viewString.Append("], \r\n            T.LastActivityDate AS [vw_aspnet_MembershipUsers.LastActivityDa");
            viewString.Append("te], \r\n            True AS _from0\r\n        FROM XODBC.MembershipUsersViews AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_MembershipUsers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.MembershipUsersViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView543()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2866);
            viewString.Append("\r\n    SELECT VALUE -- Constructing MembershipUsersViews\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.MembershipUsersView](T1.MembershipUsersView_UserId, T1.MembershipU");
            viewString.Append("sersView_PasswordFormat, T1.MembershipUsersView_MobilePIN, T1.MembershipUsersVie");
            viewString.Append("w_Email, T1.MembershipUsersView_LoweredEmail, T1.MembershipUsersView_PasswordQue");
            viewString.Append("stion, T1.MembershipUsersView_PasswordAnswer, T1.MembershipUsersView_IsApproved,");
            viewString.Append(" T1.MembershipUsersView_IsLockedOut, T1.MembershipUsersView_CreateDate, T1.Membe");
            viewString.Append("rshipUsersView_LastLoginDate, T1.MembershipUsersView_LastPasswordChangedDate, T1");
            viewString.Append(".MembershipUsersView_LastLockoutDate, T1.MembershipUsersView_FailedPasswordAttem");
            viewString.Append("ptCount, T1.MembershipUsersView_FailedPasswordAttemptWindowStart, T1.MembershipU");
            viewString.Append("sersView_FailedPasswordAnswerAttemptCount, T1.MembershipUsersView_FailedPassword");
            viewString.Append("AnswerAttemptWindowStart, T1.MembershipUsersView_Comment, T1.MembershipUsersView");
            viewString.Append("_ApplicationId, T1.MembershipUsersView_UserName, T1.MembershipUsersView_MobileAl");
            viewString.Append("ias, T1.MembershipUsersView_IsAnonymous, T1.MembershipUsersView_LastActivityDate");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.UserId AS MembershipUsersView_User");
            viewString.Append("Id, \r\n            T.PasswordFormat AS MembershipUsersView_PasswordFormat, \r\n    ");
            viewString.Append("        T.MobilePIN AS MembershipUsersView_MobilePIN, \r\n            T.Email AS M");
            viewString.Append("embershipUsersView_Email, \r\n            T.LoweredEmail AS MembershipUsersView_Lo");
            viewString.Append("weredEmail, \r\n            T.PasswordQuestion AS MembershipUsersView_PasswordQues");
            viewString.Append("tion, \r\n            T.PasswordAnswer AS MembershipUsersView_PasswordAnswer, \r\n  ");
            viewString.Append("          T.IsApproved AS MembershipUsersView_IsApproved, \r\n            T.IsLock");
            viewString.Append("edOut AS MembershipUsersView_IsLockedOut, \r\n            T.CreateDate AS Membersh");
            viewString.Append("ipUsersView_CreateDate, \r\n            T.LastLoginDate AS MembershipUsersView_Las");
            viewString.Append("tLoginDate, \r\n            T.LastPasswordChangedDate AS MembershipUsersView_LastP");
            viewString.Append("asswordChangedDate, \r\n            T.LastLockoutDate AS MembershipUsersView_LastL");
            viewString.Append("ockoutDate, \r\n            T.FailedPasswordAttemptCount AS MembershipUsersView_Fa");
            viewString.Append("iledPasswordAttemptCount, \r\n            T.FailedPasswordAttemptWindowStart AS Me");
            viewString.Append("mbershipUsersView_FailedPasswordAttemptWindowStart, \r\n            T.FailedPasswo");
            viewString.Append("rdAnswerAttemptCount AS MembershipUsersView_FailedPasswordAnswerAttemptCount, \r\n");
            viewString.Append("            T.FailedPasswordAnswerAttemptWindowStart AS MembershipUsersView_Fail");
            viewString.Append("edPasswordAnswerAttemptWindowStart, \r\n            T.Comment AS MembershipUsersVi");
            viewString.Append("ew_Comment, \r\n            T.ApplicationId AS MembershipUsersView_ApplicationId, ");
            viewString.Append("\r\n            T.UserName AS MembershipUsersView_UserName, \r\n            T.Mobile");
            viewString.Append("Alias AS MembershipUsersView_MobileAlias, \r\n            T.IsAnonymous AS Members");
            viewString.Append("hipUsersView_IsAnonymous, \r\n            T.LastActivityDate AS MembershipUsersVie");
            viewString.Append("w_LastActivityDate, \r\n            True AS _from0\r\n        FROM XODBModuleBusines");
            viewString.Append("sObjectsStoreContainer.vw_aspnet_MembershipUsers AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.MembershipUsersViews", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Profiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView544()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Profiles", @"
    SELECT VALUE -- Constructing vw_aspnet_Profiles
        [XODB.Module.BusinessObjects.Store.vw_aspnet_Profiles](T1.[vw_aspnet_Profiles.UserId], T1.[vw_aspnet_Profiles.LastUpdatedDate], T1.[vw_aspnet_Profiles.DataSize])
    FROM (
        SELECT 
            T.UserId AS [vw_aspnet_Profiles.UserId], 
            T.LastUpdatedDate AS [vw_aspnet_Profiles.LastUpdatedDate], 
            T.DataSize AS [vw_aspnet_Profiles.DataSize], 
            True AS _from0
        FROM XODBC.ProfilesViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProfilesViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView545()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProfilesViews", @"
    SELECT VALUE -- Constructing ProfilesViews
        [XODB.Module.BusinessObjects.ProfilesView](T1.ProfilesView_UserId, T1.ProfilesView_LastUpdatedDate, T1.ProfilesView_DataSize)
    FROM (
        SELECT 
            T.UserId AS ProfilesView_UserId, 
            T.LastUpdatedDate AS ProfilesView_LastUpdatedDate, 
            T.DataSize AS ProfilesView_DataSize, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Profiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView546()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Roles", @"
    SELECT VALUE -- Constructing vw_aspnet_Roles
        [XODB.Module.BusinessObjects.Store.vw_aspnet_Roles](T1.[vw_aspnet_Roles.ApplicationId], T1.[vw_aspnet_Roles.RoleId], T1.[vw_aspnet_Roles.RoleName], T1.[vw_aspnet_Roles.LoweredRoleName], T1.[vw_aspnet_Roles.Description])
    FROM (
        SELECT 
            T.ApplicationId AS [vw_aspnet_Roles.ApplicationId], 
            T.RoleId AS [vw_aspnet_Roles.RoleId], 
            T.RoleName AS [vw_aspnet_Roles.RoleName], 
            T.LoweredRoleName AS [vw_aspnet_Roles.LoweredRoleName], 
            T.Description AS [vw_aspnet_Roles.Description], 
            True AS _from0
        FROM XODBC.RolesViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.RolesViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView547()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.RolesViews", @"
    SELECT VALUE -- Constructing RolesViews
        [XODB.Module.BusinessObjects.RolesView](T1.RolesView_ApplicationId, T1.RolesView_RoleId, T1.RolesView_RoleName, T1.RolesView_LoweredRoleName, T1.RolesView_Description)
    FROM (
        SELECT 
            T.ApplicationId AS RolesView_ApplicationId, 
            T.RoleId AS RolesView_RoleId, 
            T.RoleName AS RolesView_RoleName, 
            T.LoweredRoleName AS RolesView_LoweredRoleName, 
            T.Description AS RolesView_Description, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView548()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Users", @"
    SELECT VALUE -- Constructing vw_aspnet_Users
        [XODB.Module.BusinessObjects.Store.vw_aspnet_Users](T1.[vw_aspnet_Users.ApplicationId], T1.[vw_aspnet_Users.UserId], T1.[vw_aspnet_Users.UserName], T1.[vw_aspnet_Users.LoweredUserName], T1.[vw_aspnet_Users.MobileAlias], T1.[vw_aspnet_Users.IsAnonymous], T1.[vw_aspnet_Users.LastActivityDate])
    FROM (
        SELECT 
            T.ApplicationId AS [vw_aspnet_Users.ApplicationId], 
            T.UserId AS [vw_aspnet_Users.UserId], 
            T.UserName AS [vw_aspnet_Users.UserName], 
            T.LoweredUserName AS [vw_aspnet_Users.LoweredUserName], 
            T.MobileAlias AS [vw_aspnet_Users.MobileAlias], 
            T.IsAnonymous AS [vw_aspnet_Users.IsAnonymous], 
            T.LastActivityDate AS [vw_aspnet_Users.LastActivityDate], 
            True AS _from0
        FROM XODBC.UsersViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.UsersViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView549()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.UsersViews", @"
    SELECT VALUE -- Constructing UsersViews
        [XODB.Module.BusinessObjects.UsersView](T1.UsersView_ApplicationId, T1.UsersView_UserId, T1.UsersView_UserName, T1.UsersView_LoweredUserName, T1.UsersView_MobileAlias, T1.UsersView_IsAnonymous, T1.UsersView_LastActivityDate)
    FROM (
        SELECT 
            T.ApplicationId AS UsersView_ApplicationId, 
            T.UserId AS UsersView_UserId, 
            T.UserName AS UsersView_UserName, 
            T.LoweredUserName AS UsersView_LoweredUserName, 
            T.MobileAlias AS UsersView_MobileAlias, 
            T.IsAnonymous AS UsersView_IsAnonymous, 
            T.LastActivityDate AS UsersView_LastActivityDate, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_Users AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_UsersInRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView550()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_UsersInRoles", @"
    SELECT VALUE -- Constructing vw_aspnet_UsersInRoles
        [XODB.Module.BusinessObjects.Store.vw_aspnet_UsersInRoles](T1.[vw_aspnet_UsersInRoles.UserId], T1.[vw_aspnet_UsersInRoles.RoleId])
    FROM (
        SELECT 
            T.UserId AS [vw_aspnet_UsersInRoles.UserId], 
            T.RoleId AS [vw_aspnet_UsersInRoles.RoleId], 
            True AS _from0
        FROM XODBC.UsersInRolesViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.UsersInRolesViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView551()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.UsersInRolesViews", @"
    SELECT VALUE -- Constructing UsersInRolesViews
        [XODB.Module.BusinessObjects.UsersInRolesView](T1.UsersInRolesView_UserId, T1.UsersInRolesView_RoleId)
    FROM (
        SELECT 
            T.UserId AS UsersInRolesView_UserId, 
            T.RoleId AS UsersInRolesView_RoleId, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_UsersInRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_Paths
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView552()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_Paths", @"
    SELECT VALUE -- Constructing vw_aspnet_WebPartState_Paths
        [XODB.Module.BusinessObjects.Store.vw_aspnet_WebPartState_Paths](T1.[vw_aspnet_WebPartState_Paths.ApplicationId], T1.[vw_aspnet_WebPartState_Paths.PathId], T1.[vw_aspnet_WebPartState_Paths.Path], T1.[vw_aspnet_WebPartState_Paths.LoweredPath])
    FROM (
        SELECT 
            T.ApplicationId AS [vw_aspnet_WebPartState_Paths.ApplicationId], 
            T.PathId AS [vw_aspnet_WebPartState_Paths.PathId], 
            T.Path AS [vw_aspnet_WebPartState_Paths.Path], 
            T.LoweredPath AS [vw_aspnet_WebPartState_Paths.LoweredPath], 
            True AS _from0
        FROM XODBC.WebPartState_PathsView AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WebPartState_PathsView
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView553()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WebPartState_PathsView", @"
    SELECT VALUE -- Constructing WebPartState_PathsView
        [XODB.Module.BusinessObjects.WebPartState_PathsView](T1.[WebPartState_PathsView.ApplicationId], T1.[WebPartState_PathsView.PathId], T1.[WebPartState_PathsView.Path], T1.[WebPartState_PathsView.LoweredPath])
    FROM (
        SELECT 
            T.ApplicationId AS [WebPartState_PathsView.ApplicationId], 
            T.PathId AS [WebPartState_PathsView.PathId], 
            T.Path AS [WebPartState_PathsView.Path], 
            T.LoweredPath AS [WebPartState_PathsView.LoweredPath], 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_Paths AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_Shared
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView554()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_Shared", @"
    SELECT VALUE -- Constructing vw_aspnet_WebPartState_Shared
        [XODB.Module.BusinessObjects.Store.vw_aspnet_WebPartState_Shared](T1.[vw_aspnet_WebPartState_Shared.PathId], T1.[vw_aspnet_WebPartState_Shared.DataSize], T1.[vw_aspnet_WebPartState_Shared.LastUpdatedDate])
    FROM (
        SELECT 
            T.PathId AS [vw_aspnet_WebPartState_Shared.PathId], 
            T.DataSize AS [vw_aspnet_WebPartState_Shared.DataSize], 
            T.LastUpdatedDate AS [vw_aspnet_WebPartState_Shared.LastUpdatedDate], 
            True AS _from0
        FROM XODBC.WebPartState_SharedView AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WebPartState_SharedView
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView555()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WebPartState_SharedView", @"
    SELECT VALUE -- Constructing WebPartState_SharedView
        [XODB.Module.BusinessObjects.WebPartState_SharedView](T1.[WebPartState_SharedView.PathId], T1.[WebPartState_SharedView.DataSize], T1.[WebPartState_SharedView.LastUpdatedDate])
    FROM (
        SELECT 
            T.PathId AS [WebPartState_SharedView.PathId], 
            T.DataSize AS [WebPartState_SharedView.DataSize], 
            T.LastUpdatedDate AS [WebPartState_SharedView.LastUpdatedDate], 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_Shared AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView556()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_User", @"
    SELECT VALUE -- Constructing vw_aspnet_WebPartState_User
        [XODB.Module.BusinessObjects.Store.vw_aspnet_WebPartState_User](T1.[vw_aspnet_WebPartState_User.PathId], T1.[vw_aspnet_WebPartState_User.UserId], T1.[vw_aspnet_WebPartState_User.DataSize], T1.[vw_aspnet_WebPartState_User.LastUpdatedDate])
    FROM (
        SELECT 
            T.PathId AS [vw_aspnet_WebPartState_User.PathId], 
            T.UserId AS [vw_aspnet_WebPartState_User.UserId], 
            T.DataSize AS [vw_aspnet_WebPartState_User.DataSize], 
            T.LastUpdatedDate AS [vw_aspnet_WebPartState_User.LastUpdatedDate], 
            True AS _from0
        FROM XODBC.WebPartState_UserView AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WebPartState_UserView
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView557()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WebPartState_UserView", @"
    SELECT VALUE -- Constructing WebPartState_UserView
        [XODB.Module.BusinessObjects.WebPartState_UserView](T1.[WebPartState_UserView.PathId], T1.[WebPartState_UserView.UserId], T1.[WebPartState_UserView.DataSize], T1.[WebPartState_UserView.LastUpdatedDate])
    FROM (
        SELECT 
            T.PathId AS [WebPartState_UserView.PathId], 
            T.UserId AS [WebPartState_UserView.UserId], 
            T.DataSize AS [WebPartState_UserView.DataSize], 
            T.LastUpdatedDate AS [WebPartState_UserView.LastUpdatedDate], 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.vw_aspnet_WebPartState_User AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView558()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_Company", @"
    SELECT VALUE -- Constructing X_VW_Company
        [XODB.Module.BusinessObjects.Store.X_VW_Company](T1.[X_VW_Company.CompanyID], T1.[X_VW_Company.CompanyName], T1.[X_VW_Company.ParentCompanyID])
    FROM (
        SELECT 
            T.CompanyID AS [X_VW_Company.CompanyID], 
            T.CompanyName AS [X_VW_Company.CompanyName], 
            T.ParentCompanyID AS [X_VW_Company.ParentCompanyID], 
            True AS _from0
        FROM XODBC.CompanyViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.CompanyViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView559()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.CompanyViews", @"
    SELECT VALUE -- Constructing CompanyViews
        [XODB.Module.BusinessObjects.CompanyView](T1.CompanyView_CompanyID, T1.CompanyView_CompanyName, T1.CompanyView_ParentCompanyID)
    FROM (
        SELECT 
            T.CompanyID AS CompanyView_CompanyID, 
            T.CompanyName AS CompanyView_CompanyName, 
            T.ParentCompanyID AS CompanyView_ParentCompanyID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_VW_Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_DictionaryHeader
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView560()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_DictionaryHeader", @"
    SELECT VALUE -- Constructing X_VW_DictionaryHeader
        [XODB.Module.BusinessObjects.Store.X_VW_DictionaryHeader](T1.[X_VW_DictionaryHeader.HeaderID], T1.[X_VW_DictionaryHeader.HoleName])
    FROM (
        SELECT 
            T.HeaderID AS [X_VW_DictionaryHeader.HeaderID], 
            T.HoleName AS [X_VW_DictionaryHeader.HoleName], 
            True AS _from0
        FROM XODBC.DictionaryHeaderViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.DictionaryHeaderViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView561()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.DictionaryHeaderViews", @"
    SELECT VALUE -- Constructing DictionaryHeaderViews
        [XODB.Module.BusinessObjects.DictionaryHeaderView](T1.DictionaryHeaderView_HeaderID, T1.DictionaryHeaderView_HoleName)
    FROM (
        SELECT 
            T.HeaderID AS DictionaryHeaderView_HeaderID, 
            T.HoleName AS DictionaryHeaderView_HoleName, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_VW_DictionaryHeader AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_ExperienceBasicView
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView562()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3665);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_VW_ExperienceBasicView\r\n        [XODB.Modul");
            viewString.Append("e.BusinessObjects.Store.X_VW_ExperienceBasicView](T1.[X_VW_ExperienceBasicView.C");
            viewString.Append("ontactName], T1.[X_VW_ExperienceBasicView.Title], T1.[X_VW_ExperienceBasicView.S");
            viewString.Append("urname], T1.[X_VW_ExperienceBasicView.Firstname], T1.[X_VW_ExperienceBasicView.E");
            viewString.Append("xperienceName], T1.[X_VW_ExperienceBasicView.LocationID], T1.[X_VW_ExperienceBas");
            viewString.Append("icView.LatitudeWGS84], T1.[X_VW_ExperienceBasicView.LongitudeWGS84], T1.[X_VW_Ex");
            viewString.Append("perienceBasicView.DefaultLocationName], T1.[X_VW_ExperienceBasicView.DateStart],");
            viewString.Append(" T1.[X_VW_ExperienceBasicView.DateFinished], T1.[X_VW_ExperienceBasicView.Commen");
            viewString.Append("t], T1.[X_VW_ExperienceBasicView.LocationGeography], T1.[X_VW_ExperienceBasicVie");
            viewString.Append("w.StandardCountryName], T1.[X_VW_ExperienceBasicView.ProjectName], T1.[X_VW_Expe");
            viewString.Append("rienceBasicView.ProvinceID], T1.[X_VW_ExperienceBasicView.WorkTypeID], T1.[X_VW_");
            viewString.Append("ExperienceBasicView.PositionID], T1.[X_VW_ExperienceBasicView.ProfessionID], T1.");
            viewString.Append("[X_VW_ExperienceBasicView.ContactID], T1.[X_VW_ExperienceBasicView.ProjectID], T");
            viewString.Append("1.[X_VW_ExperienceBasicView.ExperienceID], T1.[X_VW_ExperienceBasicView.Experien");
            viewString.Append("ceGroupID], T1.[X_VW_ExperienceBasicView.CompanyID], T1.[X_VW_ExperienceBasicVie");
            viewString.Append("w.WorkTypeName], T1.[X_VW_ExperienceBasicView.WorkTypeDescription], T1.[X_VW_Exp");
            viewString.Append("erienceBasicView.FullDescription], T1.[X_VW_ExperienceBasicView.StandardWorkType");
            viewString.Append("ClassName], T1.[X_VW_ExperienceBasicView.Description])\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.ContactName AS [X_VW_ExperienceBasicView.ContactName], \r\n    ");
            viewString.Append("        T.Title AS [X_VW_ExperienceBasicView.Title], \r\n            T.Surname AS ");
            viewString.Append("[X_VW_ExperienceBasicView.Surname], \r\n            T.Firstname AS [X_VW_Experienc");
            viewString.Append("eBasicView.Firstname], \r\n            T.ExperienceName AS [X_VW_ExperienceBasicVi");
            viewString.Append("ew.ExperienceName], \r\n            T.LocationID AS [X_VW_ExperienceBasicView.Loca");
            viewString.Append("tionID], \r\n            T.LatitudeWGS84 AS [X_VW_ExperienceBasicView.LatitudeWGS8");
            viewString.Append("4], \r\n            T.LongitudeWGS84 AS [X_VW_ExperienceBasicView.LongitudeWGS84],");
            viewString.Append(" \r\n            T.DefaultLocationName AS [X_VW_ExperienceBasicView.DefaultLocatio");
            viewString.Append("nName], \r\n            T.DateStart AS [X_VW_ExperienceBasicView.DateStart], \r\n   ");
            viewString.Append("         T.DateFinished AS [X_VW_ExperienceBasicView.DateFinished], \r\n          ");
            viewString.Append("  T.Comment AS [X_VW_ExperienceBasicView.Comment], \r\n            T.LocationGeogr");
            viewString.Append("aphy AS [X_VW_ExperienceBasicView.LocationGeography], \r\n            T.StandardCo");
            viewString.Append("untryName AS [X_VW_ExperienceBasicView.StandardCountryName], \r\n            T.Pro");
            viewString.Append("jectName AS [X_VW_ExperienceBasicView.ProjectName], \r\n            T.ProvinceID A");
            viewString.Append("S [X_VW_ExperienceBasicView.ProvinceID], \r\n            T.WorkTypeID AS [X_VW_Exp");
            viewString.Append("erienceBasicView.WorkTypeID], \r\n            T.PositionID AS [X_VW_ExperienceBasi");
            viewString.Append("cView.PositionID], \r\n            T.ProfessionID AS [X_VW_ExperienceBasicView.Pro");
            viewString.Append("fessionID], \r\n            T.ContactID AS [X_VW_ExperienceBasicView.ContactID], \r");
            viewString.Append("\n            T.ProjectID AS [X_VW_ExperienceBasicView.ProjectID], \r\n            ");
            viewString.Append("T.ExperienceID AS [X_VW_ExperienceBasicView.ExperienceID], \r\n            T.Exper");
            viewString.Append("ienceGroupID AS [X_VW_ExperienceBasicView.ExperienceGroupID], \r\n            T.Co");
            viewString.Append("mpanyID AS [X_VW_ExperienceBasicView.CompanyID], \r\n            T.WorkTypeName AS");
            viewString.Append(" [X_VW_ExperienceBasicView.WorkTypeName], \r\n            T.WorkTypeDescription AS");
            viewString.Append(" [X_VW_ExperienceBasicView.WorkTypeDescription], \r\n            T.FullDescription");
            viewString.Append(" AS [X_VW_ExperienceBasicView.FullDescription], \r\n            T.StandardWorkType");
            viewString.Append("ClassName AS [X_VW_ExperienceBasicView.StandardWorkTypeClassName], \r\n           ");
            viewString.Append(" T.Description AS [X_VW_ExperienceBasicView.Description], \r\n            True AS ");
            viewString.Append("_from0\r\n        FROM XODBC.ExperienceBasicViews AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_ExperienceBasicView", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.ExperienceBasicViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView563()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3282);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ExperienceBasicViews\r\n        [XODB.Module.Bu");
            viewString.Append("sinessObjects.ExperienceBasicView](T1.ExperienceBasicView_ContactName, T1.Experi");
            viewString.Append("enceBasicView_Title, T1.ExperienceBasicView_Surname, T1.ExperienceBasicView_Firs");
            viewString.Append("tname, T1.ExperienceBasicView_ExperienceName, T1.ExperienceBasicView_LocationID,");
            viewString.Append(" T1.ExperienceBasicView_LatitudeWGS84, T1.ExperienceBasicView_LongitudeWGS84, T1");
            viewString.Append(".ExperienceBasicView_DefaultLocationName, T1.ExperienceBasicView_DateStart, T1.E");
            viewString.Append("xperienceBasicView_DateFinished, T1.ExperienceBasicView_Comment, T1.ExperienceBa");
            viewString.Append("sicView_LocationGeography, T1.ExperienceBasicView_StandardCountryName, T1.Experi");
            viewString.Append("enceBasicView_ProjectName, T1.ExperienceBasicView_ProvinceID, T1.ExperienceBasic");
            viewString.Append("View_WorkTypeID, T1.ExperienceBasicView_PositionID, T1.ExperienceBasicView_Profe");
            viewString.Append("ssionID, T1.ExperienceBasicView_ContactID, T1.ExperienceBasicView_ProjectID, T1.");
            viewString.Append("ExperienceBasicView_ExperienceID, T1.ExperienceBasicView_ExperienceGroupID, T1.E");
            viewString.Append("xperienceBasicView_CompanyID, T1.ExperienceBasicView_WorkTypeName, T1.Experience");
            viewString.Append("BasicView_WorkTypeDescription, T1.ExperienceBasicView_FullDescription, T1.Experi");
            viewString.Append("enceBasicView_StandardWorkTypeClassName, T1.ExperienceBasicView_Description)\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.ContactName AS ExperienceBasicView_Cont");
            viewString.Append("actName, \r\n            T.Title AS ExperienceBasicView_Title, \r\n            T.Sur");
            viewString.Append("name AS ExperienceBasicView_Surname, \r\n            T.Firstname AS ExperienceBasi");
            viewString.Append("cView_Firstname, \r\n            T.ExperienceName AS ExperienceBasicView_Experienc");
            viewString.Append("eName, \r\n            T.LocationID AS ExperienceBasicView_LocationID, \r\n         ");
            viewString.Append("   T.LatitudeWGS84 AS ExperienceBasicView_LatitudeWGS84, \r\n            T.Longitu");
            viewString.Append("deWGS84 AS ExperienceBasicView_LongitudeWGS84, \r\n            T.DefaultLocationNa");
            viewString.Append("me AS ExperienceBasicView_DefaultLocationName, \r\n            T.DateStart AS Expe");
            viewString.Append("rienceBasicView_DateStart, \r\n            T.DateFinished AS ExperienceBasicView_D");
            viewString.Append("ateFinished, \r\n            T.Comment AS ExperienceBasicView_Comment, \r\n         ");
            viewString.Append("   T.LocationGeography AS ExperienceBasicView_LocationGeography, \r\n            T");
            viewString.Append(".StandardCountryName AS ExperienceBasicView_StandardCountryName, \r\n            T");
            viewString.Append(".ProjectName AS ExperienceBasicView_ProjectName, \r\n            T.ProvinceID AS E");
            viewString.Append("xperienceBasicView_ProvinceID, \r\n            T.WorkTypeID AS ExperienceBasicView");
            viewString.Append("_WorkTypeID, \r\n            T.PositionID AS ExperienceBasicView_PositionID, \r\n   ");
            viewString.Append("         T.ProfessionID AS ExperienceBasicView_ProfessionID, \r\n            T.Con");
            viewString.Append("tactID AS ExperienceBasicView_ContactID, \r\n            T.ProjectID AS Experience");
            viewString.Append("BasicView_ProjectID, \r\n            T.ExperienceID AS ExperienceBasicView_Experie");
            viewString.Append("nceID, \r\n            T.ExperienceGroupID AS ExperienceBasicView_ExperienceGroupI");
            viewString.Append("D, \r\n            T.CompanyID AS ExperienceBasicView_CompanyID, \r\n            T.W");
            viewString.Append("orkTypeName AS ExperienceBasicView_WorkTypeName, \r\n            T.WorkTypeDescrip");
            viewString.Append("tion AS ExperienceBasicView_WorkTypeDescription, \r\n            T.FullDescription");
            viewString.Append(" AS ExperienceBasicView_FullDescription, \r\n            T.StandardWorkTypeClassNa");
            viewString.Append("me AS ExperienceBasicView_StandardWorkTypeClassName, \r\n            T.Description");
            viewString.Append(" AS ExperienceBasicView_Description, \r\n            True AS _from0\r\n        FROM ");
            viewString.Append("XODBModuleBusinessObjectsStoreContainer.X_VW_ExperienceBasicView AS T\r\n    ) AS ");
            viewString.Append("T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ExperienceBasicViews", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_License
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView564()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(5532);
            viewString.Append("\r\n    SELECT VALUE -- Constructing X_VW_License\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.Store.X_VW_License](T1.[X_VW_License.LicenseID], T1.[X_VW_License.CompanyI");
            viewString.Append("D], T1.[X_VW_License.ContactID], T1.[X_VW_License.LicenseeGUID], T1.[X_VW_Licens");
            viewString.Append("e.LicenseeName], T1.[X_VW_License.LicenseeUsername], T1.[X_VW_License.LicenseeUn");
            viewString.Append("iqueMachineCode1], T1.[X_VW_License.LicenseeUniqueMachineCode2], T1.[X_VW_Licens");
            viewString.Append("e.LicenseeGroupID], T1.[X_VW_License.LicensorIP], T1.[X_VW_License.LicensorName]");
            viewString.Append(", T1.[X_VW_License.LicenseTypeID], T1.[X_VW_License.LicenseType], T1.[X_VW_Licen");
            viewString.Append("se.LicenseURL], T1.[X_VW_License.RootServerName], T1.[X_VW_License.RootServerID]");
            viewString.Append(", T1.[X_VW_License.ServerName], T1.[X_VW_License.ServerID], T1.[X_VW_License.App");
            viewString.Append("licationID], T1.[X_VW_License.ServiceAuthenticationMethod], T1.[X_VW_License.Ser");
            viewString.Append("viceAuthorisationMethod], T1.[X_VW_License.ValidFrom], T1.[X_VW_License.Expiry],");
            viewString.Append(" T1.[X_VW_License.SupportExpiry], T1.[X_VW_License.ValidForDuration], T1.[X_VW_L");
            viewString.Append("icense.ValidForUnitID], T1.[X_VW_License.ValidForUnitTarget], T1.[X_VW_License.V");
            viewString.Append("ersionMajor], T1.[X_VW_License.VersionMinor], T1.[X_VW_License.VersionBuild], T1");
            viewString.Append(".[X_VW_License.SupportedToMajor], T1.[X_VW_License.SupportedToMinor], T1.[X_VW_L");
            viewString.Append("icense.SupportedToBuild], T1.[X_VW_License.Nuked], T1.[X_VW_License.NukedReason]");
            viewString.Append(", T1.[X_VW_License.TimeServerID], T1.[X_VW_License.TimeServerName], T1.[X_VW_Lic");
            viewString.Append("ense.TimeServerResolutionMask], T1.[X_VW_License.TimeServerIP], T1.[X_VW_License");
            viewString.Append(".PreAuthorizationCode], T1.[X_VW_License.PreAuthorizationExecuted], T1.[X_VW_Lic");
            viewString.Append("ense.Signatory1], T1.[X_VW_License.Signatory2], T1.[X_VW_License.Signatory3], T1");
            viewString.Append(".[X_VW_License.Signature1], T1.[X_VW_License.Signature2], T1.[X_VW_License.Signa");
            viewString.Append("ture3], T1.[X_VW_License.Received], T1.[X_VW_License.CheckedIn], T1.[X_VW_Licens");
            viewString.Append("e.LicenceeCertificate], T1.[X_VW_License.LicensorCertificate], T1.[X_VW_License.");
            viewString.Append("Assets], T1.[X_VW_License.Parts], T1.[X_VW_License.ChecksumType], T1.[X_VW_Licen");
            viewString.Append("se.Checksum])\r\n    FROM (\r\n        SELECT \r\n            T.LicenseID AS [X_VW_Lic");
            viewString.Append("ense.LicenseID], \r\n            T.CompanyID AS [X_VW_License.CompanyID], \r\n      ");
            viewString.Append("      T.ContactID AS [X_VW_License.ContactID], \r\n            T.LicenseeGUID AS [");
            viewString.Append("X_VW_License.LicenseeGUID], \r\n            T.LicenseeName AS [X_VW_License.Licens");
            viewString.Append("eeName], \r\n            T.LicenseeUsername AS [X_VW_License.LicenseeUsername], \r\n");
            viewString.Append("            T.LicenseeUniqueMachineCode1 AS [X_VW_License.LicenseeUniqueMachineC");
            viewString.Append("ode1], \r\n            T.LicenseeUniqueMachineCode2 AS [X_VW_License.LicenseeUniqu");
            viewString.Append("eMachineCode2], \r\n            T.LicenseeGroupID AS [X_VW_License.LicenseeGroupID");
            viewString.Append("], \r\n            T.LicensorIP AS [X_VW_License.LicensorIP], \r\n            T.Lice");
            viewString.Append("nsorName AS [X_VW_License.LicensorName], \r\n            T.LicenseTypeID AS [X_VW_");
            viewString.Append("License.LicenseTypeID], \r\n            T.LicenseType AS [X_VW_License.LicenseType");
            viewString.Append("], \r\n            T.LicenseURL AS [X_VW_License.LicenseURL], \r\n            T.Root");
            viewString.Append("ServerName AS [X_VW_License.RootServerName], \r\n            T.RootServerID AS [X_");
            viewString.Append("VW_License.RootServerID], \r\n            T.ServerName AS [X_VW_License.ServerName");
            viewString.Append("], \r\n            T.ServerID AS [X_VW_License.ServerID], \r\n            T.Applicat");
            viewString.Append("ionID AS [X_VW_License.ApplicationID], \r\n            T.ServiceAuthenticationMeth");
            viewString.Append("od AS [X_VW_License.ServiceAuthenticationMethod], \r\n            T.ServiceAuthori");
            viewString.Append("sationMethod AS [X_VW_License.ServiceAuthorisationMethod], \r\n            T.Valid");
            viewString.Append("From AS [X_VW_License.ValidFrom], \r\n            T.Expiry AS [X_VW_License.Expiry");
            viewString.Append("], \r\n            T.SupportExpiry AS [X_VW_License.SupportExpiry], \r\n            ");
            viewString.Append("T.ValidForDuration AS [X_VW_License.ValidForDuration], \r\n            T.ValidForU");
            viewString.Append("nitID AS [X_VW_License.ValidForUnitID], \r\n            T.ValidForUnitTarget AS [X");
            viewString.Append("_VW_License.ValidForUnitTarget], \r\n            T.VersionMajor AS [X_VW_License.V");
            viewString.Append("ersionMajor], \r\n            T.VersionMinor AS [X_VW_License.VersionMinor], \r\n   ");
            viewString.Append("         T.VersionBuild AS [X_VW_License.VersionBuild], \r\n            T.Supporte");
            viewString.Append("dToMajor AS [X_VW_License.SupportedToMajor], \r\n            T.SupportedToMinor AS");
            viewString.Append(" [X_VW_License.SupportedToMinor], \r\n            T.SupportedToBuild AS [X_VW_Lice");
            viewString.Append("nse.SupportedToBuild], \r\n            T.Nuked AS [X_VW_License.Nuked], \r\n        ");
            viewString.Append("    T.NukedReason AS [X_VW_License.NukedReason], \r\n            T.TimeServerID AS");
            viewString.Append(" [X_VW_License.TimeServerID], \r\n            T.TimeServerName AS [X_VW_License.Ti");
            viewString.Append("meServerName], \r\n            T.TimeServerResolutionMask AS [X_VW_License.TimeSer");
            viewString.Append("verResolutionMask], \r\n            T.TimeServerIP AS [X_VW_License.TimeServerIP],");
            viewString.Append(" \r\n            T.PreAuthorizationCode AS [X_VW_License.PreAuthorizationCode], \r\n");
            viewString.Append("            T.PreAuthorizationExecuted AS [X_VW_License.PreAuthorizationExecuted");
            viewString.Append("], \r\n            T.Signatory1 AS [X_VW_License.Signatory1], \r\n            T.Sign");
            viewString.Append("atory2 AS [X_VW_License.Signatory2], \r\n            T.Signatory3 AS [X_VW_License");
            viewString.Append(".Signatory3], \r\n            T.Signature1 AS [X_VW_License.Signature1], \r\n       ");
            viewString.Append("     T.Signature2 AS [X_VW_License.Signature2], \r\n            T.Signature3 AS [X");
            viewString.Append("_VW_License.Signature3], \r\n            T.Received AS [X_VW_License.Received], \r\n");
            viewString.Append("            T.CheckedIn AS [X_VW_License.CheckedIn], \r\n            T.LicenceeCer");
            viewString.Append("tificate AS [X_VW_License.LicenceeCertificate], \r\n            T.LicensorCertific");
            viewString.Append("ate AS [X_VW_License.LicensorCertificate], \r\n            T.Assets AS [X_VW_Licen");
            viewString.Append("se.Assets], \r\n            T.Parts AS [X_VW_License.Parts], \r\n            T.Check");
            viewString.Append("sumType AS [X_VW_License.ChecksumType], \r\n            T.Checksum AS [X_VW_Licens");
            viewString.Append("e.Checksum], \r\n            True AS _from0\r\n        FROM XODBC.LicenseViews AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_License", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.LicenseViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView565()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(5229);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LicenseViews\r\n        [XODB.Module.BusinessOb");
            viewString.Append("jects.LicenseView](T1.LicenseView_LicenseID, T1.LicenseView_CompanyID, T1.Licens");
            viewString.Append("eView_ContactID, T1.LicenseView_LicenseeGUID, T1.LicenseView_LicenseeName, T1.Li");
            viewString.Append("censeView_LicenseeUsername, T1.LicenseView_LicenseeUniqueMachineCode1, T1.Licens");
            viewString.Append("eView_LicenseeUniqueMachineCode2, T1.LicenseView_LicenseeGroupID, T1.LicenseView");
            viewString.Append("_LicensorIP, T1.LicenseView_LicensorName, T1.LicenseView_LicenseTypeID, T1.Licen");
            viewString.Append("seView_LicenseType, T1.LicenseView_LicenseURL, T1.LicenseView_RootServerName, T1");
            viewString.Append(".LicenseView_RootServerID, T1.LicenseView_ServerName, T1.LicenseView_ServerID, T");
            viewString.Append("1.LicenseView_ApplicationID, T1.LicenseView_ServiceAuthenticationMethod, T1.Lice");
            viewString.Append("nseView_ServiceAuthorisationMethod, T1.LicenseView_ValidFrom, T1.LicenseView_Exp");
            viewString.Append("iry, T1.LicenseView_SupportExpiry, T1.LicenseView_ValidForDuration, T1.LicenseVi");
            viewString.Append("ew_ValidForUnitID, T1.LicenseView_ValidForUnitTarget, T1.LicenseView_VersionMajo");
            viewString.Append("r, T1.LicenseView_VersionMinor, T1.LicenseView_VersionBuild, T1.LicenseView_Supp");
            viewString.Append("ortedToMajor, T1.LicenseView_SupportedToMinor, T1.LicenseView_SupportedToBuild, ");
            viewString.Append("T1.LicenseView_Nuked, T1.LicenseView_NukedReason, T1.LicenseView_TimeServerID, T");
            viewString.Append("1.LicenseView_TimeServerName, T1.LicenseView_TimeServerResolutionMask, T1.Licens");
            viewString.Append("eView_TimeServerIP, T1.LicenseView_PreAuthorizationCode, T1.LicenseView_PreAutho");
            viewString.Append("rizationExecuted, T1.LicenseView_Signatory1, T1.LicenseView_Signatory2, T1.Licen");
            viewString.Append("seView_Signatory3, T1.LicenseView_Signature1, T1.LicenseView_Signature2, T1.Lice");
            viewString.Append("nseView_Signature3, T1.LicenseView_Received, T1.LicenseView_CheckedIn, T1.Licens");
            viewString.Append("eView_LicenceeCertificate, T1.LicenseView_LicensorCertificate, T1.LicenseView_As");
            viewString.Append("sets, T1.LicenseView_Parts, T1.LicenseView_ChecksumType, T1.LicenseView_Checksum");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.LicenseID AS LicenseView_LicenseID");
            viewString.Append(", \r\n            T.CompanyID AS LicenseView_CompanyID, \r\n            T.ContactID ");
            viewString.Append("AS LicenseView_ContactID, \r\n            T.LicenseeGUID AS LicenseView_LicenseeGU");
            viewString.Append("ID, \r\n            T.LicenseeName AS LicenseView_LicenseeName, \r\n            T.Li");
            viewString.Append("censeeUsername AS LicenseView_LicenseeUsername, \r\n            T.LicenseeUniqueMa");
            viewString.Append("chineCode1 AS LicenseView_LicenseeUniqueMachineCode1, \r\n            T.LicenseeUn");
            viewString.Append("iqueMachineCode2 AS LicenseView_LicenseeUniqueMachineCode2, \r\n            T.Lice");
            viewString.Append("nseeGroupID AS LicenseView_LicenseeGroupID, \r\n            T.LicensorIP AS Licens");
            viewString.Append("eView_LicensorIP, \r\n            T.LicensorName AS LicenseView_LicensorName, \r\n  ");
            viewString.Append("          T.LicenseTypeID AS LicenseView_LicenseTypeID, \r\n            T.LicenseT");
            viewString.Append("ype AS LicenseView_LicenseType, \r\n            T.LicenseURL AS LicenseView_Licens");
            viewString.Append("eURL, \r\n            T.RootServerName AS LicenseView_RootServerName, \r\n          ");
            viewString.Append("  T.RootServerID AS LicenseView_RootServerID, \r\n            T.ServerName AS Lice");
            viewString.Append("nseView_ServerName, \r\n            T.ServerID AS LicenseView_ServerID, \r\n        ");
            viewString.Append("    T.ApplicationID AS LicenseView_ApplicationID, \r\n            T.ServiceAuthent");
            viewString.Append("icationMethod AS LicenseView_ServiceAuthenticationMethod, \r\n            T.Servic");
            viewString.Append("eAuthorisationMethod AS LicenseView_ServiceAuthorisationMethod, \r\n            T.");
            viewString.Append("ValidFrom AS LicenseView_ValidFrom, \r\n            T.Expiry AS LicenseView_Expiry");
            viewString.Append(", \r\n            T.SupportExpiry AS LicenseView_SupportExpiry, \r\n            T.Va");
            viewString.Append("lidForDuration AS LicenseView_ValidForDuration, \r\n            T.ValidForUnitID A");
            viewString.Append("S LicenseView_ValidForUnitID, \r\n            T.ValidForUnitTarget AS LicenseView_");
            viewString.Append("ValidForUnitTarget, \r\n            T.VersionMajor AS LicenseView_VersionMajor, \r\n");
            viewString.Append("            T.VersionMinor AS LicenseView_VersionMinor, \r\n            T.VersionB");
            viewString.Append("uild AS LicenseView_VersionBuild, \r\n            T.SupportedToMajor AS LicenseVie");
            viewString.Append("w_SupportedToMajor, \r\n            T.SupportedToMinor AS LicenseView_SupportedToM");
            viewString.Append("inor, \r\n            T.SupportedToBuild AS LicenseView_SupportedToBuild, \r\n      ");
            viewString.Append("      T.Nuked AS LicenseView_Nuked, \r\n            T.NukedReason AS LicenseView_N");
            viewString.Append("ukedReason, \r\n            T.TimeServerID AS LicenseView_TimeServerID, \r\n        ");
            viewString.Append("    T.TimeServerName AS LicenseView_TimeServerName, \r\n            T.TimeServerRe");
            viewString.Append("solutionMask AS LicenseView_TimeServerResolutionMask, \r\n            T.TimeServer");
            viewString.Append("IP AS LicenseView_TimeServerIP, \r\n            T.PreAuthorizationCode AS LicenseV");
            viewString.Append("iew_PreAuthorizationCode, \r\n            T.PreAuthorizationExecuted AS LicenseVie");
            viewString.Append("w_PreAuthorizationExecuted, \r\n            T.Signatory1 AS LicenseView_Signatory1");
            viewString.Append(", \r\n            T.Signatory2 AS LicenseView_Signatory2, \r\n            T.Signator");
            viewString.Append("y3 AS LicenseView_Signatory3, \r\n            T.Signature1 AS LicenseView_Signatur");
            viewString.Append("e1, \r\n            T.Signature2 AS LicenseView_Signature2, \r\n            T.Signat");
            viewString.Append("ure3 AS LicenseView_Signature3, \r\n            T.Received AS LicenseView_Received");
            viewString.Append(", \r\n            T.CheckedIn AS LicenseView_CheckedIn, \r\n            T.LicenceeCe");
            viewString.Append("rtificate AS LicenseView_LicenceeCertificate, \r\n            T.LicensorCertificat");
            viewString.Append("e AS LicenseView_LicensorCertificate, \r\n            T.Assets AS LicenseView_Asse");
            viewString.Append("ts, \r\n            T.Parts AS LicenseView_Parts, \r\n            T.ChecksumType AS ");
            viewString.Append("LicenseView_ChecksumType, \r\n            T.Checksum AS LicenseView_Checksum, \r\n  ");
            viewString.Append("          True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X");
            viewString.Append("_VW_License AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.LicenseViews", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_ModelsCurrent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView566()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_ModelsCurrent", "\r\n    SELECT VALUE -- Constructing X_VW_ModelsCurrent\r\n        [XODB.Module.Busin" +
                    "essObjects.Store.X_VW_ModelsCurrent](T1.[X_VW_ModelsCurrent.ProjectID], T1.[X_VW" +
                    "_ModelsCurrent.ProjectName], T1.[X_VW_ModelsCurrent.BlockModelID], T1.[X_VW_Mode" +
                    "lsCurrent.Alias], T1.[X_VW_ModelsCurrent.ModelStage], T1.[X_VW_ModelsCurrent.Has" +
                    "Subcells], T1.[X_VW_ModelsCurrent.Filename], T1.[X_VW_ModelsCurrent.Comment], T1" +
                    ".[X_VW_ModelsCurrent.Uploaded], T1.[X_VW_ModelsCurrent.Author], T1.[X_VW_ModelsC" +
                    "urrent.AuthorName], T1.[X_VW_ModelsCurrent.Approver], T1.[X_VW_ModelsCurrent.App" +
                    "roverName], T1.[X_VW_ModelsCurrent.ExternalReviewer], T1.[X_VW_ModelsCurrent.Ext" +
                    "ernalReviewerName])\r\n    FROM (\r\n        SELECT \r\n            T.ProjectID AS [X_" +
                    "VW_ModelsCurrent.ProjectID], \r\n            T.ProjectName AS [X_VW_ModelsCurrent." +
                    "ProjectName], \r\n            T.BlockModelID AS [X_VW_ModelsCurrent.BlockModelID]," +
                    " \r\n            T.Alias AS [X_VW_ModelsCurrent.Alias], \r\n            T.ModelStage" +
                    " AS [X_VW_ModelsCurrent.ModelStage], \r\n            T.HasSubcells AS [X_VW_Models" +
                    "Current.HasSubcells], \r\n            T.Filename AS [X_VW_ModelsCurrent.Filename]," +
                    " \r\n            T.Comment AS [X_VW_ModelsCurrent.Comment], \r\n            T.Upload" +
                    "ed AS [X_VW_ModelsCurrent.Uploaded], \r\n            T.Author AS [X_VW_ModelsCurre" +
                    "nt.Author], \r\n            T.AuthorName AS [X_VW_ModelsCurrent.AuthorName], \r\n   " +
                    "         T.Approver AS [X_VW_ModelsCurrent.Approver], \r\n            T.ApproverNa" +
                    "me AS [X_VW_ModelsCurrent.ApproverName], \r\n            T.ExternalReviewer AS [X_" +
                    "VW_ModelsCurrent.ExternalReviewer], \r\n            T.ExternalReviewerName AS [X_V" +
                    "W_ModelsCurrent.ExternalReviewerName], \r\n            True AS _from0\r\n        FRO" +
                    "M XODBC.ModelsCurrentViews AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelsCurrentViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView567()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelsCurrentViews", "\r\n    SELECT VALUE -- Constructing ModelsCurrentViews\r\n        [XODB.Module.Busin" +
                    "essObjects.ModelsCurrentView](T1.ModelsCurrentView_ProjectID, T1.ModelsCurrentVi" +
                    "ew_ProjectName, T1.ModelsCurrentView_BlockModelID, T1.ModelsCurrentView_Alias, T" +
                    "1.ModelsCurrentView_ModelStage, T1.ModelsCurrentView_HasSubcells, T1.ModelsCurre" +
                    "ntView_Filename, T1.ModelsCurrentView_Comment, T1.ModelsCurrentView_Uploaded, T1" +
                    ".ModelsCurrentView_Author, T1.ModelsCurrentView_AuthorName, T1.ModelsCurrentView" +
                    "_Approver, T1.ModelsCurrentView_ApproverName, T1.ModelsCurrentView_ExternalRevie" +
                    "wer, T1.ModelsCurrentView_ExternalReviewerName)\r\n    FROM (\r\n        SELECT \r\n  " +
                    "          T.ProjectID AS ModelsCurrentView_ProjectID, \r\n            T.ProjectNam" +
                    "e AS ModelsCurrentView_ProjectName, \r\n            T.BlockModelID AS ModelsCurren" +
                    "tView_BlockModelID, \r\n            T.Alias AS ModelsCurrentView_Alias, \r\n        " +
                    "    T.ModelStage AS ModelsCurrentView_ModelStage, \r\n            T.HasSubcells AS" +
                    " ModelsCurrentView_HasSubcells, \r\n            T.Filename AS ModelsCurrentView_Fi" +
                    "lename, \r\n            T.Comment AS ModelsCurrentView_Comment, \r\n            T.Up" +
                    "loaded AS ModelsCurrentView_Uploaded, \r\n            T.Author AS ModelsCurrentVie" +
                    "w_Author, \r\n            T.AuthorName AS ModelsCurrentView_AuthorName, \r\n        " +
                    "    T.Approver AS ModelsCurrentView_Approver, \r\n            T.ApproverName AS Mo" +
                    "delsCurrentView_ApproverName, \r\n            T.ExternalReviewer AS ModelsCurrentV" +
                    "iew_ExternalReviewer, \r\n            T.ExternalReviewerName AS ModelsCurrentView_" +
                    "ExternalReviewerName, \r\n            True AS _from0\r\n        FROM XODBModuleBusin" +
                    "essObjectsStoreContainer.X_VW_ModelsCurrent AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_ModelStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView568()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_ModelStatus", "\r\n    SELECT VALUE -- Constructing X_VW_ModelStatus\r\n        [XODB.Module.Busines" +
                    "sObjects.Store.X_VW_ModelStatus](T1.[X_VW_ModelStatus.ProjectID], T1.[X_VW_Model" +
                    "Status.ProjectName], T1.[X_VW_ModelStatus.BlockModelID], T1.[X_VW_ModelStatus.Al" +
                    "ias], T1.[X_VW_ModelStatus.ModelStage], T1.[X_VW_ModelStatus.HasSubcells], T1.[X" +
                    "_VW_ModelStatus.Filename], T1.[X_VW_ModelStatus.Comment], T1.[X_VW_ModelStatus.U" +
                    "ploaded], T1.[X_VW_ModelStatus.Author], T1.[X_VW_ModelStatus.AuthorName], T1.[X_" +
                    "VW_ModelStatus.Approver], T1.[X_VW_ModelStatus.ApproverName], T1.[X_VW_ModelStat" +
                    "us.ExternalReviewer], T1.[X_VW_ModelStatus.ExternalReviewerName])\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.ProjectID AS [X_VW_ModelStatus.ProjectID], \r\n     " +
                    "       T.ProjectName AS [X_VW_ModelStatus.ProjectName], \r\n            T.BlockMod" +
                    "elID AS [X_VW_ModelStatus.BlockModelID], \r\n            T.Alias AS [X_VW_ModelSta" +
                    "tus.Alias], \r\n            T.ModelStage AS [X_VW_ModelStatus.ModelStage], \r\n     " +
                    "       T.HasSubcells AS [X_VW_ModelStatus.HasSubcells], \r\n            T.Filename" +
                    " AS [X_VW_ModelStatus.Filename], \r\n            T.Comment AS [X_VW_ModelStatus.Co" +
                    "mment], \r\n            T.Uploaded AS [X_VW_ModelStatus.Uploaded], \r\n            T" +
                    ".Author AS [X_VW_ModelStatus.Author], \r\n            T.AuthorName AS [X_VW_ModelS" +
                    "tatus.AuthorName], \r\n            T.Approver AS [X_VW_ModelStatus.Approver], \r\n  " +
                    "          T.ApproverName AS [X_VW_ModelStatus.ApproverName], \r\n            T.Ext" +
                    "ernalReviewer AS [X_VW_ModelStatus.ExternalReviewer], \r\n            T.ExternalRe" +
                    "viewerName AS [X_VW_ModelStatus.ExternalReviewerName], \r\n            True AS _fr" +
                    "om0\r\n        FROM XODBC.ModelStatusViews AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ModelStatusViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView569()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ModelStatusViews", "\r\n    SELECT VALUE -- Constructing ModelStatusViews\r\n        [XODB.Module.Busines" +
                    "sObjects.ModelStatusView](T1.ModelStatusView_ProjectID, T1.ModelStatusView_Proje" +
                    "ctName, T1.ModelStatusView_BlockModelID, T1.ModelStatusView_Alias, T1.ModelStatu" +
                    "sView_ModelStage, T1.ModelStatusView_HasSubcells, T1.ModelStatusView_Filename, T" +
                    "1.ModelStatusView_Comment, T1.ModelStatusView_Uploaded, T1.ModelStatusView_Autho" +
                    "r, T1.ModelStatusView_AuthorName, T1.ModelStatusView_Approver, T1.ModelStatusVie" +
                    "w_ApproverName, T1.ModelStatusView_ExternalReviewer, T1.ModelStatusView_External" +
                    "ReviewerName)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectID AS ModelStat" +
                    "usView_ProjectID, \r\n            T.ProjectName AS ModelStatusView_ProjectName, \r\n" +
                    "            T.BlockModelID AS ModelStatusView_BlockModelID, \r\n            T.Alia" +
                    "s AS ModelStatusView_Alias, \r\n            T.ModelStage AS ModelStatusView_ModelS" +
                    "tage, \r\n            T.HasSubcells AS ModelStatusView_HasSubcells, \r\n            " +
                    "T.Filename AS ModelStatusView_Filename, \r\n            T.Comment AS ModelStatusVi" +
                    "ew_Comment, \r\n            T.Uploaded AS ModelStatusView_Uploaded, \r\n            " +
                    "T.Author AS ModelStatusView_Author, \r\n            T.AuthorName AS ModelStatusVie" +
                    "w_AuthorName, \r\n            T.Approver AS ModelStatusView_Approver, \r\n          " +
                    "  T.ApproverName AS ModelStatusView_ApproverName, \r\n            T.ExternalReview" +
                    "er AS ModelStatusView_ExternalReviewer, \r\n            T.ExternalReviewerName AS " +
                    "ModelStatusView_ExternalReviewerName, \r\n            True AS _from0\r\n        FROM" +
                    " XODBModuleBusinessObjectsStoreContainer.X_VW_ModelStatus AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_ProjectModelsAwaitingAuthorisation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView570()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_ProjectModelsAwaitingAuthorisation", "\r\n    SELECT VALUE -- Constructing X_VW_ProjectModelsAwaitingAuthorisation\r\n     " +
                    "   [XODB.Module.BusinessObjects.Store.X_VW_ProjectModelsAwaitingAuthorisation](T" +
                    "1.[X_VW_ProjectModelsAwaitingAuthorisation.ProjectID], T1.[X_VW_ProjectModelsAwa" +
                    "itingAuthorisation.ProjectName], T1.[X_VW_ProjectModelsAwaitingAuthorisation.Blo" +
                    "ckModelID], T1.[X_VW_ProjectModelsAwaitingAuthorisation.Alias], T1.[X_VW_Project" +
                    "ModelsAwaitingAuthorisation.ProjectTaskName], T1.[X_VW_ProjectModelsAwaitingAuth" +
                    "orisation.Creator], T1.[X_VW_ProjectModelsAwaitingAuthorisation.CreatorName], T1" +
                    ".[X_VW_ProjectModelsAwaitingAuthorisation.Reviewer], T1.[X_VW_ProjectModelsAwait" +
                    "ingAuthorisation.ReviewerName], T1.[X_VW_ProjectModelsAwaitingAuthorisation.Comm" +
                    "ent], T1.[X_VW_ProjectModelsAwaitingAuthorisation.VersionUpdated])\r\n    FROM (\r\n" +
                    "        SELECT \r\n            T.ProjectID AS [X_VW_ProjectModelsAwaitingAuthorisa" +
                    "tion.ProjectID], \r\n            T.ProjectName AS [X_VW_ProjectModelsAwaitingAutho" +
                    "risation.ProjectName], \r\n            T.BlockModelID AS [X_VW_ProjectModelsAwaiti" +
                    "ngAuthorisation.BlockModelID], \r\n            T.Alias AS [X_VW_ProjectModelsAwait" +
                    "ingAuthorisation.Alias], \r\n            T.ProjectTaskName AS [X_VW_ProjectModelsA" +
                    "waitingAuthorisation.ProjectTaskName], \r\n            T.Creator AS [X_VW_ProjectM" +
                    "odelsAwaitingAuthorisation.Creator], \r\n            T.CreatorName AS [X_VW_Projec" +
                    "tModelsAwaitingAuthorisation.CreatorName], \r\n            T.Reviewer AS [X_VW_Pro" +
                    "jectModelsAwaitingAuthorisation.Reviewer], \r\n            T.ReviewerName AS [X_VW" +
                    "_ProjectModelsAwaitingAuthorisation.ReviewerName], \r\n            T.Comment AS [X" +
                    "_VW_ProjectModelsAwaitingAuthorisation.Comment], \r\n            T.VersionUpdated " +
                    "AS [X_VW_ProjectModelsAwaitingAuthorisation.VersionUpdated], \r\n            True " +
                    "AS _from0\r\n        FROM XODBC.ProjectModelsAwaitingAuthorisationViews AS T\r\n    " +
                    ") AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectModelsAwaitingAuthorisationViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView571()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectModelsAwaitingAuthorisationViews", "\r\n    SELECT VALUE -- Constructing ProjectModelsAwaitingAuthorisationViews\r\n     " +
                    "   [XODB.Module.BusinessObjects.ProjectModelsAwaitingAuthorisationView](T1.Proje" +
                    "ctModelsAwaitingAuthorisationView_ProjectID, T1.ProjectModelsAwaitingAuthorisati" +
                    "onView_ProjectName, T1.ProjectModelsAwaitingAuthorisationView_BlockModelID, T1.P" +
                    "rojectModelsAwaitingAuthorisationView_Alias, T1.ProjectModelsAwaitingAuthorisati" +
                    "onView_ProjectTaskName, T1.ProjectModelsAwaitingAuthorisationView_Creator, T1.Pr" +
                    "ojectModelsAwaitingAuthorisationView_CreatorName, T1.ProjectModelsAwaitingAuthor" +
                    "isationView_Reviewer, T1.ProjectModelsAwaitingAuthorisationView_ReviewerName, T1" +
                    ".ProjectModelsAwaitingAuthorisationView_Comment, T1.ProjectModelsAwaitingAuthori" +
                    "sationView_VersionUpdated)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectID" +
                    " AS ProjectModelsAwaitingAuthorisationView_ProjectID, \r\n            T.ProjectNam" +
                    "e AS ProjectModelsAwaitingAuthorisationView_ProjectName, \r\n            T.BlockMo" +
                    "delID AS ProjectModelsAwaitingAuthorisationView_BlockModelID, \r\n            T.Al" +
                    "ias AS ProjectModelsAwaitingAuthorisationView_Alias, \r\n            T.ProjectTask" +
                    "Name AS ProjectModelsAwaitingAuthorisationView_ProjectTaskName, \r\n            T." +
                    "Creator AS ProjectModelsAwaitingAuthorisationView_Creator, \r\n            T.Creat" +
                    "orName AS ProjectModelsAwaitingAuthorisationView_CreatorName, \r\n            T.Re" +
                    "viewer AS ProjectModelsAwaitingAuthorisationView_Reviewer, \r\n            T.Revie" +
                    "werName AS ProjectModelsAwaitingAuthorisationView_ReviewerName, \r\n            T." +
                    "Comment AS ProjectModelsAwaitingAuthorisationView_Comment, \r\n            T.Versi" +
                    "onUpdated AS ProjectModelsAwaitingAuthorisationView_VersionUpdated, \r\n          " +
                    "  True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContainer.X_VW_Proj" +
                    "ectModelsAwaitingAuthorisation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_ProjectStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView572()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_ProjectStatus", @"
    SELECT VALUE -- Constructing X_VW_ProjectStatus
        [XODB.Module.BusinessObjects.Store.X_VW_ProjectStatus](T1.[X_VW_ProjectStatus.ProjectID], T1.[X_VW_ProjectStatus.ProjectName], T1.[X_VW_ProjectStatus.ProjectTaskName], T1.[X_VW_ProjectStatus.Creator], T1.[X_VW_ProjectStatus.CreatorName], T1.[X_VW_ProjectStatus.Reviewer], T1.[X_VW_ProjectStatus.ReviewerName], T1.[X_VW_ProjectStatus.Comment], T1.[X_VW_ProjectStatus.VersionUpdated])
    FROM (
        SELECT 
            T.ProjectID AS [X_VW_ProjectStatus.ProjectID], 
            T.ProjectName AS [X_VW_ProjectStatus.ProjectName], 
            T.ProjectTaskName AS [X_VW_ProjectStatus.ProjectTaskName], 
            T.Creator AS [X_VW_ProjectStatus.Creator], 
            T.CreatorName AS [X_VW_ProjectStatus.CreatorName], 
            T.Reviewer AS [X_VW_ProjectStatus.Reviewer], 
            T.ReviewerName AS [X_VW_ProjectStatus.ReviewerName], 
            T.Comment AS [X_VW_ProjectStatus.Comment], 
            T.VersionUpdated AS [X_VW_ProjectStatus.VersionUpdated], 
            True AS _from0
        FROM XODBC.ProjectStatusViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ProjectStatusViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView573()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ProjectStatusViews", @"
    SELECT VALUE -- Constructing ProjectStatusViews
        [XODB.Module.BusinessObjects.ProjectStatusView](T1.ProjectStatusView_ProjectID, T1.ProjectStatusView_ProjectName, T1.ProjectStatusView_ProjectTaskName, T1.ProjectStatusView_Creator, T1.ProjectStatusView_CreatorName, T1.ProjectStatusView_Reviewer, T1.ProjectStatusView_ReviewerName, T1.ProjectStatusView_Comment, T1.ProjectStatusView_VersionUpdated)
    FROM (
        SELECT 
            T.ProjectID AS ProjectStatusView_ProjectID, 
            T.ProjectName AS ProjectStatusView_ProjectName, 
            T.ProjectTaskName AS ProjectStatusView_ProjectTaskName, 
            T.Creator AS ProjectStatusView_Creator, 
            T.CreatorName AS ProjectStatusView_CreatorName, 
            T.Reviewer AS ProjectStatusView_Reviewer, 
            T.ReviewerName AS ProjectStatusView_ReviewerName, 
            T.Comment AS ProjectStatusView_Comment, 
            T.VersionUpdated AS ProjectStatusView_VersionUpdated, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_VW_ProjectStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_SurveyViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView574()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_SurveyViews", @"
    SELECT VALUE -- Constructing X_VW_SurveyViews
        [XODB.Module.BusinessObjects.Store.X_VW_SurveyViews](T1.[X_VW_SurveyViews.HoleName], T1.[X_VW_SurveyViews.ProjectName], T1.[X_VW_SurveyViews.ProjectCode], T1.[X_VW_SurveyViews.Depth], T1.[X_VW_SurveyViews.Dip], T1.[X_VW_SurveyViews.MagnetAffected], T1.[X_VW_SurveyViews.MagneticDip], T1.[X_VW_SurveyViews.OriginalAzimuth], T1.[X_VW_SurveyViews.CorrectedAzimuth], T1.[X_VW_SurveyViews.Gravity], T1.[X_VW_SurveyViews.Surveyed])
    FROM (
        SELECT 
            T.HoleName AS [X_VW_SurveyViews.HoleName], 
            T.ProjectName AS [X_VW_SurveyViews.ProjectName], 
            T.ProjectCode AS [X_VW_SurveyViews.ProjectCode], 
            T.Depth AS [X_VW_SurveyViews.Depth], 
            T.Dip AS [X_VW_SurveyViews.Dip], 
            T.MagnetAffected AS [X_VW_SurveyViews.MagnetAffected], 
            T.MagneticDip AS [X_VW_SurveyViews.MagneticDip], 
            T.OriginalAzimuth AS [X_VW_SurveyViews.OriginalAzimuth], 
            T.CorrectedAzimuth AS [X_VW_SurveyViews.CorrectedAzimuth], 
            T.Gravity AS [X_VW_SurveyViews.Gravity], 
            T.Surveyed AS [X_VW_SurveyViews.Surveyed], 
            True AS _from0
        FROM XODBC.SurveyViewsViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.SurveyViewsViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView575()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.SurveyViewsViews", @"
    SELECT VALUE -- Constructing SurveyViewsViews
        [XODB.Module.BusinessObjects.SurveyViewsView](T1.SurveyViewsView_HoleName, T1.SurveyViewsView_ProjectName, T1.SurveyViewsView_ProjectCode, T1.SurveyViewsView_Depth, T1.SurveyViewsView_Dip, T1.SurveyViewsView_MagnetAffected, T1.SurveyViewsView_MagneticDip, T1.SurveyViewsView_OriginalAzimuth, T1.SurveyViewsView_CorrectedAzimuth, T1.SurveyViewsView_Gravity, T1.SurveyViewsView_Surveyed)
    FROM (
        SELECT 
            T.HoleName AS SurveyViewsView_HoleName, 
            T.ProjectName AS SurveyViewsView_ProjectName, 
            T.ProjectCode AS SurveyViewsView_ProjectCode, 
            T.Depth AS SurveyViewsView_Depth, 
            T.Dip AS SurveyViewsView_Dip, 
            T.MagnetAffected AS SurveyViewsView_MagnetAffected, 
            T.MagneticDip AS SurveyViewsView_MagneticDip, 
            T.OriginalAzimuth AS SurveyViewsView_OriginalAzimuth, 
            T.CorrectedAzimuth AS SurveyViewsView_CorrectedAzimuth, 
            T.Gravity AS SurveyViewsView_Gravity, 
            T.Surveyed AS SurveyViewsView_Surveyed, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_VW_SurveyViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.X_VW_WorkType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView576()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.X_VW_WorkType", @"
    SELECT VALUE -- Constructing X_VW_WorkType
        [XODB.Module.BusinessObjects.Store.X_VW_WorkType](T1.[X_VW_WorkType.WorkTypeID], T1.[X_VW_WorkType.WorkTypeName], T1.[X_VW_WorkType.ParentWorkTypeID], T1.[X_VW_WorkType.WorkTypeClassID])
    FROM (
        SELECT 
            T.WorkTypeID AS [X_VW_WorkType.WorkTypeID], 
            T.WorkTypeName AS [X_VW_WorkType.WorkTypeName], 
            T.ParentWorkTypeID AS [X_VW_WorkType.ParentWorkTypeID], 
            T.WorkTypeClassID AS [X_VW_WorkType.WorkTypeClassID], 
            True AS _from0
        FROM XODBC.WorkTypeViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.WorkTypeViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView577()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.WorkTypeViews", @"
    SELECT VALUE -- Constructing WorkTypeViews
        [XODB.Module.BusinessObjects.WorkTypeView](T1.WorkTypeView_WorkTypeID, T1.WorkTypeView_WorkTypeName, T1.WorkTypeView_ParentWorkTypeID, T1.WorkTypeView_WorkTypeClassID)
    FROM (
        SELECT 
            T.WorkTypeID AS WorkTypeView_WorkTypeID, 
            T.WorkTypeName AS WorkTypeView_WorkTypeName, 
            T.ParentWorkTypeID AS WorkTypeView_ParentWorkTypeID, 
            T.WorkTypeClassID AS WorkTypeView_WorkTypeClassID, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.X_VW_WorkType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.InstancePromotedProperties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView578()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3873);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InstancePromotedProperties\r\n        [XODB.Mod");
            viewString.Append("ule.BusinessObjects.Store.InstancePromotedProperties](T1.InstancePromotedPropert");
            viewString.Append("ies_InstanceId, T1.InstancePromotedProperties_EncodingOption, T1.InstancePromote");
            viewString.Append("dProperties_PromotionName, T1.InstancePromotedProperties_Value33, T1.InstancePro");
            viewString.Append("motedProperties_Value34, T1.InstancePromotedProperties_Value35, T1.InstancePromo");
            viewString.Append("tedProperties_Value36, T1.InstancePromotedProperties_Value37, T1.InstancePromote");
            viewString.Append("dProperties_Value38, T1.InstancePromotedProperties_Value39, T1.InstancePromotedP");
            viewString.Append("roperties_Value40, T1.InstancePromotedProperties_Value41, T1.InstancePromotedPro");
            viewString.Append("perties_Value42, T1.InstancePromotedProperties_Value43, T1.InstancePromotedPrope");
            viewString.Append("rties_Value44, T1.InstancePromotedProperties_Value45, T1.InstancePromotedPropert");
            viewString.Append("ies_Value46, T1.InstancePromotedProperties_Value47, T1.InstancePromotedPropertie");
            viewString.Append("s_Value48, T1.InstancePromotedProperties_Value49, T1.InstancePromotedProperties_");
            viewString.Append("Value50, T1.InstancePromotedProperties_Value51, T1.InstancePromotedProperties_Va");
            viewString.Append("lue52, T1.InstancePromotedProperties_Value53, T1.InstancePromotedProperties_Valu");
            viewString.Append("e54, T1.InstancePromotedProperties_Value55, T1.InstancePromotedProperties_Value5");
            viewString.Append("6, T1.InstancePromotedProperties_Value57, T1.InstancePromotedProperties_Value58,");
            viewString.Append(" T1.InstancePromotedProperties_Value59, T1.InstancePromotedProperties_Value60, T");
            viewString.Append("1.InstancePromotedProperties_Value61, T1.InstancePromotedProperties_Value62, T1.");
            viewString.Append("InstancePromotedProperties_Value63, T1.InstancePromotedProperties_Value64)\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.InstanceId AS InstancePromotedProperties_");
            viewString.Append("InstanceId, \r\n            T.EncodingOption AS InstancePromotedProperties_Encodin");
            viewString.Append("gOption, \r\n            T.PromotionName AS InstancePromotedProperties_PromotionNa");
            viewString.Append("me, \r\n            T.Value33 AS InstancePromotedProperties_Value33, \r\n           ");
            viewString.Append(" T.Value34 AS InstancePromotedProperties_Value34, \r\n            T.Value35 AS Ins");
            viewString.Append("tancePromotedProperties_Value35, \r\n            T.Value36 AS InstancePromotedProp");
            viewString.Append("erties_Value36, \r\n            T.Value37 AS InstancePromotedProperties_Value37, \r");
            viewString.Append("\n            T.Value38 AS InstancePromotedProperties_Value38, \r\n            T.Va");
            viewString.Append("lue39 AS InstancePromotedProperties_Value39, \r\n            T.Value40 AS Instance");
            viewString.Append("PromotedProperties_Value40, \r\n            T.Value41 AS InstancePromotedPropertie");
            viewString.Append("s_Value41, \r\n            T.Value42 AS InstancePromotedProperties_Value42, \r\n    ");
            viewString.Append("        T.Value43 AS InstancePromotedProperties_Value43, \r\n            T.Value44");
            viewString.Append(" AS InstancePromotedProperties_Value44, \r\n            T.Value45 AS InstancePromo");
            viewString.Append("tedProperties_Value45, \r\n            T.Value46 AS InstancePromotedProperties_Val");
            viewString.Append("ue46, \r\n            T.Value47 AS InstancePromotedProperties_Value47, \r\n         ");
            viewString.Append("   T.Value48 AS InstancePromotedProperties_Value48, \r\n            T.Value49 AS I");
            viewString.Append("nstancePromotedProperties_Value49, \r\n            T.Value50 AS InstancePromotedPr");
            viewString.Append("operties_Value50, \r\n            T.Value51 AS InstancePromotedProperties_Value51,");
            viewString.Append(" \r\n            T.Value52 AS InstancePromotedProperties_Value52, \r\n            T.");
            viewString.Append("Value53 AS InstancePromotedProperties_Value53, \r\n            T.Value54 AS Instan");
            viewString.Append("cePromotedProperties_Value54, \r\n            T.Value55 AS InstancePromotedPropert");
            viewString.Append("ies_Value55, \r\n            T.Value56 AS InstancePromotedProperties_Value56, \r\n  ");
            viewString.Append("          T.Value57 AS InstancePromotedProperties_Value57, \r\n            T.Value");
            viewString.Append("58 AS InstancePromotedProperties_Value58, \r\n            T.Value59 AS InstancePro");
            viewString.Append("motedProperties_Value59, \r\n            T.Value60 AS InstancePromotedProperties_V");
            viewString.Append("alue60, \r\n            T.Value61 AS InstancePromotedProperties_Value61, \r\n       ");
            viewString.Append("     T.Value62 AS InstancePromotedProperties_Value62, \r\n            T.Value63 AS");
            viewString.Append(" InstancePromotedProperties_Value63, \r\n            T.Value64 AS InstancePromoted");
            viewString.Append("Properties_Value64, \r\n            True AS _from0\r\n        FROM XODBC.InstancePro");
            viewString.Append("motedProperties AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.InstancePromotedProperties", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.InstancePromotedProperties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView579()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3759);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InstancePromotedProperties\r\n        [XODB.Mod");
            viewString.Append("ule.BusinessObjects.InstancePromotedProperty](T1.InstancePromotedProperty_Instan");
            viewString.Append("ceId, T1.InstancePromotedProperty_EncodingOption, T1.InstancePromotedProperty_Pr");
            viewString.Append("omotionName, T1.InstancePromotedProperty_Value33, T1.InstancePromotedProperty_Va");
            viewString.Append("lue34, T1.InstancePromotedProperty_Value35, T1.InstancePromotedProperty_Value36,");
            viewString.Append(" T1.InstancePromotedProperty_Value37, T1.InstancePromotedProperty_Value38, T1.In");
            viewString.Append("stancePromotedProperty_Value39, T1.InstancePromotedProperty_Value40, T1.Instance");
            viewString.Append("PromotedProperty_Value41, T1.InstancePromotedProperty_Value42, T1.InstancePromot");
            viewString.Append("edProperty_Value43, T1.InstancePromotedProperty_Value44, T1.InstancePromotedProp");
            viewString.Append("erty_Value45, T1.InstancePromotedProperty_Value46, T1.InstancePromotedProperty_V");
            viewString.Append("alue47, T1.InstancePromotedProperty_Value48, T1.InstancePromotedProperty_Value49");
            viewString.Append(", T1.InstancePromotedProperty_Value50, T1.InstancePromotedProperty_Value51, T1.I");
            viewString.Append("nstancePromotedProperty_Value52, T1.InstancePromotedProperty_Value53, T1.Instanc");
            viewString.Append("ePromotedProperty_Value54, T1.InstancePromotedProperty_Value55, T1.InstancePromo");
            viewString.Append("tedProperty_Value56, T1.InstancePromotedProperty_Value57, T1.InstancePromotedPro");
            viewString.Append("perty_Value58, T1.InstancePromotedProperty_Value59, T1.InstancePromotedProperty_");
            viewString.Append("Value60, T1.InstancePromotedProperty_Value61, T1.InstancePromotedProperty_Value6");
            viewString.Append("2, T1.InstancePromotedProperty_Value63, T1.InstancePromotedProperty_Value64)\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.InstanceId AS InstancePromotedProperty_");
            viewString.Append("InstanceId, \r\n            T.EncodingOption AS InstancePromotedProperty_EncodingO");
            viewString.Append("ption, \r\n            T.PromotionName AS InstancePromotedProperty_PromotionName, ");
            viewString.Append("\r\n            T.Value33 AS InstancePromotedProperty_Value33, \r\n            T.Val");
            viewString.Append("ue34 AS InstancePromotedProperty_Value34, \r\n            T.Value35 AS InstancePro");
            viewString.Append("motedProperty_Value35, \r\n            T.Value36 AS InstancePromotedProperty_Value");
            viewString.Append("36, \r\n            T.Value37 AS InstancePromotedProperty_Value37, \r\n            T");
            viewString.Append(".Value38 AS InstancePromotedProperty_Value38, \r\n            T.Value39 AS Instanc");
            viewString.Append("ePromotedProperty_Value39, \r\n            T.Value40 AS InstancePromotedProperty_V");
            viewString.Append("alue40, \r\n            T.Value41 AS InstancePromotedProperty_Value41, \r\n         ");
            viewString.Append("   T.Value42 AS InstancePromotedProperty_Value42, \r\n            T.Value43 AS Ins");
            viewString.Append("tancePromotedProperty_Value43, \r\n            T.Value44 AS InstancePromotedProper");
            viewString.Append("ty_Value44, \r\n            T.Value45 AS InstancePromotedProperty_Value45, \r\n     ");
            viewString.Append("       T.Value46 AS InstancePromotedProperty_Value46, \r\n            T.Value47 AS");
            viewString.Append(" InstancePromotedProperty_Value47, \r\n            T.Value48 AS InstancePromotedPr");
            viewString.Append("operty_Value48, \r\n            T.Value49 AS InstancePromotedProperty_Value49, \r\n ");
            viewString.Append("           T.Value50 AS InstancePromotedProperty_Value50, \r\n            T.Value5");
            viewString.Append("1 AS InstancePromotedProperty_Value51, \r\n            T.Value52 AS InstancePromot");
            viewString.Append("edProperty_Value52, \r\n            T.Value53 AS InstancePromotedProperty_Value53,");
            viewString.Append(" \r\n            T.Value54 AS InstancePromotedProperty_Value54, \r\n            T.Va");
            viewString.Append("lue55 AS InstancePromotedProperty_Value55, \r\n            T.Value56 AS InstancePr");
            viewString.Append("omotedProperty_Value56, \r\n            T.Value57 AS InstancePromotedProperty_Valu");
            viewString.Append("e57, \r\n            T.Value58 AS InstancePromotedProperty_Value58, \r\n            ");
            viewString.Append("T.Value59 AS InstancePromotedProperty_Value59, \r\n            T.Value60 AS Instan");
            viewString.Append("cePromotedProperty_Value60, \r\n            T.Value61 AS InstancePromotedProperty_");
            viewString.Append("Value61, \r\n            T.Value62 AS InstancePromotedProperty_Value62, \r\n        ");
            viewString.Append("    T.Value63 AS InstancePromotedProperty_Value63, \r\n            T.Value64 AS In");
            viewString.Append("stancePromotedProperty_Value64, \r\n            True AS _from0\r\n        FROM XODBM");
            viewString.Append("oduleBusinessObjectsStoreContainer.InstancePromotedProperties AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.InstancePromotedProperties", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.Instances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView580()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2534);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Instances\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Store.Instances](T1.Instances_InstanceId, T1.Instances_PendingTimer, T1.Insta");
            viewString.Append("nces_CreationTime, T1.Instances_LastUpdatedTime, T1.Instances_ServiceDeploymentI");
            viewString.Append("d, T1.Instances_SuspensionExceptionName, T1.Instances_SuspensionReason, T1.Insta");
            viewString.Append("nces_ActiveBookmarks, T1.Instances_CurrentMachine, T1.Instances_LastMachine, T1.");
            viewString.Append("Instances_ExecutionStatus, T1.Instances_IsInitialized, T1.Instances_IsSuspended,");
            viewString.Append(" T1.Instances_IsCompleted, T1.Instances_EncodingOption, T1.Instances_ReadWritePr");
            viewString.Append("imitiveDataProperties, T1.Instances_WriteOnlyPrimitiveDataProperties, T1.Instanc");
            viewString.Append("es_ReadWriteComplexDataProperties, T1.Instances_WriteOnlyComplexDataProperties, ");
            viewString.Append("T1.Instances_IdentityName, T1.Instances_IdentityPackage, T1.Instances_Build, T1.");
            viewString.Append("Instances_Major, T1.Instances_Minor, T1.Instances_Revision)\r\n    FROM (\r\n       ");
            viewString.Append(" SELECT \r\n            T.InstanceId AS Instances_InstanceId, \r\n            T.Pend");
            viewString.Append("ingTimer AS Instances_PendingTimer, \r\n            T.CreationTime AS Instances_Cr");
            viewString.Append("eationTime, \r\n            T.LastUpdatedTime AS Instances_LastUpdatedTime, \r\n    ");
            viewString.Append("        T.ServiceDeploymentId AS Instances_ServiceDeploymentId, \r\n            T.");
            viewString.Append("SuspensionExceptionName AS Instances_SuspensionExceptionName, \r\n            T.Su");
            viewString.Append("spensionReason AS Instances_SuspensionReason, \r\n            T.ActiveBookmarks AS");
            viewString.Append(" Instances_ActiveBookmarks, \r\n            T.CurrentMachine AS Instances_CurrentM");
            viewString.Append("achine, \r\n            T.LastMachine AS Instances_LastMachine, \r\n            T.Ex");
            viewString.Append("ecutionStatus AS Instances_ExecutionStatus, \r\n            T.IsInitialized AS Ins");
            viewString.Append("tances_IsInitialized, \r\n            T.IsSuspended AS Instances_IsSuspended, \r\n  ");
            viewString.Append("          T.IsCompleted AS Instances_IsCompleted, \r\n            T.EncodingOption");
            viewString.Append(" AS Instances_EncodingOption, \r\n            T.ReadWritePrimitiveDataProperties A");
            viewString.Append("S Instances_ReadWritePrimitiveDataProperties, \r\n            T.WriteOnlyPrimitive");
            viewString.Append("DataProperties AS Instances_WriteOnlyPrimitiveDataProperties, \r\n            T.Re");
            viewString.Append("adWriteComplexDataProperties AS Instances_ReadWriteComplexDataProperties, \r\n    ");
            viewString.Append("        T.WriteOnlyComplexDataProperties AS Instances_WriteOnlyComplexDataProper");
            viewString.Append("ties, \r\n            T.IdentityName AS Instances_IdentityName, \r\n            T.Id");
            viewString.Append("entityPackage AS Instances_IdentityPackage, \r\n            T.Build AS Instances_B");
            viewString.Append("uild, \r\n            T.Major AS Instances_Major, \r\n            T.Minor AS Instanc");
            viewString.Append("es_Minor, \r\n            T.Revision AS Instances_Revision, \r\n            True AS ");
            viewString.Append("_from0\r\n        FROM XODBC.Instances AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.Instances", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBC.Instances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView581()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2511);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Instances\r\n        [XODB.Module.BusinessObjec");
            viewString.Append("ts.Instance](T1.Instance_InstanceId, T1.Instance_PendingTimer, T1.Instance_Creat");
            viewString.Append("ionTime, T1.Instance_LastUpdatedTime, T1.Instance_ServiceDeploymentId, T1.Instan");
            viewString.Append("ce_SuspensionExceptionName, T1.Instance_SuspensionReason, T1.Instance_ActiveBook");
            viewString.Append("marks, T1.Instance_CurrentMachine, T1.Instance_LastMachine, T1.Instance_Executio");
            viewString.Append("nStatus, T1.Instance_IsInitialized, T1.Instance_IsSuspended, T1.Instance_IsCompl");
            viewString.Append("eted, T1.Instance_EncodingOption, T1.Instance_ReadWritePrimitiveDataProperties, ");
            viewString.Append("T1.Instance_WriteOnlyPrimitiveDataProperties, T1.Instance_ReadWriteComplexDataPr");
            viewString.Append("operties, T1.Instance_WriteOnlyComplexDataProperties, T1.Instance_IdentityName, ");
            viewString.Append("T1.Instance_IdentityPackage, T1.Instance_Build, T1.Instance_Major, T1.Instance_M");
            viewString.Append("inor, T1.Instance_Revision)\r\n    FROM (\r\n        SELECT \r\n            T.Instance");
            viewString.Append("Id AS Instance_InstanceId, \r\n            T.PendingTimer AS Instance_PendingTimer");
            viewString.Append(", \r\n            T.CreationTime AS Instance_CreationTime, \r\n            T.LastUpd");
            viewString.Append("atedTime AS Instance_LastUpdatedTime, \r\n            T.ServiceDeploymentId AS Ins");
            viewString.Append("tance_ServiceDeploymentId, \r\n            T.SuspensionExceptionName AS Instance_S");
            viewString.Append("uspensionExceptionName, \r\n            T.SuspensionReason AS Instance_SuspensionR");
            viewString.Append("eason, \r\n            T.ActiveBookmarks AS Instance_ActiveBookmarks, \r\n          ");
            viewString.Append("  T.CurrentMachine AS Instance_CurrentMachine, \r\n            T.LastMachine AS In");
            viewString.Append("stance_LastMachine, \r\n            T.ExecutionStatus AS Instance_ExecutionStatus,");
            viewString.Append(" \r\n            T.IsInitialized AS Instance_IsInitialized, \r\n            T.IsSusp");
            viewString.Append("ended AS Instance_IsSuspended, \r\n            T.IsCompleted AS Instance_IsComplet");
            viewString.Append("ed, \r\n            T.EncodingOption AS Instance_EncodingOption, \r\n            T.R");
            viewString.Append("eadWritePrimitiveDataProperties AS Instance_ReadWritePrimitiveDataProperties, \r\n");
            viewString.Append("            T.WriteOnlyPrimitiveDataProperties AS Instance_WriteOnlyPrimitiveDat");
            viewString.Append("aProperties, \r\n            T.ReadWriteComplexDataProperties AS Instance_ReadWrit");
            viewString.Append("eComplexDataProperties, \r\n            T.WriteOnlyComplexDataProperties AS Instan");
            viewString.Append("ce_WriteOnlyComplexDataProperties, \r\n            T.IdentityName AS Instance_Iden");
            viewString.Append("tityName, \r\n            T.IdentityPackage AS Instance_IdentityPackage, \r\n       ");
            viewString.Append("     T.Build AS Instance_Build, \r\n            T.Major AS Instance_Major, \r\n     ");
            viewString.Append("       T.Minor AS Instance_Minor, \r\n            T.Revision AS Instance_Revision,");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM XODBModuleBusinessObjectsStoreContai");
            viewString.Append("ner.Instances AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.Instances", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for XODBModuleBusinessObjectsStoreContainer.ServiceDeployments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView582()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBModuleBusinessObjectsStoreContainer.ServiceDeployments", @"
    SELECT VALUE -- Constructing ServiceDeployments
        [XODB.Module.BusinessObjects.Store.ServiceDeployments](T1.ServiceDeployments_ServiceDeploymentId, T1.ServiceDeployments_SiteName, T1.ServiceDeployments_RelativeServicePath, T1.ServiceDeployments_RelativeApplicationPath, T1.ServiceDeployments_ServiceName, T1.ServiceDeployments_ServiceNamespace)
    FROM (
        SELECT 
            T.ServiceDeploymentId AS ServiceDeployments_ServiceDeploymentId, 
            T.SiteName AS ServiceDeployments_SiteName, 
            T.RelativeServicePath AS ServiceDeployments_RelativeServicePath, 
            T.RelativeApplicationPath AS ServiceDeployments_RelativeApplicationPath, 
            T.ServiceName AS ServiceDeployments_ServiceName, 
            T.ServiceNamespace AS ServiceDeployments_ServiceNamespace, 
            True AS _from0
        FROM XODBC.ServiceDeployments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for XODBC.ServiceDeployments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView583()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("XODBC.ServiceDeployments", @"
    SELECT VALUE -- Constructing ServiceDeployments
        [XODB.Module.BusinessObjects.ServiceDeployment](T1.ServiceDeployment_ServiceDeploymentId, T1.ServiceDeployment_SiteName, T1.ServiceDeployment_RelativeServicePath, T1.ServiceDeployment_RelativeApplicationPath, T1.ServiceDeployment_ServiceName, T1.ServiceDeployment_ServiceNamespace)
    FROM (
        SELECT 
            T.ServiceDeploymentId AS ServiceDeployment_ServiceDeploymentId, 
            T.SiteName AS ServiceDeployment_SiteName, 
            T.RelativeServicePath AS ServiceDeployment_RelativeServicePath, 
            T.RelativeApplicationPath AS ServiceDeployment_RelativeApplicationPath, 
            T.ServiceName AS ServiceDeployment_ServiceName, 
            T.ServiceNamespace AS ServiceDeployment_ServiceNamespace, 
            True AS _from0
        FROM XODBModuleBusinessObjectsStoreContainer.ServiceDeployments AS T
    ) AS T1");
        }
    }
}
