//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_ContactCompany")]
    public partial class ContactCompany : XPLiteObject
    {
        Guid fContactCompanyID;
        [Key(true)]
        public Guid ContactCompanyID
        {
            get { return fContactCompanyID; }
            set { SetPropertyValue<Guid>("ContactCompanyID", ref fContactCompanyID, value); }
        }
        Contact fContactID;
        [Association(@"ContactCompanyReferencesContact")]
        public Contact ContactID
        {
            get { return fContactID; }
            set { SetPropertyValue<Contact>("ContactID", ref fContactID, value); }
        }
        Company fCompanyID;
        [Association(@"ContactCompanyReferencesCompany")]
        public Company CompanyID
        {
            get { return fCompanyID; }
            set { SetPropertyValue<Company>("CompanyID", ref fCompanyID, value); }
        }
        string fPositionName;
        [Size(50)]
        public string PositionName
        {
            get { return fPositionName; }
            set { SetPropertyValue<string>("PositionName", ref fPositionName, value); }
        }
        DictionaryProfession fProfessionID;
        [Association(@"ContactCompanyReferencesDictionaryProfession")]
        public DictionaryProfession ProfessionID
        {
            get { return fProfessionID; }
            set { SetPropertyValue<DictionaryProfession>("ProfessionID", ref fProfessionID, value); }
        }
        bool fIsActive;
        public bool IsActive
        {
            get { return fIsActive; }
            set { SetPropertyValue<bool>("IsActive", ref fIsActive, value); }
        }
        string fOfficeLocation;
        [Size(50)]
        public string OfficeLocation
        {
            get { return fOfficeLocation; }
            set { SetPropertyValue<string>("OfficeLocation", ref fOfficeLocation, value); }
        }
        string fDivision;
        [Size(50)]
        public string Division
        {
            get { return fDivision; }
            set { SetPropertyValue<string>("Division", ref fDivision, value); }
        }
        DateTime fStarted;
        public DateTime Started
        {
            get { return fStarted; }
            set { SetPropertyValue<DateTime>("Started", ref fStarted, value); }
        }
        DateTime fFinished;
        public DateTime Finished
        {
            get { return fFinished; }
            set { SetPropertyValue<DateTime>("Finished", ref fFinished, value); }
        }
    }

}
