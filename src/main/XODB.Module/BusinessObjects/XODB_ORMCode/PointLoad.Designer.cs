//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_PointLoad")]
    public partial class PointLoad : XPLiteObject
    {
        Guid fPointLoadID;
        [Key(true)]
        public Guid PointLoadID
        {
            get { return fPointLoadID; }
            set { SetPropertyValue<Guid>("PointLoadID", ref fPointLoadID, value); }
        }
        Header fHeaderID;
        [Association(@"PointLoadReferencesHeader")]
        public Header HeaderID
        {
            get { return fHeaderID; }
            set { SetPropertyValue<Header>("HeaderID", ref fHeaderID, value); }
        }
        decimal fFromDepth;
        public decimal FromDepth
        {
            get { return fFromDepth; }
            set { SetPropertyValue<decimal>("FromDepth", ref fFromDepth, value); }
        }
        decimal fToDepth;
        public decimal ToDepth
        {
            get { return fToDepth; }
            set { SetPropertyValue<decimal>("ToDepth", ref fToDepth, value); }
        }
        string fSampleNumber;
        [Size(16)]
        public string SampleNumber
        {
            get { return fSampleNumber; }
            set { SetPropertyValue<string>("SampleNumber", ref fSampleNumber, value); }
        }
        decimal fSampleLength;
        public decimal SampleLength
        {
            get { return fSampleLength; }
            set { SetPropertyValue<decimal>("SampleLength", ref fSampleLength, value); }
        }
        DictionarySampleState fSampleStateID;
        [Association(@"PointLoadReferencesDictionarySampleState")]
        public DictionarySampleState SampleStateID
        {
            get { return fSampleStateID; }
            set { SetPropertyValue<DictionarySampleState>("SampleStateID", ref fSampleStateID, value); }
        }
        DictionarySampleType fSampleTypeID;
        [Association(@"PointLoadReferencesDictionarySampleType")]
        public DictionarySampleType SampleTypeID
        {
            get { return fSampleTypeID; }
            set { SetPropertyValue<DictionarySampleType>("SampleTypeID", ref fSampleTypeID, value); }
        }
        string fTestSampleCode;
        [Size(16)]
        public string TestSampleCode
        {
            get { return fTestSampleCode; }
            set { SetPropertyValue<string>("TestSampleCode", ref fTestSampleCode, value); }
        }
        decimal fTestSampleDepth;
        public decimal TestSampleDepth
        {
            get { return fTestSampleDepth; }
            set { SetPropertyValue<decimal>("TestSampleDepth", ref fTestSampleDepth, value); }
        }
        DictionaryPointLoadTestType fPointLoadTestTypeID;
        [Association(@"PointLoadReferencesDictionaryPointLoadTestType")]
        public DictionaryPointLoadTestType PointLoadTestTypeID
        {
            get { return fPointLoadTestTypeID; }
            set { SetPropertyValue<DictionaryPointLoadTestType>("PointLoadTestTypeID", ref fPointLoadTestTypeID, value); }
        }
        int fPlatenSeparation;
        public int PlatenSeparation
        {
            get { return fPlatenSeparation; }
            set { SetPropertyValue<int>("PlatenSeparation", ref fPlatenSeparation, value); }
        }
        int fWidth;
        public int Width
        {
            get { return fWidth; }
            set { SetPropertyValue<int>("Width", ref fWidth, value); }
        }
        decimal fFailureLoad;
        public decimal FailureLoad
        {
            get { return fFailureLoad; }
            set { SetPropertyValue<decimal>("FailureLoad", ref fFailureLoad, value); }
        }
        DictionaryFailureMode fFailureModeID;
        [Association(@"PointLoadReferencesDictionaryFailureMode")]
        public DictionaryFailureMode FailureModeID
        {
            get { return fFailureModeID; }
            set { SetPropertyValue<DictionaryFailureMode>("FailureModeID", ref fFailureModeID, value); }
        }
        string fComment;
        [Size(SizeAttribute.Unlimited)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        [Association(@"CompositeReferencesPointLoad", typeof(Composite))]
        public XPCollection<Composite> Composites { get { return GetCollection<Composite>("Composites"); } }
    }

}
