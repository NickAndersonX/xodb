//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_DictionarySampleCategory")]
    public partial class DictionarySampleCategory : XPLiteObject
    {
        Guid fSampleCategoryID;
        [Key(true)]
        public Guid SampleCategoryID
        {
            get { return fSampleCategoryID; }
            set { SetPropertyValue<Guid>("SampleCategoryID", ref fSampleCategoryID, value); }
        }
        string fStandardSampleCategoryName;
        [Indexed(Name = @"IDictionarySampleCategory", Unique = true)]
        [Size(16)]
        public string StandardSampleCategoryName
        {
            get { return fStandardSampleCategoryName; }
            set { SetPropertyValue<string>("StandardSampleCategoryName", ref fStandardSampleCategoryName, value); }
        }
        string fCoalSampleCategoryName;
        [Size(16)]
        public string CoalSampleCategoryName
        {
            get { return fCoalSampleCategoryName; }
            set { SetPropertyValue<string>("CoalSampleCategoryName", ref fCoalSampleCategoryName, value); }
        }
        string fGoldSampleCategoryName;
        [Size(16)]
        public string GoldSampleCategoryName
        {
            get { return fGoldSampleCategoryName; }
            set { SetPropertyValue<string>("GoldSampleCategoryName", ref fGoldSampleCategoryName, value); }
        }
        string fCustomSampleCategoryName;
        [Size(16)]
        public string CustomSampleCategoryName
        {
            get { return fCustomSampleCategoryName; }
            set { SetPropertyValue<string>("CustomSampleCategoryName", ref fCustomSampleCategoryName, value); }
        }
        string fDescription;
        [Size(255)]
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>("Description", ref fDescription, value); }
        }
        string fFullDescription;
        [Size(SizeAttribute.Unlimited)]
        public string FullDescription
        {
            get { return fFullDescription; }
            set { SetPropertyValue<string>("FullDescription", ref fFullDescription, value); }
        }
        System.Drawing.Image fThumbnail;
        [Size(SizeAttribute.Unlimited)]
        [ValueConverter(typeof(DevExpress.Xpo.Metadata.ImageValueConverter))]
        public System.Drawing.Image Thumbnail
        {
            get { return fThumbnail; }
            set { SetPropertyValue<System.Drawing.Image>("Thumbnail", ref fThumbnail, value); }
        }
        FileData fOriginalFileDataID;
        [Association(@"DictionarySampleCategoryReferencesFileData")]
        public FileData OriginalFileDataID
        {
            get { return fOriginalFileDataID; }
            set { SetPropertyValue<FileData>("OriginalFileDataID", ref fOriginalFileDataID, value); }
        }
        [Association(@"AssayGroupStandardTestResultReferencesDictionarySampleCategory", typeof(AssayGroupStandardTestResult))]
        public XPCollection<AssayGroupStandardTestResult> AssayGroupStandardTestResults { get { return GetCollection<AssayGroupStandardTestResult>("AssayGroupStandardTestResults"); } }
        [Association(@"AssayGroupTestSampleReferencesDictionarySampleCategory", typeof(AssayGroupTestSample))]
        public XPCollection<AssayGroupTestSample> AssayGroupTestSamples { get { return GetCollection<AssayGroupTestSample>("AssayGroupTestSamples"); } }
        [Association(@"SampleReferencesDictionarySampleCategory", typeof(Sample))]
        public XPCollection<Sample> Samples { get { return GetCollection<Sample>("Samples"); } }
    }

}
