//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Sample")]
    public partial class Sample : XPLiteObject
    {
        Guid fSampleID;
        [Key(true)]
        public Guid SampleID
        {
            get { return fSampleID; }
            set { SetPropertyValue<Guid>("SampleID", ref fSampleID, value); }
        }
        Header fHeaderID;
        [Association(@"SampleReferencesHeader")]
        public Header HeaderID
        {
            get { return fHeaderID; }
            set { SetPropertyValue<Header>("HeaderID", ref fHeaderID, value); }
        }
        DictionarySampleCategory fSampleCategoryID;
        [Association(@"SampleReferencesDictionarySampleCategory")]
        public DictionarySampleCategory SampleCategoryID
        {
            get { return fSampleCategoryID; }
            set { SetPropertyValue<DictionarySampleCategory>("SampleCategoryID", ref fSampleCategoryID, value); }
        }
        DictionarySampleState fSampleStateID;
        [Association(@"SampleReferencesDictionarySampleState")]
        public DictionarySampleState SampleStateID
        {
            get { return fSampleStateID; }
            set { SetPropertyValue<DictionarySampleState>("SampleStateID", ref fSampleStateID, value); }
        }
        DictionarySampleType fSampleTypeID;
        [Association(@"SampleReferencesDictionarySampleType")]
        public DictionarySampleType SampleTypeID
        {
            get { return fSampleTypeID; }
            set { SetPropertyValue<DictionarySampleType>("SampleTypeID", ref fSampleTypeID, value); }
        }
        string fSampleName;
        [Size(16)]
        public string SampleName
        {
            get { return fSampleName; }
            set { SetPropertyValue<string>("SampleName", ref fSampleName, value); }
        }
        string fSampleNumber;
        [Size(16)]
        public string SampleNumber
        {
            get { return fSampleNumber; }
            set { SetPropertyValue<string>("SampleNumber", ref fSampleNumber, value); }
        }
        DateTime fSampleTaken;
        public DateTime SampleTaken
        {
            get { return fSampleTaken; }
            set { SetPropertyValue<DateTime>("SampleTaken", ref fSampleTaken, value); }
        }
        decimal fFromDepth;
        public decimal FromDepth
        {
            get { return fFromDepth; }
            set { SetPropertyValue<decimal>("FromDepth", ref fFromDepth, value); }
        }
        decimal fToDepth;
        public decimal ToDepth
        {
            get { return fToDepth; }
            set { SetPropertyValue<decimal>("ToDepth", ref fToDepth, value); }
        }
        decimal fSampleMassKg;
        public decimal SampleMassKg
        {
            get { return fSampleMassKg; }
            set { SetPropertyValue<decimal>("SampleMassKg", ref fSampleMassKg, value); }
        }
        decimal fDryMassKg;
        public decimal DryMassKg
        {
            get { return fDryMassKg; }
            set { SetPropertyValue<decimal>("DryMassKg", ref fDryMassKg, value); }
        }
        int fVersion;
        public int Version
        {
            get { return fVersion; }
            set { SetPropertyValue<int>("Version", ref fVersion, value); }
        }
        Guid fVersionAntecedentID;
        public Guid VersionAntecedentID
        {
            get { return fVersionAntecedentID; }
            set { SetPropertyValue<Guid>("VersionAntecedentID", ref fVersionAntecedentID, value); }
        }
        int fVersionCertainty;
        public int VersionCertainty
        {
            get { return fVersionCertainty; }
            set { SetPropertyValue<int>("VersionCertainty", ref fVersionCertainty, value); }
        }
        Guid fVersionWorkflowInstanceID;
        public Guid VersionWorkflowInstanceID
        {
            get { return fVersionWorkflowInstanceID; }
            set { SetPropertyValue<Guid>("VersionWorkflowInstanceID", ref fVersionWorkflowInstanceID, value); }
        }
        Guid fVersionUpdatedBy;
        public Guid VersionUpdatedBy
        {
            get { return fVersionUpdatedBy; }
            set { SetPropertyValue<Guid>("VersionUpdatedBy", ref fVersionUpdatedBy, value); }
        }
        Guid fVersionDeletedBy;
        public Guid VersionDeletedBy
        {
            get { return fVersionDeletedBy; }
            set { SetPropertyValue<Guid>("VersionDeletedBy", ref fVersionDeletedBy, value); }
        }
        Guid fVersionOwnerContactID;
        public Guid VersionOwnerContactID
        {
            get { return fVersionOwnerContactID; }
            set { SetPropertyValue<Guid>("VersionOwnerContactID", ref fVersionOwnerContactID, value); }
        }
        Guid fVersionOwnerCompanyID;
        public Guid VersionOwnerCompanyID
        {
            get { return fVersionOwnerCompanyID; }
            set { SetPropertyValue<Guid>("VersionOwnerCompanyID", ref fVersionOwnerCompanyID, value); }
        }
        DateTime fVersionUpdated;
        public DateTime VersionUpdated
        {
            get { return fVersionUpdated; }
            set { SetPropertyValue<DateTime>("VersionUpdated", ref fVersionUpdated, value); }
        }
        [Association(@"X_AssayGroupTestResultReferencesSample", typeof(AssayGroupTestResult))]
        public XPCollection<AssayGroupTestResult> X_AssayGroupTestResults { get { return GetCollection<AssayGroupTestResult>("X_AssayGroupTestResults"); } }
        [Association(@"AssayGroupStandardTestResultReferencesSample", typeof(AssayGroupStandardTestResult))]
        public XPCollection<AssayGroupStandardTestResult> AssayGroupStandardTestResults { get { return GetCollection<AssayGroupStandardTestResult>("AssayGroupStandardTestResults"); } }
        [Association(@"CompositeReferencesSample", typeof(Composite))]
        public XPCollection<Composite> Composites { get { return GetCollection<Composite>("Composites"); } }
    }

}
