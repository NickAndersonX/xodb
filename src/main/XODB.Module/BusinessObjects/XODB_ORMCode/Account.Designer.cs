//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"Q_Account")]
    public partial class Account : XPLiteObject
    {
        Guid fAccountID;
        [Key(true)]
        public Guid AccountID
        {
            get { return fAccountID; }
            set { SetPropertyValue<Guid>("AccountID", ref fAccountID, value); }
        }
        Account fParentAccountID;
        [Association(@"AccountReferencesQ_Account")]
        public Account ParentAccountID
        {
            get { return fParentAccountID; }
            set { SetPropertyValue<Account>("ParentAccountID", ref fParentAccountID, value); }
        }
        string fAcountCode;
        [Indexed(Name = @"UQ__Q_Accoun__D80F99A726CFC035", Unique = true)]
        [Size(60)]
        public string AcountCode
        {
            get { return fAcountCode; }
            set { SetPropertyValue<string>("AcountCode", ref fAcountCode, value); }
        }
        string fAccountName;
        [Size(60)]
        public string AccountName
        {
            get { return fAccountName; }
            set { SetPropertyValue<string>("AccountName", ref fAccountName, value); }
        }
        Company fPrimaryCompanyID;
        [Association(@"AccountReferencesCompany")]
        public Company PrimaryCompanyID
        {
            get { return fPrimaryCompanyID; }
            set { SetPropertyValue<Company>("PrimaryCompanyID", ref fPrimaryCompanyID, value); }
        }
        Location fDefaultLocationID;
        [Association(@"AccountReferencesLocation")]
        public Location DefaultLocationID
        {
            get { return fDefaultLocationID; }
            set { SetPropertyValue<Location>("DefaultLocationID", ref fDefaultLocationID, value); }
        }
        string fDescription;
        [Size(255)]
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>("Description", ref fDescription, value); }
        }
        int fVersion;
        public int Version
        {
            get { return fVersion; }
            set { SetPropertyValue<int>("Version", ref fVersion, value); }
        }
        Guid fVersionAntecedentID;
        public Guid VersionAntecedentID
        {
            get { return fVersionAntecedentID; }
            set { SetPropertyValue<Guid>("VersionAntecedentID", ref fVersionAntecedentID, value); }
        }
        int fVersionCertainty;
        public int VersionCertainty
        {
            get { return fVersionCertainty; }
            set { SetPropertyValue<int>("VersionCertainty", ref fVersionCertainty, value); }
        }
        Guid fVersionWorkflowInstanceID;
        public Guid VersionWorkflowInstanceID
        {
            get { return fVersionWorkflowInstanceID; }
            set { SetPropertyValue<Guid>("VersionWorkflowInstanceID", ref fVersionWorkflowInstanceID, value); }
        }
        Guid fVersionUpdatedBy;
        public Guid VersionUpdatedBy
        {
            get { return fVersionUpdatedBy; }
            set { SetPropertyValue<Guid>("VersionUpdatedBy", ref fVersionUpdatedBy, value); }
        }
        Guid fVersionDeletedBy;
        public Guid VersionDeletedBy
        {
            get { return fVersionDeletedBy; }
            set { SetPropertyValue<Guid>("VersionDeletedBy", ref fVersionDeletedBy, value); }
        }
        Guid fVersionOwnerContactID;
        public Guid VersionOwnerContactID
        {
            get { return fVersionOwnerContactID; }
            set { SetPropertyValue<Guid>("VersionOwnerContactID", ref fVersionOwnerContactID, value); }
        }
        Guid fVersionOwnerCompanyID;
        public Guid VersionOwnerCompanyID
        {
            get { return fVersionOwnerCompanyID; }
            set { SetPropertyValue<Guid>("VersionOwnerCompanyID", ref fVersionOwnerCompanyID, value); }
        }
        DateTime fVersionUpdated;
        public DateTime VersionUpdated
        {
            get { return fVersionUpdated; }
            set { SetPropertyValue<DateTime>("VersionUpdated", ref fVersionUpdated, value); }
        }
        [Association(@"AccountReferencesQ_Account", typeof(Account))]
        public XPCollection<Account> AccountCollection { get { return GetCollection<Account>("AccountCollection"); } }
        [Association(@"PurchaseOrderReferencesQ_Account", typeof(PurchaseOrder))]
        public XPCollection<PurchaseOrder> PurchaseOrders { get { return GetCollection<PurchaseOrder>("PurchaseOrders"); } }
        [Association(@"PurchaseOrderReferencesQ_Account1", typeof(PurchaseOrder))]
        public XPCollection<PurchaseOrder> PurchaseOrders1 { get { return GetCollection<PurchaseOrder>("PurchaseOrders1"); } }
        [Association(@"PaymentReferencesQ_Account", typeof(Payment))]
        public XPCollection<Payment> Payments { get { return GetCollection<Payment>("Payments"); } }
        [Association(@"PaymentReferencesQ_Account1", typeof(Payment))]
        public XPCollection<Payment> Payments1 { get { return GetCollection<Payment>("Payments1"); } }
        [Association(@"InvoiceReferencesQ_Account", typeof(Invoice))]
        public XPCollection<Invoice> Invoices { get { return GetCollection<Invoice>("Invoices"); } }
        [Association(@"InvoiceReferencesQ_Account1", typeof(Invoice))]
        public XPCollection<Invoice> Invoices1 { get { return GetCollection<Invoice>("Invoices1"); } }
        [Association(@"JournalReferencesQ_Account", typeof(Journal))]
        public XPCollection<Journal> Journals { get { return GetCollection<Journal>("Journals"); } }
        [Association(@"CompanyAccountReferencesQ_Account", typeof(CompanyAccount))]
        public XPCollection<CompanyAccount> CompanyAccounts { get { return GetCollection<CompanyAccount>("CompanyAccounts"); } }
        [Association(@"AssetReferencesQ_Account", typeof(Asset))]
        public XPCollection<Asset> Assets { get { return GetCollection<Asset>("Assets"); } }
        [Association(@"AssetReferencesQ_Account1", typeof(Asset))]
        public XPCollection<Asset> Assets1 { get { return GetCollection<Asset>("Assets1"); } }
        [Association(@"AssetReferencesQ_Account2", typeof(Asset))]
        public XPCollection<Asset> Assets2 { get { return GetCollection<Asset>("Assets2"); } }
        [Association(@"DeliveryAdviceReferencesQ_Account", typeof(DeliveryAdvice))]
        public XPCollection<DeliveryAdvice> DeliveryAdvices { get { return GetCollection<DeliveryAdvice>("DeliveryAdvices"); } }
        [Association(@"SupplyItemReferencesAccount", typeof(SupplyItem))]
        public XPCollection<SupplyItem> SupplyItems { get { return GetCollection<SupplyItem>("SupplyItems"); } }
        [Association(@"AccountDiscountReferencesAccount", typeof(AccountDiscount))]
        public XPCollection<AccountDiscount> AccountDiscounts { get { return GetCollection<AccountDiscount>("AccountDiscounts"); } }
    }

}
