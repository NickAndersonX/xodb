//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_DictionarySampleType")]
    public partial class DictionarySampleType : XPLiteObject
    {
        Guid fSampleTypeID;
        [Key(true)]
        public Guid SampleTypeID
        {
            get { return fSampleTypeID; }
            set { SetPropertyValue<Guid>("SampleTypeID", ref fSampleTypeID, value); }
        }
        string fStandardSampleTypeName;
        [Indexed(Name = @"IDictionarySampleType", Unique = true)]
        [Size(16)]
        public string StandardSampleTypeName
        {
            get { return fStandardSampleTypeName; }
            set { SetPropertyValue<string>("StandardSampleTypeName", ref fStandardSampleTypeName, value); }
        }
        string fCoalSampleTypeName;
        [Size(16)]
        public string CoalSampleTypeName
        {
            get { return fCoalSampleTypeName; }
            set { SetPropertyValue<string>("CoalSampleTypeName", ref fCoalSampleTypeName, value); }
        }
        string fGoldSampleTypeName;
        [Size(16)]
        public string GoldSampleTypeName
        {
            get { return fGoldSampleTypeName; }
            set { SetPropertyValue<string>("GoldSampleTypeName", ref fGoldSampleTypeName, value); }
        }
        string fCustomSampleTypeName;
        [Size(16)]
        public string CustomSampleTypeName
        {
            get { return fCustomSampleTypeName; }
            set { SetPropertyValue<string>("CustomSampleTypeName", ref fCustomSampleTypeName, value); }
        }
        string fDescription;
        [Size(255)]
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>("Description", ref fDescription, value); }
        }
        string fFullDescription;
        [Size(SizeAttribute.Unlimited)]
        public string FullDescription
        {
            get { return fFullDescription; }
            set { SetPropertyValue<string>("FullDescription", ref fFullDescription, value); }
        }
        System.Drawing.Image fThumbnail;
        [Size(SizeAttribute.Unlimited)]
        [ValueConverter(typeof(DevExpress.Xpo.Metadata.ImageValueConverter))]
        public System.Drawing.Image Thumbnail
        {
            get { return fThumbnail; }
            set { SetPropertyValue<System.Drawing.Image>("Thumbnail", ref fThumbnail, value); }
        }
        FileData fOriginalFileDataID;
        [Association(@"DictionarySampleTypeReferencesFileData")]
        public FileData OriginalFileDataID
        {
            get { return fOriginalFileDataID; }
            set { SetPropertyValue<FileData>("OriginalFileDataID", ref fOriginalFileDataID, value); }
        }
        [Association(@"AssayGroupStandardTestResultReferencesDictionarySampleType", typeof(AssayGroupStandardTestResult))]
        public XPCollection<AssayGroupStandardTestResult> AssayGroupStandardTestResults { get { return GetCollection<AssayGroupStandardTestResult>("AssayGroupStandardTestResults"); } }
        [Association(@"AssayGroupTestSampleReferencesDictionarySampleType", typeof(AssayGroupTestSample))]
        public XPCollection<AssayGroupTestSample> AssayGroupTestSamples { get { return GetCollection<AssayGroupTestSample>("AssayGroupTestSamples"); } }
        [Association(@"LithologyReferencesDictionarySampleType", typeof(Lithology))]
        public XPCollection<Lithology> Lithologies { get { return GetCollection<Lithology>("Lithologies"); } }
        [Association(@"PointLoadReferencesDictionarySampleType", typeof(PointLoad))]
        public XPCollection<PointLoad> PointLoads { get { return GetCollection<PointLoad>("PointLoads"); } }
        [Association(@"WaterFlowReferencesDictionarySampleType", typeof(WaterFlow))]
        public XPCollection<WaterFlow> WaterFlows { get { return GetCollection<WaterFlow>("WaterFlows"); } }
        [Association(@"SampleReferencesDictionarySampleType", typeof(Sample))]
        public XPCollection<Sample> Samples { get { return GetCollection<Sample>("Samples"); } }
    }

}
