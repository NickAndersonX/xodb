//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Contact")]
    public partial class Contact : XPLiteObject
    {
        Guid fContactID;
        [Key(true)]
        public Guid ContactID
        {
            get { return fContactID; }
            set { SetPropertyValue<Guid>("ContactID", ref fContactID, value); }
        }
        string fContactName;
        [Indexed(Name = @"IPerson", Unique = true)]
        [Size(120)]
        public string ContactName
        {
            get { return fContactName; }
            set { SetPropertyValue<string>("ContactName", ref fContactName, value); }
        }
        string fTitle;
        [Size(16)]
        public string Title
        {
            get { return fTitle; }
            set { SetPropertyValue<string>("Title", ref fTitle, value); }
        }
        string fSurname;
        [Size(60)]
        public string Surname
        {
            get { return fSurname; }
            set { SetPropertyValue<string>("Surname", ref fSurname, value); }
        }
        string fFirstname;
        [Size(60)]
        public string Firstname
        {
            get { return fFirstname; }
            set { SetPropertyValue<string>("Firstname", ref fFirstname, value); }
        }
        string fUsername;
        public string Username
        {
            get { return fUsername; }
            set { SetPropertyValue<string>("Username", ref fUsername, value); }
        }
        string fMiddleNames;
        [Size(60)]
        public string MiddleNames
        {
            get { return fMiddleNames; }
            set { SetPropertyValue<string>("MiddleNames", ref fMiddleNames, value); }
        }
        string fInitials;
        [Size(16)]
        public string Initials
        {
            get { return fInitials; }
            set { SetPropertyValue<string>("Initials", ref fInitials, value); }
        }
        DateTime fDOB;
        public DateTime DOB
        {
            get { return fDOB; }
            set { SetPropertyValue<DateTime>("DOB", ref fDOB, value); }
        }
        DictionaryCountry fBirthCountryID;
        [Size(2)]
        [Association(@"ContactReferencesDictionaryCountry")]
        public DictionaryCountry BirthCountryID
        {
            get { return fBirthCountryID; }
            set { SetPropertyValue<DictionaryCountry>("BirthCountryID", ref fBirthCountryID, value); }
        }
        string fBirthCity;
        [Size(60)]
        public string BirthCity
        {
            get { return fBirthCity; }
            set { SetPropertyValue<string>("BirthCity", ref fBirthCity, value); }
        }
        Guid fAspNetUserID;
        [Indexed(Name = @"iAspNetUserID_Contact")]
        public Guid AspNetUserID
        {
            get { return fAspNetUserID; }
            set { SetPropertyValue<Guid>("AspNetUserID", ref fAspNetUserID, value); }
        }
        Guid fXafUserID;
        [Indexed(Name = @"iXafUserID_Contact")]
        public Guid XafUserID
        {
            get { return fXafUserID; }
            set { SetPropertyValue<Guid>("XafUserID", ref fXafUserID, value); }
        }
        string fOAuthID;
        [Size(256)]
        public string OAuthID
        {
            get { return fOAuthID; }
            set { SetPropertyValue<string>("OAuthID", ref fOAuthID, value); }
        }
        byte[] fPhoto;
        [Size(SizeAttribute.Unlimited)]
        public byte[] Photo
        {
            get { return fPhoto; }
            set { SetPropertyValue<byte[]>("Photo", ref fPhoto, value); }
        }
        string fShortBiography;
        [Size(SizeAttribute.Unlimited)]
        public string ShortBiography
        {
            get { return fShortBiography; }
            set { SetPropertyValue<string>("ShortBiography", ref fShortBiography, value); }
        }
        string fHash;
        [Size(255)]
        public string Hash
        {
            get { return fHash; }
            set { SetPropertyValue<string>("Hash", ref fHash, value); }
        }
        string fDefaultEmail;
        [Size(255)]
        public string DefaultEmail
        {
            get { return fDefaultEmail; }
            set { SetPropertyValue<string>("DefaultEmail", ref fDefaultEmail, value); }
        }
        int fVersion;
        public int Version
        {
            get { return fVersion; }
            set { SetPropertyValue<int>("Version", ref fVersion, value); }
        }
        Guid fVersionAntecedentID;
        public Guid VersionAntecedentID
        {
            get { return fVersionAntecedentID; }
            set { SetPropertyValue<Guid>("VersionAntecedentID", ref fVersionAntecedentID, value); }
        }
        int fVersionCertainty;
        public int VersionCertainty
        {
            get { return fVersionCertainty; }
            set { SetPropertyValue<int>("VersionCertainty", ref fVersionCertainty, value); }
        }
        Guid fVersionWorkflowInstanceID;
        public Guid VersionWorkflowInstanceID
        {
            get { return fVersionWorkflowInstanceID; }
            set { SetPropertyValue<Guid>("VersionWorkflowInstanceID", ref fVersionWorkflowInstanceID, value); }
        }
        Guid fVersionUpdatedBy;
        public Guid VersionUpdatedBy
        {
            get { return fVersionUpdatedBy; }
            set { SetPropertyValue<Guid>("VersionUpdatedBy", ref fVersionUpdatedBy, value); }
        }
        Guid fVersionDeletedBy;
        public Guid VersionDeletedBy
        {
            get { return fVersionDeletedBy; }
            set { SetPropertyValue<Guid>("VersionDeletedBy", ref fVersionDeletedBy, value); }
        }
        Guid fVersionOwnerContactID;
        public Guid VersionOwnerContactID
        {
            get { return fVersionOwnerContactID; }
            set { SetPropertyValue<Guid>("VersionOwnerContactID", ref fVersionOwnerContactID, value); }
        }
        Guid fVersionOwnerCompanyID;
        public Guid VersionOwnerCompanyID
        {
            get { return fVersionOwnerCompanyID; }
            set { SetPropertyValue<Guid>("VersionOwnerCompanyID", ref fVersionOwnerCompanyID, value); }
        }
        DateTime fVersionUpdated;
        public DateTime VersionUpdated
        {
            get { return fVersionUpdated; }
            set { SetPropertyValue<DateTime>("VersionUpdated", ref fVersionUpdated, value); }
        }
        [Association(@"AssayGroupReferencesContact", typeof(AssayGroup))]
        public XPCollection<AssayGroup> AssayGroups { get { return GetCollection<AssayGroup>("AssayGroups"); } }
        [Association(@"AssayGroupReferencesContact1", typeof(AssayGroup))]
        public XPCollection<AssayGroup> AssayGroups1 { get { return GetCollection<AssayGroup>("AssayGroups1"); } }
        [Association(@"AssayGroupReferencesContact2", typeof(AssayGroup))]
        public XPCollection<AssayGroup> AssayGroups2 { get { return GetCollection<AssayGroup>("AssayGroups2"); } }
        [Association(@"BlockModelReferencesContact", typeof(BlockModel))]
        public XPCollection<BlockModel> BlockModels { get { return GetCollection<BlockModel>("BlockModels"); } }
        [Association(@"BlockModelReferencesContact1", typeof(BlockModel))]
        public XPCollection<BlockModel> BlockModels1 { get { return GetCollection<BlockModel>("BlockModels1"); } }
        [Association(@"BlockModelReferencesContact2", typeof(BlockModel))]
        public XPCollection<BlockModel> BlockModels2 { get { return GetCollection<BlockModel>("BlockModels2"); } }
        [Association(@"BlockModelReferencesContact3", typeof(BlockModel))]
        public XPCollection<BlockModel> BlockModels3 { get { return GetCollection<BlockModel>("BlockModels3"); } }
        [Association(@"CompanyReferencesContact", typeof(Company))]
        public XPCollection<Company> Companys { get { return GetCollection<Company>("Companys"); } }
        [Association(@"ContactAddressReferencesContact", typeof(ContactAddress))]
        public XPCollection<ContactAddress> ContactAddressCollection { get { return GetCollection<ContactAddress>("ContactAddressCollection"); } }
        [Association(@"ContactCompanyReferencesContact", typeof(ContactCompany))]
        public XPCollection<ContactCompany> ContactCompanys { get { return GetCollection<ContactCompany>("ContactCompanys"); } }
        [Association(@"DrillingReferencesContact", typeof(Drilling))]
        public XPCollection<Drilling> Drillings { get { return GetCollection<Drilling>("Drillings"); } }
        [Association(@"ExperienceReferencesContact", typeof(Experience))]
        public XPCollection<Experience> Experiences { get { return GetCollection<Experience>("Experiences"); } }
        [Association(@"GeologyReferencesContact", typeof(Geology))]
        public XPCollection<Geology> Geologys { get { return GetCollection<Geology>("Geologys"); } }
        [Association(@"HeaderReferencesContact", typeof(Header))]
        public XPCollection<Header> Headers { get { return GetCollection<Header>("Headers"); } }
        [Association(@"LeaseReferencesContact", typeof(Lease))]
        public XPCollection<Lease> Leases { get { return GetCollection<Lease>("Leases"); } }
        [Association(@"LeaseApplicationReferencesContact", typeof(LeaseApplication))]
        public XPCollection<LeaseApplication> LeaseApplications { get { return GetCollection<LeaseApplication>("LeaseApplications"); } }
        [Association(@"LocationReferencesContact", typeof(Location))]
        public XPCollection<Location> Locations { get { return GetCollection<Location>("Locations"); } }
        [Association(@"ProjectPlanReferencesContact", typeof(ProjectPlan))]
        public XPCollection<ProjectPlan> ProjectPlans { get { return GetCollection<ProjectPlan>("ProjectPlans"); } }
        [Association(@"ProjectPlanTaskResponseReferencesContact", typeof(ProjectPlanTaskResponse))]
        public XPCollection<ProjectPlanTaskResponse> ProjectPlanTaskResponses { get { return GetCollection<ProjectPlanTaskResponse>("ProjectPlanTaskResponses"); } }
        [Association(@"ProvinceReferencesContact", typeof(Province))]
        public XPCollection<Province> Provinces { get { return GetCollection<Province>("Provinces"); } }
        [Association(@"SecurityBlacklistReferencesContact", typeof(SecurityBlacklist))]
        public XPCollection<SecurityBlacklist> SecurityBlacklists { get { return GetCollection<SecurityBlacklist>("SecurityBlacklists"); } }
        [Association(@"SecurityWhitelistReferencesContact", typeof(SecurityWhitelist))]
        public XPCollection<SecurityWhitelist> SecurityWhitelists { get { return GetCollection<SecurityWhitelist>("SecurityWhitelists"); } }
        [Association(@"SurveyReferencesContact", typeof(Survey))]
        public XPCollection<Survey> Surveys { get { return GetCollection<Survey>("Surveys"); } }
        [Association(@"TenementReferencesContact", typeof(Tenement))]
        public XPCollection<Tenement> Tenements { get { return GetCollection<Tenement>("Tenements"); } }
        [Association(@"ProjectPlanTaskResponseReferencesContact1", typeof(ProjectPlanTaskResponse))]
        public XPCollection<ProjectPlanTaskResponse> ProjectPlanTaskResponses1 { get { return GetCollection<ProjectPlanTaskResponse>("ProjectPlanTaskResponses1"); } }
        [Association(@"X_ComplianceReferencesContact", typeof(Compliance))]
        public XPCollection<Compliance> X_Compliances { get { return GetCollection<Compliance>("X_Compliances"); } }
        [Association(@"X_ContractReferencesContact", typeof(Contract))]
        public XPCollection<Contract> X_Contracts { get { return GetCollection<Contract>("X_Contracts"); } }
        [Association(@"X_ContractReferencesContact1", typeof(Contract))]
        public XPCollection<Contract> X_Contracts1 { get { return GetCollection<Contract>("X_Contracts1"); } }
        [Association(@"X_ContractReferencesContact2", typeof(Contract))]
        public XPCollection<Contract> X_Contracts2 { get { return GetCollection<Contract>("X_Contracts2"); } }
        [Association(@"X_ContractReferencesContact3", typeof(Contract))]
        public XPCollection<Contract> X_Contracts3 { get { return GetCollection<Contract>("X_Contracts3"); } }
        [Association(@"X_ProjectPlanTaskComplianceResponseReferencesContact", typeof(ProjectPlanTaskComplianceResponse))]
        public XPCollection<ProjectPlanTaskComplianceResponse> X_ProjectPlanTaskComplianceResponses { get { return GetCollection<ProjectPlanTaskComplianceResponse>("X_ProjectPlanTaskComplianceResponses"); } }
        [Association(@"X_ProjectPlanTaskComplianceResponseReferencesContact1", typeof(ProjectPlanTaskComplianceResponse))]
        public XPCollection<ProjectPlanTaskComplianceResponse> X_ProjectPlanTaskComplianceResponses1 { get { return GetCollection<ProjectPlanTaskComplianceResponse>("X_ProjectPlanTaskComplianceResponses1"); } }
        [Association(@"X_LocationHistoryReferencesContact", typeof(LocationHistory))]
        public XPCollection<LocationHistory> X_LocationHistorys { get { return GetCollection<LocationHistory>("X_LocationHistorys"); } }
        [Association(@"X_ProjectDeliverableReferencesContact", typeof(ProjectDeliverable))]
        public XPCollection<ProjectDeliverable> X_ProjectDeliverables { get { return GetCollection<ProjectDeliverable>("X_ProjectDeliverables"); } }
        [Association(@"X_ProjectDeliverableReferencesContact1", typeof(ProjectDeliverable))]
        public XPCollection<ProjectDeliverable> X_ProjectDeliverables1 { get { return GetCollection<ProjectDeliverable>("X_ProjectDeliverables1"); } }
        [Association(@"X_ProjectDeliverableReferencesContact2", typeof(ProjectDeliverable))]
        public XPCollection<ProjectDeliverable> X_ProjectDeliverables2 { get { return GetCollection<ProjectDeliverable>("X_ProjectDeliverables2"); } }
        [Association(@"X_OpportunityReferencesContact", typeof(Opportunity))]
        public XPCollection<Opportunity> X_Opportunitys { get { return GetCollection<Opportunity>("X_Opportunitys"); } }
        [Association(@"X_OpportunityReferencesContact1", typeof(Opportunity))]
        public XPCollection<Opportunity> X_Opportunitys1 { get { return GetCollection<Opportunity>("X_Opportunitys1"); } }
        [Association(@"X_OpportunityReferencesContact2", typeof(Opportunity))]
        public XPCollection<Opportunity> X_Opportunitys2 { get { return GetCollection<Opportunity>("X_Opportunitys2"); } }
        [Association(@"X_OpportunityReferencesContact3", typeof(Opportunity))]
        public XPCollection<Opportunity> X_Opportunitys3 { get { return GetCollection<Opportunity>("X_Opportunitys3"); } }
        [Association(@"X_OpportunityReferencesContact4", typeof(Opportunity))]
        public XPCollection<Opportunity> X_Opportunitys4 { get { return GetCollection<Opportunity>("X_Opportunitys4"); } }
    }

}
