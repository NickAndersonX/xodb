//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Defect")]
    public partial class Defect : XPLiteObject
    {
        Guid fDefectID;
        [Key(true)]
        public Guid DefectID
        {
            get { return fDefectID; }
            set { SetPropertyValue<Guid>("DefectID", ref fDefectID, value); }
        }
        Header fHeaderID;
        [Association(@"DefectReferencesHeader")]
        public Header HeaderID
        {
            get { return fHeaderID; }
            set { SetPropertyValue<Header>("HeaderID", ref fHeaderID, value); }
        }
        decimal fFromDepth;
        public decimal FromDepth
        {
            get { return fFromDepth; }
            set { SetPropertyValue<decimal>("FromDepth", ref fFromDepth, value); }
        }
        decimal fToDepth;
        public decimal ToDepth
        {
            get { return fToDepth; }
            set { SetPropertyValue<decimal>("ToDepth", ref fToDepth, value); }
        }
        string fRmuTypeID;
        [Indexed(Name = @"iRmu_Type_DefectData")]
        [Size(16)]
        public string RmuTypeID
        {
            get { return fRmuTypeID; }
            set { SetPropertyValue<string>("RmuTypeID", ref fRmuTypeID, value); }
        }
        DictionaryWeathering fWeatheringID;
        [Association(@"DefectReferencesDictionaryWeathering")]
        public DictionaryWeathering WeatheringID
        {
            get { return fWeatheringID; }
            set { SetPropertyValue<DictionaryWeathering>("WeatheringID", ref fWeatheringID, value); }
        }
        DictionaryAlteration fAlterationID;
        [Association(@"DefectReferencesDictionaryAlteration")]
        public DictionaryAlteration AlterationID
        {
            get { return fAlterationID; }
            set { SetPropertyValue<DictionaryAlteration>("AlterationID", ref fAlterationID, value); }
        }
        DictionaryEstimatedStrength fEstimatedStrengthID;
        [Association(@"DefectReferencesDictionaryEstimatedStrength")]
        public DictionaryEstimatedStrength EstimatedStrengthID
        {
            get { return fEstimatedStrengthID; }
            set { SetPropertyValue<DictionaryEstimatedStrength>("EstimatedStrengthID", ref fEstimatedStrengthID, value); }
        }
        DictionaryBedSpacing fBedSpacingID;
        [Association(@"DefectReferencesDictionaryBedSpacing")]
        public DictionaryBedSpacing BedSpacingID
        {
            get { return fBedSpacingID; }
            set { SetPropertyValue<DictionaryBedSpacing>("BedSpacingID", ref fBedSpacingID, value); }
        }
        int fBedDip;
        public int BedDip
        {
            get { return fBedDip; }
            set { SetPropertyValue<int>("BedDip", ref fBedDip, value); }
        }
        DictionaryMoistureSensitivity fMoistureSensitivityID;
        [Association(@"DefectReferencesDictionaryMoistureSensitivity")]
        public DictionaryMoistureSensitivity MoistureSensitivityID
        {
            get { return fMoistureSensitivityID; }
            set { SetPropertyValue<DictionaryMoistureSensitivity>("MoistureSensitivityID", ref fMoistureSensitivityID, value); }
        }
        DictionaryPlasticity fPlasticityID;
        [Association(@"DefectReferencesDictionaryPlasticity")]
        public DictionaryPlasticity PlasticityID
        {
            get { return fPlasticityID; }
            set { SetPropertyValue<DictionaryPlasticity>("PlasticityID", ref fPlasticityID, value); }
        }
        decimal fDefectDepth;
        public decimal DefectDepth
        {
            get { return fDefectDepth; }
            set { SetPropertyValue<decimal>("DefectDepth", ref fDefectDepth, value); }
        }
        int fDefectLength;
        public int DefectLength
        {
            get { return fDefectLength; }
            set { SetPropertyValue<int>("DefectLength", ref fDefectLength, value); }
        }
        int fNumberOfDefects;
        public int NumberOfDefects
        {
            get { return fNumberOfDefects; }
            set { SetPropertyValue<int>("NumberOfDefects", ref fNumberOfDefects, value); }
        }
        int fDefectsSpacing;
        public int DefectsSpacing
        {
            get { return fDefectsSpacing; }
            set { SetPropertyValue<int>("DefectsSpacing", ref fDefectsSpacing, value); }
        }
        DictionaryDefectType fDefectTypeID;
        [Association(@"DefectReferencesDictionaryDefectType")]
        public DictionaryDefectType DefectTypeID
        {
            get { return fDefectTypeID; }
            set { SetPropertyValue<DictionaryDefectType>("DefectTypeID", ref fDefectTypeID, value); }
        }
        DictionaryDefectCompleteness fDefectCompletenessID;
        [Association(@"DefectReferencesDictionaryDefectCompleteness")]
        public DictionaryDefectCompleteness DefectCompletenessID
        {
            get { return fDefectCompletenessID; }
            set { SetPropertyValue<DictionaryDefectCompleteness>("DefectCompletenessID", ref fDefectCompletenessID, value); }
        }
        DictionaryDefectContinuity fDefectContinuityID;
        [Association(@"DefectReferencesDictionaryDefectContinuity")]
        public DictionaryDefectContinuity DefectContinuityID
        {
            get { return fDefectContinuityID; }
            set { SetPropertyValue<DictionaryDefectContinuity>("DefectContinuityID", ref fDefectContinuityID, value); }
        }
        int fDefectDip;
        public int DefectDip
        {
            get { return fDefectDip; }
            set { SetPropertyValue<int>("DefectDip", ref fDefectDip, value); }
        }
        int fMinimumDipBrokenZone;
        public int MinimumDipBrokenZone
        {
            get { return fMinimumDipBrokenZone; }
            set { SetPropertyValue<int>("MinimumDipBrokenZone", ref fMinimumDipBrokenZone, value); }
        }
        int fMaximumDipBrokenZone;
        public int MaximumDipBrokenZone
        {
            get { return fMaximumDipBrokenZone; }
            set { SetPropertyValue<int>("MaximumDipBrokenZone", ref fMaximumDipBrokenZone, value); }
        }
        int fDipOrientation;
        public int DipOrientation
        {
            get { return fDipOrientation; }
            set { SetPropertyValue<int>("DipOrientation", ref fDipOrientation, value); }
        }
        DictionaryDipOrientationMethod fDipOrientationMethodID;
        [Association(@"DefectReferencesDictionaryDipOrientationMethod")]
        public DictionaryDipOrientationMethod DipOrientationMethodID
        {
            get { return fDipOrientationMethodID; }
            set { SetPropertyValue<DictionaryDipOrientationMethod>("DipOrientationMethodID", ref fDipOrientationMethodID, value); }
        }
        DictionaryShape fShapeID;
        [Association(@"DefectReferencesDictionaryShape")]
        public DictionaryShape ShapeID
        {
            get { return fShapeID; }
            set { SetPropertyValue<DictionaryShape>("ShapeID", ref fShapeID, value); }
        }
        DictionarySurfaceRoughness fRoughnessID;
        [Association(@"DefectReferencesDictionarySurfaceRoughness")]
        public DictionarySurfaceRoughness RoughnessID
        {
            get { return fRoughnessID; }
            set { SetPropertyValue<DictionarySurfaceRoughness>("RoughnessID", ref fRoughnessID, value); }
        }
        int fJointRoughnessCoefficient;
        public int JointRoughnessCoefficient
        {
            get { return fJointRoughnessCoefficient; }
            set { SetPropertyValue<int>("JointRoughnessCoefficient", ref fJointRoughnessCoefficient, value); }
        }
        int fPerpendicularWidth;
        public int PerpendicularWidth
        {
            get { return fPerpendicularWidth; }
            set { SetPropertyValue<int>("PerpendicularWidth", ref fPerpendicularWidth, value); }
        }
        DictionaryInfillType fPrimaryInfillTypeID;
        [Association(@"DefectReferencesDictionaryInfillType")]
        public DictionaryInfillType PrimaryInfillTypeID
        {
            get { return fPrimaryInfillTypeID; }
            set { SetPropertyValue<DictionaryInfillType>("PrimaryInfillTypeID", ref fPrimaryInfillTypeID, value); }
        }
        DictionaryInfillType fSecondaryInfillTypeID;
        [Association(@"DefectReferencesDictionaryInfillType1")]
        public DictionaryInfillType SecondaryInfillTypeID
        {
            get { return fSecondaryInfillTypeID; }
            set { SetPropertyValue<DictionaryInfillType>("SecondaryInfillTypeID", ref fSecondaryInfillTypeID, value); }
        }
        DictionaryInfillMode fInfillModeID;
        [Association(@"DefectReferencesDictionaryInfillMode")]
        public DictionaryInfillMode InfillModeID
        {
            get { return fInfillModeID; }
            set { SetPropertyValue<DictionaryInfillMode>("InfillModeID", ref fInfillModeID, value); }
        }
        DictionaryEstimatedStrength fInfillEstimatedStrengthID;
        [Association(@"DefectReferencesDictionaryEstimatedStrength1")]
        public DictionaryEstimatedStrength InfillEstimatedStrengthID
        {
            get { return fInfillEstimatedStrengthID; }
            set { SetPropertyValue<DictionaryEstimatedStrength>("InfillEstimatedStrengthID", ref fInfillEstimatedStrengthID, value); }
        }
        DictionaryPlasticity fInfillPlasticityID;
        [Association(@"DefectReferencesDictionaryPlasticity1")]
        public DictionaryPlasticity InfillPlasticityID
        {
            get { return fInfillPlasticityID; }
            set { SetPropertyValue<DictionaryPlasticity>("InfillPlasticityID", ref fInfillPlasticityID, value); }
        }
        string fComment;
        [Size(SizeAttribute.Unlimited)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        DictionaryRockMassUnitType fRockMassUnitTypeID;
        [Association(@"DefectReferencesDictionaryRockMassUnitType")]
        public DictionaryRockMassUnitType RockMassUnitTypeID
        {
            get { return fRockMassUnitTypeID; }
            set { SetPropertyValue<DictionaryRockMassUnitType>("RockMassUnitTypeID", ref fRockMassUnitTypeID, value); }
        }
        [Association(@"CompositeReferencesDefect", typeof(Composite))]
        public XPCollection<Composite> Composites { get { return GetCollection<Composite>("Composites"); } }
    }

}
