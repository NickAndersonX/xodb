//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_AssayGroup")]
    public partial class AssayGroup : XPLiteObject
    {
        Guid fAssayGroupID;
        [Key(true)]
        public Guid AssayGroupID
        {
            get { return fAssayGroupID; }
            set { SetPropertyValue<Guid>("AssayGroupID", ref fAssayGroupID, value); }
        }
        string fAssayGroupName;
        [Size(50)]
        public string AssayGroupName
        {
            get { return fAssayGroupName; }
            set { SetPropertyValue<string>("AssayGroupName", ref fAssayGroupName, value); }
        }
        Guid fLabCompanyID;
        public Guid LabCompanyID
        {
            get { return fLabCompanyID; }
            set { SetPropertyValue<Guid>("LabCompanyID", ref fLabCompanyID, value); }
        }
        DateTime fSubmitted;
        public DateTime Submitted
        {
            get { return fSubmitted; }
            set { SetPropertyValue<DateTime>("Submitted", ref fSubmitted, value); }
        }
        Contact fSubmittedContactID;
        [Association(@"AssayGroupReferencesContact")]
        public Contact SubmittedContactID
        {
            get { return fSubmittedContactID; }
            set { SetPropertyValue<Contact>("SubmittedContactID", ref fSubmittedContactID, value); }
        }
        DateTime fReceived;
        public DateTime Received
        {
            get { return fReceived; }
            set { SetPropertyValue<DateTime>("Received", ref fReceived, value); }
        }
        Contact fReceivedContactID;
        [Association(@"AssayGroupReferencesContact1")]
        public Contact ReceivedContactID
        {
            get { return fReceivedContactID; }
            set { SetPropertyValue<Contact>("ReceivedContactID", ref fReceivedContactID, value); }
        }
        DateTime fEntered;
        public DateTime Entered
        {
            get { return fEntered; }
            set { SetPropertyValue<DateTime>("Entered", ref fEntered, value); }
        }
        Contact fEnteredContactID;
        [Association(@"AssayGroupReferencesContact2")]
        public Contact EnteredContactID
        {
            get { return fEnteredContactID; }
            set { SetPropertyValue<Contact>("EnteredContactID", ref fEnteredContactID, value); }
        }
        string fComment;
        [Size(SizeAttribute.Unlimited)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        Project fProjectID;
        [Association(@"AssayGroupReferencesProject")]
        public Project ProjectID
        {
            get { return fProjectID; }
            set { SetPropertyValue<Project>("ProjectID", ref fProjectID, value); }
        }
        int fVersion;
        public int Version
        {
            get { return fVersion; }
            set { SetPropertyValue<int>("Version", ref fVersion, value); }
        }
        Guid fVersionAntecedentID;
        public Guid VersionAntecedentID
        {
            get { return fVersionAntecedentID; }
            set { SetPropertyValue<Guid>("VersionAntecedentID", ref fVersionAntecedentID, value); }
        }
        int fVersionCertainty;
        public int VersionCertainty
        {
            get { return fVersionCertainty; }
            set { SetPropertyValue<int>("VersionCertainty", ref fVersionCertainty, value); }
        }
        Guid fVersionWorkflowInstanceID;
        public Guid VersionWorkflowInstanceID
        {
            get { return fVersionWorkflowInstanceID; }
            set { SetPropertyValue<Guid>("VersionWorkflowInstanceID", ref fVersionWorkflowInstanceID, value); }
        }
        Guid fVersionUpdatedBy;
        public Guid VersionUpdatedBy
        {
            get { return fVersionUpdatedBy; }
            set { SetPropertyValue<Guid>("VersionUpdatedBy", ref fVersionUpdatedBy, value); }
        }
        Guid fVersionDeletedBy;
        public Guid VersionDeletedBy
        {
            get { return fVersionDeletedBy; }
            set { SetPropertyValue<Guid>("VersionDeletedBy", ref fVersionDeletedBy, value); }
        }
        Guid fVersionOwnerContactID;
        public Guid VersionOwnerContactID
        {
            get { return fVersionOwnerContactID; }
            set { SetPropertyValue<Guid>("VersionOwnerContactID", ref fVersionOwnerContactID, value); }
        }
        Guid fVersionOwnerCompanyID;
        public Guid VersionOwnerCompanyID
        {
            get { return fVersionOwnerCompanyID; }
            set { SetPropertyValue<Guid>("VersionOwnerCompanyID", ref fVersionOwnerCompanyID, value); }
        }
        DateTime fVersionUpdated;
        public DateTime VersionUpdated
        {
            get { return fVersionUpdated; }
            set { SetPropertyValue<DateTime>("VersionUpdated", ref fVersionUpdated, value); }
        }
        [Association(@"AssayGroupTestReferencesAssayGroup", typeof(AssayGroupTest))]
        public XPCollection<AssayGroupTest> AssayGroupTests { get { return GetCollection<AssayGroupTest>("AssayGroupTests"); } }
    }

}
