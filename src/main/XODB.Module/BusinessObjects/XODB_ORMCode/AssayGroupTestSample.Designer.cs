//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_AssayGroupTestSample")]
    public partial class AssayGroupTestSample : XPLiteObject
    {
        Guid fAssayGroupTestSampleID;
        [Key(true)]
        public Guid AssayGroupTestSampleID
        {
            get { return fAssayGroupTestSampleID; }
            set { SetPropertyValue<Guid>("AssayGroupTestSampleID", ref fAssayGroupTestSampleID, value); }
        }
        Header fHeaderID;
        [Association(@"AssayGroupTestSampleReferencesHeader")]
        public Header HeaderID
        {
            get { return fHeaderID; }
            set { SetPropertyValue<Header>("HeaderID", ref fHeaderID, value); }
        }
        DictionarySampleCategory fSampleCategoryID;
        [Association(@"AssayGroupTestSampleReferencesDictionarySampleCategory")]
        public DictionarySampleCategory SampleCategoryID
        {
            get { return fSampleCategoryID; }
            set { SetPropertyValue<DictionarySampleCategory>("SampleCategoryID", ref fSampleCategoryID, value); }
        }
        DictionarySampleState fSampleStateID;
        [Association(@"AssayGroupTestSampleReferencesDictionarySampleState")]
        public DictionarySampleState SampleStateID
        {
            get { return fSampleStateID; }
            set { SetPropertyValue<DictionarySampleState>("SampleStateID", ref fSampleStateID, value); }
        }
        DictionarySampleType fSampleTypeID;
        [Association(@"AssayGroupTestSampleReferencesDictionarySampleType")]
        public DictionarySampleType SampleTypeID
        {
            get { return fSampleTypeID; }
            set { SetPropertyValue<DictionarySampleType>("SampleTypeID", ref fSampleTypeID, value); }
        }
        string fSampleName;
        [Size(16)]
        public string SampleName
        {
            get { return fSampleName; }
            set { SetPropertyValue<string>("SampleName", ref fSampleName, value); }
        }
        string fSampleNumber;
        [Size(16)]
        public string SampleNumber
        {
            get { return fSampleNumber; }
            set { SetPropertyValue<string>("SampleNumber", ref fSampleNumber, value); }
        }
        decimal fFromDepth;
        public decimal FromDepth
        {
            get { return fFromDepth; }
            set { SetPropertyValue<decimal>("FromDepth", ref fFromDepth, value); }
        }
        decimal fToDepth;
        public decimal ToDepth
        {
            get { return fToDepth; }
            set { SetPropertyValue<decimal>("ToDepth", ref fToDepth, value); }
        }
        decimal fSampleMassKg;
        public decimal SampleMassKg
        {
            get { return fSampleMassKg; }
            set { SetPropertyValue<decimal>("SampleMassKg", ref fSampleMassKg, value); }
        }
        decimal fDryMassKg;
        public decimal DryMassKg
        {
            get { return fDryMassKg; }
            set { SetPropertyValue<decimal>("DryMassKg", ref fDryMassKg, value); }
        }
        [Association(@"AssayGroupStandardTestResultReferencesAssayGroupTestSample", typeof(AssayGroupStandardTestResult))]
        public XPCollection<AssayGroupStandardTestResult> AssayGroupStandardTestResults { get { return GetCollection<AssayGroupStandardTestResult>("AssayGroupStandardTestResults"); } }
        [Association(@"AssayGroupTestResultReferencesAssayGroupTestSample", typeof(AssayGroupTestResult))]
        public XPCollection<AssayGroupTestResult> AssayGroupTestResults { get { return GetCollection<AssayGroupTestResult>("AssayGroupTestResults"); } }
        [Association(@"CompositeReferencesAssayGroupTestSample", typeof(Composite))]
        public XPCollection<Composite> Composites { get { return GetCollection<Composite>("Composites"); } }
    }

}
