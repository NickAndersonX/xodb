//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Experience")]
    public partial class Experience : XPLiteObject
    {
        Guid fExperienceID;
        [Key(true)]
        public Guid ExperienceID
        {
            get { return fExperienceID; }
            set { SetPropertyValue<Guid>("ExperienceID", ref fExperienceID, value); }
        }
        Company fCompanyID;
        [Association(@"ExperienceReferencesCompany")]
        public Company CompanyID
        {
            get { return fCompanyID; }
            set { SetPropertyValue<Company>("CompanyID", ref fCompanyID, value); }
        }
        Project fProjectID;
        [Association(@"ExperienceReferencesProject")]
        public Project ProjectID
        {
            get { return fProjectID; }
            set { SetPropertyValue<Project>("ProjectID", ref fProjectID, value); }
        }
        Contact fContactID;
        [Association(@"ExperienceReferencesContact")]
        public Contact ContactID
        {
            get { return fContactID; }
            set { SetPropertyValue<Contact>("ContactID", ref fContactID, value); }
        }
        Location fLocationID;
        [Association(@"ExperienceReferencesLocation")]
        public Location LocationID
        {
            get { return fLocationID; }
            set { SetPropertyValue<Location>("LocationID", ref fLocationID, value); }
        }
        DictionaryWorkType fWorkTypeID;
        [Association(@"ExperienceReferencesDictionaryWorkType")]
        public DictionaryWorkType WorkTypeID
        {
            get { return fWorkTypeID; }
            set { SetPropertyValue<DictionaryWorkType>("WorkTypeID", ref fWorkTypeID, value); }
        }
        string fClientAlias;
        [Size(50)]
        public string ClientAlias
        {
            get { return fClientAlias; }
            set { SetPropertyValue<string>("ClientAlias", ref fClientAlias, value); }
        }
        string fExternalProjectCode;
        [Size(50)]
        public string ExternalProjectCode
        {
            get { return fExternalProjectCode; }
            set { SetPropertyValue<string>("ExternalProjectCode", ref fExternalProjectCode, value); }
        }
        string fComment;
        [Size(255)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        int fEstimatedDurationDays;
        public int EstimatedDurationDays
        {
            get { return fEstimatedDurationDays; }
            set { SetPropertyValue<int>("EstimatedDurationDays", ref fEstimatedDurationDays, value); }
        }
        int fUserExperienceLevel;
        public int UserExperienceLevel
        {
            get { return fUserExperienceLevel; }
            set { SetPropertyValue<int>("UserExperienceLevel", ref fUserExperienceLevel, value); }
        }
        int fAssignedExperienceLevel;
        public int AssignedExperienceLevel
        {
            get { return fAssignedExperienceLevel; }
            set { SetPropertyValue<int>("AssignedExperienceLevel", ref fAssignedExperienceLevel, value); }
        }
        int fNormalizedExperienceLevel;
        public int NormalizedExperienceLevel
        {
            get { return fNormalizedExperienceLevel; }
            set { SetPropertyValue<int>("NormalizedExperienceLevel", ref fNormalizedExperienceLevel, value); }
        }
        DateTime fDateStart;
        public DateTime DateStart
        {
            get { return fDateStart; }
            set { SetPropertyValue<DateTime>("DateStart", ref fDateStart, value); }
        }
        DateTime fDateFinished;
        public DateTime DateFinished
        {
            get { return fDateFinished; }
            set { SetPropertyValue<DateTime>("DateFinished", ref fDateFinished, value); }
        }
        DateTime fExpiry;
        public DateTime Expiry
        {
            get { return fExpiry; }
            set { SetPropertyValue<DateTime>("Expiry", ref fExpiry, value); }
        }
        string fExperienceName;
        [Size(120)]
        public string ExperienceName
        {
            get { return fExperienceName; }
            set { SetPropertyValue<string>("ExperienceName", ref fExperienceName, value); }
        }
        DictionaryProfession fProfessionID;
        [Association(@"ExperienceReferencesDictionaryProfession")]
        public DictionaryProfession ProfessionID
        {
            get { return fProfessionID; }
            set { SetPropertyValue<DictionaryProfession>("ProfessionID", ref fProfessionID, value); }
        }
        DictionaryPosition fPositionID;
        [Association(@"ExperienceReferencesDictionaryPosition")]
        public DictionaryPosition PositionID
        {
            get { return fPositionID; }
            set { SetPropertyValue<DictionaryPosition>("PositionID", ref fPositionID, value); }
        }
        string fDivision;
        [Size(50)]
        public string Division
        {
            get { return fDivision; }
            set { SetPropertyValue<string>("Division", ref fDivision, value); }
        }
        string fOfficeLocationAlias;
        [Size(50)]
        public string OfficeLocationAlias
        {
            get { return fOfficeLocationAlias; }
            set { SetPropertyValue<string>("OfficeLocationAlias", ref fOfficeLocationAlias, value); }
        }
        decimal fHourlyRate;
        public decimal HourlyRate
        {
            get { return fHourlyRate; }
            set { SetPropertyValue<decimal>("HourlyRate", ref fHourlyRate, value); }
        }
        decimal fDailyRate;
        public decimal DailyRate
        {
            get { return fDailyRate; }
            set { SetPropertyValue<decimal>("DailyRate", ref fDailyRate, value); }
        }
        decimal fAnnualRate;
        public decimal AnnualRate
        {
            get { return fAnnualRate; }
            set { SetPropertyValue<decimal>("AnnualRate", ref fAnnualRate, value); }
        }
        decimal fBlendedHourlyRate;
        public decimal BlendedHourlyRate
        {
            get { return fBlendedHourlyRate; }
            set { SetPropertyValue<decimal>("BlendedHourlyRate", ref fBlendedHourlyRate, value); }
        }
        decimal fBlendedHourlyCost;
        public decimal BlendedHourlyCost
        {
            get { return fBlendedHourlyCost; }
            set { SetPropertyValue<decimal>("BlendedHourlyCost", ref fBlendedHourlyCost, value); }
        }
        int fVersion;
        public int Version
        {
            get { return fVersion; }
            set { SetPropertyValue<int>("Version", ref fVersion, value); }
        }
        Guid fVersionAntecedentID;
        public Guid VersionAntecedentID
        {
            get { return fVersionAntecedentID; }
            set { SetPropertyValue<Guid>("VersionAntecedentID", ref fVersionAntecedentID, value); }
        }
        int fVersionCertainty;
        public int VersionCertainty
        {
            get { return fVersionCertainty; }
            set { SetPropertyValue<int>("VersionCertainty", ref fVersionCertainty, value); }
        }
        Guid fVersionWorkflowInstanceID;
        public Guid VersionWorkflowInstanceID
        {
            get { return fVersionWorkflowInstanceID; }
            set { SetPropertyValue<Guid>("VersionWorkflowInstanceID", ref fVersionWorkflowInstanceID, value); }
        }
        Guid fVersionUpdatedBy;
        public Guid VersionUpdatedBy
        {
            get { return fVersionUpdatedBy; }
            set { SetPropertyValue<Guid>("VersionUpdatedBy", ref fVersionUpdatedBy, value); }
        }
        Guid fVersionDeletedBy;
        public Guid VersionDeletedBy
        {
            get { return fVersionDeletedBy; }
            set { SetPropertyValue<Guid>("VersionDeletedBy", ref fVersionDeletedBy, value); }
        }
        Guid fVersionOwnerContactID;
        public Guid VersionOwnerContactID
        {
            get { return fVersionOwnerContactID; }
            set { SetPropertyValue<Guid>("VersionOwnerContactID", ref fVersionOwnerContactID, value); }
        }
        Guid fVersionOwnerCompanyID;
        public Guid VersionOwnerCompanyID
        {
            get { return fVersionOwnerCompanyID; }
            set { SetPropertyValue<Guid>("VersionOwnerCompanyID", ref fVersionOwnerCompanyID, value); }
        }
        [Association(@"FileDataReferencesExperience", typeof(FileData))]
        public XPCollection<FileData> FileDatas { get { return GetCollection<FileData>("FileDatas"); } }
        [Association(@"OpportunityReferencesExperience", typeof(Opportunity))]
        public XPCollection<Opportunity> Opportunities { get { return GetCollection<Opportunity>("Opportunities"); } }
        [Association(@"ProjectPlanTaskWorkerReferencesExperience", typeof(ProjectPlanTaskWorker))]
        public XPCollection<ProjectPlanTaskWorker> ProjectPlanTaskWorkers { get { return GetCollection<ProjectPlanTaskWorker>("ProjectPlanTaskWorkers"); } }
    }

}
