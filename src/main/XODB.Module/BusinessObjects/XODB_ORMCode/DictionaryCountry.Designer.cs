//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_DictionaryCountry")]
    public partial class DictionaryCountry : XPLiteObject
    {
        string fCountryID;
        [Key]
        [Size(2)]
        public string CountryID
        {
            get { return fCountryID; }
            set { SetPropertyValue<string>("CountryID", ref fCountryID, value); }
        }
        string fStandardCountryName;
        [Size(40)]
        public string StandardCountryName
        {
            get { return fStandardCountryName; }
            set { SetPropertyValue<string>("StandardCountryName", ref fStandardCountryName, value); }
        }
        string fCoalCountryName;
        [Size(40)]
        public string CoalCountryName
        {
            get { return fCoalCountryName; }
            set { SetPropertyValue<string>("CoalCountryName", ref fCoalCountryName, value); }
        }
        string fGoldCountryName;
        [Size(40)]
        public string GoldCountryName
        {
            get { return fGoldCountryName; }
            set { SetPropertyValue<string>("GoldCountryName", ref fGoldCountryName, value); }
        }
        string fCustomCountryName;
        [Size(40)]
        public string CustomCountryName
        {
            get { return fCustomCountryName; }
            set { SetPropertyValue<string>("CustomCountryName", ref fCustomCountryName, value); }
        }
        string fDescription;
        [Size(255)]
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>("Description", ref fDescription, value); }
        }
        string fFullDescription;
        [Size(SizeAttribute.Unlimited)]
        public string FullDescription
        {
            get { return fFullDescription; }
            set { SetPropertyValue<string>("FullDescription", ref fFullDescription, value); }
        }
        System.Drawing.Image fThumbnail;
        [Size(SizeAttribute.Unlimited)]
        [ValueConverter(typeof(DevExpress.Xpo.Metadata.ImageValueConverter))]
        public System.Drawing.Image Thumbnail
        {
            get { return fThumbnail; }
            set { SetPropertyValue<System.Drawing.Image>("Thumbnail", ref fThumbnail, value); }
        }
        FileData fOriginalFileDataID;
        [Association(@"DictionaryCountryReferencesFileData")]
        public FileData OriginalFileDataID
        {
            get { return fOriginalFileDataID; }
            set { SetPropertyValue<FileData>("OriginalFileDataID", ref fOriginalFileDataID, value); }
        }
        string fCurrencyCode;
        [Size(10)]
        public string CurrencyCode
        {
            get { return fCurrencyCode; }
            set { SetPropertyValue<string>("CurrencyCode", ref fCurrencyCode, value); }
        }
        string fCurrencyFormat;
        [Size(50)]
        public string CurrencyFormat
        {
            get { return fCurrencyFormat; }
            set { SetPropertyValue<string>("CurrencyFormat", ref fCurrencyFormat, value); }
        }
        [Association(@"CompanyReferencesDictionaryCountry", typeof(Company))]
        public XPCollection<Company> Companies { get { return GetCollection<Company>("Companies"); } }
        [Association(@"ContactReferencesDictionaryCountry", typeof(Contact))]
        public XPCollection<Contact> Contacts { get { return GetCollection<Contact>("Contacts"); } }
        [Association(@"DictionaryCountryStateReferencesDictionaryCountry", typeof(DictionaryCountryState))]
        public XPCollection<DictionaryCountryState> DictionaryCountryStates { get { return GetCollection<DictionaryCountryState>("DictionaryCountryStates"); } }
        [Association(@"ProspectusProjectReferencesDictionaryCountry", typeof(ProspectusProject))]
        public XPCollection<ProspectusProject> ProspectusProjects { get { return GetCollection<ProspectusProject>("ProspectusProjects"); } }
        [Association(@"ProvinceReferencesDictionaryCountry", typeof(Province))]
        public XPCollection<Province> Provinces { get { return GetCollection<Province>("Provinces"); } }
        [Association(@"ComplianceReferencesDictionaryCountry", typeof(Compliance))]
        public XPCollection<Compliance> Compliances { get { return GetCollection<Compliance>("Compliances"); } }
        [Association(@"LocationReferencesDictionaryCountry", typeof(Location))]
        public XPCollection<Location> Locations { get { return GetCollection<Location>("Locations"); } }
        [Association(@"TenementReferencesDictionaryCountry", typeof(Tenement))]
        public XPCollection<Tenement> Tenements { get { return GetCollection<Tenement>("Tenements"); } }
        [Association(@"DictionaryTaxReferencesDictionaryCountry", typeof(DictionaryTax))]
        public XPCollection<DictionaryTax> DictionaryTaxs { get { return GetCollection<DictionaryTax>("DictionaryTaxs"); } }
        [Association(@"CurrencyReferencesDictionaryCountry", typeof(Currency))]
        public XPCollection<Currency> Currencies { get { return GetCollection<Currency>("Currencies"); } }
    }

}
