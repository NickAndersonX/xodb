//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Parameter")]
    public partial class Parameter : XPLiteObject
    {
        Guid fParameterID;
        [Key(true)]
        public Guid ParameterID
        {
            get { return fParameterID; }
            set { SetPropertyValue<Guid>("ParameterID", ref fParameterID, value); }
        }
        string fParameterType;
        [Size(50)]
        public string ParameterType
        {
            get { return fParameterType; }
            set { SetPropertyValue<string>("ParameterType", ref fParameterType, value); }
        }
        string fParameterName;
        [Size(50)]
        public string ParameterName
        {
            get { return fParameterName; }
            set { SetPropertyValue<string>("ParameterName", ref fParameterName, value); }
        }
        decimal fDefaultParameterValue;
        public decimal DefaultParameterValue
        {
            get { return fDefaultParameterValue; }
            set { SetPropertyValue<decimal>("DefaultParameterValue", ref fDefaultParameterValue, value); }
        }
        string fDefaultParameterText;
        [Size(255)]
        public string DefaultParameterText
        {
            get { return fDefaultParameterText; }
            set { SetPropertyValue<string>("DefaultParameterText", ref fDefaultParameterText, value); }
        }
        DictionaryUnit fUnitID;
        [Association(@"ParameterReferencesDictionaryUnit")]
        public DictionaryUnit UnitID
        {
            get { return fUnitID; }
            set { SetPropertyValue<DictionaryUnit>("UnitID", ref fUnitID, value); }
        }
        string fFormat;
        [Size(255)]
        public string Format
        {
            get { return fFormat; }
            set { SetPropertyValue<string>("Format", ref fFormat, value); }
        }
        string fDescription;
        [Size(255)]
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>("Description", ref fDescription, value); }
        }
        string fLocale;
        [Size(16)]
        public string Locale
        {
            get { return fLocale; }
            set { SetPropertyValue<string>("Locale", ref fLocale, value); }
        }
        [Association(@"AssayGroupTestReferencesParameter", typeof(AssayGroupTest))]
        public XPCollection<AssayGroupTest> AssayGroupTests { get { return GetCollection<AssayGroupTest>("AssayGroupTests"); } }
        [Association(@"BlockModelBlockDataReferencesParameter", typeof(BlockModelBlockData))]
        public XPCollection<BlockModelBlockData> BlockModelBlockDatas { get { return GetCollection<BlockModelBlockData>("BlockModelBlockDatas"); } }
        [Association(@"BlockModelMetadataReferencesParameter", typeof(BlockModelMetadata))]
        public XPCollection<BlockModelMetadata> BlockModelMetadatas { get { return GetCollection<BlockModelMetadata>("BlockModelMetadatas"); } }
        [Association(@"CompositeDataReferencesParameter", typeof(CompositeData))]
        public XPCollection<CompositeData> CompositeDatas { get { return GetCollection<CompositeData>("CompositeDatas"); } }
        [Association(@"GeophysicsMetadataReferencesParameter", typeof(GeophysicsMetadata))]
        public XPCollection<GeophysicsMetadata> GeophysicsMetadatas { get { return GetCollection<GeophysicsMetadata>("GeophysicsMetadatas"); } }
        [Association(@"ParameterDuplicateReferencesParameter", typeof(ParameterDuplicate))]
        public XPCollection<ParameterDuplicate> ParameterDuplicates { get { return GetCollection<ParameterDuplicate>("ParameterDuplicates"); } }
        [Association(@"ParameterDuplicateReferencesParameter1", typeof(ParameterDuplicate))]
        public XPCollection<ParameterDuplicate> ParameterDuplicates1 { get { return GetCollection<ParameterDuplicate>("ParameterDuplicates1"); } }
        [Association(@"ParameterGroupReferencesParameter", typeof(ParameterGroup))]
        public XPCollection<ParameterGroup> ParameterGroups { get { return GetCollection<ParameterGroup>("ParameterGroups"); } }
    }

}
