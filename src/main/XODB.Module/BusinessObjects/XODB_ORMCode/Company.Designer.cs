//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Company")]
    public partial class Company : XPLiteObject
    {
        Guid fCompanyID;
        [Key(true)]
        public Guid CompanyID
        {
            get { return fCompanyID; }
            set { SetPropertyValue<Guid>("CompanyID", ref fCompanyID, value); }
        }
        string fCompanyName;
        [Indexed(Name = @"ICompany", Unique = true)]
        [Size(255)]
        public string CompanyName
        {
            get { return fCompanyName; }
            set { SetPropertyValue<string>("CompanyName", ref fCompanyName, value); }
        }
        DictionaryCountry fCountryID;
        [Size(2)]
        [Association(@"CompanyReferencesDictionaryCountry")]
        public DictionaryCountry CountryID
        {
            get { return fCountryID; }
            set { SetPropertyValue<DictionaryCountry>("CountryID", ref fCountryID, value); }
        }
        Contact fPrimaryContactID;
        [Association(@"CompanyReferencesContact")]
        public Contact PrimaryContactID
        {
            get { return fPrimaryContactID; }
            set { SetPropertyValue<Contact>("PrimaryContactID", ref fPrimaryContactID, value); }
        }
        string fComment;
        [Size(SizeAttribute.Unlimited)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        int fVersion;
        public int Version
        {
            get { return fVersion; }
            set { SetPropertyValue<int>("Version", ref fVersion, value); }
        }
        Guid fVersionAntecedentID;
        public Guid VersionAntecedentID
        {
            get { return fVersionAntecedentID; }
            set { SetPropertyValue<Guid>("VersionAntecedentID", ref fVersionAntecedentID, value); }
        }
        int fVersionCertainty;
        public int VersionCertainty
        {
            get { return fVersionCertainty; }
            set { SetPropertyValue<int>("VersionCertainty", ref fVersionCertainty, value); }
        }
        Guid fVersionWorkflowInstanceID;
        public Guid VersionWorkflowInstanceID
        {
            get { return fVersionWorkflowInstanceID; }
            set { SetPropertyValue<Guid>("VersionWorkflowInstanceID", ref fVersionWorkflowInstanceID, value); }
        }
        Guid fVersionUpdatedBy;
        public Guid VersionUpdatedBy
        {
            get { return fVersionUpdatedBy; }
            set { SetPropertyValue<Guid>("VersionUpdatedBy", ref fVersionUpdatedBy, value); }
        }
        Guid fVersionDeletedBy;
        public Guid VersionDeletedBy
        {
            get { return fVersionDeletedBy; }
            set { SetPropertyValue<Guid>("VersionDeletedBy", ref fVersionDeletedBy, value); }
        }
        Guid fVersionOwnerContactID;
        public Guid VersionOwnerContactID
        {
            get { return fVersionOwnerContactID; }
            set { SetPropertyValue<Guid>("VersionOwnerContactID", ref fVersionOwnerContactID, value); }
        }
        Guid fVersionOwnerCompanyID;
        public Guid VersionOwnerCompanyID
        {
            get { return fVersionOwnerCompanyID; }
            set { SetPropertyValue<Guid>("VersionOwnerCompanyID", ref fVersionOwnerCompanyID, value); }
        }
        DateTime fVersionUpdated;
        public DateTime VersionUpdated
        {
            get { return fVersionUpdated; }
            set { SetPropertyValue<DateTime>("VersionUpdated", ref fVersionUpdated, value); }
        }
        [Association(@"CompanyAddressReferencesCompany", typeof(CompanyAddress))]
        public XPCollection<CompanyAddress> CompanyAddressCollection { get { return GetCollection<CompanyAddress>("CompanyAddressCollection"); } }
        [Association(@"CompanyRelationReferencesCompany", typeof(CompanyRelation))]
        public XPCollection<CompanyRelation> CompanyRelations { get { return GetCollection<CompanyRelation>("CompanyRelations"); } }
        [Association(@"CompanyRelationReferencesCompany1", typeof(CompanyRelation))]
        public XPCollection<CompanyRelation> CompanyRelations1 { get { return GetCollection<CompanyRelation>("CompanyRelations1"); } }
        [Association(@"ExperienceReferencesCompany", typeof(Experience))]
        public XPCollection<Experience> Experiences { get { return GetCollection<Experience>("Experiences"); } }
        [Association(@"LeaseReferencesCompany", typeof(Lease))]
        public XPCollection<Lease> Leases { get { return GetCollection<Lease>("Leases"); } }
        [Association(@"LeaseApplicationReferencesCompany", typeof(LeaseApplication))]
        public XPCollection<LeaseApplication> LeaseApplications { get { return GetCollection<LeaseApplication>("LeaseApplications"); } }
        [Association(@"ProjectReferencesCompany", typeof(Project))]
        public XPCollection<Project> Projects { get { return GetCollection<Project>("Projects"); } }
        [Association(@"ProvinceReferencesCompany", typeof(Province))]
        public XPCollection<Province> Provinces { get { return GetCollection<Province>("Provinces"); } }
        [Association(@"SecurityBlacklistReferencesCompany", typeof(SecurityBlacklist))]
        public XPCollection<SecurityBlacklist> SecurityBlacklists { get { return GetCollection<SecurityBlacklist>("SecurityBlacklists"); } }
        [Association(@"SecurityBlacklistReferencesCompany1", typeof(SecurityBlacklist))]
        public XPCollection<SecurityBlacklist> SecurityBlacklists1 { get { return GetCollection<SecurityBlacklist>("SecurityBlacklists1"); } }
        [Association(@"SecurityWhitelistReferencesCompany", typeof(SecurityWhitelist))]
        public XPCollection<SecurityWhitelist> SecurityWhitelists { get { return GetCollection<SecurityWhitelist>("SecurityWhitelists"); } }
        [Association(@"SecurityWhitelistReferencesCompany1", typeof(SecurityWhitelist))]
        public XPCollection<SecurityWhitelist> SecurityWhitelists1 { get { return GetCollection<SecurityWhitelist>("SecurityWhitelists1"); } }
        [Association(@"ComplianceReferencesCompany", typeof(Compliance))]
        public XPCollection<Compliance> Compliances { get { return GetCollection<Compliance>("Compliances"); } }
        [Association(@"OpportunityReferencesCompany", typeof(Opportunity))]
        public XPCollection<Opportunity> Opportunities { get { return GetCollection<Opportunity>("Opportunities"); } }
        [Association(@"AssayGroupReferencesCompany", typeof(AssayGroup))]
        public XPCollection<AssayGroup> AssayGroups { get { return GetCollection<AssayGroup>("AssayGroups"); } }
        [Association(@"DrillingReferencesCompany", typeof(Drilling))]
        public XPCollection<Drilling> Drillings { get { return GetCollection<Drilling>("Drillings"); } }
        [Association(@"HeaderReferencesCompany", typeof(Header))]
        public XPCollection<Header> Headers { get { return GetCollection<Header>("Headers"); } }
        [Association(@"HeaderReferencesCompany1", typeof(Header))]
        public XPCollection<Header> Headers1 { get { return GetCollection<Header>("Headers1"); } }
        [Association(@"ContractReferencesCompany", typeof(Contract))]
        public XPCollection<Contract> Contracts { get { return GetCollection<Contract>("Contracts"); } }
        [Association(@"ContractReferencesCompany1", typeof(Contract))]
        public XPCollection<Contract> Contracts1 { get { return GetCollection<Contract>("Contracts1"); } }
        [Association(@"ContractReferencesCompany2", typeof(Contract))]
        public XPCollection<Contract> Contracts2 { get { return GetCollection<Contract>("Contracts2"); } }
        [Association(@"ContractReferencesCompany3", typeof(Contract))]
        public XPCollection<Contract> Contracts3 { get { return GetCollection<Contract>("Contracts3"); } }
        [Association(@"SurveyReferencesCompany", typeof(Survey))]
        public XPCollection<Survey> Surveys { get { return GetCollection<Survey>("Surveys"); } }
        [Association(@"LocationReferencesCompany", typeof(Location))]
        public XPCollection<Location> Locations { get { return GetCollection<Location>("Locations"); } }
        [Association(@"TenementReferencesCompany", typeof(Tenement))]
        public XPCollection<Tenement> Tenements { get { return GetCollection<Tenement>("Tenements"); } }
        [Association(@"AccountReferencesCompany", typeof(Account))]
        public XPCollection<Account> Accounts { get { return GetCollection<Account>("Accounts"); } }
        [Association(@"PurchaseOrderReferencesCompany", typeof(PurchaseOrder))]
        public XPCollection<PurchaseOrder> PurchaseOrders { get { return GetCollection<PurchaseOrder>("PurchaseOrders"); } }
        [Association(@"PurchaseOrderReferencesCompany1", typeof(PurchaseOrder))]
        public XPCollection<PurchaseOrder> PurchaseOrders1 { get { return GetCollection<PurchaseOrder>("PurchaseOrders1"); } }
        [Association(@"InvoiceReferencesCompany", typeof(Invoice))]
        public XPCollection<Invoice> Invoices { get { return GetCollection<Invoice>("Invoices"); } }
        [Association(@"InvoiceReferencesCompany1", typeof(Invoice))]
        public XPCollection<Invoice> Invoices1 { get { return GetCollection<Invoice>("Invoices1"); } }
        [Association(@"WarehouseReferencesCompany", typeof(Warehouse))]
        public XPCollection<Warehouse> Warehouses { get { return GetCollection<Warehouse>("Warehouses"); } }
        [Association(@"CompanyAccountReferencesCompany", typeof(CompanyAccount))]
        public XPCollection<CompanyAccount> CompanyAccounts { get { return GetCollection<CompanyAccount>("CompanyAccounts"); } }
        [Association(@"SupplierPartReferencesCompany", typeof(SupplierPart))]
        public XPCollection<SupplierPart> SupplierParts { get { return GetCollection<SupplierPart>("SupplierParts"); } }
        [Association(@"DeliveryAdviceReferencesCompany", typeof(DeliveryAdvice))]
        public XPCollection<DeliveryAdvice> DeliveryAdvices { get { return GetCollection<DeliveryAdvice>("DeliveryAdvices"); } }
        [Association(@"SupplierModelReferencesCompany", typeof(SupplierModel))]
        public XPCollection<SupplierModel> SupplierModels { get { return GetCollection<SupplierModel>("SupplierModels"); } }
        [Association(@"DictionaryModelReferencesCompany", typeof(DictionaryModel))]
        public XPCollection<DictionaryModel> DictionaryModels { get { return GetCollection<DictionaryModel>("DictionaryModels"); } }
        [Association(@"AccountDiscountReferencesCompany", typeof(AccountDiscount))]
        public XPCollection<AccountDiscount> AccountDiscounts { get { return GetCollection<AccountDiscount>("AccountDiscounts"); } }
        [Association(@"DictionaryPartReferencesCompany", typeof(DictionaryPart))]
        public XPCollection<DictionaryPart> DictionaryParts { get { return GetCollection<DictionaryPart>("DictionaryParts"); } }
    }

}
