//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Company")]
    public partial class Company : XPLiteObject
    {
        Guid fCompanyID;
        [Key(true)]
        public Guid CompanyID
        {
            get { return fCompanyID; }
            set { SetPropertyValue<Guid>("CompanyID", ref fCompanyID, value); }
        }
        string fCompanyName;
        [Indexed(Name = @"ICompany", Unique = true)]
        [Size(255)]
        public string CompanyName
        {
            get { return fCompanyName; }
            set { SetPropertyValue<string>("CompanyName", ref fCompanyName, value); }
        }
        DictionaryCountry fCountryID;
        [Size(2)]
        [Association(@"CompanyReferencesDictionaryCountry")]
        public DictionaryCountry CountryID
        {
            get { return fCountryID; }
            set { SetPropertyValue<DictionaryCountry>("CountryID", ref fCountryID, value); }
        }
        Contact fPrimaryContactID;
        [Association(@"CompanyReferencesContact")]
        public Contact PrimaryContactID
        {
            get { return fPrimaryContactID; }
            set { SetPropertyValue<Contact>("PrimaryContactID", ref fPrimaryContactID, value); }
        }
        string fComment;
        [Size(SizeAttribute.Unlimited)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        [Association(@"CompanyAddressReferencesCompany", typeof(CompanyAddress))]
        public XPCollection<CompanyAddress> CompanyAddressCollection { get { return GetCollection<CompanyAddress>("CompanyAddressCollection"); } }
        [Association(@"CompanyRelationReferencesCompany", typeof(CompanyRelation))]
        public XPCollection<CompanyRelation> CompanyRelations { get { return GetCollection<CompanyRelation>("CompanyRelations"); } }
        [Association(@"CompanyRelationReferencesCompany1", typeof(CompanyRelation))]
        public XPCollection<CompanyRelation> CompanyRelations1 { get { return GetCollection<CompanyRelation>("CompanyRelations1"); } }
        [Association(@"ContactCompanyReferencesCompany", typeof(ContactCompany))]
        public XPCollection<ContactCompany> ContactCompanys { get { return GetCollection<ContactCompany>("ContactCompanys"); } }
        [Association(@"DictionaryWorkTypeReferencesCompany", typeof(DictionaryWorkType))]
        public XPCollection<DictionaryWorkType> DictionaryWorkTypes { get { return GetCollection<DictionaryWorkType>("DictionaryWorkTypes"); } }
        [Association(@"DrillingCompanyReferencesCompany", typeof(DrillingCompany))]
        public XPCollection<DrillingCompany> DrillingCompanys { get { return GetCollection<DrillingCompany>("DrillingCompanys"); } }
        [Association(@"ExperienceReferencesCompany", typeof(Experience))]
        public XPCollection<Experience> Experiences { get { return GetCollection<Experience>("Experiences"); } }
        [Association(@"GeologyCompanyReferencesCompany", typeof(GeologyCompany))]
        public XPCollection<GeologyCompany> GeologyCompanys { get { return GetCollection<GeologyCompany>("GeologyCompanys"); } }
        [Association(@"GeophysicsCompanyReferencesCompany", typeof(GeophysicsCompany))]
        public XPCollection<GeophysicsCompany> GeophysicsCompanys { get { return GetCollection<GeophysicsCompany>("GeophysicsCompanys"); } }
        [Association(@"LabCompanyReferencesCompany", typeof(LabCompany))]
        public XPCollection<LabCompany> LabCompanys { get { return GetCollection<LabCompany>("LabCompanys"); } }
        [Association(@"LeaseReferencesCompany", typeof(Lease))]
        public XPCollection<Lease> Leases { get { return GetCollection<Lease>("Leases"); } }
        [Association(@"LeaseApplicationReferencesCompany", typeof(LeaseApplication))]
        public XPCollection<LeaseApplication> LeaseApplications { get { return GetCollection<LeaseApplication>("LeaseApplications"); } }
        [Association(@"LocationReferencesCompany", typeof(Location))]
        public XPCollection<Location> Locations { get { return GetCollection<Location>("Locations"); } }
        [Association(@"ProjectReferencesCompany", typeof(Project))]
        public XPCollection<Project> Projects { get { return GetCollection<Project>("Projects"); } }
        [Association(@"ProvinceReferencesCompany", typeof(Province))]
        public XPCollection<Province> Provinces { get { return GetCollection<Province>("Provinces"); } }
        [Association(@"SecurityBlacklistReferencesCompany", typeof(SecurityBlacklist))]
        public XPCollection<SecurityBlacklist> SecurityBlacklists { get { return GetCollection<SecurityBlacklist>("SecurityBlacklists"); } }
        [Association(@"SecurityBlacklistReferencesCompany1", typeof(SecurityBlacklist))]
        public XPCollection<SecurityBlacklist> SecurityBlacklists1 { get { return GetCollection<SecurityBlacklist>("SecurityBlacklists1"); } }
        [Association(@"SecurityWhitelistReferencesCompany", typeof(SecurityWhitelist))]
        public XPCollection<SecurityWhitelist> SecurityWhitelists { get { return GetCollection<SecurityWhitelist>("SecurityWhitelists"); } }
        [Association(@"SecurityWhitelistReferencesCompany1", typeof(SecurityWhitelist))]
        public XPCollection<SecurityWhitelist> SecurityWhitelists1 { get { return GetCollection<SecurityWhitelist>("SecurityWhitelists1"); } }
        [Association(@"SurveyCompanyReferencesCompany", typeof(SurveyCompany))]
        public XPCollection<SurveyCompany> SurveyCompanys { get { return GetCollection<SurveyCompany>("SurveyCompanys"); } }
        [Association(@"TenementReferencesCompany", typeof(Tenement))]
        public XPCollection<Tenement> Tenements { get { return GetCollection<Tenement>("Tenements"); } }
        [Association(@"WorkerReferencesCompany", typeof(Worker))]
        public XPCollection<Worker> Workers { get { return GetCollection<Worker>("Workers"); } }
    }

}
