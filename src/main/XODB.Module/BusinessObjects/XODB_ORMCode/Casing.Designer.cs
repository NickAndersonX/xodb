//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace XODB.Module.BusinessObjects.XODB
{

    [Persistent(@"X_Casing")]
    public partial class Casing : XPLiteObject
    {
        Guid fCasingID;
        [Key(true)]
        public Guid CasingID
        {
            get { return fCasingID; }
            set { SetPropertyValue<Guid>("CasingID", ref fCasingID, value); }
        }
        Header fHeaderID;
        [Association(@"CasingReferencesHeader")]
        public Header HeaderID
        {
            get { return fHeaderID; }
            set { SetPropertyValue<Header>("HeaderID", ref fHeaderID, value); }
        }
        decimal fFromDepth;
        public decimal FromDepth
        {
            get { return fFromDepth; }
            set { SetPropertyValue<decimal>("FromDepth", ref fFromDepth, value); }
        }
        decimal fToDepth;
        public decimal ToDepth
        {
            get { return fToDepth; }
            set { SetPropertyValue<decimal>("ToDepth", ref fToDepth, value); }
        }
        DictionaryDrillCasingType fCasingTypeID;
        [Association(@"CasingReferencesDictionaryDrillCasingType")]
        public DictionaryDrillCasingType CasingTypeID
        {
            get { return fCasingTypeID; }
            set { SetPropertyValue<DictionaryDrillCasingType>("CasingTypeID", ref fCasingTypeID, value); }
        }
        int fCasingSize;
        public int CasingSize
        {
            get { return fCasingSize; }
            set { SetPropertyValue<int>("CasingSize", ref fCasingSize, value); }
        }
        decimal fLengthRecovered;
        public decimal LengthRecovered
        {
            get { return fLengthRecovered; }
            set { SetPropertyValue<decimal>("LengthRecovered", ref fLengthRecovered, value); }
        }
        string fComment;
        [Size(SizeAttribute.Unlimited)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        [Association(@"CompositeReferencesCasing", typeof(Composite))]
        public XPCollection<Composite> Composites { get { return GetCollection<Composite>("Composites"); } }
    }

}
